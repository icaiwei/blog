(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{2233:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220323321.43b0c9fc.png"},2234:function(s,a,t){s.exports=t.p+"assets/img/image-20220411215800313.98add149.png"},2235:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220505310.4d5a42f7.png"},2236:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220522597.05d344c4.png"},2237:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220620398.a97273c3.png"},2238:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220645565.acfedc5a.png"},2239:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220659995.fd9f1e9d.png"},2240:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220713245.01ab8d6b.png"},2241:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220737244.a502e84e.png"},2242:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220801101.af1bfb1b.png"},2243:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220815053.4a8950f8.png"},2244:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220832013.b8d97ede.png"},2245:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220847541.55339fa9.png"},2246:function(s,a,t){s.exports=t.p+"assets/img/image-20220411220902769.84815925.png"},2247:function(s,a,t){s.exports=t.p+"assets/img/image-20220411221006839.30f81e7c.png"},2248:function(s,a,t){s.exports=t.p+"assets/img/image-20220411221054063.772a0454.png"},2833:function(s,a,t){"use strict";t.r(a);var e=t(0),i=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"库函数和寄存器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#库函数和寄存器"}},[s._v("#")]),s._v(" 库函数和寄存器")]),s._v(" "),a("h3",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[s._v("#")]),s._v(" 区别")]),s._v(" "),a("p",[s._v("​\t本质上是一样的。我们可以在库函数模板里面，直接操作寄存器，因为官方库相关头文件有寄存器定义。但是不能在寄存器模板调用库函数，因为没有引入库函数相关定义。\n了解寄存器基本原理的目的是为了让我们对STM32相关知识有比较深入的理解，这样在开发过程中方可得心应手，游刃有余。底层代码配置出了问题需要调试的话，必须对寄存器有一定的了解才能找到问题，因为调试代码，底层只能查看寄存器相关配置。")]),s._v(" "),a("h2",{attrs:{id:"工程结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工程结构"}},[s._v("#")]),s._v(" 工程结构")]),s._v(" "),a("h3",{attrs:{id:"文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件夹"}},[s._v("#")]),s._v(" 文件夹")]),s._v(" "),a("p",[s._v("USER、CORE、FWLIB、SYSTEM、README")]),s._v(" "),a("h3",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("“USER”:存放工程共用文件,延时函数、位操作")])]),s._v(" "),a("li",[a("p",[s._v("“CORE”：存放工程的主函数main.c")])]),s._v(" "),a("li",[a("p",[s._v("“FWLIB”：存放STM32 库文件")])]),s._v(" "),a("li",[a("p",[s._v("“SYSTEM”:存放STM32 的启动文件、核心文件和一些头文件")])]),s._v(" "),a("li",[a("p",[s._v("“README”:存放STM32 外设的驱动文件，如：led、key、lcd、ADC、DAC、PWM ……")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2233),alt:"image-20220411220323321"}})])])]),s._v(" "),a("h2",{attrs:{id:"固件库模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#固件库模板"}},[s._v("#")]),s._v(" 固件库模板")]),s._v(" "),a("h3",{attrs:{id:"初始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始"}},[s._v("#")]),s._v(" 初始")]),s._v(" "),a("p",[s._v("环境：MDK5")]),s._v(" "),a("p",[s._v("固件库版本：v1.4(F4专用)")]),s._v(" "),a("p",[s._v("重要的预编译全局宏定义标识符：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("STM32F40_41xxx,USE_STDPERIPH_DRIVER\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("启动文件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("startup_stm32f40_41xxx.s\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"常见错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见错误"}},[s._v("#")]),s._v(" 常见错误")]),s._v(" "),a("p",[a("strong",[s._v('"no source": Error: command-line:  #992: invalid macro definition: STM32F40_41xxx.USE_STDPERIPH_DRIVER')])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("答案：STM32F40_41xxx,USE_STDPERIPH_DRIVER \n    宏定义标识符错误。。。。输入要正确，逗号隔开\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v('..\\FWLIB\\src\\stm32f4xx_usart.c(1038): warning: 223-D: function "assert_param" declared implicitly')])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("答案：宏定义标识符“USE_STDPERIPH_DRIVER”书写错误。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v('..\\USER\\stm32f4xx.h(102): error:  #35: error directive: "Please select first the target STM32F4xx device used in your application (in stm32f4xx.h file)“')])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("答案：宏定义标识符“STM32F40_41xxx”书写错误。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v('..\\USER\\stm32f4xx_conf.h(34): error:  #5: cannot open source input file "stm32f4xx_adc.h": No such file or directory')])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("头文件路径找不到。加入path的路径为inc子目录，不是src子目录。\n或者压根头文件路径inc就没有加入到工程的path中。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"固件包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#固件包"}},[s._v("#")]),s._v(" 固件包")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2234),alt:"image-20220411215800313"}})]),s._v(" "),a("h2",{attrs:{id:"寄存器模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#寄存器模板"}},[s._v("#")]),s._v(" 寄存器模板")]),s._v(" "),a("h3",{attrs:{id:"启动文件修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动文件修改"}},[s._v("#")]),s._v(" 启动文件修改")]),s._v(" "),a("p",[a("strong",[s._v("startup_stm32f40_41xxx.s")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("; Reset handler\nReset_Handler    PROC\n                 EXPORT  Reset_Handler             [WEAK]\n;IMPORT  SystemInit\t\n;寄存器代码,不需要在这里调用SystemInit函数,故屏蔽掉,库函数版本代码,可以留下\n;不过需要在外部实现SystemInit函数,否则会报错.\nIMPORT  __main\n    LDR     R0, =0xE000ED88    ; 使能浮点运算 CP10,CP11\n    LDR     R1,[R0]\n    ORR     R1,R1,#(0xF << 20)\n    STR     R1,[R0]\n\n    ;LDR     R0, =SystemInit\t;寄存器代码,未用到,屏蔽\n    ;BLX     R0\t\t\t\t;寄存器代码,未用到,屏蔽\n    LDR     R0, =__main\n    BX      R0\n    ENDP\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"建立工程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建立工程"}},[s._v("#")]),s._v(" 建立工程")]),s._v(" "),a("p",[s._v("以下以建立一个LED 工程为例讲解")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("拷贝工程所需的基本文件")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("建立“LED 例程”文件夹")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2235),alt:"image-20220411220505310"}})])]),s._v(" "),a("li",[a("p",[s._v("拷贝工程所需的基本文件到“LED 例程”文件夹")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2236),alt:"image-20220411220522597"}})])])])]),s._v(" "),a("li",[a("p",[s._v("建立工程文件")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("打开keil，这步需要安装完整完keil")])]),s._v(" "),a("li",[a("p",[s._v("建立工程文件")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2237),alt:"image-20220411220620398"}})])]),s._v(" "),a("li",[a("p",[s._v("命名工程名字和保存工程文件\n命名工程文件为“LED”，保存工程文件到刚才拷贝的基本文件中的“Project”文件夹中。")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2238),alt:"image-20220411220645565"}})])]),s._v(" "),a("li",[a("p",[s._v("添加目标开发板的芯片")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2239),alt:"image-20220411220659995"}})]),s._v(" "),a("p",[a("img",{attrs:{src:t(2240),alt:"image-20220411220713245"}})]),s._v(" "),a("p",[s._v("建立完工程会在“Project”中出现如下图的工程文件")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2241),alt:"image-20220411220737244"}})])]),s._v(" "),a("li",[a("p",[s._v("设置编译过程产生的文件存放位置“Output”存放在“OBJ”，点击“OK”成功")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2242),alt:"image-20220411220801101"}})]),s._v(" "),a("p",[s._v("“Listing”存放在“LIST”，点击“OK”成功")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2243),alt:"image-20220411220815053"}})])]),s._v(" "),a("li",[a("p",[s._v("建立模块化文件夹")]),s._v(" "),a("p",[s._v("用第一步拷贝的基本文件的名字，命名模块化文件夹")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2244),alt:"image-20220411220832013"}})])]),s._v(" "),a("li",[a("p",[s._v("在对应的模块化文件夹中添加文件\n把第一步拷贝的基本文件对应的添加到工程")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2245),alt:"image-20220411220847541"}})])]),s._v(" "),a("li",[a("p",[s._v("添加完文件后如下图所示")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2246),alt:"image-20220411220902769"}})])])])]),s._v(" "),a("li",[a("p",[s._v("编写用户代码")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("在“USER”,建立“LED”文件夹")])]),s._v(" "),a("li",[a("p",[s._v("这步根据自己所需用到何种外设建立文件夹，这就是模块化编程")]),s._v(" "),a("p",[s._v("建立用户代码 .c 和 .h 文件")]),s._v(" "),a("p",[s._v("点击下图左上角第一个红色圈出来的，建立文件")]),s._v(" "),a("p",[s._v("点击保存在USER 对应的文件夹中")]),s._v(" "),a("p",[s._v("以下为.c 为例，.h 同理")]),s._v(" "),a("p",[s._v("在建立的.c 中编写用户代码")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2247),alt:"image-20220411221006839"}})])]),s._v(" "),a("li",[a("p",[s._v("用户文件添加到工程")]),s._v(" "),a("p",[a("img",{attrs:{src:t(2248),alt:"image-20220411221054063"}})])])])])])])}),[],!1,null,null,null);a.default=i.exports}}]);