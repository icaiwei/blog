(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,o,s=e[0],l=e[1],c=e[2],p=0,m=[];p<s.length;p++)o=s[p],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&m.push(a[o][0]),a[o]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(d&&d(e);m.length;)m.shift()();return i.push.apply(i,c||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],r=!0,s=1;s<t.length;s++){var l=t[s];0!==a[l]&&(r=!1)}r&&(i.splice(e--,1),n=o(o.s=t[0]))}return n}var r={},a={1:0},i=[];function o(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.e=function(n){var e=[],t=a[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=a[n]=[e,r]}));e.push(t[2]=r);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,o.nc&&s.setAttribute("nonce",o.nc),s.src=function(n){return o.p+"assets/js/"+({}[n]||n)+"."+{2:"5d25eff1",3:"e1a5de68",4:"ed4ee490",5:"df6e5958",6:"2528eaa0",7:"81c44173",8:"a64ec12c",9:"37be11fd",10:"df119c5e",11:"843b38da",12:"c8fce02f",13:"ee9224f5",14:"3e0acd5f",15:"2899e10f",16:"39a98da3",17:"ae4544e1",18:"b1500320",19:"9fa91fcc",20:"2f75ceab",21:"b1f0337b",22:"cbd9aaaf",23:"fcfbe4e9",24:"bc2e5189",25:"0e70ee83",26:"09e57ef7",27:"21453d03",28:"675d9643",29:"d7037cf7",30:"3bac1b32",31:"a0d742b6",32:"234ed83b",33:"6841d01b",34:"73d6053e",35:"4695f69f",36:"41820579",37:"b23fafe2",38:"4fe6d2b8",39:"dddfd752",40:"3d651bc1",41:"a60259bb",42:"f06fca3f",43:"8118f58e",44:"b2630f3d",45:"7c8c4f09",46:"9c265d75",47:"18ff4626",48:"e65ee7f9",49:"fefa2691",50:"dd2f9bfa",51:"9ba67c07",52:"5258989d",53:"8de4b85b",54:"c7158bad",55:"209d1ff8",56:"f915c3cc",57:"aa718bf2",58:"2c824ddf",59:"36502ee7",60:"3da884b9",61:"ad08cb7c",62:"6f7318a5",63:"51a846c7",64:"6c55b52a",65:"61477cc3",66:"6d03ad7c",67:"4d716d93",68:"eb691ec0",69:"be1d5890",70:"47c37a1e",71:"ca2ba458",72:"49cb478b",73:"0fa1c96e",74:"d6ee56c9",75:"6bfeffec",76:"b805141b",77:"cc8e4ade",78:"96c79669",79:"12ba7b87",80:"c260c0d4",81:"e57355e6",82:"1cc29b75",83:"9c51a4b0",84:"5dd7398c",85:"b6035659",86:"0523c1ce",87:"1620fa74",88:"35c5639d",89:"d35d8998",90:"6ce572b7",91:"88a4285a",92:"9045c856",93:"bbe605e6",94:"cedb89fe",95:"ed82cee4",96:"522eac5e",97:"01c8a8cb",98:"c47ead7c",99:"dac60672",100:"3fd42797",101:"4375ed2a",102:"e457bbd0",103:"9339dbd8",104:"7dcebe8a",105:"0ee14acb",106:"b98276d0",107:"90f812da",108:"b5185029",109:"c4e08af7",110:"9f63929a",111:"fba534ec",112:"0e4e8806",113:"83f726ca",114:"c4817092",115:"2f083712",116:"ca424eba",117:"6f390e71",118:"e892944e",119:"5e9e503b",120:"e4e8fa9d",121:"9e52ee2b",122:"2c53109c",123:"8bbde838",124:"de23dc44",125:"a2862ce0",126:"d7775029",127:"2bcd3d60",128:"e3874e20",129:"b617d730",130:"8e228abe",131:"59914ef3",132:"63cfd10c",133:"bf826681",134:"47802d26",135:"b8ea3e12",136:"a1c0e2c6",137:"1ca109f5",138:"13c2f90c",139:"9cb4f8b1",140:"369210c0",141:"364da066",142:"b00d18b9",143:"b941e56f",144:"73bafa28",145:"4f1c7b5c",146:"4f1d401a",147:"b4eb0cc5",148:"902343f7",149:"8206f2da",150:"df280ada",151:"fdc2f11d",152:"e803a4d2",153:"23eb5023",154:"64cae727",155:"ff7a0f64",156:"aa10e09e",157:"4b325d1a",158:"1cefc75e",159:"a5983f55",160:"996e901f",161:"6c7118dc",162:"9eac6f47",163:"8fa52e7d",164:"6d40b99c",165:"51a7d0b2",166:"09a3d625",167:"8e13e24f",168:"782f7387",169:"8a2bdf6f",170:"9dc76b8d",171:"03a175d1",172:"e37a7339",173:"24ae0f47",174:"66e16d44",175:"bb90ce3d",176:"bfa00276",177:"c10087cc",178:"fe8c148b",179:"fa883f44",180:"d66b5197",181:"d237e623",182:"7c841725",183:"09659c01",184:"b9a6beb7",185:"08a29077",186:"0e5ec562",187:"3bb6bdfc",188:"8de20d80",189:"932ecd11",190:"cb4e2e6a",191:"6d5a1280",192:"9b6221ed",193:"64293075",194:"ecf21b4d",195:"08cea90b",196:"9b4f0bf9",197:"08c673e7",198:"50ddbc5e",199:"d2551611",200:"c6b57d67",201:"1942e900",202:"5c468e26",203:"d34100e3",204:"3a7758f3",205:"b32f28ef",206:"9ab3b7f6",207:"233156ea",208:"36d72da8",209:"06343e4b",210:"0ed10c14",211:"b93664bb",212:"fe6e031f",213:"a29e1b2c",214:"7e6aa59a",215:"3686da14",216:"fc1c62a7",217:"fb4ca48b",218:"1064e2ed",219:"1a1b322c",220:"c500c4dd",221:"88365bfc",222:"6d0acb84",223:"fb97fafa",224:"93cb5a97",225:"d233a695",226:"67b34554",227:"6b824793",228:"53b1870f",229:"06182365",230:"87a03fea",231:"f380790c",232:"c81bbb14",233:"c35e7666",234:"ecbf2637",235:"c3da9357",236:"f3ffb7ac",237:"a5dc4524",238:"a9aefdd9",239:"26e0b1a4",240:"17448cb2",241:"9451f9e6",242:"9a20613c",243:"e403b85c",244:"1b61b8c3",245:"899bf4da",246:"03089de3",247:"e7fef5e2",248:"65ace103",249:"6de8a02b",250:"2d63ea88",251:"41dd8862",252:"cfc77ba7",253:"43917c31",254:"0021f13b",255:"b3c3f64f",256:"27e7d858",257:"831bd886",258:"2151af79",259:"02bfb961",260:"5deb48da",261:"f9ef3ffe",262:"f79bdcb6",263:"64bd7fff",264:"df18e71c",265:"09b88174",266:"2b47c601",267:"f3f07b08",268:"c708dceb",269:"f94d433c",270:"fc18223d",271:"036f746d",272:"56fd78e9",273:"d410f793",274:"fa2f6496",275:"e7925db2",276:"c09d5387",277:"8ec6b964",278:"eb1916e7",279:"6d8470f5",280:"885a3394",281:"d99884fa",282:"efa7eaf0",283:"afa3ea8f",284:"c17199f1",285:"259b291a",286:"8a146137",287:"e34d301b",288:"4a0e8e2b",289:"cd887ca1",290:"d5957e22",291:"034b6ef4",292:"7f2f69dd",293:"5d355552",294:"d9de9528",295:"e4fc31a2",296:"92cbc21f",297:"62406f83",298:"fab3e9c2",299:"34bebbbb",300:"25ff1bcb",301:"9e5ecaf2",302:"5c163e93",303:"76b16122",304:"05ad9f55",305:"c25dac15",306:"0bd59fc6",307:"adef0f7b",308:"66a2c1e5",309:"dd92e963"}[n]+".js"}(n);var l=new Error;i=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=a[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+r+": "+i+")",l.name="ChunkLoadError",l.type=r,l.request=i,t[1](l)}a[n]=void 0}};var c=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(e)},o.m=n,o.c=r,o.d=function(n,e,t){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)o.d(t,r,function(e){return n[e]}.bind(null,r));return t},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="/blog/",o.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var d=l;i.push([107,0]),t()}([function(n,e,t){"use strict";function r(n,e,t,r,a,i,o,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),i&&(c._scopeId="data-v-"+i),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},c._ssrRegister=l):a&&(l=s?function(){a.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:a),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(n,e){return l.call(e),d(n,e)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r=function(n){return n&&n.Math===Math&&n};n.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof global&&global)||r("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(n,e,t){"use strict";var r="object"==typeof document&&document.all;n.exports=void 0===r&&void 0!==r?function(n){return"function"==typeof n||n===r}:function(n){return"function"==typeof n}},function(n,e,t){"use strict";var r=t(27),a=Function.prototype,i=a.call,o=r&&a.bind.bind(i,i);n.exports=r?o:function(n){return function(){return i.apply(n,arguments)}}},function(n,e,t){"use strict";n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){"use strict";var r=t(4);n.exports=!r((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var r=t(69),a="object"==typeof self&&self&&self.Object===Object&&self,i=r||a||Function("return this")();n.exports=i},function(n,e,t){"use strict";var r=t(2);n.exports=function(n){return"object"==typeof n?null!==n:r(n)}},function(n,e,t){"use strict";var r=t(3),a=t(32),i=r({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return i(a(n),e)}},function(n,e,t){var r=t(165),a=t(168);n.exports=function(n,e){var t=a(n,e);return r(t)?t:void 0}},function(n,e,t){"use strict";var r=t(26),a=t(32),i=t(33),o=t(130),s=t(132);r({target:"Array",proto:!0,arity:1,forced:t(4)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(n){return n instanceof TypeError}}()},{push:function(n){var e=a(this),t=i(e),r=arguments.length;s(t+r);for(var l=0;l<r;l++)e[t]=arguments[l],t++;return o(e,t),t}})},function(n,e,t){"use strict";t.d(e,"e",(function(){return r})),t.d(e,"b",(function(){return i})),t.d(e,"j",(function(){return o})),t.d(e,"g",(function(){return l})),t.d(e,"h",(function(){return c})),t.d(e,"i",(function(){return d})),t.d(e,"c",(function(){return p})),t.d(e,"f",(function(){return m})),t.d(e,"l",(function(){return u})),t.d(e,"m",(function(){return h})),t.d(e,"d",(function(){return f})),t.d(e,"k",(function(){return b})),t.d(e,"n",(function(){return v})),t.d(e,"a",(function(){return x}));t(11);const r=/#.*$/,a=/\.(md|html)$/,i=/\/$/,o=/^[a-z]+:/i;function s(n){return decodeURI(n).replace(r,"").replace(a,"")}function l(n){return o.test(n)}function c(n){return/^mailto:/.test(n)}function d(n){return/^tel:/.test(n)}function p(n){if(l(n))return n;if(!n)return"404";const e=n.match(r),t=e?e[0]:"",a=s(n);return i.test(a)?n:a+".html"+t}function m(n,e){const t=n.hash,a=function(n){const e=n&&n.match(r);if(e)return e[0]}(e);if(a&&t!==a)return!1;return s(n.path)===s(e)}function u(n,e,t){if(l(e))return{type:"external",path:e};t&&(e=function(n,e,t){const r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;const a=e.split("/");t&&a[a.length-1]||a.pop();const i=n.replace(/^\//,"").split("/");for(let n=0;n<i.length;n++){const e=i[n];".."===e?a.pop():"."!==e&&a.push(e)}""!==a[0]&&a.unshift("");return a.join("/")}(e,t));const r=s(e);for(let e=0;e<n.length;e++)if(s(n[e].regularPath)===r)return Object.assign({},n[e],{type:"page",path:p(n[e].path)});return console.error(`[vuepress] No matching page found for sidebar item "${e}"`),{}}function h(n,e,t,r){const{pages:a,themeConfig:i}=t,o=r&&i.locales&&i.locales[r]||i;if("auto"===(n.frontmatter.sidebar||o.sidebar||i.sidebar))return g(n);const s=o.sidebar||i.sidebar;if(s){const{base:t,config:r}=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(const r in e)if(0===(t=n,/(\.html|\/)$/.test(t)?t:t+"/").indexOf(encodeURI(r)))return{base:r,config:e[r]};var t;return{}}(e,s);return"auto"===r?g(n):r?r.map(n=>function n(e,t,r,a=1){if("string"==typeof e)return u(t,e,r);if(Array.isArray(e))return Object.assign(u(t,e[0],r),{title:e[1]});{a>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const i=e.children||[];return 0===i.length&&e.path?Object.assign(u(t,e.path,r),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:i.map(e=>n(e,t,r,a+1)),collapsable:!1!==e.collapsable}}}(n,a,t)):[]}return[]}function g(n){const e=f(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map(e=>({type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}))}]}function f(n){let e;return(n=n.map(n=>Object.assign({},n))).forEach(n=>{2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)}),n.filter(n=>2===n.level)}function b(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function v(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function y(n){let e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function x(n,e){return y(e)-y(n)}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){var r=t(16),a=t(150),i=t(151),o=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":o&&o in Object(n)?a(n):i(n)}},function(n,e,t){"use strict";var r=t(5),a=t(17),i=t(35);n.exports=r?function(n,e,t){return a.f(n,e,i(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(7).Symbol;n.exports=r},function(n,e,t){"use strict";var r=t(5),a=t(64),i=t(102),o=t(25),s=t(55),l=TypeError,c=Object.defineProperty,d=Object.getOwnPropertyDescriptor;e.f=r?i?function(n,e,t){if(o(n),e=s(e),o(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var r=d(n,e);r&&r.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return c(n,e,t)}:c:function(n,e,t){if(o(n),e=s(e),o(t),a)try{return c(n,e,t)}catch(n){}if("get"in t||"set"in t)throw new l("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){"use strict";var r=t(3),a=r({}.toString),i=r("".slice);n.exports=function(n){return i(a(n),8,-1)}},function(n,e,t){var r=t(155),a=t(156),i=t(157),o=t(158),s=t(159);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(71);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(10)(Object,"create");n.exports=r},function(n,e,t){var r=t(177);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(45);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var r,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(n,e,t){return n<e?e:n>t?t:n}function i(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=a(n,r.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(r.barSelector),d=r.speed,p=r.easing;return l.offsetWidth,o((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var a;return(a="translate3d"===r.positionUsing?{transform:"translate3d("+i(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+i(n)+"%,0)"}:{"margin-left":i(n)+"%"}).transition="all "+e+"ms "+t,a}(n,d,p)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),d)}),d)):setTimeout(e,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*a(Math.random()*e,.1,.95)),e=a(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var a,o=e.querySelector(r.barSelector),l=n?"-100":i(t.status||0),d=document.querySelector(r.parent);return s(o,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(a=e.querySelector(r.spinnerSelector))&&m(a),d!=document.body&&c(d,"nprogress-custom-parent"),d.appendChild(e),e},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&m(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var o=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,a=n.length,i=e.charAt(0).toUpperCase()+e.slice(1);a--;)if((r=n[a]+i)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,a,i=arguments;if(2==i.length)for(t in e)void 0!==(a=e[t])&&e.hasOwnProperty(t)&&r(n,t,a);else r(n,i[1],i[2])}}();function l(n,e){return("string"==typeof n?n:p(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=p(n),r=t+e;l(t,e)||(n.className=r.substring(1))}function d(n,e){var t,r=p(n);l(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function p(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function m(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=a)},function(n,e,t){"use strict";var r=t(8),a=String,i=TypeError;n.exports=function(n){if(r(n))return n;throw new i(a(n)+" is not an object")}},function(n,e,t){"use strict";var r=t(1),a=t(52).f,i=t(15),o=t(98),s=t(37),l=t(65),c=t(126);n.exports=function(n,e){var t,d,p,m,u,h=n.target,g=n.global,f=n.stat;if(t=g?r:f?r[h]||s(h,{}):r[h]&&r[h].prototype)for(d in e){if(m=e[d],p=n.dontCallGetSet?(u=a(t,d))&&u.value:t[d],!c(g?d:h+(f?".":"#")+d,n.forced)&&void 0!==p){if(typeof m==typeof p)continue;l(m,p)}(n.sham||p&&p.sham)&&i(m,"sham",!0),o(t,d,m,n)}}},function(n,e,t){"use strict";var r=t(4);n.exports=!r((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){"use strict";var r=t(48),a=t(53);n.exports=function(n){return r(a(n))}},function(n,e,t){"use strict";var r=t(1),a=t(2),i=function(n){return a(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?i(r[n]):r[n]&&r[n][e]}},function(n,e,t){"use strict";var r=t(2),a=t(113),i=TypeError;n.exports=function(n){if(r(n))return n;throw new i(a(n)+" is not a function")}},function(n,e,t){"use strict";var r=t(1),a=t(61),i=t(9),o=t(63),s=t(59),l=t(58),c=r.Symbol,d=a("wks"),p=l?c.for||c:c&&c.withoutSetter||o;n.exports=function(n){return i(d,n)||(d[n]=s&&i(c,n)?c[n]:p("Symbol."+n)),d[n]}},function(n,e,t){"use strict";var r=t(53),a=Object;n.exports=function(n){return a(r(n))}},function(n,e,t){"use strict";var r=t(124);n.exports=function(n){return r(n.length)}},function(n,e,t){"use strict";var r=t(27),a=Function.prototype.call;n.exports=r?a.bind(a):function(){return a.apply(a,arguments)}},function(n,e,t){"use strict";n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){"use strict";var r=t(1),a=t(37),i=r["__core-js_shared__"]||a("__core-js_shared__",{});n.exports=i},function(n,e,t){"use strict";var r=t(1),a=Object.defineProperty;n.exports=function(n,e){try{a(r,n,{value:e,configurable:!0,writable:!0})}catch(t){r[n]=e}return e}},function(n,e,t){var r=t(149),a=t(13),i=Object.prototype,o=i.hasOwnProperty,s=i.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(n){return a(n)&&o.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var r=t(10)(t(7),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(169),a=t(176),i=t(178),o=t(179),s=t(180);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(6),a=t(45),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!a(n))||(o.test(n)||!i.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(14),a=t(13);n.exports=function(n){return"symbol"==typeof n||a(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";var r=t(26),a=t(1),i=t(133),o=t(134),s=a.WebAssembly,l=7!==new Error("e",{cause:7}).cause,c=function(n,e){var t={};t[n]=o(n,e,l),r({global:!0,constructor:!0,arity:1,forced:l},t)},d=function(n,e){if(s&&s[n]){var t={};t[n]=o("WebAssembly."+n,e,l),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};c("Error",(function(n){return function(e){return i(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return i(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return i(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return i(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return i(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return i(n,this,arguments)}})),c("URIError",(function(n){return function(e){return i(n,this,arguments)}})),d("CompileError",(function(n){return function(e){return i(n,this,arguments)}})),d("LinkError",(function(n){return function(e){return i(n,this,arguments)}})),d("RuntimeError",(function(n){return function(e){return i(n,this,arguments)}}))},function(n,e,t){"use strict";var r=t(3),a=t(4),i=t(18),o=Object,s=r("".split);n.exports=a((function(){return!o("z").propertyIsEnumerable(0)}))?function(n){return"String"===i(n)?s(n,""):o(n)}:o},function(n,e,t){"use strict";n.exports={}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,i=/^0o[0-7]+$/i,o=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),d=Object.prototype.toString,p=Math.max,m=Math.min,u=function(){return c.Date.now()};function h(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function g(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==d.call(n)}(n))return NaN;if(h(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=h(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=a.test(n);return s||i.test(n)?o(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,a,i,o,s,l,c=0,d=!1,f=!1,b=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function v(e){var t=r,i=a;return r=a=void 0,c=e,o=n.apply(i,t)}function y(n){return c=n,s=setTimeout(w,e),d?v(n):o}function x(n){var t=n-l;return void 0===l||t>=e||t<0||f&&n-c>=i}function w(){var n=u();if(x(n))return _(n);s=setTimeout(w,function(n){var t=e-(n-l);return f?m(t,i-(n-c)):t}(n))}function _(n){return s=void 0,b&&r?v(n):(r=a=void 0,o)}function E(){var n=u(),t=x(n);if(r=arguments,a=this,l=n,t){if(void 0===s)return y(l);if(f)return s=setTimeout(w,e),v(l)}return void 0===s&&(s=setTimeout(w,e)),o}return e=g(e)||0,h(t)&&(d=!!t.leading,i=(f="maxWait"in t)?p(g(t.maxWait)||0,e):i,b="trailing"in t?!!t.trailing:b),E.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=a=s=void 0},E.flush=function(){return void 0===s?o:_(u())},E}},function(n,e,t){"use strict";var r=t(5),a=t(34),i=t(109),o=t(35),s=t(28),l=t(55),c=t(9),d=t(64),p=Object.getOwnPropertyDescriptor;e.f=r?p:function(n,e){if(n=s(n),e=l(e),d)try{return p(n,e)}catch(n){}if(c(n,e))return o(!a(i.f,n,e),n[e])}},function(n,e,t){"use strict";var r=t(54),a=TypeError;n.exports=function(n){if(r(n))throw new a("Can't call method on "+n);return n}},function(n,e,t){"use strict";n.exports=function(n){return null==n}},function(n,e,t){"use strict";var r=t(110),a=t(56);n.exports=function(n){var e=r(n,"string");return a(e)?e:e+""}},function(n,e,t){"use strict";var r=t(29),a=t(2),i=t(57),o=t(58),s=Object;n.exports=o?function(n){return"symbol"==typeof n}:function(n){var e=r("Symbol");return a(e)&&i(e.prototype,s(n))}},function(n,e,t){"use strict";var r=t(3);n.exports=r({}.isPrototypeOf)},function(n,e,t){"use strict";var r=t(59);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){"use strict";var r=t(60),a=t(4),i=t(1).String;n.exports=!!Object.getOwnPropertySymbols&&!a((function(){var n=Symbol("symbol detection");return!i(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(n,e,t){"use strict";var r,a,i=t(1),o=t(111),s=i.process,l=i.Deno,c=s&&s.versions||l&&l.version,d=c&&c.v8;d&&(a=(r=d.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!a&&o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(a=+r[1]),n.exports=a},function(n,e,t){"use strict";var r=t(62),a=t(36);(n.exports=function(n,e){return a[n]||(a[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.35.1",mode:r?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.35.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){"use strict";n.exports=!1},function(n,e,t){"use strict";var r=t(3),a=0,i=Math.random(),o=r(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+o(++a+i,36)}},function(n,e,t){"use strict";var r=t(5),a=t(4),i=t(101);n.exports=!r&&!a((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){"use strict";var r=t(9),a=t(119),i=t(52),o=t(17);n.exports=function(n,e,t){for(var s=a(e),l=o.f,c=i.f,d=0;d<s.length;d++){var p=s[d];r(n,p)||t&&r(t,p)||l(n,p,c(e,p))}}},function(n,e,t){"use strict";var r=t(123);n.exports=function(n){var e=+n;return e!=e||0===e?0:r(e)}},function(n,e,t){"use strict";var r=t(135),a=t(25),i=t(136);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=r(Object.prototype,"__proto__","set"))(t,[]),e=t instanceof Array}catch(n){}return function(t,r){return a(t),i(r),e?n(t,r):t.__proto__=r,t}}():void 0)},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,a=n.length;++t<r;)n[a+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(19),a=t(160),i=t(161),o=t(162),s=t(163),l=t(164);function c(n){var e=this.__data__=new r(n);this.size=e.size}c.prototype.clear=a,c.prototype.delete=i,c.prototype.get=o,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(14),a=t(40);n.exports=function(n){if(!a(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(181),a=t(13);n.exports=function n(e,t,i,o,s){return e===t||(null==e||null==t||!a(e)&&!a(t)?e!=e&&t!=t:r(e,t,i,o,n,s))}},function(n,e,t){var r=t(76),a=t(184),i=t(77);n.exports=function(n,e,t,o,s,l){var c=1&t,d=n.length,p=e.length;if(d!=p&&!(c&&p>d))return!1;var m=l.get(n),u=l.get(e);if(m&&u)return m==e&&u==n;var h=-1,g=!0,f=2&t?new r:void 0;for(l.set(n,e),l.set(e,n);++h<d;){var b=n[h],v=e[h];if(o)var y=c?o(v,b,h,e,n,l):o(b,v,h,n,e,l);if(void 0!==y){if(y)continue;g=!1;break}if(f){if(!a(e,(function(n,e){if(!i(f,e)&&(b===n||s(b,n,t,o,l)))return f.push(e)}))){g=!1;break}}else if(b!==v&&!s(b,v,t,o,l)){g=!1;break}}return l.delete(n),l.delete(e),g}},function(n,e,t){var r=t(41),a=t(182),i=t(183);function o(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}o.prototype.add=o.prototype.push=a,o.prototype.has=i,n.exports=o},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(194),a=t(200),i=t(82);n.exports=function(n){return i(n)?r(n):a(n)}},function(n,e,t){(function(n){var r=t(7),a=t(196),i=e&&!e.nodeType&&e,o=i&&"object"==typeof n&&n&&!n.nodeType&&n,s=o&&o.exports===i?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||a;n.exports=l}).call(this,t(50)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(197),a=t(198),i=t(199),o=i&&i.isTypedArray,s=o?a(o):r;n.exports=s},function(n,e,t){var r=t(72),a=t(43);n.exports=function(n){return null!=n&&a(n.length)&&!r(n)}},function(n,e,t){var r=t(10)(t(7),"Set");n.exports=r},function(n,e,t){var r=t(40);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(87),a=t(23);n.exports=function(n,e){for(var t=0,i=(e=r(e,n)).length;null!=n&&t<i;)n=n[a(e[t++])];return t&&t==i?n:void 0}},function(n,e,t){var r=t(6),a=t(44),i=t(211),o=t(214);n.exports=function(n,e){return r(n)?n:a(n,e)?[n]:i(o(n))}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(147),a=t(152),i=t(223),o=t(231),s=t(240),l=t(106),c=i((function(n){var e=l(n);return s(e)&&(e=void 0),o(r(n,1,s,!0),a(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;n.exports=function(n){var e,t=""+n,a=r.exec(t);if(!a)return t;var i="",o=0,s=0;for(o=a.index;o<t.length;o++){switch(t.charCodeAt(o)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==o&&(i+=t.substring(s,o)),s=o+1,i+=e}return s!==o?i+t.substring(s,o):i}},function(n,e,t){var r;"undefined"!=typeof self&&self,r=function(){return function(n){var e={};function t(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return n[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:r})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=7)}([function(n,e,t){n.exports=!t(6)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,e){n.exports=function(n,e,t,r,a){var i,o=n=n||{},s=typeof n.default;"object"!==s&&"function"!==s||(i=n,o=n.default);var l,c="function"==typeof o?o.options:o;if(e&&(c.render=e.render,c.staticRenderFns=e.staticRenderFns),r&&(c._scopeId=r),a?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),t&&t.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(a)},c._ssrRegister=l):t&&(l=t),l){var d=c.functional,p=d?c.render:c.beforeCreate;d?c.render=function(n,e){return l.call(e),p(n,e)}:c.beforeCreate=p?[].concat(p,l):[l]}return{esModule:i,exports:o,options:c}}},function(n,e){var t=n.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},function(n,e){var t=n.exports={version:"2.5.7"};"number"==typeof __e&&(__e=t)},function(n,e,t){var r=t(23),a=t(24),i=t(26),o=Object.defineProperty;e.f=t(0)?Object.defineProperty:function(n,e,t){if(r(n),e=i(e,!0),r(t),a)try{return o(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(n[e]=t.value),n}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var r,a,i;a=[e,t(8),t(11)],void 0===(i="function"==typeof(r=function(n,e,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Tabs=n.Tab=void 0;var r=i(e),a=i(t);function i(n){return n&&n.__esModule?n:{default:n}}n.default={install:function(n){n.component("tab",r.default),n.component("tabs",a.default)}},n.Tab=r.default,n.Tabs=a.default})?r.apply(e,a):r)||(n.exports=i)},function(n,e,t){var r=t(2)(t(9),t(10),null,null,null);n.exports=r.exports},function(n,e,t){var r,a,i;a=[e],void 0===(i="function"==typeof(r=function(n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{id:{default:null},name:{required:!0},prefix:{default:""},suffix:{default:""},isDisabled:{default:!1}},data:function(){return{isActive:!1,isVisible:!0}},computed:{header:function(){return this.prefix+this.name+this.suffix},computedId:function(){return this.id?this.id:this.name.toLowerCase().replace(/ /g,"-")},hash:function(){return this.isDisabled?"#":"#"+this.computedId}}}})?r.apply(e,a):r)||(n.exports=i)},function(n,e){n.exports={render:function(){var n=this.$createElement;return(this._self._c||n)("section",{directives:[{name:"show",rawName:"v-show",value:this.isActive,expression:"isActive"}],staticClass:"tabs-component-panel",attrs:{"aria-hidden":!this.isActive,id:this.computedId,role:"tabpanel"}},[this._t("default")],2)},staticRenderFns:[]}},function(n,e,t){var r=t(2)(t(12),t(29),null,null,null);n.exports=r.exports},function(n,e,t){var r,a,i;a=[e,t(13)],void 0===(i="function"==typeof(r=function(n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t,r=(t=e)&&t.__esModule?t:{default:t};n.default={props:{cacheLifetime:{default:5},options:{type:Object,required:!1,default:function(){return{useUrlFragment:!0,defaultTabHash:null}}}},data:function(){return{tabs:[],activeTabHash:"",activeTabIndex:0,lastActiveTabHash:""}},computed:{storageKey:function(){return"vue-tabs-component.cache."+window.location.host+window.location.pathname}},created:function(){this.tabs=this.$children},mounted:function(){var n=this;if(window.addEventListener("hashchange",(function(){return n.selectTab(window.location.hash)})),this.findTab(window.location.hash))this.selectTab(window.location.hash);else{var e=r.default.get(this.storageKey);this.findTab(e)?this.selectTab(e):null!==this.options.defaultTabHash&&this.findTab("#"+this.options.defaultTabHash)?this.selectTab("#"+this.options.defaultTabHash):this.tabs.length&&this.selectTab(this.tabs[0].hash)}},methods:{findTab:function(n){return this.tabs.find((function(e){return e.hash===n}))},selectTab:function(n,e){e&&!this.options.useUrlFragment&&e.preventDefault();var t=this.findTab(n);t&&(t.isDisabled?e.preventDefault():this.lastActiveTabHash!==t.hash?(this.tabs.forEach((function(n){n.isActive=n.hash===t.hash})),this.$emit("changed",{tab:t}),this.activeTabHash=t.hash,this.activeTabIndex=this.getTabIndex(n),this.lastActiveTabHash=this.activeTabHash=t.hash,r.default.set(this.storageKey,t.hash,this.cacheLifetime)):this.$emit("clicked",{tab:t}))},setTabVisible:function(n,e){var t=this.findTab(n);t&&(t.isVisible=e,t.isActive&&(t.isActive=e,this.tabs.every((function(n,e,t){return!n.isVisible||(n.isActive=!0,!1)}))))},getTabIndex:function(n){var e=this.findTab(n);return this.tabs.indexOf(e)},getTabHash:function(n){var e=this,t=this.tabs.find((function(t){return e.tabs.indexOf(t)===n}));if(t)return t.hash},getActiveTab:function(){return this.findTab(this.activeTabHash)},getActiveTabIndex:function(){return this.getTabIndex(this.activeTabHash)}}}})?r.apply(e,a):r)||(n.exports=i)},function(n,e,t){var r,a,i;a=[e,t(14),t(15)],void 0===(i="function"==typeof(r=function(n,e,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=i(e),a=i(t);function i(n){return n&&n.__esModule?n:{default:n}}var o=function(){function n(){(0,r.default)(this,n)}return(0,a.default)(n,[{key:"get",value:function(n){var e=JSON.parse(localStorage.getItem(n));return e?new Date(e.expires)<new Date?(localStorage.removeItem(n),null):e.value:null}},{key:"set",value:function(n,e,t){var r=(new Date).getTime(),a=new Date(r+6e4*t);localStorage.setItem(n,JSON.stringify({value:e,expires:a}))}}]),n}();n.default=new o})?r.apply(e,a):r)||(n.exports=i)},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}},function(n,e,t){"use strict";e.__esModule=!0;var r,a=t(16),i=(r=a)&&r.__esModule?r:{default:r};e.default=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,i.default)(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}()},function(n,e,t){n.exports={default:t(17),__esModule:!0}},function(n,e,t){t(18);var r=t(4).Object;n.exports=function(n,e,t){return r.defineProperty(n,e,t)}},function(n,e,t){var r=t(19);r(r.S+r.F*!t(0),"Object",{defineProperty:t(5).f})},function(n,e,t){var r=t(3),a=t(4),i=t(20),o=t(22),s=t(28),l=function(n,e,t){var c,d,p,m=n&l.F,u=n&l.G,h=n&l.S,g=n&l.P,f=n&l.B,b=n&l.W,v=u?a:a[e]||(a[e]={}),y=v.prototype,x=u?r:h?r[e]:(r[e]||{}).prototype;for(c in u&&(t=e),t)(d=!m&&x&&void 0!==x[c])&&s(v,c)||(p=d?x[c]:t[c],v[c]=u&&"function"!=typeof x[c]?t[c]:f&&d?i(p,r):b&&x[c]==p?function(n){var e=function(e,t,r){if(this instanceof n){switch(arguments.length){case 0:return new n;case 1:return new n(e);case 2:return new n(e,t)}return new n(e,t,r)}return n.apply(this,arguments)};return e.prototype=n.prototype,e}(p):g&&"function"==typeof p?i(Function.call,p):p,g&&((v.virtual||(v.virtual={}))[c]=p,n&l.R&&y&&!y[c]&&o(y,c,p)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,n.exports=l},function(n,e,t){var r=t(21);n.exports=function(n,e,t){if(r(n),void 0===e)return n;switch(t){case 1:return function(t){return n.call(e,t)};case 2:return function(t,r){return n.call(e,t,r)};case 3:return function(t,r,a){return n.call(e,t,r,a)}}return function(){return n.apply(e,arguments)}}},function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(n+" is not a function!");return n}},function(n,e,t){var r=t(5),a=t(27);n.exports=t(0)?function(n,e,t){return r.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(1);n.exports=function(n){if(!r(n))throw TypeError(n+" is not an object!");return n}},function(n,e,t){n.exports=!t(0)&&!t(6)((function(){return 7!=Object.defineProperty(t(25)("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(1),a=t(3).document,i=r(a)&&r(a.createElement);n.exports=function(n){return i?a.createElement(n):{}}},function(n,e,t){var r=t(1);n.exports=function(n,e){if(!r(n))return n;var t,a;if(e&&"function"==typeof(t=n.toString)&&!r(a=t.call(n)))return a;if("function"==typeof(t=n.valueOf)&&!r(a=t.call(n)))return a;if(!e&&"function"==typeof(t=n.toString)&&!r(a=t.call(n)))return a;throw TypeError("Can't convert object to primitive value")}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e){var t={}.hasOwnProperty;n.exports=function(n,e){return t.call(n,e)}},function(n,e){n.exports={render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"tabs-component"},[t("ul",{staticClass:"tabs-component-tabs",attrs:{role:"tablist"}},n._l(n.tabs,(function(e,r){return t("li",{directives:[{name:"show",rawName:"v-show",value:e.isVisible,expression:"tab.isVisible"}],key:r,staticClass:"tabs-component-tab",class:{"is-active":e.isActive,"is-disabled":e.isDisabled},attrs:{role:"presentation"}},[t("a",{staticClass:"tabs-component-tab-a",attrs:{"aria-controls":e.hash,"aria-selected":e.isActive,href:e.hash,role:"tab"},domProps:{innerHTML:n._s(e.header)},on:{click:function(t){n.selectTab(e.hash,t)}}})])}))),n._v(" "),t("div",{staticClass:"tabs-component-panels"},[n._t("default")],2)])},staticRenderFns:[]}}])},n.exports=r()},function(n,e,t){"use strict";t.r(e);var r={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},a=(t(246),t(0)),i=Object(a.a)(r,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);e.default=i.exports},function(n,e,t){"use strict";t.r(e);var r={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(n){this.codeTabs.forEach(n=>{n.elm.classList.remove("theme-code-block__active")}),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(n=>Boolean(n.componentOptions)).map((n,e)=>(""===n.componentOptions.propsData.active&&(this.activeCodeTabIndex=e),{title:n.componentOptions.propsData.title,elm:n.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(n){this.activeCodeTabIndex=n}}},a=(t(247),t(0)),i=Object(a.a)(r,(function(){var n=this,e=n._self._c;return e("div",{staticClass:"theme-code-group"},[e("div",{staticClass:"theme-code-group__nav"},[e("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(t,r){return e("li",{key:t.title,staticClass:"theme-code-group__li"},[e("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":r===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(r)}}},[n._v("\n            "+n._s(t.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?e("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"2f5f1757",null);e.default=i.exports},function(n,e,t){"use strict";var r=t(2),a=t(17),i=t(103),o=t(37);n.exports=function(n,e,t,s){s||(s={});var l=s.enumerable,c=void 0!==s.name?s.name:e;if(r(t)&&i(t,c,s),s.global)l?n[e]=t:o(e,t);else{try{s.unsafe?n[e]&&(l=!0):delete n[e]}catch(n){}l?n[e]=t:a.f(n,e,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return n}},function(n,e,t){"use strict";n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var r=t(141),a=String;n.exports=function(n){if("Symbol"===r(n))throw new TypeError("Cannot convert a Symbol value to a string");return a(n)}},function(n,e,t){"use strict";var r=t(1),a=t(8),i=r.document,o=a(i)&&a(i.createElement);n.exports=function(n){return o?i.createElement(n):{}}},function(n,e,t){"use strict";var r=t(5),a=t(4);n.exports=r&&a((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){"use strict";var r=t(3),a=t(4),i=t(2),o=t(9),s=t(5),l=t(115).CONFIGURABLE,c=t(116),d=t(117),p=d.enforce,m=d.get,u=String,h=Object.defineProperty,g=r("".slice),f=r("".replace),b=r([].join),v=s&&!a((function(){return 8!==h((function(){}),"length",{value:8}).length})),y=String(String).split("String"),x=n.exports=function(n,e,t){"Symbol("===g(u(e),0,7)&&(e="["+f(u(e),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!o(n,"name")||l&&n.name!==e)&&(s?h(n,"name",{value:e,configurable:!0}):n.name=e),v&&t&&o(t,"arity")&&n.length!==t.arity&&h(n,"length",{value:t.arity});try{t&&o(t,"constructor")&&t.constructor?s&&h(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var r=p(n);return o(r,"source")||(r.source=b(y,"string"==typeof e?e:"")),n};Function.prototype.toString=x((function(){return i(this)&&m(this).source||c(this)}),"toString")},function(n,e,t){"use strict";var r=t(61),a=t(63),i=r("keys");n.exports=function(n){return i[n]||(i[n]=a(n))}},function(n,e,t){"use strict";var r=t(3),a=t(9),i=t(28),o=t(121).indexOf,s=t(49),l=r([].push);n.exports=function(n,e){var t,r=i(n),c=0,d=[];for(t in r)!a(s,t)&&a(r,t)&&l(d,t);for(;e.length>c;)a(r,t=e[c++])&&(~o(d,t)||l(d,t));return d}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){n.exports=t(253)},function(n,e,t){"use strict";var r=t(26),a=t(127).left,i=t(128),o=t(60);r({target:"Array",proto:!0,forced:!t(129)&&o>79&&o<83||!i("reduce")},{reduce:function(n){var e=arguments.length;return a(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,i=a&&!r.call({1:2},1);e.f=i?function(n){var e=a(this,n);return!!e&&e.enumerable}:r},function(n,e,t){"use strict";var r=t(34),a=t(8),i=t(56),o=t(112),s=t(114),l=t(31),c=TypeError,d=l("toPrimitive");n.exports=function(n,e){if(!a(n)||i(n))return n;var t,l=o(n,d);if(l){if(void 0===e&&(e="default"),t=r(l,n,e),!a(t)||i(t))return t;throw new c("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(n,e)}},function(n,e,t){"use strict";n.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},function(n,e,t){"use strict";var r=t(30),a=t(54);n.exports=function(n,e){var t=n[e];return a(t)?void 0:r(t)}},function(n,e,t){"use strict";var r=String;n.exports=function(n){try{return r(n)}catch(n){return"Object"}}},function(n,e,t){"use strict";var r=t(34),a=t(2),i=t(8),o=TypeError;n.exports=function(n,e){var t,s;if("string"===e&&a(t=n.toString)&&!i(s=r(t,n)))return s;if(a(t=n.valueOf)&&!i(s=r(t,n)))return s;if("string"!==e&&a(t=n.toString)&&!i(s=r(t,n)))return s;throw new o("Can't convert object to primitive value")}},function(n,e,t){"use strict";var r=t(5),a=t(9),i=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,s=a(i,"name"),l=s&&"something"===function(){}.name,c=s&&(!r||r&&o(i,"name").configurable);n.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(n,e,t){"use strict";var r=t(3),a=t(2),i=t(36),o=r(Function.toString);a(i.inspectSource)||(i.inspectSource=function(n){return o(n)}),n.exports=i.inspectSource},function(n,e,t){"use strict";var r,a,i,o=t(118),s=t(1),l=t(8),c=t(15),d=t(9),p=t(36),m=t(104),u=t(49),h=s.TypeError,g=s.WeakMap;if(o||p.state){var f=p.state||(p.state=new g);f.get=f.get,f.has=f.has,f.set=f.set,r=function(n,e){if(f.has(n))throw new h("Object already initialized");return e.facade=n,f.set(n,e),e},a=function(n){return f.get(n)||{}},i=function(n){return f.has(n)}}else{var b=m("state");u[b]=!0,r=function(n,e){if(d(n,b))throw new h("Object already initialized");return e.facade=n,c(n,b,e),e},a=function(n){return d(n,b)?n[b]:{}},i=function(n){return d(n,b)}}n.exports={set:r,get:a,has:i,enforce:function(n){return i(n)?a(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=a(e)).type!==n)throw new h("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){"use strict";var r=t(1),a=t(2),i=r.WeakMap;n.exports=a(i)&&/native code/.test(String(i))},function(n,e,t){"use strict";var r=t(29),a=t(3),i=t(120),o=t(125),s=t(25),l=a([].concat);n.exports=r("Reflect","ownKeys")||function(n){var e=i.f(s(n)),t=o.f;return t?l(e,t(n)):e}},function(n,e,t){"use strict";var r=t(105),a=t(99).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,a)}},function(n,e,t){"use strict";var r=t(28),a=t(122),i=t(33),o=function(n){return function(e,t,o){var s,l=r(e),c=i(l),d=a(o,c);if(n&&t!=t){for(;c>d;)if((s=l[d++])!=s)return!0}else for(;c>d;d++)if((n||d in l)&&l[d]===t)return n||d||0;return!n&&-1}};n.exports={includes:o(!0),indexOf:o(!1)}},function(n,e,t){"use strict";var r=t(66),a=Math.max,i=Math.min;n.exports=function(n,e){var t=r(n);return t<0?a(t+e,0):i(t,e)}},function(n,e,t){"use strict";var r=Math.ceil,a=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?a:r)(e)}},function(n,e,t){"use strict";var r=t(66),a=Math.min;n.exports=function(n){var e=r(n);return e>0?a(e,9007199254740991):0}},function(n,e,t){"use strict";e.f=Object.getOwnPropertySymbols},function(n,e,t){"use strict";var r=t(4),a=t(2),i=/#|\.prototype\./,o=function(n,e){var t=l[s(n)];return t===d||t!==c&&(a(e)?r(e):!!e)},s=o.normalize=function(n){return String(n).replace(i,".").toLowerCase()},l=o.data={},c=o.NATIVE="N",d=o.POLYFILL="P";n.exports=o},function(n,e,t){"use strict";var r=t(30),a=t(32),i=t(48),o=t(33),s=TypeError,l=function(n){return function(e,t,l,c){var d=a(e),p=i(d),m=o(d);r(t);var u=n?m-1:0,h=n?-1:1;if(l<2)for(;;){if(u in p){c=p[u],u+=h;break}if(u+=h,n?u<0:m<=u)throw new s("Reduce of empty array with no initial value")}for(;n?u>=0:m>u;u+=h)u in p&&(c=t(c,p[u],u,d));return c}};n.exports={left:l(!1),right:l(!0)}},function(n,e,t){"use strict";var r=t(4);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){"use strict";var r=t(1),a=t(18);n.exports="process"===a(r.process)},function(n,e,t){"use strict";var r=t(5),a=t(131),i=TypeError,o=Object.getOwnPropertyDescriptor,s=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(n){return n instanceof TypeError}}();n.exports=s?function(n,e){if(a(n)&&!o(n,"length").writable)throw new i("Cannot set read only .length");return n.length=e}:function(n,e){return n.length=e}},function(n,e,t){"use strict";var r=t(18);n.exports=Array.isArray||function(n){return"Array"===r(n)}},function(n,e,t){"use strict";var r=TypeError;n.exports=function(n){if(n>9007199254740991)throw r("Maximum allowed index exceeded");return n}},function(n,e,t){"use strict";var r=t(27),a=Function.prototype,i=a.apply,o=a.call;n.exports="object"==typeof Reflect&&Reflect.apply||(r?o.bind(i):function(){return o.apply(i,arguments)})},function(n,e,t){"use strict";var r=t(29),a=t(9),i=t(15),o=t(57),s=t(67),l=t(65),c=t(138),d=t(139),p=t(140),m=t(143),u=t(144),h=t(5),g=t(62);n.exports=function(n,e,t,f){var b=f?2:1,v=n.split("."),y=v[v.length-1],x=r.apply(null,v);if(x){var w=x.prototype;if(!g&&a(w,"cause")&&delete w.cause,!t)return x;var _=r("Error"),E=e((function(n,e){var t=p(f?e:n,void 0),r=f?new x(n):new x;return void 0!==t&&i(r,"message",t),u(r,E,r.stack,2),this&&o(w,this)&&d(r,this,E),arguments.length>b&&m(r,arguments[b]),r}));if(E.prototype=w,"Error"!==y?s?s(E,_):l(E,_,{name:!0}):h&&"stackTraceLimit"in x&&(c(E,x,"stackTraceLimit"),c(E,x,"prepareStackTrace")),l(E,x),!g)try{w.name!==y&&i(w,"name",y),w.constructor=E}catch(n){}return E}}},function(n,e,t){"use strict";var r=t(3),a=t(30);n.exports=function(n,e,t){try{return r(a(Object.getOwnPropertyDescriptor(n,e)[t]))}catch(n){}}},function(n,e,t){"use strict";var r=t(137),a=String,i=TypeError;n.exports=function(n){if(r(n))return n;throw new i("Can't set "+a(n)+" as a prototype")}},function(n,e,t){"use strict";var r=t(8);n.exports=function(n){return r(n)||null===n}},function(n,e,t){"use strict";var r=t(17).f;n.exports=function(n,e,t){t in n||r(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){"use strict";var r=t(2),a=t(8),i=t(67);n.exports=function(n,e,t){var o,s;return i&&r(o=e.constructor)&&o!==t&&a(s=o.prototype)&&s!==t.prototype&&i(n,s),n}},function(n,e,t){"use strict";var r=t(100);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:r(n)}},function(n,e,t){"use strict";var r=t(142),a=t(2),i=t(18),o=t(31)("toStringTag"),s=Object,l="Arguments"===i(function(){return arguments}());n.exports=r?i:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=s(n),o))?t:l?i(e):"Object"===(r=i(e))&&a(e.callee)?"Arguments":r}},function(n,e,t){"use strict";var r={};r[t(31)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){"use strict";var r=t(8),a=t(15);n.exports=function(n,e){r(e)&&"cause"in e&&a(n,"cause",e.cause)}},function(n,e,t){"use strict";var r=t(15),a=t(145),i=t(146),o=Error.captureStackTrace;n.exports=function(n,e,t,s){i&&(o?o(n,e):r(n,"stack",a(t,s)))}},function(n,e,t){"use strict";var r=t(3),a=Error,i=r("".replace),o=String(new a("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(o);n.exports=function(n,e){if(l&&"string"==typeof n&&!a.prepareStackTrace)for(;e--;)n=i(n,s,"");return n}},function(n,e,t){"use strict";var r=t(4),a=t(35);n.exports=!r((function(){var n=new Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",a(1,7)),7!==n.stack)}))},function(n,e,t){var r=t(68),a=t(148);n.exports=function n(e,t,i,o,s){var l=-1,c=e.length;for(i||(i=a),s||(s=[]);++l<c;){var d=e[l];t>0&&i(d)?t>1?n(d,t-1,i,o,s):r(s,d):o||(s[s.length]=d)}return s}},function(n,e,t){var r=t(16),a=t(38),i=t(6),o=r?r.isConcatSpreadable:void 0;n.exports=function(n){return i(n)||a(n)||!!(o&&n&&n[o])}},function(n,e,t){var r=t(14),a=t(13);n.exports=function(n){return a(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(16),a=Object.prototype,i=a.hasOwnProperty,o=a.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var e=i.call(n,s),t=n[s];try{n[s]=void 0;var r=!0}catch(n){}var a=o.call(n);return r&&(e?n[s]=t:delete n[s]),a}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(153),a=t(209),i=t(46),o=t(6),s=t(220);n.exports=function(n){return"function"==typeof n?n:null==n?i:"object"==typeof n?o(n)?a(n[0],n[1]):r(n):s(n)}},function(n,e,t){var r=t(154),a=t(208),i=t(85);n.exports=function(n){var e=a(n);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(70),a=t(74);n.exports=function(n,e,t,i){var o=t.length,s=o,l=!i;if(null==n)return!s;for(n=Object(n);o--;){var c=t[o];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++o<s;){var d=(c=t[o])[0],p=n[d],m=c[1];if(l&&c[2]){if(void 0===p&&!(d in n))return!1}else{var u=new r;if(i)var h=i(p,m,d,n,e,u);if(!(void 0===h?a(m,p,3,i,u):h))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(20),a=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():a.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(20);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(20);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(20);n.exports=function(n,e){var t=this.__data__,a=r(t,n);return a<0?(++this.size,t.push([n,e])):t[a][1]=e,this}},function(n,e,t){var r=t(19);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(19),a=t(39),i=t(41);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var o=t.__data__;if(!a||o.length<199)return o.push([n,e]),this.size=++t.size,this;t=this.__data__=new i(o)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(72),a=t(166),i=t(40),o=t(73),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,d=l.toString,p=c.hasOwnProperty,m=RegExp("^"+d.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!i(n)||a(n))&&(r(n)?m:s).test(o(n))}},function(n,e,t){var r,a=t(167),i=(r=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!i&&i in n}},function(n,e,t){var r=t(7)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(170),a=t(19),i=t(39);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||a),string:new r}}},function(n,e,t){var r=t(171),a=t(172),i=t(173),o=t(174),s=t(175);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=i,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(21);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(21),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return a.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(21),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:a.call(e,n)}},function(n,e,t){var r=t(21);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(22);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(22);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(22);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(22);n.exports=function(n,e){var t=r(this,n),a=t.size;return t.set(n,e),this.size+=t.size==a?0:1,this}},function(n,e,t){var r=t(70),a=t(75),i=t(185),o=t(188),s=t(204),l=t(6),c=t(79),d=t(81),p="[object Object]",m=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,u,h,g){var f=l(n),b=l(e),v=f?"[object Array]":s(n),y=b?"[object Array]":s(e),x=(v="[object Arguments]"==v?p:v)==p,w=(y="[object Arguments]"==y?p:y)==p,_=v==y;if(_&&c(n)){if(!c(e))return!1;f=!0,x=!1}if(_&&!x)return g||(g=new r),f||d(n)?a(n,e,t,u,h,g):i(n,e,v,t,u,h,g);if(!(1&t)){var E=x&&m.call(n,"__wrapped__"),k=w&&m.call(e,"__wrapped__");if(E||k){var S=E?n.value():n,T=k?e.value():e;return g||(g=new r),h(S,T,t,u,g)}}return!!_&&(g||(g=new r),o(n,e,t,u,h,g))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(16),a=t(186),i=t(71),o=t(75),s=t(187),l=t(42),c=r?r.prototype:void 0,d=c?c.valueOf:void 0;n.exports=function(n,e,t,r,c,p,m){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!p(new a(n),new a(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var u=s;case"[object Set]":var h=1&r;if(u||(u=l),n.size!=e.size&&!h)return!1;var g=m.get(n);if(g)return g==e;r|=2,m.set(n,e);var f=o(u(n),u(e),r,c,p,m);return m.delete(n),f;case"[object Symbol]":if(d)return d.call(n)==d.call(e)}return!1}},function(n,e,t){var r=t(7).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(189),a=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,i,o,s){var l=1&t,c=r(n),d=c.length;if(d!=r(e).length&&!l)return!1;for(var p=d;p--;){var m=c[p];if(!(l?m in e:a.call(e,m)))return!1}var u=s.get(n),h=s.get(e);if(u&&h)return u==e&&h==n;var g=!0;s.set(n,e),s.set(e,n);for(var f=l;++p<d;){var b=n[m=c[p]],v=e[m];if(i)var y=l?i(v,b,m,e,n,s):i(b,v,m,n,e,s);if(!(void 0===y?b===v||o(b,v,t,i,s):y)){g=!1;break}f||(f="constructor"==m)}if(g&&!f){var x=n.constructor,w=e.constructor;x==w||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof w&&w instanceof w||(g=!1)}return s.delete(n),s.delete(e),g}},function(n,e,t){var r=t(190),a=t(191),i=t(78);n.exports=function(n){return r(n,i,a)}},function(n,e,t){var r=t(68),a=t(6);n.exports=function(n,e,t){var i=e(n);return a(n)?i:r(i,t(n))}},function(n,e,t){var r=t(192),a=t(193),i=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,s=o?function(n){return null==n?[]:(n=Object(n),r(o(n),(function(e){return i.call(n,e)})))}:a;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,a=0,i=[];++t<r;){var o=n[t];e(o,t,n)&&(i[a++]=o)}return i}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(195),a=t(38),i=t(6),o=t(79),s=t(80),l=t(81),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=i(n),d=!t&&a(n),p=!t&&!d&&o(n),m=!t&&!d&&!p&&l(n),u=t||d||p||m,h=u?r(n.length,String):[],g=h.length;for(var f in n)!e&&!c.call(n,f)||u&&("length"==f||p&&("offset"==f||"parent"==f)||m&&("buffer"==f||"byteLength"==f||"byteOffset"==f)||s(f,g))||h.push(f);return h}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(14),a=t(43),i=t(13),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,n.exports=function(n){return i(n)&&a(n.length)&&!!o[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(69),a=e&&!e.nodeType&&e,i=a&&"object"==typeof n&&n&&!n.nodeType&&n,o=i&&i.exports===a&&r.process,s=function(){try{var n=i&&i.require&&i.require("util").types;return n||o&&o.binding&&o.binding("util")}catch(n){}}();n.exports=s}).call(this,t(50)(n))},function(n,e,t){var r=t(201),a=t(202),i=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return a(n);var e=[];for(var t in Object(n))i.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(203)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(205),a=t(39),i=t(206),o=t(83),s=t(207),l=t(14),c=t(73),d=c(r),p=c(a),m=c(i),u=c(o),h=c(s),g=l;(r&&"[object DataView]"!=g(new r(new ArrayBuffer(1)))||a&&"[object Map]"!=g(new a)||i&&"[object Promise]"!=g(i.resolve())||o&&"[object Set]"!=g(new o)||s&&"[object WeakMap]"!=g(new s))&&(g=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,r=t?c(t):"";if(r)switch(r){case d:return"[object DataView]";case p:return"[object Map]";case m:return"[object Promise]";case u:return"[object Set]";case h:return"[object WeakMap]"}return e}),n.exports=g},function(n,e,t){var r=t(10)(t(7),"DataView");n.exports=r},function(n,e,t){var r=t(10)(t(7),"Promise");n.exports=r},function(n,e,t){var r=t(10)(t(7),"WeakMap");n.exports=r},function(n,e,t){var r=t(84),a=t(78);n.exports=function(n){for(var e=a(n),t=e.length;t--;){var i=e[t],o=n[i];e[t]=[i,o,r(o)]}return e}},function(n,e,t){var r=t(74),a=t(210),i=t(217),o=t(44),s=t(84),l=t(85),c=t(23);n.exports=function(n,e){return o(n)&&s(e)?l(c(n),e):function(t){var o=a(t,n);return void 0===o&&o===e?i(t,n):r(e,o,3)}}},function(n,e,t){var r=t(86);n.exports=function(n,e,t){var a=null==n?void 0:r(n,e);return void 0===a?t:a}},function(n,e,t){var r=t(212),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,o=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(a,(function(n,t,r,a){e.push(r?a.replace(i,"$1"):t||n)})),e}));n.exports=o},function(n,e,t){var r=t(213);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(41);function a(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,a=e?e.apply(this,r):r[0],i=t.cache;if(i.has(a))return i.get(a);var o=n.apply(this,r);return t.cache=i.set(a,o)||i,o};return t.cache=new(a.Cache||r),t}a.Cache=r,n.exports=a},function(n,e,t){var r=t(215);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(16),a=t(216),i=t(6),o=t(45),s=r?r.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(i(e))return a(e,n)+"";if(o(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,a=Array(r);++t<r;)a[t]=e(n[t],t,n);return a}},function(n,e,t){var r=t(218),a=t(219);n.exports=function(n,e){return null!=n&&a(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(87),a=t(38),i=t(6),o=t(80),s=t(43),l=t(23);n.exports=function(n,e,t){for(var c=-1,d=(e=r(e,n)).length,p=!1;++c<d;){var m=l(e[c]);if(!(p=null!=n&&t(n,m)))break;n=n[m]}return p||++c!=d?p:!!(d=null==n?0:n.length)&&s(d)&&o(m,d)&&(i(n)||a(n))}},function(n,e,t){var r=t(221),a=t(222),i=t(44),o=t(23);n.exports=function(n){return i(n)?r(o(n)):a(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(86);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(46),a=t(224),i=t(226);n.exports=function(n,e){return i(a(n,e,r),n+"")}},function(n,e,t){var r=t(225),a=Math.max;n.exports=function(n,e,t){return e=a(void 0===e?n.length-1:e,0),function(){for(var i=arguments,o=-1,s=a(i.length-e,0),l=Array(s);++o<s;)l[o]=i[e+o];o=-1;for(var c=Array(e+1);++o<e;)c[o]=i[o];return c[e]=t(l),r(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(227),a=t(230)(r);n.exports=a},function(n,e,t){var r=t(228),a=t(229),i=t(46),o=a?function(n,e){return a(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:i;n.exports=o},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(10),a=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=a},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var a=t(),i=16-(a-r);if(r=a,i>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(76),a=t(232),i=t(237),o=t(77),s=t(238),l=t(42);n.exports=function(n,e,t){var c=-1,d=a,p=n.length,m=!0,u=[],h=u;if(t)m=!1,d=i;else if(p>=200){var g=e?null:s(n);if(g)return l(g);m=!1,d=o,h=new r}else h=e?[]:u;n:for(;++c<p;){var f=n[c],b=e?e(f):f;if(f=t||0!==f?f:0,m&&b==b){for(var v=h.length;v--;)if(h[v]===b)continue n;e&&h.push(b),u.push(f)}else d(h,b,t)||(h!==u&&h.push(b),u.push(f))}return u}},function(n,e,t){var r=t(233);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(234),a=t(235),i=t(236);n.exports=function(n,e,t){return e==e?i(n,e,t):r(n,a,t)}},function(n,e){n.exports=function(n,e,t,r){for(var a=n.length,i=t+(r?1:-1);r?i--:++i<a;)if(e(n[i],i,n))return i;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,a=n.length;++r<a;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,a=null==n?0:n.length;++r<a;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(83),a=t(239),i=t(42),o=r&&1/i(new r([,-0]))[1]==1/0?function(n){return new r(n)}:a;n.exports=o},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(82),a=t(13);n.exports=function(n){return a(n)&&r(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(88)},function(n,e,t){"use strict";t(89)},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(90)},function(n,e,t){"use strict";t(91)},function(n,e,t){"use strict";t(92)},function(n,e,t){"use strict";t.r(e);
/*!
 * Vue.js v2.7.16
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var r=Object.freeze({}),a=Array.isArray;function i(n){return null==n}function o(n){return null!=n}function s(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return"function"==typeof n}function d(n){return null!==n&&"object"==typeof n}var p=Object.prototype.toString;function m(n){return"[object Object]"===p.call(n)}function u(n){return"[object RegExp]"===p.call(n)}function h(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function g(n){return o(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function f(n){return null==n?"":Array.isArray(n)||m(n)&&n.toString===p?JSON.stringify(n,b,2):String(n)}function b(n,e){return e&&e.__v_isRef?e.value:e}function v(n){var e=parseFloat(n);return isNaN(e)?n:e}function y(n,e){for(var t=Object.create(null),r=n.split(","),a=0;a<r.length;a++)t[r[a]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}y("slot,component",!0);var x=y("key,ref,slot,slot-scope,is");function w(n,e){var t=n.length;if(t){if(e===n[t-1])return void(n.length=t-1);var r=n.indexOf(e);if(r>-1)return n.splice(r,1)}}var _=Object.prototype.hasOwnProperty;function E(n,e){return _.call(n,e)}function k(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var S=/-(\w)/g,T=k((function(n){return n.replace(S,(function(n,e){return e?e.toUpperCase():""}))})),A=k((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),C=/\B([A-Z])/g,P=k((function(n){return n.replace(C,"-$1").toLowerCase()}));var I=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function B(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function j(n,e){for(var t in e)n[t]=e[t];return n}function O(n){for(var e={},t=0;t<n.length;t++)n[t]&&j(e,n[t]);return e}function D(n,e,t){}var z=function(n,e,t){return!1},L=function(n){return n};function F(n,e){if(n===e)return!0;var t=d(n),r=d(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var a=Array.isArray(n),i=Array.isArray(e);if(a&&i)return n.length===e.length&&n.every((function(n,t){return F(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(a||i)return!1;var o=Object.keys(n),s=Object.keys(e);return o.length===s.length&&o.every((function(t){return F(n[t],e[t])}))}catch(n){return!1}}function M(n,e){for(var t=0;t<n.length;t++)if(F(n[t],e))return t;return-1}function R(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function N(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var U=["component","directive","filter"],W=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],q={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:z,isReservedAttr:z,isUnknownElement:z,getTagNamespace:D,parsePlatformTagName:L,mustUseProp:z,async:!0,_lifecycleHooks:W},$=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function G(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function V(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var H=new RegExp("[^".concat($.source,".$_\\d]"));var Z="__proto__"in{},Q="undefined"!=typeof window,K=Q&&window.navigator.userAgent.toLowerCase(),X=K&&/msie|trident/.test(K),J=K&&K.indexOf("msie 9.0")>0,Y=K&&K.indexOf("edge/")>0;K&&K.indexOf("android");var nn=K&&/iphone|ipad|ipod|ios/.test(K);K&&/chrome\/\d+/.test(K),K&&/phantomjs/.test(K);var en,tn=K&&K.match(/firefox\/(\d+)/),rn={}.watch,an=!1;if(Q)try{var on={};Object.defineProperty(on,"passive",{get:function(){an=!0}}),window.addEventListener("test-passive",null,on)}catch(n){}var sn=function(){return void 0===en&&(en=!Q&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),en},ln=Q&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function cn(n){return"function"==typeof n&&/native code/.test(n.toString())}var dn,pn="undefined"!=typeof Symbol&&cn(Symbol)&&"undefined"!=typeof Reflect&&cn(Reflect.ownKeys);dn="undefined"!=typeof Set&&cn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var mn=null;function un(n){void 0===n&&(n=null),n||mn&&mn._scope.off(),mn=n,n&&n._scope.on()}var hn=function(){function n(n,e,t,r,a,i,o,s){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=a,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),gn=function(n){void 0===n&&(n="");var e=new hn;return e.text=n,e.isComment=!0,e};function fn(n){return new hn(void 0,void 0,void 0,String(n))}function bn(n){var e=new hn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}"function"==typeof SuppressedError&&SuppressedError;var vn=0,yn=[],xn=function(){function n(){this._pending=!1,this.id=vn++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){this.subs[this.subs.indexOf(n)]=null,this._pending||(this._pending=!0,yn.push(this))},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.filter((function(n){return n}));for(var t=0,r=e.length;t<r;t++){0,e[t].update()}},n}();xn.target=null;var wn=[];function _n(n){wn.push(n),xn.target=n}function En(){wn.pop(),xn.target=wn[wn.length-1]}var kn=Array.prototype,Sn=Object.create(kn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=kn[n];V(Sn,n,(function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var a,i=e.apply(this,t),o=this.__ob__;switch(n){case"push":case"unshift":a=t;break;case"splice":a=t.slice(2)}return a&&o.observeArray(a),o.dep.notify(),i}))}));var Tn=Object.getOwnPropertyNames(Sn),An={},Cn=!0;function Pn(n){Cn=n}var In={notify:D,depend:D,addSub:D,removeSub:D},Bn=function(){function n(n,e,t){if(void 0===e&&(e=!1),void 0===t&&(t=!1),this.value=n,this.shallow=e,this.mock=t,this.dep=t?In:new xn,this.vmCount=0,V(n,"__ob__",this),a(n)){if(!t)if(Z)n.__proto__=Sn;else for(var r=0,i=Tn.length;r<i;r++){V(n,s=Tn[r],Sn[s])}e||this.observeArray(n)}else{var o=Object.keys(n);for(r=0;r<o.length;r++){var s;On(n,s=o[r],An,void 0,e,t)}}}return n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)jn(n[e],!1,this.mock)},n}();function jn(n,e,t){return n&&E(n,"__ob__")&&n.__ob__ instanceof Bn?n.__ob__:!Cn||!t&&sn()||!a(n)&&!m(n)||!Object.isExtensible(n)||n.__v_skip||Nn(n)||n instanceof hn?void 0:new Bn(n,e,t)}function On(n,e,t,r,i,o,s){void 0===s&&(s=!1);var l=new xn,c=Object.getOwnPropertyDescriptor(n,e);if(!c||!1!==c.configurable){var d=c&&c.get,p=c&&c.set;d&&!p||t!==An&&2!==arguments.length||(t=n[e]);var m=i?t&&t.__ob__:jn(t,!1,o);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=d?d.call(n):t;return xn.target&&(l.depend(),m&&(m.dep.depend(),a(e)&&Ln(e))),Nn(e)&&!i?e.value:e},set:function(e){var r=d?d.call(n):t;if(N(r,e)){if(p)p.call(n,e);else{if(d)return;if(!i&&Nn(r)&&!Nn(e))return void(r.value=e);t=e}m=i?e&&e.__ob__:jn(e,!1,o),l.notify()}}}),l}}function Dn(n,e,t){if(!Rn(n)){var r=n.__ob__;return a(n)&&h(e)?(n.length=Math.max(n.length,e),n.splice(e,1,t),r&&!r.shallow&&r.mock&&jn(t,!1,!0),t):e in n&&!(e in Object.prototype)?(n[e]=t,t):n._isVue||r&&r.vmCount?t:r?(On(r.value,e,t,void 0,r.shallow,r.mock),r.dep.notify(),t):(n[e]=t,t)}}function zn(n,e){if(a(n)&&h(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||Rn(n)||E(n,e)&&(delete n[e],t&&t.dep.notify())}}function Ln(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),a(e)&&Ln(e)}function Fn(n){return Mn(n,!0),V(n,"__v_isShallow",!0),n}function Mn(n,e){if(!Rn(n)){jn(n,e,sn());0}}function Rn(n){return!(!n||!n.__v_isReadonly)}function Nn(n){return!(!n||!0!==n.__v_isRef)}function Un(n,e,t){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];if(Nn(n))return n.value;var r=n&&n.__ob__;return r&&r.dep.depend(),n},set:function(n){var r=e[t];Nn(r)&&!Nn(n)?r.value=n:e[t]=n}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Wn;var qn=function(){function n(n){void 0===n&&(n=!1),this.detached=n,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Wn,!n&&Wn&&(this.index=(Wn.scopes||(Wn.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=Wn;try{return Wn=this,n()}finally{Wn=e}}else 0},n.prototype.on=function(){Wn=this},n.prototype.off=function(){Wn=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,t=void 0;for(e=0,t=this.effects.length;e<t;e++)this.effects[e].teardown();for(e=0,t=this.cleanups.length;e<t;e++)this.cleanups[e]();if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!n){var r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this.active=!1}},n}();function $n(n){var e=n._provided,t=n.$parent&&n.$parent._provided;return t===e?n._provided=Object.create(t):e}var Gn=k((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function Vn(n,e){function t(){var n=t.fns;if(!a(n))return Ce(n,null,arguments,e,"v-on handler");for(var r=n.slice(),i=0;i<r.length;i++)Ce(r[i],null,arguments,e,"v-on handler")}return t.fns=n,t}function Hn(n,e,t,r,a,o){var l,c,d,p;for(l in n)c=n[l],d=e[l],p=Gn(l),i(c)||(i(d)?(i(c.fns)&&(c=n[l]=Vn(c,o)),s(p.once)&&(c=n[l]=a(p.name,c,p.capture)),t(p.name,c,p.capture,p.passive,p.params)):c!==d&&(d.fns=c,n[l]=d));for(l in e)i(n[l])&&r((p=Gn(l)).name,e[l],p.capture)}function Zn(n,e,t){var r;n instanceof hn&&(n=n.data.hook||(n.data.hook={}));var a=n[e];function l(){t.apply(this,arguments),w(r.fns,l)}i(a)?r=Vn([l]):o(a.fns)&&s(a.merged)?(r=a).fns.push(l):r=Vn([a,l]),r.merged=!0,n[e]=r}function Qn(n,e,t,r,a){if(o(e)){if(E(e,t))return n[t]=e[t],a||delete e[t],!0;if(E(e,r))return n[t]=e[r],a||delete e[r],!0}return!1}function Kn(n){return l(n)?[fn(n)]:a(n)?function n(e,t){var r,c,d,p,m=[];for(r=0;r<e.length;r++)i(c=e[r])||"boolean"==typeof c||(d=m.length-1,p=m[d],a(c)?c.length>0&&(Xn((c=n(c,"".concat(t||"","_").concat(r)))[0])&&Xn(p)&&(m[d]=fn(p.text+c[0].text),c.shift()),m.push.apply(m,c)):l(c)?Xn(p)?m[d]=fn(p.text+c):""!==c&&m.push(fn(c)):Xn(c)&&Xn(p)?m[d]=fn(p.text+c.text):(s(e._isVList)&&o(c.tag)&&i(c.key)&&o(t)&&(c.key="__vlist".concat(t,"_").concat(r,"__")),m.push(c)));return m}(n):void 0}function Xn(n){return o(n)&&o(n.text)&&!1===n.isComment}function Jn(n,e){var t,r,i,s,l=null;if(a(n)||"string"==typeof n)for(l=new Array(n.length),t=0,r=n.length;t<r;t++)l[t]=e(n[t],t);else if("number"==typeof n)for(l=new Array(n),t=0;t<n;t++)l[t]=e(t+1,t);else if(d(n))if(pn&&n[Symbol.iterator]){l=[];for(var c=n[Symbol.iterator](),p=c.next();!p.done;)l.push(e(p.value,l.length)),p=c.next()}else for(i=Object.keys(n),l=new Array(i.length),t=0,r=i.length;t<r;t++)s=i[t],l[t]=e(n[s],s,t);return o(l)||(l=[]),l._isVList=!0,l}function Yn(n,e,t,r){var a,i=this.$scopedSlots[n];i?(t=t||{},r&&(t=j(j({},r),t)),a=i(t)||(c(e)?e():e)):a=this.$slots[n]||(c(e)?e():e);var o=t&&t.slot;return o?this.$createElement("template",{slot:o},a):a}function ne(n){return Bt(this.$options,"filters",n,!0)||L}function ee(n,e){return a(n)?-1===n.indexOf(e):n!==e}function te(n,e,t,r,a){var i=q.keyCodes[e]||t;return a&&r&&!q.keyCodes[e]?ee(a,r):i?ee(i,n):r?P(r)!==e:void 0===n}function re(n,e,t,r,i){if(t)if(d(t)){a(t)&&(t=O(t));var o=void 0,s=function(a){if("class"===a||"style"===a||x(a))o=n;else{var s=n.attrs&&n.attrs.type;o=r||q.mustUseProp(e,s,a)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=T(a),c=P(a);l in o||c in o||(o[a]=t[a],i&&((n.on||(n.on={}))["update:".concat(a)]=function(n){t[a]=n}))};for(var l in t)s(l)}else;return n}function ae(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||oe(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),r}function ie(n,e,t){return oe(n,"__once__".concat(e).concat(t?"_".concat(t):""),!0),n}function oe(n,e,t){if(a(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&se(n[r],"".concat(e,"_").concat(r),t);else se(n,e,t)}function se(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function le(n,e){if(e)if(m(e)){var t=n.on=n.on?j({},n.on):{};for(var r in e){var a=t[r],i=e[r];t[r]=a?[].concat(a,i):i}}else;return n}function ce(n,e,t,r){e=e||{$stable:!t};for(var i=0;i<n.length;i++){var o=n[i];a(o)?ce(o,e,t):o&&(o.proxy&&(o.fn.proxy=!0),e[o.key]=o.fn)}return r&&(e.$key=r),e}function de(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function pe(n,e){return"string"==typeof n?e+n:n}function me(n){n._o=ie,n._n=v,n._s=f,n._l=Jn,n._t=Yn,n._q=F,n._i=M,n._m=ae,n._f=ne,n._k=te,n._b=re,n._v=fn,n._e=gn,n._u=ce,n._g=le,n._d=de,n._p=pe}function ue(n,e){if(!n||!n.length)return{};for(var t={},r=0,a=n.length;r<a;r++){var i=n[r],o=i.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,i.context!==e&&i.fnContext!==e||!o||null==o.slot)(t.default||(t.default=[])).push(i);else{var s=o.slot,l=t[s]||(t[s]=[]);"template"===i.tag?l.push.apply(l,i.children||[]):l.push(i)}}for(var c in t)t[c].every(he)&&delete t[c];return t}function he(n){return n.isComment&&!n.asyncFactory||" "===n.text}function ge(n){return n.isComment&&n.asyncFactory}function fe(n,e,t,a){var i,o=Object.keys(t).length>0,s=e?!!e.$stable:!o,l=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(s&&a&&a!==r&&l===a.$key&&!o&&!a.$hasNormal)return a;for(var c in i={},e)e[c]&&"$"!==c[0]&&(i[c]=be(n,t,c,e[c]))}else i={};for(var d in t)d in i||(i[d]=ve(t,d));return e&&Object.isExtensible(e)&&(e._normalized=i),V(i,"$stable",s),V(i,"$key",l),V(i,"$hasNormal",o),i}function be(n,e,t,r){var i=function(){var e=mn;un(n);var t=arguments.length?r.apply(null,arguments):r({}),i=(t=t&&"object"==typeof t&&!a(t)?[t]:Kn(t))&&t[0];return un(e),t&&(!i||1===t.length&&i.isComment&&!ge(i))?void 0:t};return r.proxy&&Object.defineProperty(e,t,{get:i,enumerable:!0,configurable:!0}),i}function ve(n,e){return function(){return n[e]}}function ye(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};V(e,"_v_attr_proxy",!0),xe(e,n.$attrs,r,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||xe(n._listenersProxy={},n.$listeners,r,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||_e(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:I(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(t){return Un(n,e,t)}))}}}function xe(n,e,t,r,a){var i=!1;for(var o in e)o in n?e[o]!==t[o]&&(i=!0):(i=!0,we(n,o,r,a));for(var o in n)o in e||(i=!0,delete n[o]);return i}function we(n,e,t,r){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return t[r][e]}})}function _e(n,e){for(var t in e)n[t]=e[t];for(var t in n)t in e||delete n[t]}var Ee=null;function ke(n,e){return(n.__esModule||pn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),d(n)?e.extend(n):n}function Se(n){if(a(n))for(var e=0;e<n.length;e++){var t=n[e];if(o(t)&&(o(t.componentOptions)||ge(t)))return t}}function Te(n,e,t,r,p,m){return(a(t)||l(t))&&(p=r,r=t,t=void 0),s(m)&&(p=2),function(n,e,t,r,l){if(o(t)&&o(t.__ob__))return gn();o(t)&&o(t.is)&&(e=t.is);if(!e)return gn();0;a(r)&&c(r[0])&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===l?r=Kn(r):1===l&&(r=function(n){for(var e=0;e<n.length;e++)if(a(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var p,m;if("string"==typeof e){var u=void 0;m=n.$vnode&&n.$vnode.ns||q.getTagNamespace(e),p=q.isReservedTag(e)?new hn(q.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!o(u=Bt(n.$options,"components",e))?new hn(e,t,r,void 0,void 0,n):wt(u,t,n,r,e)}else p=wt(e,t,n,r);return a(p)?p:o(p)?(o(m)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(o(e.children))for(var a=0,l=e.children.length;a<l;a++){var c=e.children[a];o(c.tag)&&(i(c.ns)||s(r)&&"svg"!==c.tag)&&n(c,t,r)}}(p,m),o(t)&&function(n){d(n.style)&&qe(n.style);d(n.class)&&qe(n.class)}(t),p):gn()}(n,e,t,r,p)}function Ae(n,e,t){_n();try{if(e)for(var r=e;r=r.$parent;){var a=r.$options.errorCaptured;if(a)for(var i=0;i<a.length;i++)try{if(!1===a[i].call(r,n,e,t))return}catch(n){Pe(n,r,"errorCaptured hook")}}Pe(n,e,t)}finally{En()}}function Ce(n,e,t,r,a){var i;try{(i=t?n.apply(e,t):n.call(e))&&!i._isVue&&g(i)&&!i._handled&&(i.catch((function(n){return Ae(n,r,a+" (Promise/async)")})),i._handled=!0)}catch(n){Ae(n,r,a)}return i}function Pe(n,e,t){if(q.errorHandler)try{return q.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Ie(e,null,"config.errorHandler")}Ie(n,e,t)}function Ie(n,e,t){if(!Q||"undefined"==typeof console)throw n;console.error(n)}var Be,je=!1,Oe=[],De=!1;function ze(){De=!1;var n=Oe.slice(0);Oe.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&cn(Promise)){var Le=Promise.resolve();Be=function(){Le.then(ze),nn&&setTimeout(D)},je=!0}else if(X||"undefined"==typeof MutationObserver||!cn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Be="undefined"!=typeof setImmediate&&cn(setImmediate)?function(){setImmediate(ze)}:function(){setTimeout(ze,0)};else{var Fe=1,Me=new MutationObserver(ze),Re=document.createTextNode(String(Fe));Me.observe(Re,{characterData:!0}),Be=function(){Fe=(Fe+1)%2,Re.data=String(Fe)},je=!0}function Ne(n,e){var t;if(Oe.push((function(){if(n)try{n.call(e)}catch(n){Ae(n,e,"nextTick")}else t&&t(e)})),De||(De=!0,Be()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}function Ue(n){return function(e,t){if(void 0===t&&(t=mn),t)return function(n,e,t){var r=n.$options;r[e]=At(r[e],t)}(t,n,e)}}Ue("beforeMount"),Ue("mounted"),Ue("beforeUpdate"),Ue("updated"),Ue("beforeDestroy"),Ue("destroyed"),Ue("activated"),Ue("deactivated"),Ue("serverPrefetch"),Ue("renderTracked"),Ue("renderTriggered"),Ue("errorCaptured");var We=new dn;function qe(n){return function n(e,t){var r,i,o=a(e);if(!o&&!d(e)||e.__v_skip||Object.isFrozen(e)||e instanceof hn)return;if(e.__ob__){var s=e.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(o)for(r=e.length;r--;)n(e[r],t);else if(Nn(e))n(e.value,t);else for(i=Object.keys(e),r=i.length;r--;)n(e[i[r]],t)}(n,We),We.clear(),n}var $e,Ge=0,Ve=function(){function n(n,e,t,r,a){var i,o;i=this,void 0===(o=Wn&&!Wn._vm?Wn:n?n._scope:void 0)&&(o=Wn),o&&o.active&&o.effects.push(i),(this.vm=n)&&a&&(n._watcher=this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Ge,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new dn,this.newDepIds=new dn,this.expression="",c(e)?this.getter=e:(this.getter=function(n){if(!H.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=D)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;_n(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Ae(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&qe(n),En(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():ut(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||d(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'.concat(this.expression,'"');Ce(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&w(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function He(n,e){$e.$on(n,e)}function Ze(n,e){$e.$off(n,e)}function Qe(n,e){var t=$e;return function r(){var a=e.apply(null,arguments);null!==a&&t.$off(n,r)}}function Ke(n,e,t){$e=n,Hn(e,t||{},He,Ze,Qe,n),$e=void 0}var Xe=null;function Je(n){var e=Xe;return Xe=n,function(){Xe=e}}function Ye(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function nt(n,e){if(e){if(n._directInactive=!1,Ye(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)nt(n.$children[t]);et(n,"activated")}}function et(n,e,t,r){void 0===r&&(r=!0),_n();var a=mn,i=Wn;r&&un(n);var o=n.$options[e],s="".concat(e," hook");if(o)for(var l=0,c=o.length;l<c;l++)Ce(o[l],n,t||null,n,s);n._hasHookEvent&&n.$emit("hook:"+e),r&&(un(a),i&&i.on()),En()}var tt=[],rt=[],at={},it=!1,ot=!1,st=0;var lt=0,ct=Date.now;if(Q&&!X){var dt=window.performance;dt&&"function"==typeof dt.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return dt.now()})}var pt=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function mt(){var n,e;for(lt=ct(),ot=!0,tt.sort(pt),st=0;st<tt.length;st++)(n=tt[st]).before&&n.before(),e=n.id,at[e]=null,n.run();var t=rt.slice(),r=tt.slice();st=tt.length=rt.length=0,at={},it=ot=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,nt(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r&&r._watcher===t&&r._isMounted&&!r._isDestroyed&&et(r,"updated")}}(r),function(){for(var n=0;n<yn.length;n++){var e=yn[n];e.subs=e.subs.filter((function(n){return n})),e._pending=!1}yn.length=0}(),ln&&q.devtools&&ln.emit("flush")}function ut(n){var e=n.id;if(null==at[e]&&(n!==xn.target||!n.noRecurse)){if(at[e]=!0,ot){for(var t=tt.length-1;t>st&&tt[t].id>n.id;)t--;tt.splice(t+1,0,n)}else tt.push(n);it||(it=!0,Ne(mt))}}function ht(n,e){if(n){for(var t=Object.create(null),r=pn?Reflect.ownKeys(n):Object.keys(n),a=0;a<r.length;a++){var i=r[a];if("__ob__"!==i){var o=n[i].from;if(o in e._provided)t[i]=e._provided[o];else if("default"in n[i]){var s=n[i].default;t[i]=c(s)?s.call(e):s}else 0}}return t}}function gt(n,e,t,i,o){var l,c=this,d=o.options;E(i,"_uid")?(l=Object.create(i))._original=i:(l=i,i=i._original);var p=s(d._compiled),m=!p;this.data=n,this.props=e,this.children=t,this.parent=i,this.listeners=n.on||r,this.injections=ht(d.inject,i),this.slots=function(){return c.$slots||fe(i,n.scopedSlots,c.$slots=ue(t,i)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return fe(i,n.scopedSlots,this.slots())}}),p&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=fe(i,n.scopedSlots,this.$slots)),d._scopeId?this._c=function(n,e,t,r){var o=Te(l,n,e,t,r,m);return o&&!a(o)&&(o.fnScopeId=d._scopeId,o.fnContext=i),o}:this._c=function(n,e,t,r){return Te(l,n,e,t,r,m)}}function ft(n,e,t,r,a){var i=bn(n);return i.fnContext=t,i.fnOptions=r,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function bt(n,e){for(var t in e)n[T(t)]=e[t]}function vt(n){return n.name||n.__name||n._componentTag}me(gt.prototype);var yt={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;yt.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;o(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Xe)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,a,i){var o=a.data.scopedSlots,s=n.$scopedSlots,l=!!(o&&!o.$stable||s!==r&&!s.$stable||o&&n.$scopedSlots.$key!==o.$key||!o&&n.$scopedSlots.$key),c=!!(i||n.$options._renderChildren||l),d=n.$vnode;n.$options._parentVnode=a,n.$vnode=a,n._vnode&&(n._vnode.parent=a),n.$options._renderChildren=i;var p=a.data.attrs||r;n._attrsProxy&&xe(n._attrsProxy,p,d.data&&d.data.attrs||r,n,"$attrs")&&(c=!0),n.$attrs=p,t=t||r;var m=n.$options._parentListeners;if(n._listenersProxy&&xe(n._listenersProxy,t,m||r,n,"$listeners"),n.$listeners=n.$options._parentListeners=t,Ke(n,t,m),e&&n.$options.props){Pn(!1);for(var u=n._props,h=n.$options._propKeys||[],g=0;g<h.length;g++){var f=h[g],b=n.$options.props;u[f]=jt(f,b,e,n)}Pn(!0),n.$options.propsData=e}c&&(n.$slots=ue(i,a.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,et(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,rt.push(e)):nt(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(!(t&&(e._directInactive=!0,Ye(e))||e._inactive)){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);et(e,"deactivated")}}(e,!0):e.$destroy())}},xt=Object.keys(yt);function wt(n,e,t,l,c){if(!i(n)){var p=t.$options._base;if(d(n)&&(n=p.extend(n)),"function"==typeof n){var m;if(i(n.cid)&&void 0===(n=function(n,e){if(s(n.error)&&o(n.errorComp))return n.errorComp;if(o(n.resolved))return n.resolved;var t=Ee;if(t&&o(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t),s(n.loading)&&o(n.loadingComp))return n.loadingComp;if(t&&!o(n.owners)){var r=n.owners=[t],a=!0,l=null,c=null;t.$on("hook:destroyed",(function(){return w(r,t)}));var p=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},m=R((function(t){n.resolved=ke(t,e),a?r.length=0:p(!0)})),u=R((function(e){o(n.errorComp)&&(n.error=!0,p(!0))})),h=n(m,u);return d(h)&&(g(h)?i(n.resolved)&&h.then(m,u):g(h.component)&&(h.component.then(m,u),o(h.error)&&(n.errorComp=ke(h.error,e)),o(h.loading)&&(n.loadingComp=ke(h.loading,e),0===h.delay?n.loading=!0:l=setTimeout((function(){l=null,i(n.resolved)&&i(n.error)&&(n.loading=!0,p(!1))}),h.delay||200)),o(h.timeout)&&(c=setTimeout((function(){c=null,i(n.resolved)&&u(null)}),h.timeout)))),a=!1,n.loading?n.loadingComp:n.resolved}}(m=n,p)))return function(n,e,t,r,a){var i=gn();return i.asyncFactory=n,i.asyncMeta={data:e,context:t,children:r,tag:a},i}(m,e,t,l,c);e=e||{},Vt(n),o(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var i=e.on||(e.on={}),s=i[r],l=e.model.callback;o(s)?(a(s)?-1===s.indexOf(l):s!==l)&&(i[r]=[l].concat(s)):i[r]=l}(n.options,e);var u=function(n,e,t){var r=e.options.props;if(!i(r)){var a={},s=n.attrs,l=n.props;if(o(s)||o(l))for(var c in r){var d=P(c);Qn(a,l,c,d,!0)||Qn(a,s,c,d,!1)}return a}}(e,n);if(s(n.options.functional))return function(n,e,t,i,s){var l=n.options,c={},d=l.props;if(o(d))for(var p in d)c[p]=jt(p,d,e||r);else o(t.attrs)&&bt(c,t.attrs),o(t.props)&&bt(c,t.props);var m=new gt(t,c,s,i,n),u=l.render.call(null,m._c,m);if(u instanceof hn)return ft(u,t,m.parent,l,m);if(a(u)){for(var h=Kn(u)||[],g=new Array(h.length),f=0;f<h.length;f++)g[f]=ft(h[f],t,m.parent,l,m);return g}}(n,u,e,t,l);var h=e.on;if(e.on=e.nativeOn,s(n.options.abstract)){var f=e.slot;e={},f&&(e.slot=f)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<xt.length;t++){var r=xt[t],a=e[r],i=yt[r];a===i||a&&a._merged||(e[r]=a?_t(i,a):i)}}(e);var b=vt(n.options)||c;return new hn("vue-component-".concat(n.cid).concat(b?"-".concat(b):""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:u,listeners:h,tag:c,children:l},m)}}}function _t(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}var Et=D,kt=q.optionMergeStrategies;function St(n,e,t){if(void 0===t&&(t=!0),!e)return n;for(var r,a,i,o=pn?Reflect.ownKeys(e):Object.keys(e),s=0;s<o.length;s++)"__ob__"!==(r=o[s])&&(a=n[r],i=e[r],t&&E(n,r)?a!==i&&m(a)&&m(i)&&St(a,i):Dn(n,r,i));return n}function Tt(n,e,t){return t?function(){var r=c(e)?e.call(t,t):e,a=c(n)?n.call(t,t):n;return r?St(r,a):a}:e?n?function(){return St(c(e)?e.call(this,this):e,c(n)?n.call(this,this):n)}:e:n}function At(n,e){var t=e?n?n.concat(e):a(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Ct(n,e,t,r){var a=Object.create(n||null);return e?j(a,e):a}kt.data=function(n,e,t){return t?Tt(n,e,t):e&&"function"!=typeof e?n:Tt(n,e)},W.forEach((function(n){kt[n]=At})),U.forEach((function(n){kt[n+"s"]=Ct})),kt.watch=function(n,e,t,r){if(n===rn&&(n=void 0),e===rn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var i={};for(var o in j(i,n),e){var s=i[o],l=e[o];s&&!a(s)&&(s=[s]),i[o]=s?s.concat(l):a(l)?l:[l]}return i},kt.props=kt.methods=kt.inject=kt.computed=function(n,e,t,r){if(!n)return e;var a=Object.create(null);return j(a,n),e&&j(a,e),a},kt.provide=function(n,e){return n?function(){var t=Object.create(null);return St(t,c(n)?n.call(this):n),e&&St(t,c(e)?e.call(this):e,!1),t}:e};var Pt=function(n,e){return void 0===e?n:e};function It(n,e,t){if(c(e)&&(e=e.options),function(n,e){var t=n.props;if(t){var r,i,o={};if(a(t))for(r=t.length;r--;)"string"==typeof(i=t[r])&&(o[T(i)]={type:null});else if(m(t))for(var s in t)i=t[s],o[T(s)]=m(i)?i:{type:i};else 0;n.props=o}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(a(t))for(var i=0;i<t.length;i++)r[t[i]]={from:t[i]};else if(m(t))for(var o in t){var s=t[o];r[o]=m(s)?j({from:o},s):{from:s}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];c(r)&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=It(n,e.extends,t)),e.mixins))for(var r=0,i=e.mixins.length;r<i;r++)n=It(n,e.mixins[r],t);var o,s={};for(o in n)l(o);for(o in e)E(n,o)||l(o);function l(r){var a=kt[r]||Pt;s[r]=a(n[r],e[r],t,r)}return s}function Bt(n,e,t,r){if("string"==typeof t){var a=n[e];if(E(a,t))return a[t];var i=T(t);if(E(a,i))return a[i];var o=A(i);return E(a,o)?a[o]:a[t]||a[i]||a[o]}}function jt(n,e,t,r){var a=e[n],i=!E(t,n),o=t[n],s=Lt(Boolean,a.type);if(s>-1)if(i&&!E(a,"default"))o=!1;else if(""===o||o===P(n)){var l=Lt(String,a.type);(l<0||s<l)&&(o=!0)}if(void 0===o){o=function(n,e,t){if(!E(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return c(r)&&"Function"!==Dt(e.type)?r.call(n):r}(r,a,n);var d=Cn;Pn(!0),jn(o),Pn(d)}return o}var Ot=/^\s*function (\w+)/;function Dt(n){var e=n&&n.toString().match(Ot);return e?e[1]:""}function zt(n,e){return Dt(n)===Dt(e)}function Lt(n,e){if(!a(e))return zt(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(zt(e[t],n))return t;return-1}var Ft={enumerable:!0,configurable:!0,get:D,set:D};function Mt(n,e,t){Ft.get=function(){return this[e][t]},Ft.set=function(n){this[e][t]=n},Object.defineProperty(n,t,Ft)}function Rt(n){var e=n.$options;if(e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props=Fn({}),a=n.$options._propKeys=[];n.$parent&&Pn(!1);var i=function(i){a.push(i);var o=jt(i,e,t,n);On(r,i,o,void 0,!0),i in n||Mt(n,"_props",i)};for(var o in e)i(o);Pn(!0)}(n,e.props),function(n){var e=n.$options,t=e.setup;if(t){var r=n._setupContext=ye(n);un(n),_n();var a=Ce(t,null,[n._props||Fn({}),r],n,"setup");if(En(),un(),c(a))e.render=a;else if(d(a))if(n._setupState=a,a.__sfc){var i=n._setupProxy={};for(var o in a)"__sfc"!==o&&Un(i,a,o)}else for(var o in a)G(o)||Un(n,a,o);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?D:I(e[t],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;m(e=n._data=c(e)?function(n,e){_n();try{return n.call(e,e)}catch(n){return Ae(n,e,"data()"),{}}finally{En()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,a=(n.$options.methods,t.length);for(;a--;){var i=t[a];0,r&&E(r,i)||G(i)||Mt(n,"_data",i)}var o=jn(e);o&&o.vmCount++}(n);else{var t=jn(n._data={});t&&t.vmCount++}e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=sn();for(var a in e){var i=e[a],o=c(i)?i:i.get;0,r||(t[a]=new Ve(n,o||D,D,Nt)),a in n||Ut(n,a,i)}}(n,e.computed),e.watch&&e.watch!==rn&&function(n,e){for(var t in e){var r=e[t];if(a(r))for(var i=0;i<r.length;i++)$t(n,t,r[i]);else $t(n,t,r)}}(n,e.watch)}var Nt={lazy:!0};function Ut(n,e,t){var r=!sn();c(t)?(Ft.get=r?Wt(e):qt(t),Ft.set=D):(Ft.get=t.get?r&&!1!==t.cache?Wt(e):qt(t.get):D,Ft.set=t.set||D),Object.defineProperty(n,e,Ft)}function Wt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),xn.target&&e.depend(),e.value}}function qt(n){return function(){return n.call(this,this)}}function $t(n,e,t,r){return m(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var Gt=0;function Vt(n){var e=n.options;if(n.super){var t=Vt(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var a in t)t[a]!==r[a]&&(e||(e={}),e[a]=t[a]);return e}(n);r&&j(n.extendOptions,r),(e=n.options=It(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Ht(n){this._init(n)}function Zt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,a=n._Ctor||(n._Ctor={});if(a[r])return a[r];var i=vt(n)||vt(t.options);var o=function(n){this._init(n)};return(o.prototype=Object.create(t.prototype)).constructor=o,o.cid=e++,o.options=It(t.options,n),o.super=t,o.options.props&&function(n){var e=n.options.props;for(var t in e)Mt(n.prototype,"_props",t)}(o),o.options.computed&&function(n){var e=n.options.computed;for(var t in e)Ut(n.prototype,t,e[t])}(o),o.extend=t.extend,o.mixin=t.mixin,o.use=t.use,U.forEach((function(n){o[n]=t[n]})),i&&(o.options.components[i]=o),o.superOptions=t.options,o.extendOptions=n,o.sealedOptions=j({},o.options),a[r]=o,o}}function Qt(n){return n&&(vt(n.Ctor.options)||n.tag)}function Kt(n,e){return a(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!u(n)&&n.test(e)}function Xt(n,e){var t=n.cache,r=n.keys,a=n._vnode,i=n.$vnode;for(var o in t){var s=t[o];if(s){var l=s.name;l&&!e(l)&&Jt(t,o,r,a)}}i.componentOptions.children=void 0}function Jt(n,e,t,r){var a=n[e];!a||r&&a.tag===r.tag||a.componentInstance.$destroy(),n[e]=null,w(t,e)}Ht.prototype._init=function(n){var e=this;e._uid=Gt++,e._isVue=!0,e.__v_skip=!0,e._scope=new qn(!0),e._scope.parent=void 0,e._scope._vm=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var a=r.componentOptions;t.propsData=a.propsData,t._parentListeners=a.listeners,t._renderChildren=a.children,t._componentTag=a.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=It(Vt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._provided=t?t._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Ke(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,a=t&&t.context;n.$slots=ue(e._renderChildren,a),n.$scopedSlots=t?fe(n.$parent,t.data.scopedSlots,n.$slots):r,n._c=function(e,t,r,a){return Te(n,e,t,r,a,!1)},n.$createElement=function(e,t,r,a){return Te(n,e,t,r,a,!0)};var i=t&&t.data;On(n,"$attrs",i&&i.attrs||r,null,!0),On(n,"$listeners",e._parentListeners||r,null,!0)}(e),et(e,"beforeCreate",void 0,!1),function(n){var e=ht(n.$options.inject,n);e&&(Pn(!1),Object.keys(e).forEach((function(t){On(n,t,e[t])})),Pn(!0))}(e),Rt(e),function(n){var e=n.$options.provide;if(e){var t=c(e)?e.call(n):e;if(!d(t))return;for(var r=$n(n),a=pn?Reflect.ownKeys(t):Object.keys(t),i=0;i<a.length;i++){var o=a[i];Object.defineProperty(r,o,Object.getOwnPropertyDescriptor(t,o))}}}(e),et(e,"created"),e.$options.el&&e.$mount(e.$options.el)},function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Dn,n.prototype.$delete=zn,n.prototype.$watch=function(n,e,t){if(m(e))return $t(this,n,e,t);(t=t||{}).user=!0;var r=new Ve(this,n,e,t);if(t.immediate){var a='callback for immediate watcher "'.concat(r.expression,'"');_n(),Ce(e,this,[r.value],this,a),En()}return function(){r.teardown()}}}(Ht),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(a(n))for(var i=0,o=n.length;i<o;i++)r.$on(n[i],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(a(n)){for(var r=0,i=n.length;r<i;r++)t.$off(n[r],e);return t}var o,s=t._events[n];if(!s)return t;if(!e)return t._events[n]=null,t;for(var l=s.length;l--;)if((o=s[l])===e||o.fn===e){s.splice(l,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?B(t):t;for(var r=B(arguments,1),a='event handler for "'.concat(n,'"'),i=0,o=t.length;i<o;i++)Ce(t[i],e,r,e,a)}return e}}(Ht),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,a=t._vnode,i=Je(t);t._vnode=n,t.$el=a?t.__patch__(a,n):t.__patch__(t.$el,n,e,!1),i(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var o=t;o&&o.$vnode&&o.$parent&&o.$vnode===o.$parent._vnode;)o.$parent.$el=o.$el,o=o.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){et(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||w(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),et(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Ht),function(n){me(n.prototype),n.prototype.$nextTick=function(n){return Ne(n,this)},n.prototype._render=function(){var n=this,e=n.$options,t=e.render,r=e._parentVnode;r&&n._isMounted&&(n.$scopedSlots=fe(n.$parent,r.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&_e(n._slotsProxy,n.$scopedSlots)),n.$vnode=r;var i,o=mn,s=Ee;try{un(n),Ee=n,i=t.call(n._renderProxy,n.$createElement)}catch(e){Ae(e,n,"render"),i=n._vnode}finally{Ee=s,un(o)}return a(i)&&1===i.length&&(i=i[0]),i instanceof hn||(i=gn()),i.parent=r,i}}(Ht);var Yt=[String,RegExp,Array],nr={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Yt,exclude:Yt,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var a=t.tag,i=t.componentInstance,o=t.componentOptions;n[r]={name:Qt(o),tag:a,componentInstance:i},e.push(r),this.max&&e.length>parseInt(this.max)&&Jt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Jt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Xt(n,(function(n){return Kt(e,n)}))})),this.$watch("exclude",(function(e){Xt(n,(function(n){return!Kt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=Se(n),t=e&&e.componentOptions;if(t){var r=Qt(t),a=this.include,i=this.exclude;if(a&&(!r||!Kt(a,r))||i&&r&&Kt(i,r))return e;var o=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):e.key;o[l]?(e.componentInstance=o[l].componentInstance,w(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return q}};Object.defineProperty(n,"config",e),n.util={warn:Et,extend:j,mergeOptions:It,defineReactive:On},n.set=Dn,n.delete=zn,n.nextTick=Ne,n.observable=function(n){return jn(n),n},n.options=Object.create(null),U.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,j(n.options.components,nr),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=B(arguments,1);return t.unshift(this),c(n.install)?n.install.apply(n,t):c(n)&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=It(this.options,n),this}}(n),Zt(n),function(n){U.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&m(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&c(t)&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Ht),Object.defineProperty(Ht.prototype,"$isServer",{get:sn}),Object.defineProperty(Ht.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Ht,"FunctionalRenderContext",{value:gt}),Ht.version="2.7.16";var er=y("style,class"),tr=y("input,textarea,option,select,progress"),rr=y("contenteditable,draggable,spellcheck"),ar=y("events,caret,typing,plaintext-only"),ir=y("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),or="http://www.w3.org/1999/xlink",sr=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},lr=function(n){return sr(n)?n.slice(6,n.length):""},cr=function(n){return null==n||!1===n};function dr(n){for(var e=n.data,t=n,r=n;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=pr(r.data,e));for(;o(t=t.parent);)t&&t.data&&(e=pr(e,t.data));return function(n,e){if(o(n)||o(e))return mr(n,ur(e));return""}(e.staticClass,e.class)}function pr(n,e){return{staticClass:mr(n.staticClass,e.staticClass),class:o(n.class)?[n.class,e.class]:e.class}}function mr(n,e){return n?e?n+" "+e:n:e||""}function ur(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,a=n.length;r<a;r++)o(e=ur(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):d(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var hr={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},gr=y("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),fr=y("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),br=function(n){return gr(n)||fr(n)};var vr=Object.create(null);var yr=y("text,number,password,search,email,tel,url");var xr=Object.freeze({__proto__:null,createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(hr[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),wr={create:function(n,e){_r(e)},update:function(n,e){n.data.ref!==e.data.ref&&(_r(n,!0),_r(e))},destroy:function(n){_r(n,!0)}};function _r(n,e){var t=n.data.ref;if(o(t)){var r=n.context,i=n.componentInstance||n.elm,s=e?null:i,l=e?void 0:i;if(c(t))Ce(t,r,[s],r,"template ref function");else{var d=n.data.refInFor,p="string"==typeof t||"number"==typeof t,m=Nn(t),u=r.$refs;if(p||m)if(d){var h=p?u[t]:t.value;e?a(h)&&w(h,i):a(h)?h.includes(i)||h.push(i):p?(u[t]=[i],Er(r,t,u[t])):t.value=[i]}else if(p){if(e&&u[t]!==i)return;u[t]=l,Er(r,t,s)}else if(m){if(e&&t.value!==i)return;t.value=s}else 0}}}function Er(n,e,t){var r=n._setupState;r&&E(r,e)&&(Nn(r[e])?r[e].value=t:r[e]=t)}var kr=new hn("",{},[]),Sr=["create","activate","update","remove","destroy"];function Tr(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&o(n.data)===o(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=o(t=n.data)&&o(t=t.attrs)&&t.type,a=o(t=e.data)&&o(t=t.attrs)&&t.type;return r===a||yr(r)&&yr(a)}(n,e)||s(n.isAsyncPlaceholder)&&i(e.asyncFactory.error))}function Ar(n,e,t){var r,a,i={};for(r=e;r<=t;++r)o(a=n[r].key)&&(i[a]=r);return i}var Cr={create:Pr,update:Pr,destroy:function(n){Pr(n,kr)}};function Pr(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,a,i=n===kr,o=e===kr,s=Br(n.data.directives,n.context),l=Br(e.data.directives,e.context),c=[],d=[];for(t in l)r=s[t],a=l[t],r?(a.oldValue=r.value,a.oldArg=r.arg,Or(a,"update",e,n),a.def&&a.def.componentUpdated&&d.push(a)):(Or(a,"bind",e,n),a.def&&a.def.inserted&&c.push(a));if(c.length){var p=function(){for(var t=0;t<c.length;t++)Or(c[t],"inserted",e,n)};i?Zn(e,"insert",p):p()}d.length&&Zn(e,"postpatch",(function(){for(var t=0;t<d.length;t++)Or(d[t],"componentUpdated",e,n)}));if(!i)for(t in s)l[t]||Or(s[t],"unbind",n,n,o)}(n,e)}var Ir=Object.create(null);function Br(n,e){var t,r,a=Object.create(null);if(!n)return a;for(t=0;t<n.length;t++){if((r=n[t]).modifiers||(r.modifiers=Ir),a[jr(r)]=r,e._setupState&&e._setupState.__sfc){var i=r.def||Bt(e,"_setupState","v-"+r.name);r.def="function"==typeof i?{bind:i,update:i}:i}r.def=r.def||Bt(e.$options,"directives",r.name)}return a}function jr(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function Or(n,e,t,r,a){var i=n.def&&n.def[e];if(i)try{i(t.elm,n,t,r,a)}catch(r){Ae(r,t.context,"directive ".concat(n.name," ").concat(e," hook"))}}var Dr=[wr,Cr];function zr(n,e){var t=e.componentOptions;if(!(o(t)&&!1===t.Ctor.options.inheritAttrs||i(n.data.attrs)&&i(e.data.attrs))){var r,a,l=e.elm,c=n.data.attrs||{},d=e.data.attrs||{};for(r in(o(d.__ob__)||s(d._v_attr_proxy))&&(d=e.data.attrs=j({},d)),d)a=d[r],c[r]!==a&&Lr(l,r,a,e.data.pre);for(r in(X||Y)&&d.value!==c.value&&Lr(l,"value",d.value),c)i(d[r])&&(sr(r)?l.removeAttributeNS(or,lr(r)):rr(r)||l.removeAttribute(r))}}function Lr(n,e,t,r){r||n.tagName.indexOf("-")>-1?Fr(n,e,t):ir(e)?cr(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):rr(e)?n.setAttribute(e,function(n,e){return cr(e)||"false"===e?"false":"contenteditable"===n&&ar(e)?e:"true"}(e,t)):sr(e)?cr(t)?n.removeAttributeNS(or,lr(e)):n.setAttributeNS(or,e,t):Fr(n,e,t)}function Fr(n,e,t){if(cr(t))n.removeAttribute(e);else{if(X&&!J&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var Mr={create:zr,update:zr};function Rr(n,e){var t=e.elm,r=e.data,a=n.data;if(!(i(r.staticClass)&&i(r.class)&&(i(a)||i(a.staticClass)&&i(a.class)))){var s=dr(e),l=t._transitionClasses;o(l)&&(s=mr(s,ur(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var Nr,Ur={create:Rr,update:Rr};function Wr(n,e,t){var r=Nr;return function a(){var i=e.apply(null,arguments);null!==i&&Gr(n,a,t,r)}}var qr=je&&!(tn&&Number(tn[1])<=53);function $r(n,e,t,r){if(qr){var a=lt,i=e;e=i._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=a||n.timeStamp<=0||n.target.ownerDocument!==document)return i.apply(this,arguments)}}Nr.addEventListener(n,e,an?{capture:t,passive:r}:t)}function Gr(n,e,t,r){(r||Nr).removeEventListener(n,e._wrapper||e,t)}function Vr(n,e){if(!i(n.data.on)||!i(e.data.on)){var t=e.data.on||{},r=n.data.on||{};Nr=e.elm||n.elm,function(n){if(o(n.__r)){var e=X?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}o(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),Hn(t,r,$r,Gr,Wr,e.context),Nr=void 0}}var Hr,Zr={create:Vr,update:Vr,destroy:function(n){return Vr(n,kr)}};function Qr(n,e){if(!i(n.data.domProps)||!i(e.data.domProps)){var t,r,a=e.elm,l=n.data.domProps||{},c=e.data.domProps||{};for(t in(o(c.__ob__)||s(c._v_attr_proxy))&&(c=e.data.domProps=j({},c)),l)t in c||(a[t]="");for(t in c){if(r=c[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===l[t])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===t&&"PROGRESS"!==a.tagName){a._value=r;var d=i(r)?"":String(r);Kr(a,d)&&(a.value=d)}else if("innerHTML"===t&&fr(a.tagName)&&i(a.innerHTML)){(Hr=Hr||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var p=Hr.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;p.firstChild;)a.appendChild(p.firstChild)}else if(r!==l[t])try{a[t]=r}catch(n){}}}}function Kr(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(o(r)){if(r.number)return v(t)!==v(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Xr={create:Qr,update:Qr},Jr=k((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function Yr(n){var e=na(n.style);return n.staticStyle?j(n.staticStyle,e):e}function na(n){return Array.isArray(n)?O(n):"string"==typeof n?Jr(n):n}var ea,ta=/^--/,ra=/\s*!important$/,aa=function(n,e,t){if(ta.test(e))n.style.setProperty(e,t);else if(ra.test(t))n.style.setProperty(P(e),t.replace(ra,""),"important");else{var r=oa(e);if(Array.isArray(t))for(var a=0,i=t.length;a<i;a++)n.style[r]=t[a];else n.style[r]=t}},ia=["Webkit","Moz","ms"],oa=k((function(n){if(ea=ea||document.createElement("div").style,"filter"!==(n=T(n))&&n in ea)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<ia.length;t++){var r=ia[t]+e;if(r in ea)return r}}));function sa(n,e){var t=e.data,r=n.data;if(!(i(t.staticStyle)&&i(t.style)&&i(r.staticStyle)&&i(r.style))){var a,s,l=e.elm,c=r.staticStyle,d=r.normalizedStyle||r.style||{},p=c||d,m=na(e.data.style)||{};e.data.normalizedStyle=o(m.__ob__)?j({},m):m;var u=function(n,e){var t,r={};if(e)for(var a=n;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(t=Yr(a.data))&&j(r,t);(t=Yr(n.data))&&j(r,t);for(var i=n;i=i.parent;)i.data&&(t=Yr(i.data))&&j(r,t);return r}(e,!0);for(s in p)i(u[s])&&aa(l,s,"");for(s in u)a=u[s],aa(l,s,null==a?"":a)}}var la={create:sa,update:sa},ca=/\s+/;function da(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(ca).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" ".concat(n.getAttribute("class")||""," ");t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function pa(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(ca).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" ".concat(n.getAttribute("class")||""," "),r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function ma(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&j(e,ua(n.name||"v")),j(e,n),e}return"string"==typeof n?ua(n):void 0}}var ua=k((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),ha=Q&&!J,ga="transition",fa="transitionend",ba="animation",va="animationend";ha&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(ga="WebkitTransition",fa="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(ba="WebkitAnimation",va="webkitAnimationEnd"));var ya=Q?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function xa(n){ya((function(){ya(n)}))}function wa(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),da(n,e))}function _a(n,e){n._transitionClasses&&w(n._transitionClasses,e),pa(n,e)}function Ea(n,e,t){var r=Sa(n,e),a=r.type,i=r.timeout,o=r.propCount;if(!a)return t();var s="transition"===a?fa:va,l=0,c=function(){n.removeEventListener(s,d),t()},d=function(e){e.target===n&&++l>=o&&c()};setTimeout((function(){l<o&&c()}),i+1),n.addEventListener(s,d)}var ka=/\b(transform|all)(,|$)/;function Sa(n,e){var t,r=window.getComputedStyle(n),a=(r[ga+"Delay"]||"").split(", "),i=(r[ga+"Duration"]||"").split(", "),o=Ta(a,i),s=(r[ba+"Delay"]||"").split(", "),l=(r[ba+"Duration"]||"").split(", "),c=Ta(s,l),d=0,p=0;return"transition"===e?o>0&&(t="transition",d=o,p=i.length):"animation"===e?c>0&&(t="animation",d=c,p=l.length):p=(t=(d=Math.max(o,c))>0?o>c?"transition":"animation":null)?"transition"===t?i.length:l.length:0,{type:t,timeout:d,propCount:p,hasTransform:"transition"===t&&ka.test(r[ga+"Property"])}}function Ta(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return Aa(e)+Aa(n[t])})))}function Aa(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function Ca(n,e){var t=n.elm;o(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=ma(n.data.transition);if(!i(r)&&!o(t._enterCb)&&1===t.nodeType){for(var a=r.css,s=r.type,l=r.enterClass,p=r.enterToClass,m=r.enterActiveClass,u=r.appearClass,h=r.appearToClass,g=r.appearActiveClass,f=r.beforeEnter,b=r.enter,y=r.afterEnter,x=r.enterCancelled,w=r.beforeAppear,_=r.appear,E=r.afterAppear,k=r.appearCancelled,S=r.duration,T=Xe,A=Xe.$vnode;A&&A.parent;)T=A.context,A=A.parent;var C=!T._isMounted||!n.isRootInsert;if(!C||_||""===_){var P=C&&u?u:l,I=C&&g?g:m,B=C&&h?h:p,j=C&&w||f,O=C&&c(_)?_:b,D=C&&E||y,z=C&&k||x,L=v(d(S)?S.enter:S);0;var F=!1!==a&&!J,M=Ba(O),N=t._enterCb=R((function(){F&&(_a(t,B),_a(t,I)),N.cancelled?(F&&_a(t,P),z&&z(t)):D&&D(t),t._enterCb=null}));n.data.show||Zn(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),O&&O(t,N)})),j&&j(t),F&&(wa(t,P),wa(t,I),xa((function(){_a(t,P),N.cancelled||(wa(t,B),M||(Ia(L)?setTimeout(N,L):Ea(t,s,N)))}))),n.data.show&&(e&&e(),O&&O(t,N)),F||M||N()}}}function Pa(n,e){var t=n.elm;o(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=ma(n.data.transition);if(i(r)||1!==t.nodeType)return e();if(!o(t._leaveCb)){var a=r.css,s=r.type,l=r.leaveClass,c=r.leaveToClass,p=r.leaveActiveClass,m=r.beforeLeave,u=r.leave,h=r.afterLeave,g=r.leaveCancelled,f=r.delayLeave,b=r.duration,y=!1!==a&&!J,x=Ba(u),w=v(d(b)?b.leave:b);0;var _=t._leaveCb=R((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),y&&(_a(t,c),_a(t,p)),_.cancelled?(y&&_a(t,l),g&&g(t)):(e(),h&&h(t)),t._leaveCb=null}));f?f(E):E()}function E(){_.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),m&&m(t),y&&(wa(t,l),wa(t,p),xa((function(){_a(t,l),_.cancelled||(wa(t,c),x||(Ia(w)?setTimeout(_,w):Ea(t,s,_)))}))),u&&u(t,_),y||x||_())}}function Ia(n){return"number"==typeof n&&!isNaN(n)}function Ba(n){if(i(n))return!1;var e=n.fns;return o(e)?Ba(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function ja(n,e){!0!==e.data.show&&Ca(e)}var Oa=function(n){var e,t,r={},c=n.modules,d=n.nodeOps;for(e=0;e<Sr.length;++e)for(r[Sr[e]]=[],t=0;t<c.length;++t)o(c[t][Sr[e]])&&r[Sr[e]].push(c[t][Sr[e]]);function p(n){var e=d.parentNode(n);o(e)&&d.removeChild(e,n)}function m(n,e,t,a,i,l,c){if(o(n.elm)&&o(l)&&(n=l[c]=bn(n)),n.isRootInsert=!i,!function(n,e,t,a){var i=n.data;if(o(i)){var l=o(n.componentInstance)&&i.keepAlive;if(o(i=i.hook)&&o(i=i.init)&&i(n,!1),o(n.componentInstance))return u(n,e),h(t,n.elm,a),s(l)&&function(n,e,t,a){var i,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,o(i=s.data)&&o(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](kr,s);e.push(s);break}h(t,n.elm,a)}(n,e,t,a),!0}}(n,e,t,a)){var p=n.data,m=n.children,f=n.tag;o(f)?(n.elm=n.ns?d.createElementNS(n.ns,f):d.createElement(f,n),v(n),g(n,m,e),o(p)&&b(n,e),h(t,n.elm,a)):s(n.isComment)?(n.elm=d.createComment(n.text),h(t,n.elm,a)):(n.elm=d.createTextNode(n.text),h(t,n.elm,a))}}function u(n,e){o(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,f(n)?(b(n,e),v(n)):(_r(n),e.push(n))}function h(n,e,t){o(n)&&(o(t)?d.parentNode(t)===n&&d.insertBefore(n,e,t):d.appendChild(n,e))}function g(n,e,t){if(a(e)){0;for(var r=0;r<e.length;++r)m(e[r],t,n.elm,null,!0,e,r)}else l(n.text)&&d.appendChild(n.elm,d.createTextNode(String(n.text)))}function f(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return o(n.tag)}function b(n,t){for(var a=0;a<r.create.length;++a)r.create[a](kr,n);o(e=n.data.hook)&&(o(e.create)&&e.create(kr,n),o(e.insert)&&t.push(n))}function v(n){var e;if(o(e=n.fnScopeId))d.setStyleScope(n.elm,e);else for(var t=n;t;)o(e=t.context)&&o(e=e.$options._scopeId)&&d.setStyleScope(n.elm,e),t=t.parent;o(e=Xe)&&e!==n.context&&e!==n.fnContext&&o(e=e.$options._scopeId)&&d.setStyleScope(n.elm,e)}function x(n,e,t,r,a,i){for(;r<=a;++r)m(t[r],i,n,e,!1,t,r)}function w(n){var e,t,a=n.data;if(o(a))for(o(e=a.hook)&&o(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(o(e=n.children))for(t=0;t<n.children.length;++t)w(n.children[t])}function _(n,e,t){for(;e<=t;++e){var r=n[e];o(r)&&(o(r.tag)?(E(r),w(r)):p(r.elm))}}function E(n,e){if(o(e)||o(n.data)){var t,a=r.remove.length+1;for(o(e)?e.listeners+=a:e=function(n,e){function t(){0==--t.listeners&&p(n)}return t.listeners=e,t}(n.elm,a),o(t=n.componentInstance)&&o(t=t._vnode)&&o(t.data)&&E(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);o(t=n.data.hook)&&o(t=t.remove)?t(n,e):e()}else p(n.elm)}function k(n,e,t,r){for(var a=t;a<r;a++){var i=e[a];if(o(i)&&Tr(n,i))return a}}function S(n,e,t,a,l,c){if(n!==e){o(e.elm)&&o(a)&&(e=a[l]=bn(e));var p=e.elm=n.elm;if(s(n.isAsyncPlaceholder))o(e.asyncFactory.resolved)?C(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(n.isStatic)&&e.key===n.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=n.componentInstance;else{var u,h=e.data;o(h)&&o(u=h.hook)&&o(u=u.prepatch)&&u(n,e);var g=n.children,b=e.children;if(o(h)&&f(e)){for(u=0;u<r.update.length;++u)r.update[u](n,e);o(u=h.hook)&&o(u=u.update)&&u(n,e)}i(e.text)?o(g)&&o(b)?g!==b&&function(n,e,t,r,a){var s,l,c,p=0,u=0,h=e.length-1,g=e[0],f=e[h],b=t.length-1,v=t[0],y=t[b],w=!a;for(0;p<=h&&u<=b;)i(g)?g=e[++p]:i(f)?f=e[--h]:Tr(g,v)?(S(g,v,r,t,u),g=e[++p],v=t[++u]):Tr(f,y)?(S(f,y,r,t,b),f=e[--h],y=t[--b]):Tr(g,y)?(S(g,y,r,t,b),w&&d.insertBefore(n,g.elm,d.nextSibling(f.elm)),g=e[++p],y=t[--b]):Tr(f,v)?(S(f,v,r,t,u),w&&d.insertBefore(n,f.elm,g.elm),f=e[--h],v=t[++u]):(i(s)&&(s=Ar(e,p,h)),i(l=o(v.key)?s[v.key]:k(v,e,p,h))?m(v,r,n,g.elm,!1,t,u):Tr(c=e[l],v)?(S(c,v,r,t,u),e[l]=void 0,w&&d.insertBefore(n,c.elm,g.elm)):m(v,r,n,g.elm,!1,t,u),v=t[++u]);p>h?x(n,i(t[b+1])?null:t[b+1].elm,t,u,b,r):u>b&&_(e,p,h)}(p,g,b,t,c):o(b)?(o(n.text)&&d.setTextContent(p,""),x(p,null,b,0,b.length-1,t)):o(g)?_(g,0,g.length-1):o(n.text)&&d.setTextContent(p,""):n.text!==e.text&&d.setTextContent(p,e.text),o(h)&&o(u=h.hook)&&o(u=u.postpatch)&&u(n,e)}}}function T(n,e,t){if(s(t)&&o(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var A=y("attrs,class,staticClass,staticStyle,key");function C(n,e,t,r){var a,i=e.tag,l=e.data,c=e.children;if(r=r||l&&l.pre,e.elm=n,s(e.isComment)&&o(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(o(l)&&(o(a=l.hook)&&o(a=a.init)&&a(e,!0),o(a=e.componentInstance)))return u(e,t),!0;if(o(i)){if(o(c))if(n.hasChildNodes())if(o(a=l)&&o(a=a.domProps)&&o(a=a.innerHTML)){if(a!==n.innerHTML)return!1}else{for(var d=!0,p=n.firstChild,m=0;m<c.length;m++){if(!p||!C(p,c[m],t,r)){d=!1;break}p=p.nextSibling}if(!d||p)return!1}else g(e,c,t);if(o(l)){var h=!1;for(var f in l)if(!A(f)){h=!0,b(e,t);break}!h&&l.class&&qe(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,a){if(!i(e)){var l,c=!1,p=[];if(i(n))c=!0,m(e,p);else{var u=o(n.nodeType);if(!u&&Tr(n,e))S(n,e,p,null,null,a);else{if(u){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),s(t)&&C(n,e,p))return T(e,p,!0),n;l=n,n=new hn(d.tagName(l).toLowerCase(),{},[],void 0,l)}var h=n.elm,g=d.parentNode(h);if(m(e,p,h._leaveCb?null:g,d.nextSibling(h)),o(e.parent))for(var b=e.parent,v=f(e);b;){for(var y=0;y<r.destroy.length;++y)r.destroy[y](b);if(b.elm=e.elm,v){for(var x=0;x<r.create.length;++x)r.create[x](kr,b);var E=b.data.hook.insert;if(E.merged)for(var k=E.fns.slice(1),A=0;A<k.length;A++)k[A]()}else _r(b);b=b.parent}o(g)?_([n],0,0):o(n.tag)&&w(n)}}return T(e,p,c),e.elm}o(n)&&w(n)}}({nodeOps:xr,modules:[Mr,Ur,Zr,Xr,la,Q?{create:ja,activate:ja,remove:function(n,e){!0!==n.data.show?Pa(n,e):e()}}:{}].concat(Dr)});J&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&Ua(n,"input")}));var Da={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?Zn(t,"postpatch",(function(){Da.componentUpdated(n,e,t)})):za(n,e,t.context),n._vOptions=[].map.call(n.options,Ma)):("textarea"===t.tag||yr(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",Ra),n.addEventListener("compositionend",Na),n.addEventListener("change",Na),J&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){za(n,e,t.context);var r=n._vOptions,a=n._vOptions=[].map.call(n.options,Ma);if(a.some((function(n,e){return!F(n,r[e])})))(n.multiple?e.value.some((function(n){return Fa(n,a)})):e.value!==e.oldValue&&Fa(e.value,a))&&Ua(n,"change")}}};function za(n,e,t){La(n,e,t),(X||Y)&&setTimeout((function(){La(n,e,t)}),0)}function La(n,e,t){var r=e.value,a=n.multiple;if(!a||Array.isArray(r)){for(var i,o,s=0,l=n.options.length;s<l;s++)if(o=n.options[s],a)i=M(r,Ma(o))>-1,o.selected!==i&&(o.selected=i);else if(F(Ma(o),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));a||(n.selectedIndex=-1)}}function Fa(n,e){return e.every((function(e){return!F(e,n)}))}function Ma(n){return"_value"in n?n._value:n.value}function Ra(n){n.target.composing=!0}function Na(n){n.target.composing&&(n.target.composing=!1,Ua(n.target,"input"))}function Ua(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function Wa(n){return!n.componentInstance||n.data&&n.data.transition?n:Wa(n.componentInstance._vnode)}var qa={model:Da,show:{bind:function(n,e,t){var r=e.value,a=(t=Wa(t)).data&&t.data.transition,i=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&a?(t.data.show=!0,Ca(t,(function(){n.style.display=i}))):n.style.display=r?i:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=Wa(t)).data&&t.data.transition?(t.data.show=!0,r?Ca(t,(function(){n.style.display=n.__vOriginalDisplay})):Pa(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,a){a||(n.style.display=n.__vOriginalDisplay)}}},$a={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Ga(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Ga(Se(e.children)):n}function Va(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var a=t._parentListeners;for(var r in a)e[T(r)]=a[r];return e}function Ha(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Za=function(n){return n.tag||ge(n)},Qa=function(n){return"show"===n.name},Ka={name:"transition",props:$a,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Za)).length){0;var r=this.mode;0;var a=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return a;var i=Ga(a);if(!i)return a;if(this._leaving)return Ha(n,a);var o="__transition-".concat(this._uid,"-");i.key=null==i.key?i.isComment?o+"comment":o+i.tag:l(i.key)?0===String(i.key).indexOf(o)?i.key:o+i.key:i.key;var s=(i.data||(i.data={})).transition=Va(this),c=this._vnode,d=Ga(c);if(i.data.directives&&i.data.directives.some(Qa)&&(i.data.show=!0),d&&d.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(i,d)&&!ge(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var p=d.data.transition=j({},s);if("out-in"===r)return this._leaving=!0,Zn(p,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Ha(n,a);if("in-out"===r){if(ge(i))return c;var m,u=function(){m()};Zn(s,"afterEnter",u),Zn(s,"enterCancelled",u),Zn(p,"delayLeave",(function(n){m=n}))}}return a}}},Xa=j({tag:String,moveClass:String},$a);function Ja(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Ya(n){n.data.newPos=n.elm.getBoundingClientRect()}function ni(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,a=e.top-t.top;if(r||a){n.data.moved=!0;var i=n.elm.style;i.transform=i.WebkitTransform="translate(".concat(r,"px,").concat(a,"px)"),i.transitionDuration="0s"}}delete Xa.mode;var ei={Transition:Ka,TransitionGroup:{props:Xa,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var a=Je(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,a(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,a=this.$slots.default||[],i=this.children=[],o=Va(this),s=0;s<a.length;s++){if((d=a[s]).tag)if(null!=d.key&&0!==String(d.key).indexOf("__vlist"))i.push(d),t[d.key]=d,(d.data||(d.data={})).transition=o;else;}if(r){var l=[],c=[];for(s=0;s<r.length;s++){var d;(d=r[s]).data.transition=o,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?l.push(d):c.push(d)}this.kept=n(e,null,l),this.removed=c}return n(e,null,i)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Ja),n.forEach(Ya),n.forEach(ni),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;wa(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(fa,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(fa,n),t._moveCb=null,_a(t,e))})}})))},methods:{hasMove:function(n,e){if(!ha)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){pa(t,n)})),da(t,e),t.style.display="none",this.$el.appendChild(t);var r=Sa(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};function ti(n,e){for(var t in e)n[t]=e[t];return n}Ht.config.mustUseProp=function(n,e,t){return"value"===t&&tr(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Ht.config.isReservedTag=br,Ht.config.isReservedAttr=er,Ht.config.getTagNamespace=function(n){return fr(n)?"svg":"math"===n?"math":void 0},Ht.config.isUnknownElement=function(n){if(!Q)return!0;if(br(n))return!1;if(n=n.toLowerCase(),null!=vr[n])return vr[n];var e=document.createElement(n);return n.indexOf("-")>-1?vr[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:vr[n]=/HTMLUnknownElement/.test(e.toString())},j(Ht.options.directives,qa),j(Ht.options.components,ei),Ht.prototype.__patch__=Q?Oa:D,Ht.prototype.$mount=function(n,e){return function(n,e,t){var r;n.$el=e,n.$options.render||(n.$options.render=gn),et(n,"beforeMount"),r=function(){n._update(n._render(),t)},new Ve(n,r,D,{before:function(){n._isMounted&&!n._isDestroyed&&et(n,"beforeUpdate")}},!0),t=!1;var a=n._preWatchers;if(a)for(var i=0;i<a.length;i++)a[i].run();return null==n.$vnode&&(n._isMounted=!0,et(n,"mounted")),n}(this,n=n&&Q?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},Q&&setTimeout((function(){q.devtools&&ln&&ln.emit("init",Ht)}),0);var ri=/[!'()*]/g,ai=function(n){return"%"+n.charCodeAt(0).toString(16)},ii=/%2C/g,oi=function(n){return encodeURIComponent(n).replace(ri,ai).replace(ii,",")};function si(n){try{return decodeURIComponent(n)}catch(n){0}return n}var li=function(n){return null==n||"object"==typeof n?n:String(n)};function ci(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=si(t.shift()),a=t.length>0?si(t.join("=")):null;void 0===e[r]?e[r]=a:Array.isArray(e[r])?e[r].push(a):e[r]=[e[r],a]})),e):e}function di(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return oi(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(oi(e)):r.push(oi(e)+"="+oi(n)))})),r.join("&")}return oi(e)+"="+oi(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var pi=/\/?$/;function mi(n,e,t,r){var a=r&&r.options.stringifyQuery,i=e.query||{};try{i=ui(i)}catch(n){}var o={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:i,params:e.params||{},fullPath:fi(e,a),matched:n?gi(n):[]};return t&&(o.redirectedFrom=fi(t,a)),Object.freeze(o)}function ui(n){if(Array.isArray(n))return n.map(ui);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=ui(n[t]);return e}return n}var hi=mi(null,{path:"/"});function gi(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function fi(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var a=n.hash;return void 0===a&&(a=""),(t||"/")+(e||di)(r)+a}function bi(n,e,t){return e===hi?n===e:!!e&&(n.path&&e.path?n.path.replace(pi,"")===e.path.replace(pi,"")&&(t||n.hash===e.hash&&vi(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&vi(n.query,e.query)&&vi(n.params,e.params))))}function vi(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,a){var i=n[t];if(r[a]!==t)return!1;var o=e[t];return null==i||null==o?i===o:"object"==typeof i&&"object"==typeof o?vi(i,o):String(i)===String(o)}))}function yi(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var a=t.instances[r],i=t.enteredCbs[r];if(a&&i){delete t.enteredCbs[r];for(var o=0;o<i.length;o++)a._isBeingDestroyed||i[o](a)}}}}var xi={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,a=e.parent,i=e.data;i.routerView=!0;for(var o=a.$createElement,s=t.name,l=a.$route,c=a._routerViewCache||(a._routerViewCache={}),d=0,p=!1;a&&a._routerRoot!==a;){var m=a.$vnode?a.$vnode.data:{};m.routerView&&d++,m.keepAlive&&a._directInactive&&a._inactive&&(p=!0),a=a.$parent}if(i.routerViewDepth=d,p){var u=c[s],h=u&&u.component;return h?(u.configProps&&wi(h,i,u.route,u.configProps),o(h,i,r)):o()}var g=l.matched[d],f=g&&g.components[s];if(!g||!f)return c[s]=null,o();c[s]={component:f},i.registerRouteInstance=function(n,e){var t=g.instances[s];(e&&t!==n||!e&&t===n)&&(g.instances[s]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){g.instances[s]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==g.instances[s]&&(g.instances[s]=n.componentInstance),yi(l)};var b=g.props&&g.props[s];return b&&(ti(c[s],{route:l,configProps:b}),wi(f,i,l,b)),o(f,i,r)}};function wi(n,e,t,r){var a=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(a){a=e.props=ti({},a);var i=e.attrs=e.attrs||{};for(var o in a)n.props&&o in n.props||(i[o]=a[o],delete a[o])}}function _i(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var a=e.split("/");t&&a[a.length-1]||a.pop();for(var i=n.replace(/^\//,"").split("/"),o=0;o<i.length;o++){var s=i[o];".."===s?a.pop():"."!==s&&a.push(s)}return""!==a[0]&&a.unshift(""),a.join("/")}function Ei(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var ki=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},Si=Ri,Ti=Bi,Ai=function(n,e){return Oi(Bi(n,e),e)},Ci=Oi,Pi=Mi,Ii=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Bi(n,e){for(var t,r=[],a=0,i=0,o="",s=e&&e.delimiter||"/";null!=(t=Ii.exec(n));){var l=t[0],c=t[1],d=t.index;if(o+=n.slice(i,d),i=d+l.length,c)o+=c[1];else{var p=n[i],m=t[2],u=t[3],h=t[4],g=t[5],f=t[6],b=t[7];o&&(r.push(o),o="");var v=null!=m&&null!=p&&p!==m,y="+"===f||"*"===f,x="?"===f||"*"===f,w=t[2]||s,_=h||g;r.push({name:u||a++,prefix:m||"",delimiter:w,optional:x,repeat:y,partial:v,asterisk:!!b,pattern:_?zi(_):b?".*":"[^"+Di(w)+"]+?"})}}return i<n.length&&(o+=n.substr(i)),o&&r.push(o),r}function ji(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function Oi(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",Fi(e)));return function(e,r){for(var a="",i=e||{},o=(r||{}).pretty?ji:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,d=i[l.name];if(null==d){if(l.optional){l.partial&&(a+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(ki(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(c=o(d[p]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===p?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):o(d),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');a+=l.prefix+c}}else a+=l}return a}}function Di(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function zi(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function Li(n,e){return n.keys=e,n}function Fi(n){return n&&n.sensitive?"":"i"}function Mi(n,e,t){ki(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,a=!1!==t.end,i="",o=0;o<n.length;o++){var s=n[o];if("string"==typeof s)i+=Di(s);else{var l=Di(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),i+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=Di(t.delimiter||"/"),p=i.slice(-d.length)===d;return r||(i=(p?i.slice(0,-d.length):i)+"(?:"+d+"(?=$))?"),i+=a?"$":r&&p?"":"(?="+d+"|$)",Li(new RegExp("^"+i,Fi(t)),e)}function Ri(n,e,t){return ki(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Li(n,e)}(n,e):ki(n)?function(n,e,t){for(var r=[],a=0;a<n.length;a++)r.push(Ri(n[a],e,t).source);return Li(new RegExp("(?:"+r.join("|")+")",Fi(t)),e)}(n,e,t):function(n,e,t){return Mi(Bi(n,t),e,t)}(n,e,t)}Si.parse=Ti,Si.compile=Ai,Si.tokensToFunction=Ci,Si.tokensToRegExp=Pi;var Ni=Object.create(null);function Ui(n,e,t){e=e||{};try{var r=Ni[n]||(Ni[n]=Si.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function Wi(n,e,t,r){var a="string"==typeof n?{path:n}:n;if(a._normalized)return a;if(a.name){var i=(a=ti({},n)).params;return i&&"object"==typeof i&&(a.params=ti({},i)),a}if(!a.path&&a.params&&e){(a=ti({},a))._normalized=!0;var o=ti(ti({},e.params),a.params);if(e.name)a.name=e.name,a.params=o;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;a.path=Ui(s,o,e.path)}else 0;return a}var l=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var a=n.indexOf("?");return a>=0&&(t=n.slice(a+1),n=n.slice(0,a)),{path:n,query:t,hash:e}}(a.path||""),c=e&&e.path||"/",d=l.path?_i(l.path,c,t||a.append):c,p=function(n,e,t){void 0===e&&(e={});var r,a=t||ci;try{r=a(n||"")}catch(n){r={}}for(var i in e){var o=e[i];r[i]=Array.isArray(o)?o.map(li):li(o)}return r}(l.query,a.query,r&&r.options.parseQuery),m=a.hash||l.hash;return m&&"#"!==m.charAt(0)&&(m="#"+m),{_normalized:!0,path:d,query:p,hash:m}}var qi,$i=function(){},Gi={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,a=t.resolve(this.to,r,this.append),i=a.location,o=a.route,s=a.href,l={},c=t.options.linkActiveClass,d=t.options.linkExactActiveClass,p=null==c?"router-link-active":c,m=null==d?"router-link-exact-active":d,u=null==this.activeClass?p:this.activeClass,h=null==this.exactActiveClass?m:this.exactActiveClass,g=o.redirectedFrom?mi(null,Wi(o.redirectedFrom),null,t):o;l[h]=bi(r,g,this.exactPath),l[u]=this.exact||this.exactPath?l[h]:function(n,e){return 0===n.path.replace(pi,"/").indexOf(e.path.replace(pi,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,g);var f=l[h]?this.ariaCurrentValue:null,b=function(n){Vi(n)&&(e.replace?t.replace(i,$i):t.push(i,$i))},v={click:Vi};Array.isArray(this.event)?this.event.forEach((function(n){v[n]=b})):v[this.event]=b;var y={class:l},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:o,navigate:b,isActive:l[u],isExactActive:l[h]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?n():n("span",{},x)}if("a"===this.tag)y.on=v,y.attrs={href:s,"aria-current":f};else{var w=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(w){w.isStatic=!1;var _=w.data=ti({},w.data);for(var E in _.on=_.on||{},_.on){var k=_.on[E];E in v&&(_.on[E]=Array.isArray(k)?k:[k])}for(var S in v)S in _.on?_.on[S].push(v[S]):_.on[S]=b;var T=w.data.attrs=ti({},w.data.attrs);T.href=s,T["aria-current"]=f}else y.on=v}return n(this.tag,y,this.$slots.default)}};function Vi(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Hi="undefined"!=typeof window;function Zi(n,e,t,r,a){var i=e||[],o=t||Object.create(null),s=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,a,i,o){var s=a.path,l=a.name;0;var c=a.pathToRegexpOptions||{},d=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return Ei(e.path+"/"+n)}(s,i,c.strict);"boolean"==typeof a.caseSensitive&&(c.sensitive=a.caseSensitive);var p={path:d,regex:Qi(d,c),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:l,parent:i,matchAs:o,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var i=o?Ei(o+"/"+a.path):void 0;n(e,t,r,a,p,i)}));t[p.path]||(e.push(p.path),t[p.path]=p);if(void 0!==a.alias)for(var m=Array.isArray(a.alias)?a.alias:[a.alias],u=0;u<m.length;++u){0;var h={path:m[u],children:a.children};n(e,t,r,h,i,p.path||"/")}l&&(r[l]||(r[l]=p))}(i,o,s,n,a)}));for(var l=0,c=i.length;l<c;l++)"*"===i[l]&&(i.push(i.splice(l,1)[0]),c--,l--);return{pathList:i,pathMap:o,nameMap:s}}function Qi(n,e){return Si(n,[],e)}function Ki(n,e){var t=Zi(n),r=t.pathList,a=t.pathMap,i=t.nameMap;function o(n,t,o){var s=Wi(n,t,!1,e),c=s.name;if(c){var d=i[c];if(!d)return l(null,s);var p=d.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var m in t.params)!(m in s.params)&&p.indexOf(m)>-1&&(s.params[m]=t.params[m]);return s.path=Ui(d.path,s.params),l(d,s,o)}if(s.path){s.params={};for(var u=0;u<r.length;u++){var h=r[u],g=a[h];if(Xi(g.regex,s.path,s.params))return l(g,s,o)}}return l(null,s)}function s(n,t){var r=n.redirect,a="function"==typeof r?r(mi(n,t,null,e)):r;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return l(null,t);var s=a,c=s.name,d=s.path,p=t.query,m=t.hash,u=t.params;if(p=s.hasOwnProperty("query")?s.query:p,m=s.hasOwnProperty("hash")?s.hash:m,u=s.hasOwnProperty("params")?s.params:u,c){i[c];return o({_normalized:!0,name:c,query:p,hash:m,params:u},void 0,t)}if(d){var h=function(n,e){return _i(n,e.parent?e.parent.path:"/",!0)}(d,n);return o({_normalized:!0,path:Ui(h,u),query:p,hash:m},void 0,t)}return l(null,t)}function l(n,t,r){return n&&n.redirect?s(n,r||t):n&&n.matchAs?function(n,e,t){var r=o({_normalized:!0,path:Ui(t,e.params)});if(r){var a=r.matched,i=a[a.length-1];return e.params=r.params,l(i,e)}return l(null,e)}(0,t,n.matchAs):mi(n,t,r,e)}return{match:o,addRoute:function(n,e){var t="object"!=typeof n?i[n]:void 0;Zi([e||n],r,a,i,t),t&&t.alias.length&&Zi(t.alias.map((function(n){return{path:n,children:[e]}})),r,a,i,t)},getRoutes:function(){return r.map((function(n){return a[n]}))},addRoutes:function(n){Zi(n,r,a,i)}}}function Xi(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var a=1,i=r.length;a<i;++a){var o=n.keys[a-1];o&&(t[o.name||"pathMatch"]="string"==typeof r[a]?si(r[a]):r[a])}return!0}var Ji=Hi&&window.performance&&window.performance.now?window.performance:Date;function Yi(){return Ji.now().toFixed(3)}var no=Yi();function eo(){return no}function to(n){return no=n}var ro=Object.create(null);function ao(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=ti({},window.history.state);return t.key=eo(),window.history.replaceState(t,"",e),window.addEventListener("popstate",so),function(){window.removeEventListener("popstate",so)}}function io(n,e,t,r){if(n.app){var a=n.options.scrollBehavior;a&&n.app.$nextTick((function(){var i=function(){var n=eo();if(n)return ro[n]}(),o=a.call(n,e,t,r?i:null);o&&("function"==typeof o.then?o.then((function(n){uo(n,i)})).catch((function(n){0})):uo(o,i))}))}}function oo(){var n=eo();n&&(ro[n]={x:window.pageXOffset,y:window.pageYOffset})}function so(n){oo(),n.state&&n.state.key&&to(n.state.key)}function lo(n){return po(n.x)||po(n.y)}function co(n){return{x:po(n.x)?n.x:window.pageXOffset,y:po(n.y)?n.y:window.pageYOffset}}function po(n){return"number"==typeof n}var mo=/^#\d/;function uo(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var a=mo.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(a){var i=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(a,i={x:po((t=i).x)?t.x:0,y:po(t.y)?t.y:0})}else lo(n)&&(e=co(n))}else r&&lo(n)&&(e=co(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var ho,go=Hi&&((-1===(ho=window.navigator.userAgent).indexOf("Android 2.")&&-1===ho.indexOf("Android 4.0")||-1===ho.indexOf("Mobile Safari")||-1!==ho.indexOf("Chrome")||-1!==ho.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function fo(n,e){oo();var t=window.history;try{if(e){var r=ti({},t.state);r.key=eo(),t.replaceState(r,"",n)}else t.pushState({key:to(Yi())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function bo(n){fo(n,!0)}var vo={redirected:2,aborted:4,cancelled:8,duplicated:16};function yo(n,e){return wo(n,e,vo.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return _o.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function xo(n,e){return wo(n,e,vo.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function wo(n,e,t,r){var a=new Error(r);return a._isRouter=!0,a.from=n,a.to=e,a.type=t,a}var _o=["params","query","hash"];function Eo(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function ko(n,e){return Eo(n)&&n._isRouter&&(null==e||n.type===e)}function So(n,e,t){var r=function(a){a>=n.length?t():n[a]?e(n[a],(function(){r(a+1)})):r(a+1)};r(0)}function To(n){return function(e,t,r){var a=!1,i=0,o=null;Ao(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){a=!0,i++;var l,c=Io((function(e){var a;((a=e).__esModule||Po&&"Module"===a[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:qi.extend(e),t.components[s]=e,--i<=0&&r()})),d=Io((function(n){var e="Failed to resolve async component "+s+": "+n;o||(o=Eo(n)?n:new Error(e),r(o))}));try{l=n(c,d)}catch(n){d(n)}if(l)if("function"==typeof l.then)l.then(c,d);else{var p=l.component;p&&"function"==typeof p.then&&p.then(c,d)}}})),a||r()}}function Ao(n,e){return Co(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Co(n){return Array.prototype.concat.apply([],n)}var Po="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Io(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var Bo=function(n,e){this.router=n,this.base=function(n){if(!n)if(Hi){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=hi,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function jo(n,e,t,r){var a=Ao(n,(function(n,r,a,i){var o=function(n,e){"function"!=typeof n&&(n=qi.extend(n));return n.options[e]}(n,e);if(o)return Array.isArray(o)?o.map((function(n){return t(n,r,a,i)})):t(o,r,a,i)}));return Co(r?a.reverse():a)}function Oo(n,e){if(e)return function(){return n.apply(e,arguments)}}Bo.prototype.listen=function(n){this.cb=n},Bo.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Bo.prototype.onError=function(n){this.errorCbs.push(n)},Bo.prototype.transitionTo=function(n,e,t){var r,a=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var i=this.current;this.confirmTransition(r,(function(){a.updateRoute(r),e&&e(r),a.ensureURL(),a.router.afterHooks.forEach((function(n){n&&n(r,i)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!a.ready&&(ko(n,vo.redirected)&&i===hi||(a.ready=!0,a.readyErrorCbs.forEach((function(e){e(n)}))))}))},Bo.prototype.confirmTransition=function(n,e,t){var r=this,a=this.current;this.pending=n;var i,o,s=function(n){!ko(n)&&Eo(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=a.matched.length-1;if(bi(n,a)&&l===c&&n.matched[l]===a.matched[c])return this.ensureURL(),n.hash&&io(this.router,a,n,!1),s(((o=wo(i=a,n,vo.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",o));var d=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),p=d.updated,m=d.deactivated,u=d.activated,h=[].concat(function(n){return jo(n,"beforeRouteLeave",Oo,!0)}(m),this.router.beforeHooks,function(n){return jo(n,"beforeRouteUpdate",Oo)}(p),u.map((function(n){return n.beforeEnter})),To(u)),g=function(e,t){if(r.pending!==n)return s(xo(a,n));try{e(n,a,(function(e){!1===e?(r.ensureURL(!0),s(function(n,e){return wo(n,e,vo.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(a,n))):Eo(e)?(r.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(yo(a,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){s(n)}};So(h,g,(function(){So(function(n){return jo(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,a,i){return n(r,a,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),i(n)}))}}(n,t,r)}))}(u).concat(r.router.resolveHooks),g,(function(){if(r.pending!==n)return s(xo(a,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){yi(n)}))}))}))},Bo.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Bo.prototype.setupListeners=function(){},Bo.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=hi,this.pending=null};var Do=function(n){function e(e,t){n.call(this,e,t),this._startLocation=zo(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=go&&t;r&&this.listeners.push(ao());var a=function(){var t=n.current,a=zo(n.base);n.current===hi&&a===n._startLocation||n.transitionTo(a,(function(n){r&&io(e,n,t,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){fo(Ei(r.base+n.fullPath)),io(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){bo(Ei(r.base+n.fullPath)),io(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(zo(this.base)!==this.current.fullPath){var e=Ei(this.base+this.current.fullPath);n?fo(e):bo(e)}},e.prototype.getCurrentLocation=function(){return zo(this.base)},e}(Bo);function zo(n){var e=window.location.pathname,t=e.toLowerCase(),r=n.toLowerCase();return!n||t!==r&&0!==t.indexOf(Ei(r+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Lo=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=zo(n);if(!/^\/#/.test(e))return window.location.replace(Ei(n+"/#"+e)),!0}(this.base)||Fo()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=go&&e;t&&this.listeners.push(ao());var r=function(){var e=n.current;Fo()&&n.transitionTo(Mo(),(function(r){t&&io(n.router,r,e,!0),go||Uo(r.fullPath)}))},a=go?"popstate":"hashchange";window.addEventListener(a,r),this.listeners.push((function(){window.removeEventListener(a,r)}))}},e.prototype.push=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){No(n.fullPath),io(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){Uo(n.fullPath),io(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Mo()!==e&&(n?No(e):Uo(e))},e.prototype.getCurrentLocation=function(){return Mo()},e}(Bo);function Fo(){var n=Mo();return"/"===n.charAt(0)||(Uo("/"+n),!1)}function Mo(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Ro(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function No(n){go?fo(Ro(n)):window.location.hash=n}function Uo(n){go?bo(Ro(n)):window.location.replace(Ro(n))}var Wo=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){ko(n,vo.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Bo),qo=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ki(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!go&&!1!==n.fallback,this.fallback&&(e="hash"),Hi||(e="abstract"),this.mode=e,e){case"history":this.history=new Do(this,n.base);break;case"hash":this.history=new Lo(this,n.base,this.fallback);break;case"abstract":this.history=new Wo(this,n.base);break;default:0}},$o={currentRoute:{configurable:!0}};qo.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},$o.currentRoute.get=function(){return this.history&&this.history.current},qo.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Do||t instanceof Lo){var r=function(n){t.setupListeners(),function(n){var r=t.current,a=e.options.scrollBehavior;go&&a&&"fullPath"in n&&io(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},qo.prototype.beforeEach=function(n){return Vo(this.beforeHooks,n)},qo.prototype.beforeResolve=function(n){return Vo(this.resolveHooks,n)},qo.prototype.afterEach=function(n){return Vo(this.afterHooks,n)},qo.prototype.onReady=function(n,e){this.history.onReady(n,e)},qo.prototype.onError=function(n){this.history.onError(n)},qo.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},qo.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},qo.prototype.go=function(n){this.history.go(n)},qo.prototype.back=function(){this.go(-1)},qo.prototype.forward=function(){this.go(1)},qo.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},qo.prototype.resolve=function(n,e,t){var r=Wi(n,e=e||this.history.current,t,this),a=this.match(r,e),i=a.redirectedFrom||a.fullPath;return{location:r,route:a,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?Ei(n+"/"+r):r}(this.history.base,i,this.mode),normalizedTo:r,resolved:a}},qo.prototype.getRoutes=function(){return this.matcher.getRoutes()},qo.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==hi&&this.history.transitionTo(this.history.getCurrentLocation())},qo.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==hi&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(qo.prototype,$o);var Go=qo;function Vo(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}qo.install=function n(e){if(!n.installed||qi!==e){n.installed=!0,qi=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",xi),e.component("RouterLink",Gi);var a=e.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},qo.version="3.6.5",qo.isNavigationFailure=ko,qo.NavigationFailureType=vo,qo.START_LOCATION=hi,Hi&&window.Vue&&window.Vue.use(qo);t(108);t(11),t(47);var Ho={NotFound:()=>Promise.all([t.e(0),t.e(144)]).then(t.bind(null,2714)),Layout:()=>Promise.all([t.e(0),t.e(3)]).then(t.bind(null,2712))},Zo={"v-59e4f443":()=>t.e(2).then(t.bind(null,2727)),"v-366d24c9":()=>t.e(290).then(t.bind(null,2728)),"v-3f6373ff":()=>t.e(196).then(t.bind(null,2729)),"v-946f9bde":()=>t.e(145).then(t.bind(null,2730)),"v-6319fbbe":()=>t.e(38).then(t.bind(null,2731)),"v-1c8f8ed5":()=>t.e(20).then(t.bind(null,2732)),"v-e4e4c3ac":()=>t.e(36).then(t.bind(null,2733)),"v-32887b2f":()=>t.e(44).then(t.bind(null,2734)),"v-7a27a3e4":()=>t.e(146).then(t.bind(null,2735)),"v-ae6819d6":()=>t.e(88).then(t.bind(null,2736)),"v-4cfbd904":()=>t.e(106).then(t.bind(null,2737)),"v-06599184":()=>t.e(195).then(t.bind(null,2715)),"v-0c375de9":()=>t.e(75).then(t.bind(null,2738)),"v-5039df00":()=>t.e(31).then(t.bind(null,2739)),"v-69cd01c8":()=>t.e(98).then(t.bind(null,2740)),"v-0b974b70":()=>t.e(41).then(t.bind(null,2741)),"v-426e6f91":()=>t.e(86).then(t.bind(null,2742)),"v-28de161d":()=>t.e(110).then(t.bind(null,2743)),"v-e23f7370":()=>t.e(197).then(t.bind(null,2744)),"v-4ca4e26a":()=>t.e(60).then(t.bind(null,2745)),"v-31d64c66":()=>t.e(118).then(t.bind(null,2746)),"v-d5337ff2":()=>t.e(89).then(t.bind(null,2747)),"v-966d118e":()=>t.e(119).then(t.bind(null,2748)),"v-6be6cc3c":()=>t.e(46).then(t.bind(null,2749)),"v-53009be3":()=>t.e(90).then(t.bind(null,2750)),"v-668b5aae":()=>t.e(76).then(t.bind(null,2751)),"v-f86c7022":()=>t.e(37).then(t.bind(null,2752)),"v-97f62282":()=>t.e(81).then(t.bind(null,2753)),"v-0583b5f8":()=>t.e(52).then(t.bind(null,2754)),"v-2ae71202":()=>t.e(61).then(t.bind(null,2755)),"v-2d947180":()=>t.e(66).then(t.bind(null,2756)),"v-36fbe97c":()=>t.e(99).then(t.bind(null,2757)),"v-7d8f6dd8":()=>t.e(91).then(t.bind(null,2758)),"v-b62eeb40":()=>t.e(62).then(t.bind(null,2759)),"v-58f458a4":()=>t.e(56).then(t.bind(null,2760)),"v-156cc6db":()=>t.e(92).then(t.bind(null,2761)),"v-7f0effda":()=>t.e(163).then(t.bind(null,2762)),"v-d8f3cfbc":()=>t.e(57).then(t.bind(null,2763)),"v-5a682088":()=>t.e(77).then(t.bind(null,2764)),"v-5071b594":()=>t.e(53).then(t.bind(null,2765)),"v-8b4b9bfc":()=>t.e(78).then(t.bind(null,2766)),"v-4d2d85fc":()=>t.e(63).then(t.bind(null,2767)),"v-490e56d8":()=>t.e(74).then(t.bind(null,2768)),"v-61b44b6c":()=>t.e(47).then(t.bind(null,2769)),"v-0bb7cad2":()=>t.e(45).then(t.bind(null,2770)),"v-8e84a37c":()=>t.e(54).then(t.bind(null,2771)),"v-63bc3f07":()=>t.e(64).then(t.bind(null,2772)),"v-15f8803c":()=>t.e(29).then(t.bind(null,2773)),"v-b6ec883c":()=>t.e(17).then(t.bind(null,2774)),"v-15923fe2":()=>t.e(48).then(t.bind(null,2775)),"v-6ec220b6":()=>t.e(18).then(t.bind(null,2776)),"v-58e48742":()=>t.e(39).then(t.bind(null,2777)),"v-7d39e2f6":()=>t.e(67).then(t.bind(null,2778)),"v-0c03c4a2":()=>t.e(79).then(t.bind(null,2779)),"v-60cc5aa2":()=>t.e(87).then(t.bind(null,2780)),"v-5a38e6b0":()=>t.e(93).then(t.bind(null,2781)),"v-d93d5cc4":()=>t.e(100).then(t.bind(null,2782)),"v-0be2f604":()=>t.e(111).then(t.bind(null,2783)),"v-07127d1c":()=>t.e(94).then(t.bind(null,2784)),"v-3cbcb3c7":()=>t.e(147).then(t.bind(null,2785)),"v-df678a1e":()=>t.e(101).then(t.bind(null,2786)),"v-2efae27f":()=>t.e(198).then(t.bind(null,2787)),"v-eb82b1a0":()=>t.e(102).then(t.bind(null,2788)),"v-670549ce":()=>t.e(13).then(t.bind(null,2789)),"v-3fc803b2":()=>t.e(10).then(t.bind(null,2790)),"v-f3b67386":()=>t.e(4).then(t.bind(null,2791)),"v-d7f1afac":()=>t.e(26).then(t.bind(null,2792)),"v-e24e9b3c":()=>t.e(27).then(t.bind(null,2793)),"v-391a74ac":()=>t.e(11).then(t.bind(null,2794)),"v-a6e0b3bc":()=>t.e(5).then(t.bind(null,2795)),"v-18040388":()=>t.e(40).then(t.bind(null,2796)),"v-2b52b462":()=>t.e(9).then(t.bind(null,2797)),"v-7965789e":()=>t.e(23).then(t.bind(null,2798)),"v-46bd822e":()=>t.e(7).then(t.bind(null,2799)),"v-db5076d4":()=>t.e(21).then(t.bind(null,2800)),"v-66f148ec":()=>t.e(14).then(t.bind(null,2801)),"v-3bb07131":()=>t.e(49).then(t.bind(null,2802)),"v-a08a6cf2":()=>t.e(15).then(t.bind(null,2803)),"v-a0a23c7c":()=>t.e(24).then(t.bind(null,2804)),"v-2a4ecd88":()=>t.e(8).then(t.bind(null,2805)),"v-866120c2":()=>t.e(28).then(t.bind(null,2806)),"v-7a242d02":()=>t.e(19).then(t.bind(null,2807)),"v-d9f5d5c4":()=>t.e(33).then(t.bind(null,2808)),"v-1dc38e57":()=>t.e(32).then(t.bind(null,2809)),"v-459d5263":()=>t.e(80).then(t.bind(null,2810)),"v-a924237e":()=>t.e(12).then(t.bind(null,2811)),"v-6002cbfe":()=>t.e(16).then(t.bind(null,2812)),"v-dedafbfe":()=>t.e(30).then(t.bind(null,2813)),"v-6d935179":()=>t.e(6).then(t.bind(null,2814)),"v-1073f2ec":()=>t.e(103).then(t.bind(null,2815)),"v-34ff6ca6":()=>t.e(164).then(t.bind(null,2816)),"v-42c8d527":()=>t.e(82).then(t.bind(null,2817)),"v-dc1e5696":()=>t.e(148).then(t.bind(null,2818)),"v-14b63fb6":()=>t.e(199).then(t.bind(null,2819)),"v-20977689":()=>t.e(149).then(t.bind(null,2820)),"v-3c1d644a":()=>t.e(200).then(t.bind(null,2821)),"v-c6124cee":()=>t.e(201).then(t.bind(null,2822)),"v-f54ab30e":()=>t.e(165).then(t.bind(null,2823)),"v-5e62b2a2":()=>t.e(166).then(t.bind(null,2824)),"v-3e82775e":()=>t.e(167).then(t.bind(null,2825)),"v-287cec73":()=>t.e(168).then(t.bind(null,2826)),"v-2cd2db6f":()=>t.e(169).then(t.bind(null,2827)),"v-2741cd6f":()=>t.e(170).then(t.bind(null,2828)),"v-1d354fb3":()=>t.e(171).then(t.bind(null,2829)),"v-37d824b0":()=>t.e(172).then(t.bind(null,2830)),"v-0e277298":()=>t.e(50).then(t.bind(null,2831)),"v-82223bb8":()=>t.e(120).then(t.bind(null,2832)),"v-88880c64":()=>t.e(55).then(t.bind(null,2833)),"v-16a4de85":()=>t.e(95).then(t.bind(null,2834)),"v-4f637454":()=>t.e(34).then(t.bind(null,2835)),"v-c9d4805e":()=>t.e(121).then(t.bind(null,2836)),"v-3dcf58ea":()=>t.e(202).then(t.bind(null,2837)),"v-5164c29a":()=>t.e(173).then(t.bind(null,2838)),"v-19a59450":()=>t.e(174).then(t.bind(null,2839)),"v-2b788427":()=>t.e(203).then(t.bind(null,2840)),"v-4010dc95":()=>t.e(204).then(t.bind(null,2841)),"v-53eb987c":()=>t.e(83).then(t.bind(null,2842)),"v-b1d955aa":()=>t.e(68).then(t.bind(null,2843)),"v-7bfcafde":()=>t.e(104).then(t.bind(null,2844)),"v-46cece01":()=>t.e(51).then(t.bind(null,2845)),"v-56b76baa":()=>t.e(42).then(t.bind(null,2846)),"v-14963d9a":()=>t.e(206).then(t.bind(null,2847)),"v-fa66493c":()=>t.e(205).then(t.bind(null,2848)),"v-3db965cd":()=>t.e(207).then(t.bind(null,2849)),"v-2c524c7e":()=>t.e(208).then(t.bind(null,2850)),"v-ca704d54":()=>t.e(107).then(t.bind(null,2851)),"v-1547526e":()=>t.e(112).then(t.bind(null,2852)),"v-0c579bc8":()=>t.e(122).then(t.bind(null,2853)),"v-e342d128":()=>t.e(108).then(t.bind(null,2854)),"v-c34a4f98":()=>t.e(123).then(t.bind(null,2855)),"v-1adacf72":()=>t.e(124).then(t.bind(null,2856)),"v-306ba20e":()=>t.e(96).then(t.bind(null,2857)),"v-0e33fd3b":()=>t.e(150).then(t.bind(null,2858)),"v-1bcb0090":()=>t.e(151).then(t.bind(null,2859)),"v-6bf4862e":()=>t.e(97).then(t.bind(null,2860)),"v-485dcc14":()=>t.e(209).then(t.bind(null,2861)),"v-1bc17c74":()=>t.e(58).then(t.bind(null,2862)),"v-a1cd5756":()=>t.e(125).then(t.bind(null,2863)),"v-c16619ee":()=>t.e(152).then(t.bind(null,2864)),"v-70147bcf":()=>t.e(153).then(t.bind(null,2865)),"v-1063e789":()=>t.e(175).then(t.bind(null,2866)),"v-707cfa82":()=>t.e(65).then(t.bind(null,2867)),"v-72d5170e":()=>t.e(154).then(t.bind(null,2868)),"v-5086963b":()=>t.e(113).then(t.bind(null,2869)),"v-331adf9a":()=>t.e(126).then(t.bind(null,2870)),"v-410fcd31":()=>t.e(210).then(t.bind(null,2871)),"v-0e82b9b7":()=>t.e(211).then(t.bind(null,2872)),"v-842371a0":()=>t.e(105).then(t.bind(null,2873)),"v-7eab0886":()=>t.e(127).then(t.bind(null,2874)),"v-6be47dea":()=>t.e(176).then(t.bind(null,2875)),"v-1b775658":()=>t.e(212).then(t.bind(null,2876)),"v-b3b2e64a":()=>t.e(128).then(t.bind(null,2877)),"v-7cda3b26":()=>t.e(155).then(t.bind(null,2878)),"v-5269a9a3":()=>t.e(213).then(t.bind(null,2879)),"v-3fb0f994":()=>t.e(177).then(t.bind(null,2880)),"v-20f7c41f":()=>t.e(214).then(t.bind(null,2881)),"v-09bf9794":()=>t.e(129).then(t.bind(null,2882)),"v-279b8f2e":()=>t.e(215).then(t.bind(null,2883)),"v-663867c2":()=>t.e(217).then(t.bind(null,2884)),"v-37f2faac":()=>t.e(218).then(t.bind(null,2885)),"v-1821f942":()=>t.e(216).then(t.bind(null,2886)),"v-e34f65d4":()=>t.e(219).then(t.bind(null,2887)),"v-6c8a3562":()=>t.e(220).then(t.bind(null,2888)),"v-1bb59077":()=>t.e(221).then(t.bind(null,2889)),"v-2f4357d7":()=>t.e(156).then(t.bind(null,2890)),"v-089a3483":()=>t.e(130).then(t.bind(null,2891)),"v-ec63dd96":()=>t.e(222).then(t.bind(null,2892)),"v-4d28f511":()=>t.e(114).then(t.bind(null,2893)),"v-6309016c":()=>t.e(223).then(t.bind(null,2894)),"v-447ea980":()=>t.e(224).then(t.bind(null,2895)),"v-8333508a":()=>t.e(131).then(t.bind(null,2896)),"v-1168c68c":()=>t.e(225).then(t.bind(null,2897)),"v-09351090":()=>t.e(226).then(t.bind(null,2898)),"v-6fcf56df":()=>t.e(227).then(t.bind(null,2899)),"v-5f2964f4":()=>t.e(228).then(t.bind(null,2900)),"v-db423e78":()=>t.e(229).then(t.bind(null,2901)),"v-29af13d0":()=>t.e(109).then(t.bind(null,2902)),"v-b6b0bc5c":()=>t.e(230).then(t.bind(null,2903)),"v-5e870662":()=>t.e(132).then(t.bind(null,2904)),"v-b7065ab0":()=>t.e(115).then(t.bind(null,2905)),"v-035c257e":()=>t.e(231).then(t.bind(null,2906)),"v-5fa31dd8":()=>t.e(178).then(t.bind(null,2907)),"v-1e6ca26a":()=>t.e(232).then(t.bind(null,2908)),"v-ebab6e96":()=>t.e(233).then(t.bind(null,2909)),"v-3bc197ef":()=>t.e(234).then(t.bind(null,2910)),"v-6c03cabc":()=>t.e(235).then(t.bind(null,2911)),"v-42e5bfe4":()=>t.e(237).then(t.bind(null,2912)),"v-151dade6":()=>t.e(236).then(t.bind(null,2913)),"v-39f3f63b":()=>t.e(238).then(t.bind(null,2914)),"v-05b43567":()=>t.e(239).then(t.bind(null,2915)),"v-86a3fac4":()=>t.e(240).then(t.bind(null,2916)),"v-36b8aba4":()=>t.e(241).then(t.bind(null,2917)),"v-63c8adb6":()=>t.e(242).then(t.bind(null,2918)),"v-5aed3d2d":()=>t.e(243).then(t.bind(null,2919)),"v-401ef41c":()=>t.e(244).then(t.bind(null,2920)),"v-1beb566c":()=>t.e(245).then(t.bind(null,2921)),"v-6509761f":()=>t.e(246).then(t.bind(null,2922)),"v-33e2e464":()=>t.e(247).then(t.bind(null,2923)),"v-3f27ce08":()=>t.e(248).then(t.bind(null,2924)),"v-a0646db8":()=>t.e(249).then(t.bind(null,2925)),"v-0a9ee462":()=>t.e(250).then(t.bind(null,2926)),"v-76c06413":()=>t.e(84).then(t.bind(null,2927)),"v-949b4824":()=>t.e(251).then(t.bind(null,2928)),"v-b3e2d766":()=>t.e(252).then(t.bind(null,2929)),"v-20808e0c":()=>t.e(253).then(t.bind(null,2930)),"v-12507005":()=>t.e(254).then(t.bind(null,2931)),"v-ce467878":()=>t.e(255).then(t.bind(null,2932)),"v-c9a153b2":()=>t.e(179).then(t.bind(null,2933)),"v-09604e86":()=>t.e(256).then(t.bind(null,2934)),"v-32de3740":()=>t.e(257).then(t.bind(null,2935)),"v-4619bc18":()=>t.e(258).then(t.bind(null,2936)),"v-49d34983":()=>t.e(259).then(t.bind(null,2937)),"v-08e95cbb":()=>t.e(260).then(t.bind(null,2938)),"v-b3ba68dc":()=>t.e(261).then(t.bind(null,2939)),"v-287c7bfa":()=>t.e(262).then(t.bind(null,2940)),"v-bb9cfae8":()=>t.e(180).then(t.bind(null,2941)),"v-340e7f47":()=>t.e(181).then(t.bind(null,2942)),"v-58ee8145":()=>t.e(263).then(t.bind(null,2943)),"v-2ce9e498":()=>t.e(182).then(t.bind(null,2944)),"v-75189a88":()=>t.e(85).then(t.bind(null,2945)),"v-2d433717":()=>t.e(264).then(t.bind(null,2946)),"v-ce084c72":()=>t.e(184).then(t.bind(null,2947)),"v-196f7a9e":()=>t.e(183).then(t.bind(null,2948)),"v-8c442c42":()=>t.e(157).then(t.bind(null,2949)),"v-248924dd":()=>t.e(185).then(t.bind(null,2950)),"v-fde1a2e6":()=>t.e(265).then(t.bind(null,2951)),"v-9b16a76c":()=>t.e(266).then(t.bind(null,2952)),"v-68f0f323":()=>t.e(186).then(t.bind(null,2953)),"v-2ba4f032":()=>t.e(267).then(t.bind(null,2954)),"v-2136281a":()=>t.e(268).then(t.bind(null,2955)),"v-00aa7218":()=>t.e(269).then(t.bind(null,2956)),"v-07609fd4":()=>t.e(158).then(t.bind(null,2957)),"v-5da87a2c":()=>t.e(270).then(t.bind(null,2958)),"v-21ac504a":()=>t.e(271).then(t.bind(null,2959)),"v-0bfbdc3c":()=>t.e(272).then(t.bind(null,2960)),"v-277764fe":()=>t.e(273).then(t.bind(null,2961)),"v-67992d80":()=>t.e(274).then(t.bind(null,2962)),"v-8394e7b2":()=>t.e(275).then(t.bind(null,2963)),"v-55505c33":()=>t.e(159).then(t.bind(null,2964)),"v-e5a2be52":()=>t.e(187).then(t.bind(null,2965)),"v-340af217":()=>t.e(188).then(t.bind(null,2966)),"v-1734a4f6":()=>t.e(276).then(t.bind(null,2967)),"v-25454657":()=>t.e(189).then(t.bind(null,2968)),"v-18276d1a":()=>t.e(277).then(t.bind(null,2969)),"v-59d8163d":()=>t.e(278).then(t.bind(null,2970)),"v-086a8cc9":()=>t.e(279).then(t.bind(null,2971)),"v-26e2f127":()=>t.e(280).then(t.bind(null,2972)),"v-504f09f5":()=>t.e(281).then(t.bind(null,2973)),"v-867d6432":()=>t.e(282).then(t.bind(null,2974)),"v-f7310056":()=>t.e(283).then(t.bind(null,2975)),"v-e7d7bc3c":()=>t.e(190).then(t.bind(null,2976)),"v-0cfb60fd":()=>t.e(284).then(t.bind(null,2977)),"v-1b1663c6":()=>t.e(25).then(t.bind(null,2978)),"v-78f5d2f0":()=>t.e(43).then(t.bind(null,2979)),"v-43751774":()=>t.e(160).then(t.bind(null,2980)),"v-47a1f2b4":()=>t.e(191).then(t.bind(null,2981)),"v-3eebdcfa":()=>t.e(22).then(t.bind(null,2982)),"v-b8016d46":()=>t.e(59).then(t.bind(null,2983)),"v-601c93bd":()=>t.e(69).then(t.bind(null,2984)),"v-f5672886":()=>t.e(71).then(t.bind(null,2985)),"v-2db1e07d":()=>t.e(70).then(t.bind(null,2986)),"v-76af135a":()=>t.e(72).then(t.bind(null,2987)),"v-78d2fbcc":()=>t.e(73).then(t.bind(null,2988)),"v-af2dd460":()=>t.e(285).then(t.bind(null,2989)),"v-2b917ddf":()=>t.e(286).then(t.bind(null,2990)),"v-fdb6dd6e":()=>t.e(192).then(t.bind(null,2991)),"v-61c6e437":()=>t.e(287).then(t.bind(null,2992)),"v-63e0e9d9":()=>t.e(288).then(t.bind(null,2993)),"v-69d46afc":()=>t.e(289).then(t.bind(null,2994)),"v-153b09b8":()=>t.e(116).then(t.bind(null,2995)),"v-13666d00":()=>t.e(292).then(t.bind(null,2996)),"v-0f2580b8":()=>t.e(293).then(t.bind(null,2997)),"v-15f6e1be":()=>t.e(291).then(t.bind(null,2998)),"v-5c2ec42e":()=>t.e(161).then(t.bind(null,2999)),"v-413f1d48":()=>t.e(294).then(t.bind(null,3e3)),"v-58304bb1":()=>t.e(295).then(t.bind(null,3001)),"v-0e0588fe":()=>t.e(296).then(t.bind(null,3002)),"v-072668fe":()=>t.e(297).then(t.bind(null,3003)),"v-25ccd3aa":()=>t.e(133).then(t.bind(null,3004)),"v-1fdc0219":()=>t.e(298).then(t.bind(null,3005)),"v-a2cfc232":()=>t.e(299).then(t.bind(null,3006)),"v-5a105456":()=>t.e(300).then(t.bind(null,3007)),"v-cbc4daea":()=>t.e(302).then(t.bind(null,3008)),"v-4754ed5a":()=>t.e(301).then(t.bind(null,3009)),"v-3e488684":()=>t.e(303).then(t.bind(null,3010)),"v-44df8956":()=>t.e(35).then(t.bind(null,3011)),"v-414ce414":()=>t.e(304).then(t.bind(null,3012)),"v-e6b17824":()=>t.e(306).then(t.bind(null,3013)),"v-cc639d82":()=>t.e(307).then(t.bind(null,3014)),"v-659a8c2a":()=>t.e(134).then(t.bind(null,2711)),"v-48e9f0bf":()=>t.e(309).then(t.bind(null,3015)),"v-2e5da65e":()=>t.e(305).then(t.bind(null,3016)),"v-2544bf9f":()=>t.e(308).then(t.bind(null,3017))};function Qo(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const Ko=/-(\w)/g,Xo=Qo(n=>n.replace(Ko,(n,e)=>e?e.toUpperCase():"")),Jo=/\B([A-Z])/g,Yo=Qo(n=>n.replace(Jo,"-$1").toLowerCase()),ns=Qo(n=>n.charAt(0).toUpperCase()+n.slice(1));function es(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(ns(Xo(e))):n(ns(e))||n(Yo(e))}const ts=Object.assign({},Ho,Zo),rs=n=>ts[n],as=n=>Zo[n],is=n=>Ho[n],os=n=>Ht.component(n);function ss(n){return es(as,n)}function ls(n){return es(is,n)}function cs(n){return es(rs,n)}function ds(n){return es(os,n)}function ps(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!ds(n)&&cs(n)){const e=await cs(n)();Ht.component(n,e.default)}}))}function ms(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var us=t(93),hs=t.n(us),gs=t(94),fs=t.n(gs),bs={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${fs()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=ys(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=xs(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return hs()([{name:"description",content:this.$description}],n,this.siteMeta,ws)},updateCanonicalLink(){vs(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",ys(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){xs(null,this.currentMetaTags),vs()}};function vs(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function ys(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function xs(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function ws(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}var _s=t(51),Es={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(_s)()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+t;for(let n=0;n<e.length;n++){const i=e[n],o=e[n+1],s=0===n&&0===t||t>=i.parentElement.offsetTop+10&&(!o||t<o.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(i.hash)){const t=i;if(a===r)for(let t=n+1;t<e.length;t++)if(l===decodeURIComponent(e[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},ks=t(24),Ss=t.n(ks),Ts={mounted(){Ss.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||Ht.component(n.name)||Ss.a.start(),t()}),this.$router.afterEach(()=>{Ss.a.done(),this.isSidebarOpen=!1})}};t(241),t(242);class As{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:n="",duration:e=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${n}</div>\n    `,this.containerEl.appendChild(t),e>0&&setTimeout(()=>{this.close(t)},e)}close(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",()=>{n.remove()})}}var Cs={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(n=>{document.querySelectorAll(n).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(n){if(n.classList.contains("codecopy-enabled"))return;const e=document.createElement("i");e.className="code-copy",e.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',e.title="Copy to clipboard",e.addEventListener("click",()=>{this.copyToClipboard(n.innerText)}),n.appendChild(e),n.classList.add("codecopy-enabled")},copyToClipboard(n){const e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy");(new As).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}},Ps="auto",Is="zoom-in",Bs="zoom-out",js="grab",Os="move";function Ds(n,e,t){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a={passive:!1};r?n.addEventListener(e,t,a):n.removeEventListener(e,t,a)}function zs(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function Ls(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function Fs(n,e,t){!function(n){var e=Ms,t=Rs;if(n.transition){var r=n.transition;delete n.transition,n[e]=r}if(n.transform){var a=n.transform;delete n.transform,n[t]=a}}(e);var r=n.style,a={};for(var i in e)t&&(a[i]=r[i]||""),r[i]=e[i];return a}var Ms="transition",Rs="transform",Ns="transform",Us="transitionend";var Ws=function(){},qs={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:Ws,onClose:Ws,onGrab:Ws,onMove:Ws,onRelease:Ws,onBeforeOpen:Ws,onBeforeClose:Ws,onBeforeGrab:Ws,onBeforeRelease:Ws,onImageLoading:Ws,onImageLoaded:Ws},$s={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),Vs(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var r=this.lastScrollPosition.x-e,a=this.lastScrollPosition.y-t,i=this.options.scrollThreshold;(Math.abs(a)>=i||Math.abs(r)>=i)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(Gs(n)&&!Vs(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){Gs(n)&&!Vs(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,r=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,r)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,r=e.clientY;this.move(t,r)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function Gs(n){return 0===n.button}function Vs(n){return n.metaKey||n.ctrlKey}var Hs={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,Fs(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),Ds(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){Fs(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},Zs="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Qs=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),Ks=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Xs={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=Ls(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,r=n.transitionDuration,a=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?js:Bs,transition:Ns+"\n        "+r+"s\n        "+a,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=Fs(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,Fs(this.el,{transform:"none"})},grab:function(n,e,t){var r=Js(),a=r.x-n,i=r.y-e;Fs(this.el,{cursor:Os,transform:"translate3d(\n        "+(this.translate.x+a)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var r=Js(),a=r.x-n,i=r.y-e;Fs(this.el,{transition:Ns,transform:"translate3d(\n        "+(this.translate.x+a)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){Fs(this.el,this.styleClose)},restoreOpenStyle:function(){Fs(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=Js(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,r=this.instance.options,a=r.customSize,i=r.scaleBase;if(!a&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(a&&"object"===(void 0===a?"undefined":Zs(a)))return{x:a.width/this.rect.width,y:a.height/this.rect.height};var o=this.rect.width/2,s=this.rect.height/2,l=Js(),c={x:l.x-o,y:l.y-s},d=c.x/o,p=c.y/s,m=i+Math.min(d,p);if(a&&"string"==typeof a){var u=t||this.el.naturalWidth,h=e||this.el.naturalHeight,g=parseFloat(a)*u/(100*this.rect.width),f=parseFloat(a)*h/(100*this.rect.height);if(m>g||m>f)return{x:g,y:f}}return{x:m,y:m}}};function Js(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function Ys(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(r){Ds(n,r,e[r],t)}))}var nl=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create(Xs),this.overlay=Object.create(Hs),this.handler=Object.create($s),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=Ks({},qs,e),this.overlay.init(this),this.handler.init(this)}return Qs(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=Is,Ds(n,"click",this.handler.click),this.options.preloadImage&&zs(Ls(n)));return this}},{key:"config",value:function(n){return n?(Ks(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var r="string"==typeof n?document.querySelector(n):n;if("IMG"===r.tagName){if(this.options.onBeforeOpen(r),this.target.init(r,this),!this.options.preloadImage){var a=this.target.srcOriginal;null!=a&&(this.options.onImageLoading(r),zs(a,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Ds(document,"scroll",this.handler.scroll),Ds(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Ds(window,"resize",this.handler.resizeWindow);var i=function n(){Ds(r,Us,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&Ys(document,e.handler,!0),t(r)};return Ds(r,Us,i),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=Ps,this.overlay.fadeOut(),this.target.zoomOut(),Ds(document,"scroll",this.handler.scroll,!1),Ds(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Ds(window,"resize",this.handler.resizeWindow,!1);var r=function r(){Ds(t,Us,r,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&Ys(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return Ds(t,Us,r),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var a=this.target.el;this.options.onBeforeGrab(a),this.released=!1,this.target.grab(n,e,t);var i=function n(){Ds(a,Us,n,!1),r(a)};return Ds(a,Us,i),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=Os,this.target.move(n,e,t);var a=this.target.el,i=function n(){Ds(a,Us,n,!1),r(a)};return Ds(a,Us,i),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=Ps,this.target.restoreOpenStyle();var r=function r(){Ds(t,Us,r,!1),n.lock=!1,n.released=!0,e(t)};return Ds(t,Us,r),this}}}]),n}();const el=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),tl=Number("500");class rl{constructor(){this.instance=new nl(el)}update(n=".theme-vdoing-content img:not(.no-zoom)"){"undefined"!=typeof window&&this.instance.listen(n)}updateDelay(n=".theme-vdoing-content img:not(.no-zoom)",e=tl){setTimeout(()=>this.update(n),e)}}var al={watch:{"$page.path"(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted(){this.$vuepress.zooming=new rl,this.$vuepress.zooming.updateDelay()}},il=(t(243),t(244),t(245),[bs,Es,Ts,Cs,al,{}]),ol={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return ms("layout",n),Ht.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},sl=t(0),ll=Object(sl.a)(ol,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}(ll,"mixins",il);const cl=[{name:"v-59e4f443",path:"/hardware/technology/pih/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-59e4f443").then(t)}},{path:"/hardware/technology/pih/index.html",redirect:"/hardware/technology/pih/"},{path:"/03.硬件知识/01.工艺基础/02.PIH通孔回流焊.html",redirect:"/hardware/technology/pih/"},{name:"v-366d24c9",path:"/todo/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-366d24c9").then(t)}},{path:"/todo/index.html",redirect:"/todo/"},{path:"/100.模板/02.我的待办模板.html",redirect:"/todo/"},{name:"v-3f6373ff",path:"/hardware/technology/hole/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3f6373ff").then(t)}},{path:"/hardware/technology/hole/index.html",redirect:"/hardware/technology/hole/"},{path:"/03.硬件知识/01.工艺基础/01.塞孔工艺.html",redirect:"/hardware/technology/hole/"},{name:"v-946f9bde",path:"/hardware/si/sparam/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-946f9bde").then(t)}},{path:"/hardware/si/sparam/index.html",redirect:"/hardware/si/sparam/"},{path:"/03.硬件知识/02.信号完整性/01.S参数.html",redirect:"/hardware/si/sparam/"},{name:"v-6319fbbe",path:"/hardware/rf/vector/signal/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6319fbbe").then(t)}},{path:"/hardware/rf/vector/signal/index.html",redirect:"/hardware/rf/vector/signal/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/01.常用仪器仪表之矢量信号发生器1.1.html",redirect:"/hardware/rf/vector/signal/"},{name:"v-1c8f8ed5",path:"/hardware/rf/vector/network/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1c8f8ed5").then(t)}},{path:"/hardware/rf/vector/network/index.html",redirect:"/hardware/rf/vector/network/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/02.常用仪器仪表之矢量网络分析仪1.3.html",redirect:"/hardware/rf/vector/network/"},{name:"v-e4e4c3ac",path:"/hardware/technology/libei/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-e4e4c3ac").then(t)}},{path:"/hardware/technology/libei/index.html",redirect:"/hardware/technology/libei/"},{path:"/03.硬件知识/01.工艺基础/03.立碑现象.html",redirect:"/hardware/technology/libei/"},{name:"v-32887b2f",path:"/hardware/rf/spectrum/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-32887b2f").then(t)}},{path:"/hardware/rf/spectrum/index.html",redirect:"/hardware/rf/spectrum/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/02.常用仪器仪表之频谱仪1.2.html",redirect:"/hardware/rf/spectrum/"},{name:"v-7a27a3e4",path:"/hardware/rf/power/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-7a27a3e4").then(t)}},{path:"/hardware/rf/power/index.html",redirect:"/hardware/rf/power/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/04.常用仪器仪表之功率计和探头1.4.html",redirect:"/hardware/rf/power/"},{name:"v-ae6819d6",path:"/hardware/si/splitter/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-ae6819d6").then(t)}},{path:"/hardware/si/splitter/index.html",redirect:"/hardware/si/splitter/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/05.射频无源器件之功分器.html",redirect:"/hardware/si/splitter/"},{name:"v-4cfbd904",path:"/hardware/si/circulator/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-4cfbd904").then(t)}},{path:"/hardware/si/circulator/index.html",redirect:"/hardware/si/circulator/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/08.射频无源器件之环形器.html",redirect:"/hardware/si/circulator/"},{name:"v-06599184",path:"/navigation/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-06599184").then(t)}},{path:"/navigation/index.html",redirect:"/navigation/"},{path:"/01.导航站.html",redirect:"/navigation/"},{name:"v-0c375de9",path:"/hardware/si/coupling/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0c375de9").then(t)}},{path:"/hardware/si/coupling/index.html",redirect:"/hardware/si/coupling/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/06.射频无源器件之耦合器.html",redirect:"/hardware/si/coupling/"},{name:"v-5039df00",path:"/hardware/si/wire/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5039df00").then(t)}},{path:"/hardware/si/wire/index.html",redirect:"/hardware/si/wire/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/10.射频无源器件之天线.html",redirect:"/hardware/si/wire/"},{name:"v-69cd01c8",path:"/hardware/si/barron/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-69cd01c8").then(t)}},{path:"/hardware/si/barron/index.html",redirect:"/hardware/si/barron/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/09.射频无源器件之巴伦.html",redirect:"/hardware/si/barron/"},{name:"v-0b974b70",path:"/hardware/si/maxpa/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0b974b70").then(t)}},{path:"/hardware/si/maxpa/index.html",redirect:"/hardware/si/maxpa/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/12.射频有源器件之放大器PA.html",redirect:"/hardware/si/maxpa/"},{name:"v-426e6f91",path:"/hardware/si/attenuator/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-426e6f91").then(t)}},{path:"/hardware/si/attenuator/index.html",redirect:"/hardware/si/attenuator/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/11.射频无源器件之衰减器.html",redirect:"/hardware/si/attenuator/"},{name:"v-28de161d",path:"/hardware/si/lowpa/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-28de161d").then(t)}},{path:"/hardware/si/lowpa/index.html",redirect:"/hardware/si/lowpa/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/13.射频有源器件之低噪放.html",redirect:"/hardware/si/lowpa/"},{name:"v-e23f7370",path:"/hardware/si/db/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-e23f7370").then(t)}},{path:"/hardware/si/db/index.html",redirect:"/hardware/si/db/"},{path:"/03.硬件知识/02.信号完整性/02.dB概念.html",redirect:"/hardware/si/db/"},{name:"v-4ca4e26a",path:"/hardware/si/phased-array/ka/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-4ca4e26a").then(t)}},{path:"/hardware/si/phased-array/ka/index.html",redirect:"/hardware/si/phased-array/ka/"},{path:"/03.硬件知识/02.信号完整性/02.相控阵/01.Ka频段双极化低剖面卫通相控阵天线.html",redirect:"/hardware/si/phased-array/ka/"},{name:"v-31d64c66",path:"/hardware/si/impedance-tran/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-31d64c66").then(t)}},{path:"/hardware/si/impedance-tran/index.html",redirect:"/hardware/si/impedance-tran/"},{path:"/03.硬件知识/02.信号完整性/03.阻抗变换器.html",redirect:"/hardware/si/impedance-tran/"},{name:"v-d5337ff2",path:"/hardware/si/switch/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-d5337ff2").then(t)}},{path:"/hardware/si/switch/index.html",redirect:"/hardware/si/switch/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/14.射频有源器件之射频开关.html",redirect:"/hardware/si/switch/"},{name:"v-966d118e",path:"/hardware/si/wave/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-966d118e").then(t)}},{path:"/hardware/si/wave/index.html",redirect:"/hardware/si/wave/"},{path:"/03.硬件知识/02.信号完整性/04.电磁波中的波段划分.html",redirect:"/hardware/si/wave/"},{name:"v-6be6cc3c",path:"/hardware/si/hfss/port/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6be6cc3c").then(t)}},{path:"/hardware/si/hfss/port/index.html",redirect:"/hardware/si/hfss/port/"},{path:"/03.硬件知识/02.信号完整性/05.HFSS端口区分.html",redirect:"/hardware/si/hfss/port/"},{name:"v-53009be3",path:"/hardware/use/way/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-53009be3").then(t)}},{path:"/hardware/use/way/index.html",redirect:"/hardware/use/way/"},{path:"/03.硬件知识/03.原理模块设计/01.设计方法.html",redirect:"/hardware/use/way/"},{name:"v-668b5aae",path:"/hardware/use/eth/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-668b5aae").then(t)}},{path:"/hardware/use/eth/index.html",redirect:"/hardware/use/eth/"},{path:"/03.硬件知识/03.原理模块设计/02.以太网设计.html",redirect:"/hardware/use/eth/"},{name:"v-f86c7022",path:"/hardware/si/Mixer/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-f86c7022").then(t)}},{path:"/hardware/si/Mixer/index.html",redirect:"/hardware/si/Mixer/"},{path:"/03.硬件知识/02.信号完整性/01.射频工程师工作笔记/15.射频有源器件之混频器.html",redirect:"/hardware/si/Mixer/"},{name:"v-97f62282",path:"/hardware/use/eth/gbit/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-97f62282").then(t)}},{path:"/hardware/use/eth/gbit/index.html",redirect:"/hardware/use/eth/gbit/"},{path:"/03.硬件知识/03.原理模块设计/03.万兆以太网设计.html",redirect:"/hardware/use/eth/gbit/"},{name:"v-0583b5f8",path:"/hardware/use/rs232/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0583b5f8").then(t)}},{path:"/hardware/use/rs232/index.html",redirect:"/hardware/use/rs232/"},{path:"/03.硬件知识/03.原理模块设计/04.RS232设计.html",redirect:"/hardware/use/rs232/"},{name:"v-2ae71202",path:"/hardware/use/rs485/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2ae71202").then(t)}},{path:"/hardware/use/rs485/index.html",redirect:"/hardware/use/rs485/"},{path:"/03.硬件知识/03.原理模块设计/05.RS485设计.html",redirect:"/hardware/use/rs485/"},{name:"v-2d947180",path:"/hardware/use/can/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2d947180").then(t)}},{path:"/hardware/use/can/index.html",redirect:"/hardware/use/can/"},{path:"/03.硬件知识/03.原理模块设计/06.CAN设计.html",redirect:"/hardware/use/can/"},{name:"v-36fbe97c",path:"/hardware/use/usb2serialport/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-36fbe97c").then(t)}},{path:"/hardware/use/usb2serialport/index.html",redirect:"/hardware/use/usb2serialport/"},{path:"/03.硬件知识/03.原理模块设计/07.USB转串口.html",redirect:"/hardware/use/usb2serialport/"},{name:"v-7d8f6dd8",path:"/hardware/use/sd/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-7d8f6dd8").then(t)}},{path:"/hardware/use/sd/index.html",redirect:"/hardware/use/sd/"},{path:"/03.硬件知识/03.原理模块设计/08.SD卡.html",redirect:"/hardware/use/sd/"},{name:"v-b62eeb40",path:"/hardware/use/infrared/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-b62eeb40").then(t)}},{path:"/hardware/use/infrared/index.html",redirect:"/hardware/use/infrared/"},{path:"/03.硬件知识/03.原理模块设计/10.红外.html",redirect:"/hardware/use/infrared/"},{name:"v-58f458a4",path:"/hardware/use/beep/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-58f458a4").then(t)}},{path:"/hardware/use/beep/index.html",redirect:"/hardware/use/beep/"},{path:"/03.硬件知识/03.原理模块设计/09.蜂鸣器.html",redirect:"/hardware/use/beep/"},{name:"v-156cc6db",path:"/hardware/use/fan/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-156cc6db").then(t)}},{path:"/hardware/use/fan/index.html",redirect:"/hardware/use/fan/"},{path:"/03.硬件知识/03.原理模块设计/12.风扇.html",redirect:"/hardware/use/fan/"},{name:"v-7f0effda",path:"/hardware/use/temp/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-7f0effda").then(t)}},{path:"/hardware/use/temp/index.html",redirect:"/hardware/use/temp/"},{path:"/03.硬件知识/03.原理模块设计/11.数字温度湿度传感器.html",redirect:"/hardware/use/temp/"},{name:"v-d8f3cfbc",path:"/hardware/use/hdmi/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-d8f3cfbc").then(t)}},{path:"/hardware/use/hdmi/index.html",redirect:"/hardware/use/hdmi/"},{path:"/03.硬件知识/03.原理模块设计/13.HDMI.html",redirect:"/hardware/use/hdmi/"},{name:"v-5a682088",path:"/hardware/use/dvi/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5a682088").then(t)}},{path:"/hardware/use/dvi/index.html",redirect:"/hardware/use/dvi/"},{path:"/03.硬件知识/03.原理模块设计/14.DVI.html",redirect:"/hardware/use/dvi/"},{name:"v-5071b594",path:"/hardware/use/vga/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5071b594").then(t)}},{path:"/hardware/use/vga/index.html",redirect:"/hardware/use/vga/"},{path:"/03.硬件知识/03.原理模块设计/15.VGA.html",redirect:"/hardware/use/vga/"},{name:"v-8b4b9bfc",path:"/hardware/use/dp/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-8b4b9bfc").then(t)}},{path:"/hardware/use/dp/index.html",redirect:"/hardware/use/dp/"},{path:"/03.硬件知识/03.原理模块设计/16.DP.html",redirect:"/hardware/use/dp/"},{name:"v-4d2d85fc",path:"/hardware/use/lvds/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-4d2d85fc").then(t)}},{path:"/hardware/use/lvds/index.html",redirect:"/hardware/use/lvds/"},{path:"/03.硬件知识/03.原理模块设计/17.LVDS.html",redirect:"/hardware/use/lvds/"},{name:"v-490e56d8",path:"/hardware/use/lcd/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-490e56d8").then(t)}},{path:"/hardware/use/lcd/index.html",redirect:"/hardware/use/lcd/"},{path:"/03.硬件知识/03.原理模块设计/18.LCD.html",redirect:"/hardware/use/lcd/"},{name:"v-61b44b6c",path:"/hardware/use/clk/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-61b44b6c").then(t)}},{path:"/hardware/use/clk/index.html",redirect:"/hardware/use/clk/"},{path:"/03.硬件知识/03.原理模块设计/19.时钟.html",redirect:"/hardware/use/clk/"},{name:"v-0bb7cad2",path:"/hardware/use/reset/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0bb7cad2").then(t)}},{path:"/hardware/use/reset/index.html",redirect:"/hardware/use/reset/"},{path:"/03.硬件知识/03.原理模块设计/20.复位.html",redirect:"/hardware/use/reset/"},{name:"v-8e84a37c",path:"/hardware/use/eeprom/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-8e84a37c").then(t)}},{path:"/hardware/use/eeprom/index.html",redirect:"/hardware/use/eeprom/"},{path:"/03.硬件知识/03.原理模块设计/21.EEPROM.html",redirect:"/hardware/use/eeprom/"},{name:"v-63bc3f07",path:"/hardware/use/spi/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-63bc3f07").then(t)}},{path:"/hardware/use/spi/index.html",redirect:"/hardware/use/spi/"},{path:"/03.硬件知识/03.原理模块设计/22.SPI Flash.html",redirect:"/hardware/use/spi/"},{name:"v-15f8803c",path:"/hardware/use/ddr3/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-15f8803c").then(t)}},{path:"/hardware/use/ddr3/index.html",redirect:"/hardware/use/ddr3/"},{path:"/03.硬件知识/03.原理模块设计/23.DDR3.html",redirect:"/hardware/use/ddr3/"},{name:"v-b6ec883c",path:"/hardware/use/ddr4/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-b6ec883c").then(t)}},{path:"/hardware/use/ddr4/index.html",redirect:"/hardware/use/ddr4/"},{path:"/03.硬件知识/03.原理模块设计/24.DDR4.html",redirect:"/hardware/use/ddr4/"},{name:"v-15923fe2",path:"/hardware/use/sodimm/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-15923fe2").then(t)}},{path:"/hardware/use/sodimm/index.html",redirect:"/hardware/use/sodimm/"},{path:"/03.硬件知识/03.原理模块设计/25.SODIMM.html",redirect:"/hardware/use/sodimm/"},{name:"v-6ec220b6",path:"/hardware/use/qdr/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6ec220b6").then(t)}},{path:"/hardware/use/qdr/index.html",redirect:"/hardware/use/qdr/"},{path:"/03.硬件知识/03.原理模块设计/26.QDR.html",redirect:"/hardware/use/qdr/"},{name:"v-58e48742",path:"/hardware/use/emmc/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-58e48742").then(t)}},{path:"/hardware/use/emmc/index.html",redirect:"/hardware/use/emmc/"},{path:"/03.硬件知识/03.原理模块设计/27.EMMC.html",redirect:"/hardware/use/emmc/"},{name:"v-7d39e2f6",path:"/hardware/use/nand/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-7d39e2f6").then(t)}},{path:"/hardware/use/nand/index.html",redirect:"/hardware/use/nand/"},{path:"/03.硬件知识/03.原理模块设计/28.NAND FLASH.html",redirect:"/hardware/use/nand/"},{name:"v-0c03c4a2",path:"/hardware/use/nor/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0c03c4a2").then(t)}},{path:"/hardware/use/nor/index.html",redirect:"/hardware/use/nor/"},{path:"/03.硬件知识/03.原理模块设计/29.NOR FLASH.html",redirect:"/hardware/use/nor/"},{name:"v-60cc5aa2",path:"/hardware/use/jtag/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-60cc5aa2").then(t)}},{path:"/hardware/use/jtag/index.html",redirect:"/hardware/use/jtag/"},{path:"/03.硬件知识/03.原理模块设计/31.JTAG.html",redirect:"/hardware/use/jtag/"},{name:"v-5a38e6b0",path:"/hardware/use/sdram/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5a38e6b0").then(t)}},{path:"/hardware/use/sdram/index.html",redirect:"/hardware/use/sdram/"},{path:"/03.硬件知识/03.原理模块设计/30.SDRAM.html",redirect:"/hardware/use/sdram/"},{name:"v-d93d5cc4",path:"/hardware/use/ps2/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-d93d5cc4").then(t)}},{path:"/hardware/use/ps2/index.html",redirect:"/hardware/use/ps2/"},{path:"/03.硬件知识/03.原理模块设计/33.PS2.html",redirect:"/hardware/use/ps2/"},{name:"v-0be2f604",path:"/hardware/use/swd/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0be2f604").then(t)}},{path:"/hardware/use/swd/index.html",redirect:"/hardware/use/swd/"},{path:"/03.硬件知识/03.原理模块设计/32.SWD.html",redirect:"/hardware/use/swd/"},{name:"v-07127d1c",path:"/hardware/use/usb/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-07127d1c").then(t)}},{path:"/hardware/use/usb/index.html",redirect:"/hardware/use/usb/"},{path:"/03.硬件知识/03.原理模块设计/34.USB.html",redirect:"/hardware/use/usb/"},{name:"v-3cbcb3c7",path:"/hardware/use/usbhub/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3cbcb3c7").then(t)}},{path:"/hardware/use/usbhub/index.html",redirect:"/hardware/use/usbhub/"},{path:"/03.硬件知识/03.原理模块设计/36.USB HUB.html",redirect:"/hardware/use/usbhub/"},{name:"v-df678a1e",path:"/hardware/use/usbphy/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-df678a1e").then(t)}},{path:"/hardware/use/usbphy/index.html",redirect:"/hardware/use/usbphy/"},{path:"/03.硬件知识/03.原理模块设计/35.USB PHY.html",redirect:"/hardware/use/usbphy/"},{name:"v-2efae27f",path:"/hardware/use/usbhost/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2efae27f").then(t)}},{path:"/hardware/use/usbhost/index.html",redirect:"/hardware/use/usbhost/"},{path:"/03.硬件知识/03.原理模块设计/37.USB HOST.html",redirect:"/hardware/use/usbhost/"},{name:"v-eb82b1a0",path:"/hardware/use/usb30/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-eb82b1a0").then(t)}},{path:"/hardware/use/usb30/index.html",redirect:"/hardware/use/usb30/"},{path:"/03.硬件知识/03.原理模块设计/38.USB30.html",redirect:"/hardware/use/usb30/"},{name:"v-670549ce",path:"/hardware/use/pcie2usb/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-670549ce").then(t)}},{path:"/hardware/use/pcie2usb/index.html",redirect:"/hardware/use/pcie2usb/"},{path:"/03.硬件知识/03.原理模块设计/39.PCIE转USB.html",redirect:"/hardware/use/pcie2usb/"},{name:"v-3fc803b2",path:"/hardware/use/typec/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3fc803b2").then(t)}},{path:"/hardware/use/typec/index.html",redirect:"/hardware/use/typec/"},{path:"/03.硬件知识/03.原理模块设计/40.TypeC.html",redirect:"/hardware/use/typec/"},{name:"v-f3b67386",path:"/hardware/use/audio/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-f3b67386").then(t)}},{path:"/hardware/use/audio/index.html",redirect:"/hardware/use/audio/"},{path:"/03.硬件知识/03.原理模块设计/41.音频.html",redirect:"/hardware/use/audio/"},{name:"v-d7f1afac",path:"/hardware/use/led/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-d7f1afac").then(t)}},{path:"/hardware/use/led/index.html",redirect:"/hardware/use/led/"},{path:"/03.硬件知识/03.原理模块设计/42.LED.html",redirect:"/hardware/use/led/"},{name:"v-e24e9b3c",path:"/hardware/use/sata/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-e24e9b3c").then(t)}},{path:"/hardware/use/sata/index.html",redirect:"/hardware/use/sata/"},{path:"/03.硬件知识/03.原理模块设计/43.SATA.html",redirect:"/hardware/use/sata/"},{name:"v-391a74ac",path:"/hardware/use/msata/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-391a74ac").then(t)}},{path:"/hardware/use/msata/index.html",redirect:"/hardware/use/msata/"},{path:"/03.硬件知识/03.原理模块设计/44.mSATA.html",redirect:"/hardware/use/msata/"},{name:"v-a6e0b3bc",path:"/hardware/use/m2/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-a6e0b3bc").then(t)}},{path:"/hardware/use/m2/index.html",redirect:"/hardware/use/m2/"},{path:"/03.硬件知识/03.原理模块设计/45.M2.html",redirect:"/hardware/use/m2/"},{name:"v-18040388",path:"/hardware/use/pcie2sata/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-18040388").then(t)}},{path:"/hardware/use/pcie2sata/index.html",redirect:"/hardware/use/pcie2sata/"},{path:"/03.硬件知识/03.原理模块设计/46.PCIe转SATA.html",redirect:"/hardware/use/pcie2sata/"},{name:"v-2b52b462",path:"/hardware/use/pcie/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2b52b462").then(t)}},{path:"/hardware/use/pcie/index.html",redirect:"/hardware/use/pcie/"},{path:"/03.硬件知识/03.原理模块设计/47.PCIe.html",redirect:"/hardware/use/pcie/"},{name:"v-7965789e",path:"/hardware/use/pcie2serial/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-7965789e").then(t)}},{path:"/hardware/use/pcie2serial/index.html",redirect:"/hardware/use/pcie2serial/"},{path:"/03.硬件知识/03.原理模块设计/48.PCIe转串口并口.html",redirect:"/hardware/use/pcie2serial/"},{name:"v-46bd822e",path:"/hardware/use/pcie2eth/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-46bd822e").then(t)}},{path:"/hardware/use/pcie2eth/index.html",redirect:"/hardware/use/pcie2eth/"},{path:"/03.硬件知识/03.原理模块设计/49.PCIe转网口.html",redirect:"/hardware/use/pcie2eth/"},{name:"v-db5076d4",path:"/hardware/use/rgmii/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-db5076d4").then(t)}},{path:"/hardware/use/rgmii/index.html",redirect:"/hardware/use/rgmii/"},{path:"/03.硬件知识/03.原理模块设计/50.RGMII.html",redirect:"/hardware/use/rgmii/"},{name:"v-66f148ec",path:"/hardware/use/sim/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-66f148ec").then(t)}},{path:"/hardware/use/sim/index.html",redirect:"/hardware/use/sim/"},{path:"/03.硬件知识/03.原理模块设计/51.M2-5G-SIM卡.html",redirect:"/hardware/use/sim/"},{name:"v-3bb07131",path:"/hardware/use/m2wifi/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3bb07131").then(t)}},{path:"/hardware/use/m2wifi/index.html",redirect:"/hardware/use/m2wifi/"},{path:"/03.硬件知识/03.原理模块设计/52.M2-WIFI-蓝牙.html",redirect:"/hardware/use/m2wifi/"},{name:"v-a08a6cf2",path:"/hardware/use/wifi/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-a08a6cf2").then(t)}},{path:"/hardware/use/wifi/index.html",redirect:"/hardware/use/wifi/"},{path:"/03.硬件知识/03.原理模块设计/53.WIFI-蓝牙.html",redirect:"/hardware/use/wifi/"},{name:"v-a0a23c7c",path:"/hardware/use/mipi/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-a0a23c7c").then(t)}},{path:"/hardware/use/mipi/index.html",redirect:"/hardware/use/mipi/"},{path:"/03.硬件知识/03.原理模块设计/55.MIPI.html",redirect:"/hardware/use/mipi/"},{name:"v-2a4ecd88",path:"/hardware/use/vpx/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2a4ecd88").then(t)}},{path:"/hardware/use/vpx/index.html",redirect:"/hardware/use/vpx/"},{path:"/03.硬件知识/03.原理模块设计/57.VPX.html",redirect:"/hardware/use/vpx/"},{name:"v-866120c2",path:"/hardware/use/dvp/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-866120c2").then(t)}},{path:"/hardware/use/dvp/index.html",redirect:"/hardware/use/dvp/"},{path:"/03.硬件知识/03.原理模块设计/54.摄像头DVP.html",redirect:"/hardware/use/dvp/"},{name:"v-7a242d02",path:"/hardware/use/fmc/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-7a242d02").then(t)}},{path:"/hardware/use/fmc/index.html",redirect:"/hardware/use/fmc/"},{path:"/03.硬件知识/03.原理模块设计/56.FMC.html",redirect:"/hardware/use/fmc/"},{name:"v-d9f5d5c4",path:"/hardware/use/power/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-d9f5d5c4").then(t)}},{path:"/hardware/use/power/index.html",redirect:"/hardware/use/power/"},{path:"/03.硬件知识/04.原理电源设计/01.电源设计方法.html",redirect:"/hardware/use/power/"},{name:"v-1dc38e57",path:"/hardware/use/power/atx/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1dc38e57").then(t)}},{path:"/hardware/use/power/atx/index.html",redirect:"/hardware/use/power/atx/"},{path:"/03.硬件知识/04.原理电源设计/02.ATX.html",redirect:"/hardware/use/power/atx/"},{name:"v-459d5263",path:"/hardware/use/power/12v/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-459d5263").then(t)}},{path:"/hardware/use/power/12v/index.html",redirect:"/hardware/use/power/12v/"},{path:"/03.硬件知识/04.原理电源设计/03.12V电源适配器.html",redirect:"/hardware/use/power/12v/"},{name:"v-a924237e",path:"/hardware/use/power/tps62130/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-a924237e").then(t)}},{path:"/hardware/use/power/tps62130/index.html",redirect:"/hardware/use/power/tps62130/"},{path:"/03.硬件知识/04.原理电源设计/04.TPS62130.html",redirect:"/hardware/use/power/tps62130/"},{name:"v-6002cbfe",path:"/hardware/use/power/tps54620/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6002cbfe").then(t)}},{path:"/hardware/use/power/tps54620/index.html",redirect:"/hardware/use/power/tps54620/"},{path:"/03.硬件知识/04.原理电源设计/05.TPS54620.html",redirect:"/hardware/use/power/tps54620/"},{name:"v-dedafbfe",path:"/hardware/use/power/tps51200/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-dedafbfe").then(t)}},{path:"/hardware/use/power/tps51200/index.html",redirect:"/hardware/use/power/tps51200/"},{path:"/03.硬件知识/04.原理电源设计/06.TPS51200.html",redirect:"/hardware/use/power/tps51200/"},{name:"v-6d935179",path:"/hardware/use/power/is6608a/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6d935179").then(t)}},{path:"/hardware/use/power/is6608a/index.html",redirect:"/hardware/use/power/is6608a/"},{path:"/03.硬件知识/04.原理电源设计/07.IS6608A.html",redirect:"/hardware/use/power/is6608a/"},{name:"v-1073f2ec",path:"/hardware/cadence/device/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1073f2ec").then(t)}},{path:"/hardware/cadence/device/index.html",redirect:"/hardware/cadence/device/"},{path:"/03.硬件知识/07.Cadence/01.Allegro Device文件详解.html",redirect:"/hardware/cadence/device/"},{name:"v-34ff6ca6",path:"/hardware/cadence/allegro/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-34ff6ca6").then(t)}},{path:"/hardware/cadence/allegro/index.html",redirect:"/hardware/cadence/allegro/"},{path:"/03.硬件知识/07.Cadence/02.Allegro小知识.html",redirect:"/hardware/cadence/allegro/"},{name:"v-42c8d527",path:"/hardware/ad/rou/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-42c8d527").then(t)}},{path:"/hardware/ad/rou/index.html",redirect:"/hardware/ad/rou/"},{path:"/03.硬件知识/08.Altium Designer/01.刚挠设计.html",redirect:"/hardware/ad/rou/"},{name:"v-dc1e5696",path:"/hardware/cadence/orcad/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-dc1e5696").then(t)}},{path:"/hardware/cadence/orcad/index.html",redirect:"/hardware/cadence/orcad/"},{path:"/03.硬件知识/07.Cadence/03.OrCAD小知识.html",redirect:"/hardware/cadence/orcad/"},{name:"v-14b63fb6",path:"/hardware/ad/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-14b63fb6").then(t)}},{path:"/hardware/ad/index.html",redirect:"/hardware/ad/"},{path:"/03.硬件知识/08.Altium Designer/02.AD小知识.html",redirect:"/hardware/ad/"},{name:"v-20977689",path:"/hardware/mentor/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-20977689").then(t)}},{path:"/hardware/mentor/index.html",redirect:"/hardware/mentor/"},{path:"/03.硬件知识/09.Mentor/02.Mentor小知识.html",redirect:"/hardware/mentor/"},{name:"v-3c1d644a",path:"/hardware/mentor/shortkey/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3c1d644a").then(t)}},{path:"/hardware/mentor/shortkey/index.html",redirect:"/hardware/mentor/shortkey/"},{path:"/03.硬件知识/09.Mentor/01.快捷键.html",redirect:"/hardware/mentor/shortkey/"},{name:"v-c6124cee",path:"/hardware/pads/command/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-c6124cee").then(t)}},{path:"/hardware/pads/command/index.html",redirect:"/hardware/pads/command/"},{path:"/03.硬件知识/10.Pads/01.Pads无模命令.html",redirect:"/hardware/pads/command/"},{name:"v-f54ab30e",path:"/hardware/c51/led/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-f54ab30e").then(t)}},{path:"/hardware/c51/led/index.html",redirect:"/hardware/c51/led/"},{path:"/03.硬件知识/11.C51汇编/01.点亮LED.html",redirect:"/hardware/c51/led/"},{name:"v-5e62b2a2",path:"/hardware/c51/led/multi/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5e62b2a2").then(t)}},{path:"/hardware/c51/led/multi/index.html",redirect:"/hardware/c51/led/multi/"},{path:"/03.硬件知识/11.C51汇编/02.多LED亮灭.html",redirect:"/hardware/c51/led/multi/"},{name:"v-3e82775e",path:"/hardware/c51/switch/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3e82775e").then(t)}},{path:"/hardware/c51/switch/index.html",redirect:"/hardware/c51/switch/"},{path:"/03.硬件知识/11.C51汇编/03.开关控制灯亮灭.html",redirect:"/hardware/c51/switch/"},{name:"v-287cec73",path:"/hardware/c51/switch/multi/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-287cec73").then(t)}},{path:"/hardware/c51/switch/multi/index.html",redirect:"/hardware/c51/switch/multi/"},{path:"/03.硬件知识/11.C51汇编/04.多开关控制灯亮灭.html",redirect:"/hardware/c51/switch/multi/"},{name:"v-2cd2db6f",path:"/hardware/c51/switch/antishake/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2cd2db6f").then(t)}},{path:"/hardware/c51/switch/antishake/index.html",redirect:"/hardware/c51/switch/antishake/"},{path:"/03.硬件知识/11.C51汇编/05.多开关控制灯亮灭-软件防抖.html",redirect:"/hardware/c51/switch/antishake/"},{name:"v-2741cd6f",path:"/hardware/c51/led/table/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2741cd6f").then(t)}},{path:"/hardware/c51/led/table/index.html",redirect:"/hardware/c51/led/table/"},{path:"/03.硬件知识/11.C51汇编/06.查表方式灯循环亮灭.html",redirect:"/hardware/c51/led/table/"},{name:"v-1d354fb3",path:"/hardware/c51/switch/table/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1d354fb3").then(t)}},{path:"/hardware/c51/switch/table/index.html",redirect:"/hardware/c51/switch/table/"},{path:"/03.硬件知识/11.C51汇编/07.查表方式按键控制灯亮灭.html",redirect:"/hardware/c51/switch/table/"},{name:"v-37d824b0",path:"/hardware/c51/led/neonlamp/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-37d824b0").then(t)}},{path:"/hardware/c51/led/neonlamp/index.html",redirect:"/hardware/c51/led/neonlamp/"},{path:"/03.硬件知识/11.C51汇编/08.查表方式霓虹灯.html",redirect:"/hardware/c51/led/neonlamp/"},{name:"v-0e277298",path:"/hardware/stm32/info/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0e277298").then(t)}},{path:"/hardware/stm32/info/index.html",redirect:"/hardware/stm32/info/"},{path:"/03.硬件知识/12.STM32/01.介绍.html",redirect:"/hardware/stm32/info/"},{name:"v-82223bb8",path:"/hardware/stm32/inner/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-82223bb8").then(t)}},{path:"/hardware/stm32/inner/index.html",redirect:"/hardware/stm32/inner/"},{path:"/03.硬件知识/12.STM32/02.STM32F407芯片内部.html",redirect:"/hardware/stm32/inner/"},{name:"v-88880c64",path:"/hardware/stm32/new/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-88880c64").then(t)}},{path:"/hardware/stm32/new/index.html",redirect:"/hardware/stm32/new/"},{path:"/03.硬件知识/12.STM32/04.新建工程.html",redirect:"/hardware/stm32/new/"},{name:"v-16a4de85",path:"/hardware/stm32/path/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-16a4de85").then(t)}},{path:"/hardware/stm32/path/index.html",redirect:"/hardware/stm32/path/"},{path:"/03.硬件知识/12.STM32/03.环境安装与下载方式.html",redirect:"/hardware/stm32/path/"},{name:"v-4f637454",path:"/hardware/stm32/gpio/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-4f637454").then(t)}},{path:"/hardware/stm32/gpio/index.html",redirect:"/hardware/stm32/gpio/"},{path:"/03.硬件知识/12.STM32/05.GPIO工作原理.html",redirect:"/hardware/stm32/gpio/"},{name:"v-c9d4805e",path:"/hardware/stm32/led/bit/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-c9d4805e").then(t)}},{path:"/hardware/stm32/led/bit/index.html",redirect:"/hardware/stm32/led/bit/"},{path:"/03.硬件知识/12.STM32/06.跑马灯-寄存器.html",redirect:"/hardware/stm32/led/bit/"},{name:"v-3dcf58ea",path:"/hardware/stm32/led/fun/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3dcf58ea").then(t)}},{path:"/hardware/stm32/led/fun/index.html",redirect:"/hardware/stm32/led/fun/"},{path:"/03.硬件知识/12.STM32/07.跑马灯-库函数.html",redirect:"/hardware/stm32/led/fun/"},{name:"v-5164c29a",path:"/hardware/stm32/beep/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5164c29a").then(t)}},{path:"/hardware/stm32/beep/index.html",redirect:"/hardware/stm32/beep/"},{path:"/03.硬件知识/12.STM32/08.蜂鸣器.html",redirect:"/hardware/stm32/beep/"},{name:"v-19a59450",path:"/hardware/stm32/key/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-19a59450").then(t)}},{path:"/hardware/stm32/key/index.html",redirect:"/hardware/stm32/key/"},{path:"/03.硬件知识/12.STM32/09.按键.html",redirect:"/hardware/stm32/key/"},{name:"v-2b788427",path:"/hardware/vivado/ver/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2b788427").then(t)}},{path:"/hardware/vivado/ver/index.html",redirect:"/hardware/vivado/ver/"},{path:"/03.硬件知识/13.Vivado/01.Vivado与Matlab版本匹配.html",redirect:"/hardware/vivado/ver/"},{name:"v-4010dc95",path:"/hardware/vivado/pindelay/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-4010dc95").then(t)}},{path:"/hardware/vivado/pindelay/index.html",redirect:"/hardware/vivado/pindelay/"},{path:"/03.硬件知识/13.Vivado/03.Vivado生成Pin Delay.html",redirect:"/hardware/vivado/pindelay/"},{name:"v-53eb987c",path:"/hardware/vivado/install/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-53eb987c").then(t)}},{path:"/hardware/vivado/install/index.html",redirect:"/hardware/vivado/install/"},{path:"/03.硬件知识/13.Vivado/02.Vivado安装.html",redirect:"/hardware/vivado/install/"},{name:"v-b1d955aa",path:"/hardware/dl/gpio/info/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-b1d955aa").then(t)}},{path:"/hardware/dl/gpio/info/index.html",redirect:"/hardware/dl/gpio/info/"},{path:"/03.硬件知识/14.常见电路/02.STM32的GPIO介绍.html",redirect:"/hardware/dl/gpio/info/"},{name:"v-7bfcafde",path:"/hardware/dl/gpio/output/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-7bfcafde").then(t)}},{path:"/hardware/dl/gpio/output/index.html",redirect:"/hardware/dl/gpio/output/"},{path:"/03.硬件知识/14.常见电路/03.GPIO的推挽输出和开漏输出.html",redirect:"/hardware/dl/gpio/output/"},{name:"v-46cece01",path:"/hardware/dl/filter/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-46cece01").then(t)}},{path:"/hardware/dl/filter/index.html",redirect:"/hardware/dl/filter/"},{path:"/03.硬件知识/14.常见电路/01.滤波电路及原理.html",redirect:"/hardware/dl/filter/"},{name:"v-56b76baa",path:"/hardware/vivado/project/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-56b76baa").then(t)}},{path:"/hardware/vivado/project/index.html",redirect:"/hardware/vivado/project/"},{path:"/03.硬件知识/13.Vivado/04.Vivado创建工程.html",redirect:"/hardware/vivado/project/"},{name:"v-14963d9a",path:"/front/vuepress/reco/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-14963d9a").then(t)}},{path:"/front/vuepress/reco/index.html",redirect:"/front/vuepress/reco/"},{path:"/04.前端构建/07.VuePress/02.VuePress-reco主题安装配置.html",redirect:"/front/vuepress/reco/"},{name:"v-fa66493c",path:"/front/vuepress/install/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-fa66493c").then(t)}},{path:"/front/vuepress/install/index.html",redirect:"/front/vuepress/install/"},{path:"/04.前端构建/07.VuePress/01.VuePress安装配置.html",redirect:"/front/vuepress/install/"},{name:"v-3db965cd",path:"/front/vuepress/plugin/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3db965cd").then(t)}},{path:"/front/vuepress/plugin/index.html",redirect:"/front/vuepress/plugin/"},{path:"/04.前端构建/07.VuePress/05.插件的使用.html",redirect:"/front/vuepress/plugin/"},{name:"v-2c524c7e",path:"/front/vuepress/deploy/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2c524c7e").then(t)}},{path:"/front/vuepress/deploy/index.html",redirect:"/front/vuepress/deploy/"},{path:"/04.前端构建/07.VuePress/06.部署.html",redirect:"/front/vuepress/deploy/"},{name:"v-ca704d54",path:"/soft/springboot/use/log/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-ca704d54").then(t)}},{path:"/soft/springboot/use/log/index.html",redirect:"/soft/springboot/use/log/"},{path:"/06.软件开发/01.Springboot使用/03.log使用.html",redirect:"/soft/springboot/use/log/"},{name:"v-1547526e",path:"/soft/springboot/use/multi/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1547526e").then(t)}},{path:"/soft/springboot/use/multi/index.html",redirect:"/soft/springboot/use/multi/"},{path:"/06.软件开发/01.Springboot使用/01.多模块项目.html",redirect:"/soft/springboot/use/multi/"},{name:"v-0c579bc8",path:"/soft/springboot/use/banner/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0c579bc8").then(t)}},{path:"/soft/springboot/use/banner/index.html",redirect:"/soft/springboot/use/banner/"},{path:"/06.软件开发/01.Springboot使用/02.banner使用.html",redirect:"/soft/springboot/use/banner/"},{name:"v-e342d128",path:"/soft/springboot/use/springdoc/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-e342d128").then(t)}},{path:"/soft/springboot/use/springdoc/index.html",redirect:"/soft/springboot/use/springdoc/"},{path:"/06.软件开发/01.Springboot使用/04.springdoc.html",redirect:"/soft/springboot/use/springdoc/"},{name:"v-c34a4f98",path:"/soft/springboot/use/exception/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-c34a4f98").then(t)}},{path:"/soft/springboot/use/exception/index.html",redirect:"/soft/springboot/use/exception/"},{path:"/06.软件开发/01.Springboot使用/05.全局异常.html",redirect:"/soft/springboot/use/exception/"},{name:"v-1adacf72",path:"/soft/springboot/use/result/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1adacf72").then(t)}},{path:"/soft/springboot/use/result/index.html",redirect:"/soft/springboot/use/result/"},{path:"/06.软件开发/01.Springboot使用/06.统一返回结果.html",redirect:"/soft/springboot/use/result/"},{name:"v-306ba20e",path:"/soft/springboot/use/mysql/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-306ba20e").then(t)}},{path:"/soft/springboot/use/mysql/index.html",redirect:"/soft/springboot/use/mysql/"},{path:"/06.软件开发/01.Springboot使用/07.mysql-druid-mybatisplus.html",redirect:"/soft/springboot/use/mysql/"},{name:"v-0e33fd3b",path:"/soft/springboot/use/join/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0e33fd3b").then(t)}},{path:"/soft/springboot/use/join/index.html",redirect:"/soft/springboot/use/join/"},{path:"/06.软件开发/01.Springboot使用/08.mybatis-plus多表关联查询.html",redirect:"/soft/springboot/use/join/"},{name:"v-1bcb0090",path:"/soft/springboot/use/page/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1bcb0090").then(t)}},{path:"/soft/springboot/use/page/index.html",redirect:"/soft/springboot/use/page/"},{path:"/06.软件开发/01.Springboot使用/09.分页查询.html",redirect:"/soft/springboot/use/page/"},{name:"v-6bf4862e",path:"/soft/springboot/use/crud/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6bf4862e").then(t)}},{path:"/soft/springboot/use/crud/index.html",redirect:"/soft/springboot/use/crud/"},{path:"/06.软件开发/01.Springboot使用/10.表CRUD.html",redirect:"/soft/springboot/use/crud/"},{name:"v-485dcc14",path:"/soft/webapi/info/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-485dcc14").then(t)}},{path:"/soft/webapi/info/index.html",redirect:"/soft/webapi/info/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/01.WebApi增删改查01-说明.html",redirect:"/soft/webapi/info/"},{name:"v-1bc17c74",path:"/soft/webapi/newproject/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1bc17c74").then(t)}},{path:"/soft/webapi/newproject/index.html",redirect:"/soft/webapi/newproject/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/02.WebApi增删改查02-新建工程.html",redirect:"/soft/webapi/newproject/"},{name:"v-a1cd5756",path:"/soft/webapi/swagger/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-a1cd5756").then(t)}},{path:"/soft/webapi/swagger/index.html",redirect:"/soft/webapi/swagger/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/03.WebApi增删改查03-Swagger配置.html",redirect:"/soft/webapi/swagger/"},{name:"v-c16619ee",path:"/soft/webapi/sqlsugar/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-c16619ee").then(t)}},{path:"/soft/webapi/sqlsugar/index.html",redirect:"/soft/webapi/sqlsugar/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/04.WebApi增删改查04-SqlSugar配置.html",redirect:"/soft/webapi/sqlsugar/"},{name:"v-70147bcf",path:"/soft/webapi/log4net/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-70147bcf").then(t)}},{path:"/soft/webapi/log4net/index.html",redirect:"/soft/webapi/log4net/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/05.WebApi增删改查05-Log4Net配置.html",redirect:"/soft/webapi/log4net/"},{name:"v-1063e789",path:"/soft/webapi/automapper/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1063e789").then(t)}},{path:"/soft/webapi/automapper/index.html",redirect:"/soft/webapi/automapper/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/06.WebApi增删改查06-AutoMapper配置.html",redirect:"/soft/webapi/automapper/"},{name:"v-707cfa82",path:"/soft/webapi/user/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-707cfa82").then(t)}},{path:"/soft/webapi/user/index.html",redirect:"/soft/webapi/user/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/07.WebApi增删改查07-用户增删改查.html",redirect:"/soft/webapi/user/"},{name:"v-72d5170e",path:"/soft/webapi/jwt/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-72d5170e").then(t)}},{path:"/soft/webapi/jwt/index.html",redirect:"/soft/webapi/jwt/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/08.WebApi增删改查08-JWT配置实现.html",redirect:"/soft/webapi/jwt/"},{name:"v-5086963b",path:"/soft/webapi/login/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5086963b").then(t)}},{path:"/soft/webapi/login/index.html",redirect:"/soft/webapi/login/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/09.WebApi增删改查09-登录.html",redirect:"/soft/webapi/login/"},{name:"v-331adf9a",path:"/soft/webapi/redis/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-331adf9a").then(t)}},{path:"/soft/webapi/redis/index.html",redirect:"/soft/webapi/redis/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/10.WebApi增删改查10-Redis配置.html",redirect:"/soft/webapi/redis/"},{name:"v-410fcd31",path:"/soft/webapi/cors/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-410fcd31").then(t)}},{path:"/soft/webapi/cors/index.html",redirect:"/soft/webapi/cors/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/11.WebApi增删改查11-跨域CORS解决.html",redirect:"/soft/webapi/cors/"},{name:"v-0e82b9b7",path:"/soft/wpf/info/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0e82b9b7").then(t)}},{path:"/soft/wpf/info/index.html",redirect:"/soft/wpf/info/"},{path:"/06.软件开发/05.WPF/02.WPF增删改查/01.WPF项增删改查01-说明.html",redirect:"/soft/wpf/info/"},{name:"v-842371a0",path:"/soft/webapi/docker/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-842371a0").then(t)}},{path:"/soft/webapi/docker/index.html",redirect:"/soft/webapi/docker/"},{path:"/06.软件开发/05.WPF/01.WebAPI增删改查/12.WebApi增删改查12-Docker发布.html",redirect:"/soft/webapi/docker/"},{name:"v-7eab0886",path:"/soft/wpf/newproject/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-7eab0886").then(t)}},{path:"/soft/wpf/newproject/index.html",redirect:"/soft/wpf/newproject/"},{path:"/06.软件开发/05.WPF/02.WPF增删改查/02.WPF项增删改查02-新建工程.html",redirect:"/soft/wpf/newproject/"},{name:"v-6be47dea",path:"/soft/wpf/caliburn/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6be47dea").then(t)}},{path:"/soft/wpf/caliburn/index.html",redirect:"/soft/wpf/caliburn/"},{path:"/06.软件开发/05.WPF/02.WPF增删改查/03.WPF项增删改查03-Caliburn配置.html",redirect:"/soft/wpf/caliburn/"},{name:"v-1b775658",path:"/soft/wpf/handycontrol/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1b775658").then(t)}},{path:"/soft/wpf/handycontrol/index.html",redirect:"/soft/wpf/handycontrol/"},{path:"/06.软件开发/05.WPF/02.WPF增删改查/04.WPF项增删改查04-HandyControl配置.html",redirect:"/soft/wpf/handycontrol/"},{name:"v-b3b2e64a",path:"/soft/wpf/pages/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-b3b2e64a").then(t)}},{path:"/soft/wpf/pages/index.html",redirect:"/soft/wpf/pages/"},{path:"/06.软件开发/05.WPF/02.WPF增删改查/05.WPF增删改查05-页面切换.html",redirect:"/soft/wpf/pages/"},{name:"v-7cda3b26",path:"/soft/wpf/restsharp/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-7cda3b26").then(t)}},{path:"/soft/wpf/restsharp/index.html",redirect:"/soft/wpf/restsharp/"},{path:"/06.软件开发/05.WPF/02.WPF增删改查/06.WPF增删改查06-RestSharp.html",redirect:"/soft/wpf/restsharp/"},{name:"v-5269a9a3",path:"/soft/wpf/user/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5269a9a3").then(t)}},{path:"/soft/wpf/user/index.html",redirect:"/soft/wpf/user/"},{path:"/06.软件开发/05.WPF/02.WPF增删改查/07.WPF增删改查07-用户增删改查.html",redirect:"/soft/wpf/user/"},{name:"v-3fb0f994",path:"/soft/wpf/login/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3fb0f994").then(t)}},{path:"/soft/wpf/login/index.html",redirect:"/soft/wpf/login/"},{path:"/06.软件开发/05.WPF/02.WPF增删改查/08.WPF增删改查08-登录实现.html",redirect:"/soft/wpf/login/"},{name:"v-20f7c41f",path:"/soft/wpf/beautify/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-20f7c41f").then(t)}},{path:"/soft/wpf/beautify/index.html",redirect:"/soft/wpf/beautify/"},{path:"/06.软件开发/05.WPF/02.WPF增删改查/09.WPF增删改查09-美化.html",redirect:"/soft/wpf/beautify/"},{name:"v-09bf9794",path:"/soft/wpf/publish/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-09bf9794").then(t)}},{path:"/soft/wpf/publish/index.html",redirect:"/soft/wpf/publish/"},{path:"/06.软件开发/05.WPF/02.WPF增删改查/10.WPF增删改查10-发布.html",redirect:"/soft/wpf/publish/"},{name:"v-279b8f2e",path:"/soft/wpf/material/theme/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-279b8f2e").then(t)}},{path:"/soft/wpf/material/theme/index.html",redirect:"/soft/wpf/material/theme/"},{path:"/06.软件开发/05.WPF/03.MaterialDesign/01.引用MaterialDesign主题.html",redirect:"/soft/wpf/material/theme/"},{name:"v-663867c2",path:"/soft/wpf/material/animation/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-663867c2").then(t)}},{path:"/soft/wpf/material/animation/index.html",redirect:"/soft/wpf/material/animation/"},{path:"/06.软件开发/05.WPF/03.MaterialDesign/03.动画显示.html",redirect:"/soft/wpf/material/animation/"},{name:"v-37f2faac",path:"/soft/wpf/material/password/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-37f2faac").then(t)}},{path:"/soft/wpf/material/password/index.html",redirect:"/soft/wpf/material/password/"},{path:"/06.软件开发/05.WPF/03.MaterialDesign/04.Password绑定.html",redirect:"/soft/wpf/material/password/"},{name:"v-1821f942",path:"/soft/wpf/material/window/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1821f942").then(t)}},{path:"/soft/wpf/material/window/index.html",redirect:"/soft/wpf/material/window/"},{path:"/06.软件开发/05.WPF/03.MaterialDesign/02.窗口切换.html",redirect:"/soft/wpf/material/window/"},{name:"v-e34f65d4",path:"/soft/wpf/material/command/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-e34f65d4").then(t)}},{path:"/soft/wpf/material/command/index.html",redirect:"/soft/wpf/material/command/"},{path:"/06.软件开发/05.WPF/03.MaterialDesign/05.Command绑定.html",redirect:"/soft/wpf/material/command/"},{name:"v-6c8a3562",path:"/soft/wpf/material/property/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6c8a3562").then(t)}},{path:"/soft/wpf/material/property/index.html",redirect:"/soft/wpf/material/property/"},{path:"/06.软件开发/05.WPF/03.MaterialDesign/06.属性变化通知.html",redirect:"/soft/wpf/material/property/"},{name:"v-1bb59077",path:"/soft/python/note/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1bb59077").then(t)}},{path:"/soft/python/note/index.html",redirect:"/soft/python/note/"},{path:"/06.软件开发/07.Python/01.笔记/01.Python笔记.html",redirect:"/soft/python/note/"},{name:"v-2f4357d7",path:"/soft/python/note/excel/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2f4357d7").then(t)}},{path:"/soft/python/note/excel/index.html",redirect:"/soft/python/note/excel/"},{path:"/06.软件开发/07.Python/01.笔记/02.Python-Excel笔记.html",redirect:"/soft/python/note/excel/"},{name:"v-089a3483",path:"/soft/python/note/word/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-089a3483").then(t)}},{path:"/soft/python/note/word/index.html",redirect:"/soft/python/note/word/"},{path:"/06.软件开发/07.Python/01.笔记/04.Python-Word笔记.html",redirect:"/soft/python/note/word/"},{name:"v-ec63dd96",path:"/soft/python/autowork/lib/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-ec63dd96").then(t)}},{path:"/soft/python/autowork/lib/index.html",redirect:"/soft/python/autowork/lib/"},{path:"/06.软件开发/07.Python/03.办公自动化/01.处理Excel的类库.html",redirect:"/soft/python/autowork/lib/"},{name:"v-4d28f511",path:"/soft/python/autowork/batnew/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-4d28f511").then(t)}},{path:"/soft/python/autowork/batnew/index.html",redirect:"/soft/python/autowork/batnew/"},{path:"/06.软件开发/07.Python/03.办公自动化/02.批量处理Excel文件.html",redirect:"/soft/python/autowork/batnew/"},{name:"v-6309016c",path:"/soft/python/autowork/batopen/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6309016c").then(t)}},{path:"/soft/python/autowork/batopen/index.html",redirect:"/soft/python/autowork/batopen/"},{path:"/06.软件开发/07.Python/03.办公自动化/03.批量打开目录下所有Excel.html",redirect:"/soft/python/autowork/batopen/"},{name:"v-447ea980",path:"/soft/python/pip/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-447ea980").then(t)}},{path:"/soft/python/pip/index.html",redirect:"/soft/python/pip/"},{path:"/06.软件开发/07.Python/10.pip使用.html",redirect:"/soft/python/pip/"},{name:"v-8333508a",path:"/soft/python/pyqt/install/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-8333508a").then(t)}},{path:"/soft/python/pyqt/install/index.html",redirect:"/soft/python/pyqt/install/"},{path:"/06.软件开发/07.Python/99.PyQt安装.html",redirect:"/soft/python/pyqt/install/"},{name:"v-1168c68c",path:"/soft/qt/note/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1168c68c").then(t)}},{path:"/soft/qt/note/index.html",redirect:"/soft/qt/note/"},{path:"/06.软件开发/09.Qt/01.Qt笔记.html",redirect:"/soft/qt/note/"},{name:"v-09351090",path:"/soft/qt/convert/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-09351090").then(t)}},{path:"/soft/qt/convert/index.html",redirect:"/soft/qt/convert/"},{path:"/06.软件开发/09.Qt/02.类型互换.html",redirect:"/soft/qt/convert/"},{name:"v-6fcf56df",path:"/soft/qt/string/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6fcf56df").then(t)}},{path:"/soft/qt/string/index.html",redirect:"/soft/qt/string/"},{path:"/06.软件开发/09.Qt/03.字符串.html",redirect:"/soft/qt/string/"},{name:"v-5f2964f4",path:"/soft/qt/window/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5f2964f4").then(t)}},{path:"/soft/qt/window/index.html",redirect:"/soft/qt/window/"},{path:"/06.软件开发/09.Qt/04.窗口设置.html",redirect:"/soft/qt/window/"},{name:"v-db423e78",path:"/soft/qt/version/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-db423e78").then(t)}},{path:"/soft/qt/version/index.html",redirect:"/soft/qt/version/"},{path:"/06.软件开发/09.Qt/06.添加应用程序图标和版本信息.html",redirect:"/soft/qt/version/"},{name:"v-29af13d0",path:"/soft/qt/xlsx/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-29af13d0").then(t)}},{path:"/soft/qt/xlsx/index.html",redirect:"/soft/qt/xlsx/"},{path:"/06.软件开发/09.Qt/05.编译XLSX模块.html",redirect:"/soft/qt/xlsx/"},{name:"v-b6b0bc5c",path:"/soft/qt/messagebox/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-b6b0bc5c").then(t)}},{path:"/soft/qt/messagebox/index.html",redirect:"/soft/qt/messagebox/"},{path:"/06.软件开发/09.Qt/07.QSS 自定义QMessageBox.html",redirect:"/soft/qt/messagebox/"},{name:"v-5e870662",path:"/soft/qt/mysql/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5e870662").then(t)}},{path:"/soft/qt/mysql/index.html",redirect:"/soft/qt/mysql/"},{path:"/06.软件开发/09.Qt/08.MySQL使用.html",redirect:"/soft/qt/mysql/"},{name:"v-b7065ab0",path:"/soft/qt/clion/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-b7065ab0").then(t)}},{path:"/soft/qt/clion/index.html",redirect:"/soft/qt/clion/"},{path:"/06.软件开发/09.Qt/10.Clion配置QT.html",redirect:"/soft/qt/clion/"},{name:"v-035c257e",path:"/soft/qt/tree/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-035c257e").then(t)}},{path:"/soft/qt/tree/index.html",redirect:"/soft/qt/tree/"},{path:"/06.软件开发/09.Qt/09.TreeWidget去除虚线.html",redirect:"/soft/qt/tree/"},{name:"v-5fa31dd8",path:"/soft/qt/theme/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5fa31dd8").then(t)}},{path:"/soft/qt/theme/index.html",redirect:"/soft/qt/theme/"},{path:"/06.软件开发/09.Qt/11.QT Creator配置One Dark主题.html",redirect:"/soft/qt/theme/"},{name:"v-1e6ca26a",path:"/soft/win32/hello/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1e6ca26a").then(t)}},{path:"/soft/win32/hello/index.html",redirect:"/soft/win32/hello/"},{path:"/06.软件开发/11.Win32/01.HelloWord.html",redirect:"/soft/win32/hello/"},{name:"v-ebab6e96",path:"/soft/win32/first/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-ebab6e96").then(t)}},{path:"/soft/win32/first/index.html",redirect:"/soft/win32/first/"},{path:"/06.软件开发/11.Win32/02.第一个Windows窗口程序.html",redirect:"/soft/win32/first/"},{name:"v-3bc197ef",path:"/soft/win32/message/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3bc197ef").then(t)}},{path:"/soft/win32/message/index.html",redirect:"/soft/win32/message/"},{path:"/06.软件开发/11.Win32/03.消息.html",redirect:"/soft/win32/message/"},{name:"v-6c03cabc",path:"/soft/win32/key/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6c03cabc").then(t)}},{path:"/soft/win32/key/index.html",redirect:"/soft/win32/key/"},{path:"/06.软件开发/11.Win32/04.键盘消息.html",redirect:"/soft/win32/key/"},{name:"v-42e5bfe4",path:"/soft/win32/clock/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-42e5bfe4").then(t)}},{path:"/soft/win32/clock/index.html",redirect:"/soft/win32/clock/"},{path:"/06.软件开发/11.Win32/06.定时器消息.html",redirect:"/soft/win32/clock/"},{name:"v-151dade6",path:"/soft/win32/mouse/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-151dade6").then(t)}},{path:"/soft/win32/mouse/index.html",redirect:"/soft/win32/mouse/"},{path:"/06.软件开发/11.Win32/05.鼠标消息.html",redirect:"/soft/win32/mouse/"},{name:"v-39f3f63b",path:"/soft/win32/menu/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-39f3f63b").then(t)}},{path:"/soft/win32/menu/index.html",redirect:"/soft/win32/menu/"},{path:"/06.软件开发/11.Win32/07.菜单资源.html",redirect:"/soft/win32/menu/"},{name:"v-05b43567",path:"/soft/win32/icon/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-05b43567").then(t)}},{path:"/soft/win32/icon/index.html",redirect:"/soft/win32/icon/"},{path:"/06.软件开发/11.Win32/08.图标资源.html",redirect:"/soft/win32/icon/"},{name:"v-86a3fac4",path:"/soft/win32/cursor/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-86a3fac4").then(t)}},{path:"/soft/win32/cursor/index.html",redirect:"/soft/win32/cursor/"},{path:"/06.软件开发/11.Win32/09.光标资源.html",redirect:"/soft/win32/cursor/"},{name:"v-36b8aba4",path:"/soft/win32/string/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-36b8aba4").then(t)}},{path:"/soft/win32/string/index.html",redirect:"/soft/win32/string/"},{path:"/06.软件开发/11.Win32/10.字符串加速键资源.html",redirect:"/soft/win32/string/"},{name:"v-63c8adb6",path:"/soft/win32/graphic/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-63c8adb6").then(t)}},{path:"/soft/win32/graphic/index.html",redirect:"/soft/win32/graphic/"},{path:"/06.软件开发/11.Win32/11.绘图编程.html",redirect:"/soft/win32/graphic/"},{name:"v-5aed3d2d",path:"/soft/win32/gdi/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5aed3d2d").then(t)}},{path:"/soft/win32/gdi/index.html",redirect:"/soft/win32/gdi/"},{path:"/06.软件开发/11.Win32/12.GDI绘图对象.html",redirect:"/soft/win32/gdi/"},{name:"v-401ef41c",path:"/soft/win32/bitmap/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-401ef41c").then(t)}},{path:"/soft/win32/bitmap/index.html",redirect:"/soft/win32/bitmap/"},{path:"/06.软件开发/11.Win32/13.位图.html",redirect:"/soft/win32/bitmap/"},{name:"v-1beb566c",path:"/soft/win32/text/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1beb566c").then(t)}},{path:"/soft/win32/text/index.html",redirect:"/soft/win32/text/"},{path:"/06.软件开发/11.Win32/14.文本绘制.html",redirect:"/soft/win32/text/"},{name:"v-6509761f",path:"/soft/win32/dialog/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-6509761f").then(t)}},{path:"/soft/win32/dialog/index.html",redirect:"/soft/win32/dialog/"},{path:"/06.软件开发/11.Win32/15.对话框.html",redirect:"/soft/win32/dialog/"},{name:"v-33e2e464",path:"/soft/win32/staticlib/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-33e2e464").then(t)}},{path:"/soft/win32/staticlib/index.html",redirect:"/soft/win32/staticlib/"},{path:"/06.软件开发/11.Win32/16.静态库.html",redirect:"/soft/win32/staticlib/"},{name:"v-3f27ce08",path:"/soft/win32/dynamiclib/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3f27ce08").then(t)}},{path:"/soft/win32/dynamiclib/index.html",redirect:"/soft/win32/dynamiclib/"},{path:"/06.软件开发/11.Win32/17.动态库.html",redirect:"/soft/win32/dynamiclib/"},{name:"v-a0646db8",path:"/soft/win32/thread/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-a0646db8").then(t)}},{path:"/soft/win32/thread/index.html",redirect:"/soft/win32/thread/"},{path:"/06.软件开发/11.Win32/18.线程.html",redirect:"/soft/win32/thread/"},{name:"v-0a9ee462",path:"/soft/win32/threadsync/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0a9ee462").then(t)}},{path:"/soft/win32/threadsync/index.html",redirect:"/soft/win32/threadsync/"},{path:"/06.软件开发/11.Win32/19.线程同步.html",redirect:"/soft/win32/threadsync/"},{name:"v-76c06413",path:"/project/cplusplus/com/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-76c06413").then(t)}},{path:"/project/cplusplus/com/index.html",redirect:"/project/cplusplus/com/"},{path:"/06.软件开发/13.COM/01.VBScript调用DLL.html",redirect:"/project/cplusplus/com/"},{name:"v-949b4824",path:"/soft/skill/function/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-949b4824").then(t)}},{path:"/soft/skill/function/index.html",redirect:"/soft/skill/function/"},{path:"/06.软件开发/15.Allegro Skill/00.常用函数.html",redirect:"/soft/skill/function/"},{name:"v-b3e2d766",path:"/soft/skill/todo/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-b3e2d766").then(t)}},{path:"/soft/skill/todo/index.html",redirect:"/soft/skill/todo/"},{path:"/06.软件开发/15.Allegro Skill/01.待办记录.html",redirect:"/soft/skill/todo/"},{name:"v-20808e0c",path:"/soft/skill/changevianet/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-20808e0c").then(t)}},{path:"/soft/skill/changevianet/index.html",redirect:"/soft/skill/changevianet/"},{path:"/06.软件开发/15.Allegro Skill/03.改变过孔网络.html",redirect:"/soft/skill/changevianet/"},{name:"v-12507005",path:"/project/skill/arrayobject/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-12507005").then(t)}},{path:"/project/skill/arrayobject/index.html",redirect:"/project/skill/arrayobject/"},{path:"/06.软件开发/15.Allegro Skill/04.阵列对象.html",redirect:"/project/skill/arrayobject/"},{name:"v-ce467878",path:"/soft/skill/shapeassignnet/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-ce467878").then(t)}},{path:"/soft/skill/shapeassignnet/index.html",redirect:"/soft/skill/shapeassignnet/"},{path:"/06.软件开发/15.Allegro Skill/05.Shape批量赋网络.html",redirect:"/soft/skill/shapeassignnet/"},{name:"v-c9a153b2",path:"/soft/mentor/use/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-c9a153b2").then(t)}},{path:"/soft/mentor/use/index.html",redirect:"/soft/mentor/use/"},{path:"/06.软件开发/17.Mentor VBS/01.脚本使用.html",redirect:"/soft/mentor/use/"},{name:"v-09604e86",path:"/soft/mentor/license/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-09604e86").then(t)}},{path:"/soft/mentor/license/index.html",redirect:"/soft/mentor/license/"},{path:"/06.软件开发/17.Mentor VBS/02.获取license.html",redirect:"/soft/mentor/license/"},{name:"v-32de3740",path:"/soft/mentor/command/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-32de3740").then(t)}},{path:"/soft/mentor/command/index.html",redirect:"/soft/mentor/command/"},{path:"/06.软件开发/17.Mentor VBS/03.调用Command.html",redirect:"/soft/mentor/command/"},{name:"v-4619bc18",path:"/soft/mentor/newcommand/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-4619bc18").then(t)}},{path:"/soft/mentor/newcommand/index.html",redirect:"/soft/mentor/newcommand/"},{path:"/06.软件开发/17.Mentor VBS/04.定义新Command.html",redirect:"/soft/mentor/newcommand/"},{name:"v-49d34983",path:"/soft/mentor/graphics/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-49d34983").then(t)}},{path:"/soft/mentor/graphics/index.html",redirect:"/soft/mentor/graphics/"},{path:"/06.软件开发/17.Mentor VBS/05.编辑图形.html",redirect:"/soft/mentor/graphics/"},{name:"v-08e95cbb",path:"/soft/mentor/object/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-08e95cbb").then(t)}},{path:"/soft/mentor/object/index.html",redirect:"/soft/mentor/object/"},{path:"/06.软件开发/17.Mentor VBS/06.对象集合.html",redirect:"/soft/mentor/object/"},{name:"v-b3ba68dc",path:"/soft/mentor/component/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-b3ba68dc").then(t)}},{path:"/soft/mentor/component/index.html",redirect:"/soft/mentor/component/"},{path:"/06.软件开发/17.Mentor VBS/07.修改器件.html",redirect:"/soft/mentor/component/"},{name:"v-287c7bfa",path:"/soft/mentor/contour/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-287c7bfa").then(t)}},{path:"/soft/mentor/contour/index.html",redirect:"/soft/mentor/contour/"},{path:"/06.软件开发/17.Mentor VBS/09.Contour.html",redirect:"/soft/mentor/contour/"},{name:"v-bb9cfae8",path:"/soft/mentor/point/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-bb9cfae8").then(t)}},{path:"/soft/mentor/point/index.html",redirect:"/soft/mentor/point/"},{path:"/06.软件开发/17.Mentor VBS/08.点.html",redirect:"/soft/mentor/point/"},{name:"v-340e7f47",path:"/soft/objectarx/version/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-340e7f47").then(t)}},{path:"/soft/objectarx/version/index.html",redirect:"/soft/objectarx/version/"},{path:"/06.软件开发/19.ObjectArx二次开发/01.ObjectArx版本01.html",redirect:"/soft/objectarx/version/"},{name:"v-58ee8145",path:"/soft/objectarx/config/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-58ee8145").then(t)}},{path:"/soft/objectarx/config/index.html",redirect:"/soft/objectarx/config/"},{path:"/06.软件开发/19.ObjectArx二次开发/02.ObjectArx软件配置02.html",redirect:"/soft/objectarx/config/"},{name:"v-2ce9e498",path:"/soft/objectarx/term/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2ce9e498").then(t)}},{path:"/soft/objectarx/term/index.html",redirect:"/soft/objectarx/term/"},{path:"/06.软件开发/19.ObjectArx二次开发/04.ObjectArx术语04.html",redirect:"/soft/objectarx/term/"},{name:"v-75189a88",path:"/soft/objectarx/hello/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-75189a88").then(t)}},{path:"/soft/objectarx/hello/index.html",redirect:"/soft/objectarx/hello/"},{path:"/06.软件开发/19.ObjectArx二次开发/03.ObjectArx体验03.html",redirect:"/soft/objectarx/hello/"},{name:"v-2d433717",path:"/soft/objectarx/database/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2d433717").then(t)}},{path:"/soft/objectarx/database/index.html",redirect:"/soft/objectarx/database/"},{path:"/06.软件开发/19.ObjectArx二次开发/05.ObjectArx数据库操作05.html",redirect:"/soft/objectarx/database/"},{name:"v-ce084c72",path:"/soft/objectarx/entity/line/modify/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-ce084c72").then(t)}},{path:"/soft/objectarx/entity/line/modify/index.html",redirect:"/soft/objectarx/entity/line/modify/"},{path:"/06.软件开发/19.ObjectArx二次开发/07.ObjectArx修改线段样式07.html",redirect:"/soft/objectarx/entity/line/modify/"},{name:"v-196f7a9e",path:"/soft/objectarx/entity/line/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-196f7a9e").then(t)}},{path:"/soft/objectarx/entity/line/index.html",redirect:"/soft/objectarx/entity/line/"},{path:"/06.软件开发/19.ObjectArx二次开发/06.ObjectArx创建线段06.html",redirect:"/soft/objectarx/entity/line/"},{name:"v-8c442c42",path:"/soft/objectarx/entity/circle/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-8c442c42").then(t)}},{path:"/soft/objectarx/entity/circle/index.html",redirect:"/soft/objectarx/entity/circle/"},{path:"/06.软件开发/19.ObjectArx二次开发/08.ObjectArx创建圆08.html",redirect:"/soft/objectarx/entity/circle/"},{name:"v-248924dd",path:"/soft/objectarx/entity/arc/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-248924dd").then(t)}},{path:"/soft/objectarx/entity/arc/index.html",redirect:"/soft/objectarx/entity/arc/"},{path:"/06.软件开发/19.ObjectArx二次开发/09.ObjectArx创建弧09.html",redirect:"/soft/objectarx/entity/arc/"},{name:"v-fde1a2e6",path:"/soft/objectarx/apply/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-fde1a2e6").then(t)}},{path:"/soft/objectarx/apply/index.html",redirect:"/soft/objectarx/apply/"},{path:"/06.软件开发/19.ObjectArx二次开发/20.ObjectArx应用20.html",redirect:"/soft/objectarx/apply/"},{name:"v-9b16a76c",path:"/soft/record/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-9b16a76c").then(t)}},{path:"/soft/record/index.html",redirect:"/soft/record/"},{path:"/06.软件开发/21.开发日志/01.开发日志.html",redirect:"/soft/record/"},{name:"v-68f0f323",path:"/operation/docker/install/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-68f0f323").then(t)}},{path:"/operation/docker/install/index.html",redirect:"/operation/docker/install/"},{path:"/10.运维管理/01.Docker/01.安装配置Docker.html",redirect:"/operation/docker/install/"},{name:"v-2ba4f032",path:"/operation/docker/command/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2ba4f032").then(t)}},{path:"/operation/docker/command/index.html",redirect:"/operation/docker/command/"},{path:"/10.运维管理/01.Docker/02.Docker命令.html",redirect:"/operation/docker/command/"},{name:"v-2136281a",path:"/operation/docker/data/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2136281a").then(t)}},{path:"/operation/docker/data/index.html",redirect:"/operation/docker/data/"},{path:"/10.运维管理/01.Docker/03.Docker容器数据卷.html",redirect:"/operation/docker/data/"},{name:"v-00aa7218",path:"/operation/docker/deploy/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-00aa7218").then(t)}},{path:"/operation/docker/deploy/index.html",redirect:"/operation/docker/deploy/"},{path:"/10.运维管理/01.Docker/04.Docker应用部署.html",redirect:"/operation/docker/deploy/"},{name:"v-07609fd4",path:"/operation/docker/dockerfile/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-07609fd4").then(t)}},{path:"/operation/docker/dockerfile/index.html",redirect:"/operation/docker/dockerfile/"},{path:"/10.运维管理/01.Docker/05.Dockerfile使用.html",redirect:"/operation/docker/dockerfile/"},{name:"v-5da87a2c",path:"/operation/docker/dockercompose/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5da87a2c").then(t)}},{path:"/operation/docker/dockercompose/index.html",redirect:"/operation/docker/dockercompose/"},{path:"/10.运维管理/01.Docker/06.Docker Compose 使用.html",redirect:"/operation/docker/dockercompose/"},{name:"v-21ac504a",path:"/operation/docker/repo/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-21ac504a").then(t)}},{path:"/operation/docker/repo/index.html",redirect:"/operation/docker/repo/"},{path:"/10.运维管理/01.Docker/07.Docker私有仓库.html",redirect:"/operation/docker/repo/"},{name:"v-0bfbdc3c",path:"/operation/centos/deploy/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0bfbdc3c").then(t)}},{path:"/operation/centos/deploy/index.html",redirect:"/operation/centos/deploy/"},{path:"/10.运维管理/02.CentOS/01.CentOS部署.html",redirect:"/operation/centos/deploy/"},{name:"v-277764fe",path:"/operation/centos/install/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-277764fe").then(t)}},{path:"/operation/centos/install/index.html",redirect:"/operation/centos/install/"},{path:"/10.运维管理/02.CentOS/02.CentOS最小化安装.html",redirect:"/operation/centos/install/"},{name:"v-67992d80",path:"/operation/centos/repo/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-67992d80").then(t)}},{path:"/operation/centos/repo/index.html",redirect:"/operation/centos/repo/"},{path:"/10.运维管理/02.CentOS/03.CentOS更改源.html",redirect:"/operation/centos/repo/"},{name:"v-8394e7b2",path:"/operation/centos/sougou/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-8394e7b2").then(t)}},{path:"/operation/centos/sougou/index.html",redirect:"/operation/centos/sougou/"},{path:"/10.运维管理/02.CentOS/04.CentOS安装搜狗输入法.html",redirect:"/operation/centos/sougou/"},{name:"v-55505c33",path:"/operation/centos/jdk/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-55505c33").then(t)}},{path:"/operation/centos/jdk/index.html",redirect:"/operation/centos/jdk/"},{path:"/10.运维管理/02.CentOS/05.CentOS安装JDK8-Maven.html",redirect:"/operation/centos/jdk/"},{name:"v-e5a2be52",path:"/operation/centos/redis/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-e5a2be52").then(t)}},{path:"/operation/centos/redis/index.html",redirect:"/operation/centos/redis/"},{path:"/10.运维管理/02.CentOS/06.CentOS安装Redis.html",redirect:"/operation/centos/redis/"},{name:"v-340af217",path:"/operation/centos/nginx/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-340af217").then(t)}},{path:"/operation/centos/nginx/index.html",redirect:"/operation/centos/nginx/"},{path:"/10.运维管理/02.CentOS/07.CentOS安装Nginx.html",redirect:"/operation/centos/nginx/"},{name:"v-1734a4f6",path:"/operation/centos/mysql/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1734a4f6").then(t)}},{path:"/operation/centos/mysql/index.html",redirect:"/operation/centos/mysql/"},{path:"/10.运维管理/02.CentOS/08.CentOS安装Mysql.html",redirect:"/operation/centos/mysql/"},{name:"v-25454657",path:"/operation/centos/minio/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-25454657").then(t)}},{path:"/operation/centos/minio/index.html",redirect:"/operation/centos/minio/"},{path:"/10.运维管理/02.CentOS/09.CentOS安装Minio.html",redirect:"/operation/centos/minio/"},{name:"v-18276d1a",path:"/operation/centos/kkfileview/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-18276d1a").then(t)}},{path:"/operation/centos/kkfileview/index.html",redirect:"/operation/centos/kkfileview/"},{path:"/10.运维管理/02.CentOS/10.CentOS安装kkFileView.html",redirect:"/operation/centos/kkfileview/"},{name:"v-59d8163d",path:"/operation/centos/firewall/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-59d8163d").then(t)}},{path:"/operation/centos/firewall/index.html",redirect:"/operation/centos/firewall/"},{path:"/10.运维管理/02.CentOS/11.CentOS防火墙管理.html",redirect:"/operation/centos/firewall/"},{name:"v-086a8cc9",path:"/operation/centos/vmwaretools/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-086a8cc9").then(t)}},{path:"/operation/centos/vmwaretools/index.html",redirect:"/operation/centos/vmwaretools/"},{path:"/10.运维管理/02.CentOS/12.CentOS安装VMWareTools.html",redirect:"/operation/centos/vmwaretools/"},{name:"v-26e2f127",path:"/operation/centos/theme/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-26e2f127").then(t)}},{path:"/operation/centos/theme/index.html",redirect:"/operation/centos/theme/"},{path:"/10.运维管理/02.CentOS/13.CentOS安装主题.html",redirect:"/operation/centos/theme/"},{name:"v-504f09f5",path:"/operation/centos/tar/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-504f09f5").then(t)}},{path:"/operation/centos/tar/index.html",redirect:"/operation/centos/tar/"},{path:"/10.运维管理/02.CentOS/14.CentOS解压缩.html",redirect:"/operation/centos/tar/"},{name:"v-867d6432",path:"/operation/centos/nodejs/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-867d6432").then(t)}},{path:"/operation/centos/nodejs/index.html",redirect:"/operation/centos/nodejs/"},{path:"/10.运维管理/02.CentOS/15.CentOS-安装NodeJS.html",redirect:"/operation/centos/nodejs/"},{name:"v-f7310056",path:"/operation/centos/ip/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-f7310056").then(t)}},{path:"/operation/centos/ip/index.html",redirect:"/operation/centos/ip/"},{path:"/10.运维管理/02.CentOS/16.CentOS设置静态IP.html",redirect:"/operation/centos/ip/"},{name:"v-e7d7bc3c",path:"/operation/centos/frp/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-e7d7bc3c").then(t)}},{path:"/operation/centos/frp/index.html",redirect:"/operation/centos/frp/"},{path:"/10.运维管理/02.CentOS/17.CentOS frp内网穿透.html",redirect:"/operation/centos/frp/"},{name:"v-0cfb60fd",path:"/operation/centos/git/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0cfb60fd").then(t)}},{path:"/operation/centos/git/index.html",redirect:"/operation/centos/git/"},{path:"/10.运维管理/02.CentOS/18.CentOS-安装Git.html",redirect:"/operation/centos/git/"},{name:"v-1b1663c6",path:"/operation/centos/jenkins/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1b1663c6").then(t)}},{path:"/operation/centos/jenkins/index.html",redirect:"/operation/centos/jenkins/"},{path:"/10.运维管理/02.CentOS/19.CentOS-安装Jenkins.html",redirect:"/operation/centos/jenkins/"},{name:"v-78f5d2f0",path:"/operation/centos/docker/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-78f5d2f0").then(t)}},{path:"/operation/centos/docker/index.html",redirect:"/operation/centos/docker/"},{path:"/10.运维管理/02.CentOS/20.CentOS-Docker使用.html",redirect:"/operation/centos/docker/"},{name:"v-43751774",path:"/operation/centos/syncthing/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-43751774").then(t)}},{path:"/operation/centos/syncthing/index.html",redirect:"/operation/centos/syncthing/"},{path:"/10.运维管理/02.CentOS/21.CentOS-Syncthing使用.html",redirect:"/operation/centos/syncthing/"},{name:"v-47a1f2b4",path:"/operation/centos/gcc/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-47a1f2b4").then(t)}},{path:"/operation/centos/gcc/index.html",redirect:"/operation/centos/gcc/"},{path:"/10.运维管理/02.CentOS/22.CentOS-更新gcc.html",redirect:"/operation/centos/gcc/"},{name:"v-3eebdcfa",path:"/operation/nas/install/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3eebdcfa").then(t)}},{path:"/operation/nas/install/index.html",redirect:"/operation/nas/install/"},{path:"/10.运维管理/03.群晖NAS/01.VMWare安装黑群晖.html",redirect:"/operation/nas/install/"},{name:"v-b8016d46",path:"/operation/nas/mysql/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-b8016d46").then(t)}},{path:"/operation/nas/mysql/index.html",redirect:"/operation/nas/mysql/"},{path:"/10.运维管理/03.群晖NAS/02.Docker安装MySQL.html",redirect:"/operation/nas/mysql/"},{name:"v-601c93bd",path:"/operation/nas/nginx/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-601c93bd").then(t)}},{path:"/operation/nas/nginx/index.html",redirect:"/operation/nas/nginx/"},{path:"/10.运维管理/03.群晖NAS/03.Docker安装Nginx.html",redirect:"/operation/nas/nginx/"},{name:"v-f5672886",path:"/operation/nas/minio/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-f5672886").then(t)}},{path:"/operation/nas/minio/index.html",redirect:"/operation/nas/minio/"},{path:"/10.运维管理/03.群晖NAS/05.Docker安装Minio.html",redirect:"/operation/nas/minio/"},{name:"v-2db1e07d",path:"/operation/nas/redis/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2db1e07d").then(t)}},{path:"/operation/nas/redis/index.html",redirect:"/operation/nas/redis/"},{path:"/10.运维管理/03.群晖NAS/04.Docker安装Redis.html",redirect:"/operation/nas/redis/"},{name:"v-76af135a",path:"/operation/nas/kkfileview/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-76af135a").then(t)}},{path:"/operation/nas/kkfileview/index.html",redirect:"/operation/nas/kkfileview/"},{path:"/10.运维管理/03.群晖NAS/06.Docker安装KKFileView.html",redirect:"/operation/nas/kkfileview/"},{name:"v-78d2fbcc",path:"/operation/nas/springboot/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-78d2fbcc").then(t)}},{path:"/operation/nas/springboot/index.html",redirect:"/operation/nas/springboot/"},{path:"/10.运维管理/03.群晖NAS/07.Docker部署Springboot.html",redirect:"/operation/nas/springboot/"},{name:"v-af2dd460",path:"/operation/npm/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-af2dd460").then(t)}},{path:"/operation/npm/index.html",redirect:"/operation/npm/"},{path:"/10.运维管理/04.NodeJS/01.npm使用.html",redirect:"/operation/npm/"},{name:"v-2b917ddf",path:"/tool/yarn/install/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2b917ddf").then(t)}},{path:"/tool/yarn/install/index.html",redirect:"/tool/yarn/install/"},{path:"/10.运维管理/04.NodeJS/02.yarn安装使用.html",redirect:"/tool/yarn/install/"},{name:"v-fdb6dd6e",path:"/operation/nodejs/changedir/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-fdb6dd6e").then(t)}},{path:"/operation/nodejs/changedir/index.html",redirect:"/operation/nodejs/changedir/"},{path:"/10.运维管理/04.NodeJS/03.NodeJS更改路径.html",redirect:"/operation/nodejs/changedir/"},{name:"v-61c6e437",path:"/operation/git/error/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-61c6e437").then(t)}},{path:"/operation/git/error/index.html",redirect:"/operation/git/error/"},{path:"/10.运维管理/05.Git/03.常见错误.html",redirect:"/operation/git/error/"},{name:"v-63e0e9d9",path:"/cloud/swapon/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-63e0e9d9").then(t)}},{path:"/cloud/swapon/index.html",redirect:"/cloud/swapon/"},{path:"/10.运维管理/06.云服务器/01.云服务器开启虚拟内存 SWAP.html",redirect:"/cloud/swapon/"},{name:"v-69d46afc",path:"/template/newnote/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-69d46afc").then(t)}},{path:"/template/newnote/index.html",redirect:"/template/newnote/"},{path:"/100.模板/01.新建模板.html",redirect:"/template/newnote/"},{name:"v-153b09b8",path:"/tool/office/excel/formula/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-153b09b8").then(t)}},{path:"/tool/office/excel/formula/index.html",redirect:"/tool/office/excel/formula/"},{path:"/14.工具使用/01.Excel/01.Excel常用公式.html",redirect:"/tool/office/excel/formula/"},{name:"v-13666d00",path:"/tool/office/excel/shortkey/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-13666d00").then(t)}},{path:"/tool/office/excel/shortkey/index.html",redirect:"/tool/office/excel/shortkey/"},{path:"/14.工具使用/01.Excel/03.Excel常用快捷键.html",redirect:"/tool/office/excel/shortkey/"},{name:"v-0f2580b8",path:"/tool/other/typora/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0f2580b8").then(t)}},{path:"/tool/other/typora/index.html",redirect:"/tool/other/typora/"},{path:"/14.工具使用/09.其它/01.Typora过期解决.html",redirect:"/tool/other/typora/"},{name:"v-15f6e1be",path:"/linux/shell/example/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-15f6e1be").then(t)}},{path:"/linux/shell/example/index.html",redirect:"/linux/shell/example/"},{path:"/12.Linux/03.Shell/01.Shell例子.html",redirect:"/linux/shell/example/"},{name:"v-5c2ec42e",path:"/tool/other/terminal/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5c2ec42e").then(t)}},{path:"/tool/other/terminal/index.html",redirect:"/tool/other/terminal/"},{path:"/14.工具使用/09.其它/03.Windows Terminal美化.html",redirect:"/tool/other/terminal/"},{name:"v-413f1d48",path:"/tool/other/use/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-413f1d48").then(t)}},{path:"/tool/other/use/index.html",redirect:"/tool/other/use/"},{path:"/14.工具使用/09.其它/05.Windows小功能.html",redirect:"/tool/other/use/"},{name:"v-58304bb1",path:"/tool/other/math/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-58304bb1").then(t)}},{path:"/tool/other/math/index.html",redirect:"/tool/other/math/"},{path:"/14.工具使用/09.其它/07.数学小知识.html",redirect:"/tool/other/math/"},{name:"v-0e0588fe",path:"/tool/other/note/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-0e0588fe").then(t)}},{path:"/tool/other/note/index.html",redirect:"/tool/other/note/"},{path:"/14.工具使用/09.其它/99.小记.html",redirect:"/tool/other/note/"},{name:"v-072668fe",path:"/tool/maven/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-072668fe").then(t)}},{path:"/tool/maven/index.html",redirect:"/tool/maven/"},{path:"/14.工具使用/22.Maven安装配置.html",redirect:"/tool/maven/"},{name:"v-25ccd3aa",path:"/tool/cdn/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-25ccd3aa").then(t)}},{path:"/tool/cdn/index.html",redirect:"/tool/cdn/"},{path:"/14.工具使用/21.cdn加速GitHub图床.html",redirect:"/tool/cdn/"},{name:"v-1fdc0219",path:"/collect/web/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-1fdc0219").then(t)}},{path:"/collect/web/index.html",redirect:"/collect/web/"},{path:"/78.收藏/03.实用收藏.html",redirect:"/collect/web/"},{name:"v-a2cfc232",path:"/pages/dc200c/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-a2cfc232").then(t)}},{path:"/pages/dc200c/index.html",redirect:"/pages/dc200c/"},{path:"/78.收藏/04.Obsidian教程.html",redirect:"/pages/dc200c/"},{name:"v-5a105456",path:"/collect/markdown/syntax/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-5a105456").then(t)}},{path:"/collect/markdown/syntax/index.html",redirect:"/collect/markdown/syntax/"},{path:"/78.收藏/05.Markdown/05.Markdown语法.html",redirect:"/collect/markdown/syntax/"},{name:"v-cbc4daea",path:"/private/test1/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-cbc4daea").then(t)}},{path:"/private/test1/index.html",redirect:"/private/test1/"},{path:"/78.收藏/90.私密文章测试/01.全局私密文章测试.html",redirect:"/private/test1/"},{name:"v-4754ed5a",path:"/collect/markdown/settype/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-4754ed5a").then(t)}},{path:"/collect/markdown/settype/index.html",redirect:"/collect/markdown/settype/"},{path:"/78.收藏/05.Markdown/07.Markdown排版.html",redirect:"/collect/markdown/settype/"},{name:"v-3e488684",path:"/private/test2/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-3e488684").then(t)}},{path:"/private/test2/index.html",redirect:"/private/test2/"},{path:"/78.收藏/90.私密文章测试/03.单个私密文章测试.html",redirect:"/private/test2/"},{name:"v-44df8956",path:"/about/me/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-44df8956").then(t)}},{path:"/about/me/index.html",redirect:"/about/me/"},{path:"/80.关于/03.自我介绍.html",redirect:"/about/me/"},{name:"v-414ce414",path:"/about/learn-history/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-414ce414").then(t)}},{path:"/about/learn-history/index.html",redirect:"/about/learn-history/"},{path:"/80.关于/07.学习记录.html",redirect:"/about/learn-history/"},{name:"v-e6b17824",path:"/idea/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-e6b17824").then(t)}},{path:"/idea/index.html",redirect:"/idea/"},{path:"/99.灵机一闪/01.机智一批.html",redirect:"/idea/"},{name:"v-cc639d82",path:"/archives/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-cc639d82").then(t)}},{path:"/archives/index.html",redirect:"/archives/"},{path:"/@pages/archivesPage.html",redirect:"/archives/"},{name:"v-659a8c2a",path:"/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-659a8c2a").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-48e9f0bf",path:"/tags/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-48e9f0bf").then(t)}},{path:"/tags/index.html",redirect:"/tags/"},{path:"/@pages/tagsPage.html",redirect:"/tags/"},{name:"v-2e5da65e",path:"/vdoing/login/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2e5da65e").then(t)}},{path:"/vdoing/login/index.html",redirect:"/vdoing/login/"},{path:"/99.Vdoing私密文章登录.html",redirect:"/vdoing/login/"},{name:"v-2544bf9f",path:"/categories/",component:ll,beforeEnter:(n,e,t)=>{ps("Layout","v-2544bf9f").then(t)}},{path:"/categories/index.html",redirect:"/categories/"},{path:"/@pages/categoriesPage.html",redirect:"/categories/"},{path:"*",component:ll}],dl={title:"",description:"",base:"/blog/",headTags:[["link",{rel:"shortcut icon",href:"/blog/img/favicon.ico"}],["link",{rel:"stylesheet",href:"/blog//at.alicdn.com/t/font_3114978_qe0b39no76.css"}],["meta",{name:"referrer",content:"no-referrer-when-downgrade"}],["meta",{name:"theme-color",content:"#3eaf7c"}],["noscript",{},'<meta http-equiv="refresh" content="0; url=https://www.ic-sugar.cn/noscript/"><style>.theme-vdoing-content { display:none }'],["meta",{name:"keywords",content:"i采薇个人博客, VuePress搭建, 学习Java、Web、框架、微服务、工具、前端等相关知识, 记录生活和技术路程。"}],["meta",{name:"theme-color",content:"#11a8cd"}],["script",{},'var _hmt = _hmt || [];\n          (function() {\n            var hm = document.createElement("script");\n            hm.src = "https://hm.baidu.com/hm.js?267c5680c2ffb468ca29c45ffe6801da"; \n            var s = document.getElementsByTagName("script")[0];\n            s.parentNode.insertBefore(hm, s);\n          })();\n          ']],pages:[{title:"通孔回流焊PIH",frontmatter:{title:"通孔回流焊PIH",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/technology/pih/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/01.%E5%B7%A5%E8%89%BA%E5%9F%BA%E7%A1%80/02.PIH%E9%80%9A%E5%AD%94%E5%9B%9E%E6%B5%81%E7%84%8A.html",relativePath:"03.硬件知识/01.工艺基础/02.PIH通孔回流焊.md",key:"v-59e4f443",path:"/hardware/technology/pih/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2}],headersStr:"说明",content:"# 说明\n\nSMT通孔回流焊接工艺-运用于贴装穿孔元件和异型元件，Past-In-Hole (通孔印锡膏PIH)就是把锡膏 (Solder paste) 直接印刷于 PCB (Print Circuit Board,电路板) 的电镀通孔(PTH, Plating Through Hole)上面，然后再把传统插件/通孔元件(DIP insert parts)直接插入已经印有锡膏的电镀通孔里，这时电镀通孔上的锡膏大部分会沾粘在插件零件的焊脚上，这些锡膏经过回流焊炉的高温时会重新熔融，进而焊接零件于电路板上。\n\n这种工法还有其他的名称叫「引脚浸锡膏(pin-in-paste)」、「侵入式回流焊接 (intrusive reflow soldering)」 和「通孔回流焊(ROT, reflow of through-hole)」等；这种工法的好处是可以免去手动焊接(hand soldering)或波焊(Wave Soldering) 的制程并进而节省作业工时(Labor)，同时也可以提升焊接的品质，减少焊接短路(Solder short)的机会。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",normalizedContent:"# 说明\n\nsmt通孔回流焊接工艺-运用于贴装穿孔元件和异型元件，past-in-hole (通孔印锡膏pih)就是把锡膏 (solder paste) 直接印刷于 pcb (print circuit board,电路板) 的电镀通孔(pth, plating through hole)上面，然后再把传统插件/通孔元件(dip insert parts)直接插入已经印有锡膏的电镀通孔里，这时电镀通孔上的锡膏大部分会沾粘在插件零件的焊脚上，这些锡膏经过回流焊炉的高温时会重新熔融，进而焊接零件于电路板上。\n\n这种工法还有其他的名称叫「引脚浸锡膏(pin-in-paste)」、「侵入式回流焊接 (intrusive reflow soldering)」 和「通孔回流焊(rot, reflow of through-hole)」等；这种工法的好处是可以免去手动焊接(hand soldering)或波焊(wave soldering) 的制程并进而节省作业工时(labor)，同时也可以提升焊接的品质，减少焊接短路(solder short)的机会。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"我的待办",frontmatter:{title:"我的待办",date:"2024-01-01T00:00:00.000Z",permalink:"/todo/",private:!0,titleTag:"原创",categories:["我的待办"],tags:["我的待办"],readingShow:"top"},regularPath:"/100.%E6%A8%A1%E6%9D%BF/02.%E6%88%91%E7%9A%84%E5%BE%85%E5%8A%9E%E6%A8%A1%E6%9D%BF.html",relativePath:"100.模板/02.我的待办模板.md",key:"v-366d24c9",path:"/todo/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"塞孔工艺",frontmatter:{title:"塞孔工艺",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/technology/hole/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/01.%E5%B7%A5%E8%89%BA%E5%9F%BA%E7%A1%80/01.%E5%A1%9E%E5%AD%94%E5%B7%A5%E8%89%BA.html",relativePath:"03.硬件知识/01.工艺基础/01.塞孔工艺.md",key:"v-3f6373ff",path:"/hardware/technology/hole/",headers:[{level:2,title:"树脂塞孔比绿油塞孔好在哪里",slug:"树脂塞孔比绿油塞孔好在哪里",normalizedTitle:"树脂塞孔比绿油塞孔好在哪里",charIndex:2}],headersStr:"树脂塞孔比绿油塞孔好在哪里",content:"# 树脂塞孔比绿油塞孔好在哪里\n\n一般来说，工厂在做树脂塞孔的时候都是出的镀孔菲林通过电镀过孔来塞树脂，精度较高，之后会有一道磨板的工艺可以帮助板面平整。 绿油塞孔是用的铝片钻孔之后往过孔里面倒绿油，会缺乏平整度，而且做出来的品质不保证，有可能会有漏塞的现象，焊盘上容易有凸起的小绿油圈，导致焊盘不平正，对于一下较小的焊盘尤其是BGA的焊接影响较大。 树脂塞孔是要过两次外层蚀刻的所以线宽线距有限制的，如果是做盲埋孔就只能是树脂塞孔。",normalizedContent:"# 树脂塞孔比绿油塞孔好在哪里\n\n一般来说，工厂在做树脂塞孔的时候都是出的镀孔菲林通过电镀过孔来塞树脂，精度较高，之后会有一道磨板的工艺可以帮助板面平整。 绿油塞孔是用的铝片钻孔之后往过孔里面倒绿油，会缺乏平整度，而且做出来的品质不保证，有可能会有漏塞的现象，焊盘上容易有凸起的小绿油圈，导致焊盘不平正，对于一下较小的焊盘尤其是bga的焊接影响较大。 树脂塞孔是要过两次外层蚀刻的所以线宽线距有限制的，如果是做盲埋孔就只能是树脂塞孔。",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"S参数",frontmatter:{title:"S参数",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/si/sparam/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.S%E5%8F%82%E6%95%B0.html",relativePath:"03.硬件知识/02.信号完整性/01.S参数.md",key:"v-946f9bde",path:"/hardware/si/sparam/",headers:[{level:2,title:"什么是S参数？",slug:"什么是s参数",normalizedTitle:"什么是s参数？",charIndex:2},{level:3,title:"看一条线的特性 ：S11、S21",slug:"看一条线的特性-s11、s21",normalizedTitle:"看一条线的特性 ：s11、s21",charIndex:288},{level:3,title:"看两条线的相互关系：S31、S41",slug:"看两条线的相互关系-s31、s41",normalizedTitle:"看两条线的相互关系：s31、s41",charIndex:593},{level:2,title:"S参数例子",slug:"s参数例子",normalizedTitle:"s参数例子",charIndex:728},{level:2,title:"二端口网络模型",slug:"二端口网络模型",normalizedTitle:"二端口网络模型",charIndex:1119},{level:2,title:"回波损耗与反射系数 S 11",slug:"回波损耗与反射系数-s-11",normalizedTitle:"回波损耗与反射系数 s 11",charIndex:1650}],headersStr:"什么是S参数？ 看一条线的特性 ：S11、S21 看两条线的相互关系：S31、S41 S参数例子 二端口网络模型 回波损耗与反射系数 S 11",content:"# 什么是S参数？\n\nS参数是微波传输中的一个参数，全称为Scatter 参数，也叫散射参数，其建立的基础是入射波，反射波的关系。\n\nS参数将被测物当做黑匣子，通过测量输入输出端口来表现网络特性，不论哪一个端口有信号进入，都能通过测量其它端口散射的信号，获得信号信息。\n\n信号完整性关注的大部分问题，例如信号的反射，串扰，损耗，都可以从 S 参数中找到有用的信息。\n\nS12为反向传输系数，也就是隔离。\n\nS21为正向传输系数，也就是增益。\n\nS11为输入反射系数，也就是输入回波损耗。\n\nS22为输出反射系数，也就是输出回波损耗。\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 看一条线的特性 ：S11、S21\n\nS11表示在 port 1量反射损失(return loss)，主要是观测发送端看到多大的的讯号反射成份；值越接近0越好(越低越好，一般-25~-40dB)，表示传递过程反射(reflection)越小，也称为输入反射系数(Input Reflection Coefficient)。\n\nS21表示讯号从 port 1传递到 port 2过程的馈入损失(insertion loss)，主要是观测接收端的讯号剩多少；值越接近1越好(0dB)，表示传递过程损失(loss)越小，也称为顺向穿透系数(Forward Transmission Coefficient)。\n\n\n# 看两条线的相互关系：S31、S41\n\n\n\n一般表示两条线以上 cross-talk 交互影响时，才会用到 S31。以上图为例，S31 意指 Near End Cross-talk (NEXT)，S41 意指 Far End Cross-talk (FEXT).\n\n\n# S参数例子\n\nUr1 = S11 Ui1 + S12 Ui2\nUr2 = S21 Ui1 + S22 Ui2\nUi1，Ui2，Ur1，Ur2：分别是端口1和端口2的归一化入射电压和反射电压\nS11：端口2匹配时，端口1的反射系数；\nS22：端口1匹配时，端口2的反射系数；\nS12：端口1匹配时，端口2到端口1的反向传输系数；\nS21：端口2匹配时，端口1到端口2的正向传输系数；\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nS 参数（散射参数）用于评估 DUT 反射信号和传送信号的性能。S 参数由两个复数之比定义，它包含有关信号的幅度和相位的信息。S 参数通常表示为： S输出 输入 例如，S 参数 S21 是 DUT 上端口 2 的输出信号与 DUT 上端口 1 的输入信号之比，输出信号和输入信号都用复数表示。 当启动平衡 - 不平衡转换功能时，可以选择混合模 S 参数。\n\n\n# 二端口网络模型\n\n下面以二端口网络为例说明各个S参数的含义。二端口网络有四个S参数，Sij代表的意思是能量从j口注入，在i口测得的能量，如S11定义为从 Port1口反射的能量与输入能量比值的平方根，也经常被简化为等效反射电压和等效入射电压的比值，各参数的物理含义和特殊网络的特性如下：\n\nS11：端口2匹配时，端口1的反射系数；\n\nS22：端口1匹配时，端口2的反射系数；\n\nS12：端口1匹配时，端口2到端口1的反向传输系数；\n\nS21：端口2匹配时，端口1到端口2的正向传输系数；\n\n对于互易网络，有：S12=S21；\n\n对于无耗网络，有：（S11）2+（S21）2=1 ；\n\n我们经常用到的单根传输线，或一个过孔，就可以等效成一个二端口网络，一端接输入信号，另一端接输出信号，如果以 Port1作为信号的输入端口， Port2作为信号的输出端口，那么 S11表示的就是回波损耗，即有多少能量被反射回源端（Port1），这个值越小越好，一般建议 S11< 0.1，即－20dB；S21表示插入损耗，也就是有多少能量被传输到目的端（Port2）了，这个值越大越好，理想值是1，即0dB，S21越大传输的效率越高，一般建议S21>0.7，即－3dB。\n\n\n# 回波损耗与反射系数 S 11\n\nRL=10log10(PiPr) RL=10log_{10}(\\frac{P_{i}}{P_{r}} ) RL=10log10 (Pr Pi )\nS11=20log10(ErEi)=10log10(ErEi)2=10log10(PiPr) S_{11}=20log_{10}(\\frac{E_{r}}{E_{i}})=10log_{10} (\\frac{E_{r}}{E_{i}})^{2}=10log_{10} (\\frac{P_{i}}{P_{r}}) S11 =20log10 (Ei Er )=10log10 (Ei Er )2=10log10 (Pr Pi )\n\n由此可知 S 11=-RL",normalizedContent:"# 什么是s参数？\n\ns参数是微波传输中的一个参数，全称为scatter 参数，也叫散射参数，其建立的基础是入射波，反射波的关系。\n\ns参数将被测物当做黑匣子，通过测量输入输出端口来表现网络特性，不论哪一个端口有信号进入，都能通过测量其它端口散射的信号，获得信号信息。\n\n信号完整性关注的大部分问题，例如信号的反射，串扰，损耗，都可以从 s 参数中找到有用的信息。\n\ns12为反向传输系数，也就是隔离。\n\ns21为正向传输系数，也就是增益。\n\ns11为输入反射系数，也就是输入回波损耗。\n\ns22为输出反射系数，也就是输出回波损耗。\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 看一条线的特性 ：s11、s21\n\ns11表示在 port 1量反射损失(return loss)，主要是观测发送端看到多大的的讯号反射成份；值越接近0越好(越低越好，一般-25~-40db)，表示传递过程反射(reflection)越小，也称为输入反射系数(input reflection coefficient)。\n\ns21表示讯号从 port 1传递到 port 2过程的馈入损失(insertion loss)，主要是观测接收端的讯号剩多少；值越接近1越好(0db)，表示传递过程损失(loss)越小，也称为顺向穿透系数(forward transmission coefficient)。\n\n\n# 看两条线的相互关系：s31、s41\n\n\n\n一般表示两条线以上 cross-talk 交互影响时，才会用到 s31。以上图为例，s31 意指 near end cross-talk (next)，s41 意指 far end cross-talk (fext).\n\n\n# s参数例子\n\nur1 = s11 ui1 + s12 ui2\nur2 = s21 ui1 + s22 ui2\nui1，ui2，ur1，ur2：分别是端口1和端口2的归一化入射电压和反射电压\ns11：端口2匹配时，端口1的反射系数；\ns22：端口1匹配时，端口2的反射系数；\ns12：端口1匹配时，端口2到端口1的反向传输系数；\ns21：端口2匹配时，端口1到端口2的正向传输系数；\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\ns 参数（散射参数）用于评估 dut 反射信号和传送信号的性能。s 参数由两个复数之比定义，它包含有关信号的幅度和相位的信息。s 参数通常表示为： s输出 输入 例如，s 参数 s21 是 dut 上端口 2 的输出信号与 dut 上端口 1 的输入信号之比，输出信号和输入信号都用复数表示。 当启动平衡 - 不平衡转换功能时，可以选择混合模 s 参数。\n\n\n# 二端口网络模型\n\n下面以二端口网络为例说明各个s参数的含义。二端口网络有四个s参数，sij代表的意思是能量从j口注入，在i口测得的能量，如s11定义为从 port1口反射的能量与输入能量比值的平方根，也经常被简化为等效反射电压和等效入射电压的比值，各参数的物理含义和特殊网络的特性如下：\n\ns11：端口2匹配时，端口1的反射系数；\n\ns22：端口1匹配时，端口2的反射系数；\n\ns12：端口1匹配时，端口2到端口1的反向传输系数；\n\ns21：端口2匹配时，端口1到端口2的正向传输系数；\n\n对于互易网络，有：s12=s21；\n\n对于无耗网络，有：（s11）2+（s21）2=1 ；\n\n我们经常用到的单根传输线，或一个过孔，就可以等效成一个二端口网络，一端接输入信号，另一端接输出信号，如果以 port1作为信号的输入端口， port2作为信号的输出端口，那么 s11表示的就是回波损耗，即有多少能量被反射回源端（port1），这个值越小越好，一般建议 s11< 0.1，即－20db；s21表示插入损耗，也就是有多少能量被传输到目的端（port2）了，这个值越大越好，理想值是1，即0db，s21越大传输的效率越高，一般建议s21>0.7，即－3db。\n\n\n# 回波损耗与反射系数 s 11\n\nrl=10log10(pipr) rl=10log_{10}(\\frac{p_{i}}{p_{r}} ) rl=10log10 (pr pi )\ns11=20log10(erei)=10log10(erei)2=10log10(pipr) s_{11}=20log_{10}(\\frac{e_{r}}{e_{i}})=10log_{10} (\\frac{e_{r}}{e_{i}})^{2}=10log_{10} (\\frac{p_{i}}{p_{r}}) s11 =20log10 (ei er )=10log10 (ei er )2=10log10 (pr pi )\n\n由此可知 s 11=-rl",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"常用仪器仪表之矢量信号发生器1.1",frontmatter:{title:"常用仪器仪表之矢量信号发生器1.1",date:"2024-01-27T21:00:00.000Z",permalink:"/hardware/rf/vector/signal/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/01.%E5%B8%B8%E7%94%A8%E4%BB%AA%E5%99%A8%E4%BB%AA%E8%A1%A8%E4%B9%8B%E7%9F%A2%E9%87%8F%E4%BF%A1%E5%8F%B7%E5%8F%91%E7%94%9F%E5%99%A81.1.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/01.常用仪器仪表之矢量信号发生器1.1.md",key:"v-6319fbbe",path:"/hardware/rf/vector/signal/",headers:[{level:2,title:"一. 矢量信号发生器的原理",slug:"一-矢量信号发生器的原理",normalizedTitle:"一. 矢量信号发生器的原理",charIndex:59},{level:2,title:"二. 矢量信号发生器的重要参数",slug:"二-矢量信号发生器的重要参数",normalizedTitle:"二. 矢量信号发生器的重要参数",charIndex:649},{level:3,title:"1.频率范围",slug:"_1-频率范围",normalizedTitle:"1.频率范围",charIndex:669},{level:3,title:"2. 调制带宽",slug:"_2-调制带宽",normalizedTitle:"2. 调制带宽",charIndex:844},{level:3,title:"3. 数字调制格式",slug:"_3-数字调制格式",normalizedTitle:"3. 数字调制格式",charIndex:1161},{level:3,title:"4. 衰落和MIMO",slug:"_4-衰落和mimo",normalizedTitle:"4. 衰落和mimo",charIndex:1344},{level:3,title:"5. 矢量调制准确度",slug:"_5-矢量调制准确度",normalizedTitle:"5. 矢量调制准确度",charIndex:1650},{level:2,title:"三. 矢量信号发生器的测试功能举例",slug:"三-矢量信号发生器的测试功能举例",normalizedTitle:"三. 矢量信号发生器的测试功能举例",charIndex:1777}],headersStr:"一. 矢量信号发生器的原理 二. 矢量信号发生器的重要参数 1.频率范围 2. 调制带宽 3. 数字调制格式 4. 衰落和MIMO 5. 矢量调制准确度 三. 矢量信号发生器的测试功能举例",content:"【转载】 射频工程师工作笔记——第一讲 常用仪器仪表之矢量信号发生器1.1 - 知乎 (zhihu.com)\n\n\n# 一. 矢量信号发生器的原理\n\n矢量信号发生器，用于产生矢量信号，即数字通信中常用的调制信号。近年来，随通信产业所用频段和调制带宽的不断增加，多载波和多标准通信制式的共同使用，针对移动通信手机和基站验证测试的需求，矢量信号发生器在性能和功能等方面都进行了很大提升，如增加了射频通道、基带模块、衰落模拟模块等，使其在3G、4G基站验证测试及国防、航空航天等科研领域都得到了广泛的应用。大型仪器公司如R&S、Agilent、Anritsu、NI等都能供应性能不同的各个频段的矢量信号发生器。例如 R&S 公司的 SMXX 系列、Agilent 的 PSG 系列和 MXG 系列、Anritsu 的 MG8XXA、MG37XX 系列、NI 的 PXI 系列等。\n\n矢量信号发生器原理框图如图所示，主要由基带信号产生单元、载波产生单元、矢量调制单元等组成。基带信号产生单元：是基带源用目标调制算法生成的数字序列文件，经两个DAC和基带成形滤波器后，转换为模拟I和模拟Q两路基带信号；载波产生单元：用来产生连续载波信号；矢量调制单元：首先将载波信号进行90°相移得到两路正交的载波信号，然后分别与两路基带信号进行调制，再相加得到矢量调制信号。常见的矢量调制方式有：BPSK、QPSK、PSK、QAM、FSK、MSK等，可用于GSM、NADC、CDMA等通信制式。\n\n\n\n\n\n\n\n\n\n\n\n\n# 二. 矢量信号发生器的重要参数\n\n\n# 1.频率范围\n\n不同厂商不同系列的矢量信号发生器频率范围各异，总体来讲矢量信号发生器的射频频率上限分为 1GHz、2GHz、4GHz、6GHz、20GHz、30GHz 和 44GHz 等。如Agilent的 8267D 矢量信号发生器频率可达 44GHz，R&S 的 SMW200A 频率最高达 67 GHz（双通道：最高 44 GHz）。\n\n\n# 2. 调制带宽\n\n在矢量调制部分，一个重要的参数就是IQ调制器的带宽，表示矢量信号发生器I/Q调制的频率响应情况，决定了矢量信号发生器所能允许输入在基带信号的最高带宽。一般是指在单音信号单边带调制情况下，载波信号功率相对未调制时载波信号功率变化在3dB范围内的3dB带宽。各种类型的矢量信号发生器都配备任意波形发生器作为数字调制源，任意波形发生器在原理上可仿真任何现实环境的复杂信号，但是受限于高速高比特的 DAC，内置的基带带宽无法实现当前的超宽带信号产生需求，因此矢量信号源往往提供外调制功能，借助外基带产生器产生超宽带信号，以解决内置基带带宽不够的问题。如矢量信号源SMW200A，可提供高达 2GHz 的外调制带宽。\n\n\n# 3. 数字调制格式\n\n常用的调制格式有——\n\nFSK（频移键控调制）：2FSK、4FSK、8FSK、16FSK、MSK。\n\n\n\nPSK（相移键控调制）：BPSK、QPSK、OQPSK、π/4DQPSK、8PSK、16QPSK、D8PSK。\n\n\n\n\n\n\n\nQAM（正交幅度调制）：4QAM、16QAM、32QAM、64QAM、128QAM、256QAM。\n\n\n\n\n# 4. 衰落和MIMO\n\n随着 MIMO 技术、阵列信号和抗干扰技术的研究，矢量信号发生器的相应功能也应运而生。衰落是无线通信中非常普遍的现象，对接收机的影响非常大，在进行接收机性能测试时，必须在衰落的环境中进行测量才能获得对其性能进行全面的衡量，那么能够产生衰落信号，模拟真实无线传输环境也是对测试测量仪器的重要要求。如R&S的SMW200A，可以实现 2 路 RF 通道和 4 路基带通道的同时，输出内置最多8个信号源，内置衰落模拟器选件, 能够安装最多4个功能强大的衰落模块, 这些模块能够同时模拟多达32条衰落通道, 是 MIMO、MSR或LTE-Advanced测试的理想工具。\n\n\n\n\n\n\n\n\n\n\n# 5. 矢量调制准确度\n\n矢量调制准确度表示矢量调制信号质量，一般用EVM（调制矢量误差）来表示。由于调制信号可以分解为一个同相分量和一个正交分量，EVM在正交坐标系上包括幅度误差和相位误差，也可通过星座图上星座点的发散程度来表现，如图所示。\n\n\n\n\n# 三. 矢量信号发生器的测试功能举例\n\n用信号发生器产生一个5G NR信号，参数如下：\n\n带宽100Mz，中心频点2.6GHz，功率-15dBm，子载波间隔30kHz；\n\nTDD mode，5ms的半帧配置如下，10ms无线帧重复两次此配置；\n\nNR的5ms半帧配置，DDDDDDDSUU（5ms半帧配置，时隙级别，共10个时隙）\n\n特殊时隙配置6:4:4（14个OFDM符号：下行6，保护4，上行4）\n\n用户1个，BWP 1个，273RB, 小区ID16；\n\nSSB case C, 周期20ms，8个SSB全发；\n\nPDCCH无；\n\nPDSCH调制方式64QAM。\n\n\n\n\n\n\n\n\n\n\n\n\n\n",normalizedContent:"【转载】 射频工程师工作笔记——第一讲 常用仪器仪表之矢量信号发生器1.1 - 知乎 (zhihu.com)\n\n\n# 一. 矢量信号发生器的原理\n\n矢量信号发生器，用于产生矢量信号，即数字通信中常用的调制信号。近年来，随通信产业所用频段和调制带宽的不断增加，多载波和多标准通信制式的共同使用，针对移动通信手机和基站验证测试的需求，矢量信号发生器在性能和功能等方面都进行了很大提升，如增加了射频通道、基带模块、衰落模拟模块等，使其在3g、4g基站验证测试及国防、航空航天等科研领域都得到了广泛的应用。大型仪器公司如r&s、agilent、anritsu、ni等都能供应性能不同的各个频段的矢量信号发生器。例如 r&s 公司的 smxx 系列、agilent 的 psg 系列和 mxg 系列、anritsu 的 mg8xxa、mg37xx 系列、ni 的 pxi 系列等。\n\n矢量信号发生器原理框图如图所示，主要由基带信号产生单元、载波产生单元、矢量调制单元等组成。基带信号产生单元：是基带源用目标调制算法生成的数字序列文件，经两个dac和基带成形滤波器后，转换为模拟i和模拟q两路基带信号；载波产生单元：用来产生连续载波信号；矢量调制单元：首先将载波信号进行90°相移得到两路正交的载波信号，然后分别与两路基带信号进行调制，再相加得到矢量调制信号。常见的矢量调制方式有：bpsk、qpsk、psk、qam、fsk、msk等，可用于gsm、nadc、cdma等通信制式。\n\n\n\n\n\n\n\n\n\n\n\n\n# 二. 矢量信号发生器的重要参数\n\n\n# 1.频率范围\n\n不同厂商不同系列的矢量信号发生器频率范围各异，总体来讲矢量信号发生器的射频频率上限分为 1ghz、2ghz、4ghz、6ghz、20ghz、30ghz 和 44ghz 等。如agilent的 8267d 矢量信号发生器频率可达 44ghz，r&s 的 smw200a 频率最高达 67 ghz（双通道：最高 44 ghz）。\n\n\n# 2. 调制带宽\n\n在矢量调制部分，一个重要的参数就是iq调制器的带宽，表示矢量信号发生器i/q调制的频率响应情况，决定了矢量信号发生器所能允许输入在基带信号的最高带宽。一般是指在单音信号单边带调制情况下，载波信号功率相对未调制时载波信号功率变化在3db范围内的3db带宽。各种类型的矢量信号发生器都配备任意波形发生器作为数字调制源，任意波形发生器在原理上可仿真任何现实环境的复杂信号，但是受限于高速高比特的 dac，内置的基带带宽无法实现当前的超宽带信号产生需求，因此矢量信号源往往提供外调制功能，借助外基带产生器产生超宽带信号，以解决内置基带带宽不够的问题。如矢量信号源smw200a，可提供高达 2ghz 的外调制带宽。\n\n\n# 3. 数字调制格式\n\n常用的调制格式有——\n\nfsk（频移键控调制）：2fsk、4fsk、8fsk、16fsk、msk。\n\n\n\npsk（相移键控调制）：bpsk、qpsk、oqpsk、π/4dqpsk、8psk、16qpsk、d8psk。\n\n\n\n\n\n\n\nqam（正交幅度调制）：4qam、16qam、32qam、64qam、128qam、256qam。\n\n\n\n\n# 4. 衰落和mimo\n\n随着 mimo 技术、阵列信号和抗干扰技术的研究，矢量信号发生器的相应功能也应运而生。衰落是无线通信中非常普遍的现象，对接收机的影响非常大，在进行接收机性能测试时，必须在衰落的环境中进行测量才能获得对其性能进行全面的衡量，那么能够产生衰落信号，模拟真实无线传输环境也是对测试测量仪器的重要要求。如r&s的smw200a，可以实现 2 路 rf 通道和 4 路基带通道的同时，输出内置最多8个信号源，内置衰落模拟器选件, 能够安装最多4个功能强大的衰落模块, 这些模块能够同时模拟多达32条衰落通道, 是 mimo、msr或lte-advanced测试的理想工具。\n\n\n\n\n\n\n\n\n\n\n# 5. 矢量调制准确度\n\n矢量调制准确度表示矢量调制信号质量，一般用evm（调制矢量误差）来表示。由于调制信号可以分解为一个同相分量和一个正交分量，evm在正交坐标系上包括幅度误差和相位误差，也可通过星座图上星座点的发散程度来表现，如图所示。\n\n\n\n\n# 三. 矢量信号发生器的测试功能举例\n\n用信号发生器产生一个5g nr信号，参数如下：\n\n带宽100mz，中心频点2.6ghz，功率-15dbm，子载波间隔30khz；\n\ntdd mode，5ms的半帧配置如下，10ms无线帧重复两次此配置；\n\nnr的5ms半帧配置，dddddddsuu（5ms半帧配置，时隙级别，共10个时隙）\n\n特殊时隙配置6:4:4（14个ofdm符号：下行6，保护4，上行4）\n\n用户1个，bwp 1个，273rb, 小区id16；\n\nssb case c, 周期20ms，8个ssb全发；\n\npdcch无；\n\npdsch调制方式64qam。\n\n\n\n\n\n\n\n\n\n\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"常用仪器仪表之矢量网络分析仪1.3",frontmatter:{title:"常用仪器仪表之矢量网络分析仪1.3",date:"2024-01-27T21:00:00.000Z",permalink:"/hardware/rf/vector/network/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/02.%E5%B8%B8%E7%94%A8%E4%BB%AA%E5%99%A8%E4%BB%AA%E8%A1%A8%E4%B9%8B%E7%9F%A2%E9%87%8F%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90%E4%BB%AA1.3.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/02.常用仪器仪表之矢量网络分析仪1.3.md",key:"v-1c8f8ed5",path:"/hardware/rf/vector/network/",headers:[{level:2,title:"一. 矢网的组成及工作原理",slug:"一-矢网的组成及工作原理",normalizedTitle:"一. 矢网的组成及工作原理",charIndex:115},{level:2,title:"二. 矢网的主要指标",slug:"二-矢网的主要指标",normalizedTitle:"二. 矢网的主要指标",charIndex:342},{level:2,title:"三. 矢网的校准",slug:"三-矢网的校准",normalizedTitle:"三. 矢网的校准",charIndex:585},{level:3,title:"1. 误差来源",slug:"_1-误差来源",normalizedTitle:"1. 误差来源",charIndex:598},{level:3,title:"2. 误差模型",slug:"_2-误差模型",normalizedTitle:"2. 误差模型",charIndex:869},{level:3,title:"双端口12项误差模型",slug:"双端口12项误差模型",normalizedTitle:"双端口12项误差模型",charIndex:1076},{level:3,title:"3. 校准方式",slug:"_3-校准方式",normalizedTitle:"3. 校准方式",charIndex:1553},{level:2,title:"四. 矢网的操作步骤",slug:"四-矢网的操作步骤",normalizedTitle:"四. 矢网的操作步骤",charIndex:2930},{level:2,title:"五. 矢网的测量功能",slug:"五-矢网的测量功能",normalizedTitle:"五. 矢网的测量功能",charIndex:2947},{level:2,title:"六. 矢网的测量举例",slug:"六-矢网的测量举例",normalizedTitle:"六. 矢网的测量举例",charIndex:3027},{level:3,title:"1. 矢网的自动端口延伸功能APE",slug:"_1-矢网的自动端口延伸功能ape",normalizedTitle:"1. 矢网的自动端口延伸功能ape",charIndex:3042},{level:3,title:"2. 矢网的差分测试功能",slug:"_2-矢网的差分测试功能",normalizedTitle:"2. 矢网的差分测试功能",charIndex:3237},{level:3,title:"3. 矢网的功率扫描功能",slug:"_3-矢网的功率扫描功能",normalizedTitle:"3. 矢网的功率扫描功能",charIndex:3842},{level:3,title:"4. 矢网的TDR功能",slug:"_4-矢网的tdr功能",normalizedTitle:"4. 矢网的tdr功能",charIndex:3939}],headersStr:"一. 矢网的组成及工作原理 二. 矢网的主要指标 三. 矢网的校准 1. 误差来源 2. 误差模型 双端口12项误差模型 3. 校准方式 四. 矢网的操作步骤 五. 矢网的测量功能 六. 矢网的测量举例 1. 矢网的自动端口延伸功能APE 2. 矢网的差分测试功能 3. 矢网的功率扫描功能 4. 矢网的TDR功能",content:'【转载】 射频工程师工作笔记——第一讲 常用仪器仪表之矢量网络分析仪（上）1.3 - 知乎 (zhihu.com) 射频工程师工作笔记——第一讲 常用仪器仪表之矢量网络分析仪（下）1.3 - 知乎 (zhihu.com)\n\n\n# 一. 矢网的组成及工作原理\n\n矢网主要由信号源、信号源功率分配分离装置、接收机、处理显示单位组成，如下图所示。其中，信号源提供被测器件的激励输入信号；信号源功率分配分离装置含功分器和定向耦合器，功分器将信号源的输出信号分配给两个参考接收机及作为两个端口的输入信号，定向耦合器直接连接到测试端口上，用于提取反射信号，进行反射特性的测量；接收机，对被测器件的反射、传输和输入信号进行测试、比较和分析；处理显示单元，用于对测试结果进行处理和显示。\n\n\n\n\n# 二. 矢网的主要指标\n\n· 频率范围：一般为 XX kHz —— 4/8/20/40 GHz\n\n· 端口数量: 多为2端口或4端口\n\n· 输出功率范围：一般为 -XX dBm —— +XX dBm\n\n· 动态范围：源最大输出功率和本底噪声比值\n\n· 测量点数: 时域模式下具有重要意义\n\n· 测量精度： 传输和发射的幅度和相位指标\n\n· 扫描时间\n\n· 中频带宽\n\n· 曲线、通道、显示数目：取决于仪器内存\n\n· 轨迹噪声 Trace Noise\n\n· 支持的校准方法\n\n\n\n\n\n\n# 三. 矢网的校准\n\n\n# 1. 误差来源\n\n矢网的测试误差主要包含随机误差和系统误差。\n\n\n\n随机误差：主要来自于仪表的内部噪声(如：激励源相位噪声、 采样噪声、 中频接收机的本振噪声)、仪表的开关动作重复性和连接器重复性等，无法通过校准消除。\n\n系统误差：由仪表内部测试装置的不理想引起的，如矢网内部各种器件的失配，耦合器的不理想定向性、连接电缆间的插损等都会造成的误差。这些误差造成了DUT实际S参数和矢网测试出来的S参数的差别。因此，在使用矢网测试之前，都是需要作系统误差校准的。校准的目的就是将测试装置本身引入的误差项修正掉，得到DUT真实的S参数。\n\n\n# 2. 误差模型\n\n· 单端口反射误差模型\n\n单端口测试时共有T、D、S三个误差项，如图所示。\n\n\n\n单端口反射误差模型\n\n单端口校准常采用OSM校准，用Open、Short和Match三个校准件，校准件理想的情况下，开路器反射为1，短路器反射为-1，匹配负载反射为0，进行3次校准测试操作，每个标准件得到一个方程，可唯一地求解出三个误差项，然后再对测量结果进行修正，即可消除被校准端口的3项系统误差。\n\n\n\n\n# 双端口12项误差模型\n\n双端口测试时，涉及到的误差比单端口测试多不少，需要采用更加复杂的校准方式才能完成测试结果的修正。矢网测量双端口网络的主要系统误差如图所示，其正向误差包含：1）方向性误差，定向耦合器阻隔特性不理想，信号源输出的部分信号进入反射通道A；由测试端口阻抗不匹配引起的 2）源失配误差 和 3）负载失配误差；由反射通道和传输通道的耦合度频率响应和变频器幅相频率响应不同而引起的 4）传输频率响应误差 和 5）反射频率响应误差；信号源的信号未经测试设备直接进入接收机的6）泄露误差。此外，还有与6个正向误差相对应的6个反向误差。误差模型如图所示。\n\n\n\n\n\n双端口校准常采用TOSM法，需要用到Open、Short、Match、 Through 四个校准件。校准件理想的情况下，开路器反射为1，短路器反射为-1，匹配负载反射为0，直通时反射为0，传输为1。把这些元器件接入到测量系统中得到12个方程（公式不在这里列出了，感兴趣的小伙伴可查阅相关论文），可解出12项误差，然后再对测量结果进行修正，即可消除被校准端口的12项系统误差。\n\n\n# 3. 校准方式\n\n根据校准件的不同，校准方式可以分机械校准和电子校准。\n\n1）机械校准\n\n校准件的类型主要包括开路器、短路器、滑动负载、直通反射器、传输线等。这些标准件通常捆绑出售，称为机械校准套件，很多套件都包括测试端口适配器和扭矩扳手，方便用户的连接，如图所示机械校准套件。\n\n\n\n机械校准常用校准方式包括 TOSM、UOSM、TRL 等，每种校准方式的校准件数目、测试的次数及消除误差项目的个数都不相同。\n\n\n\n· TOSM校准使用4个校准件，短路器(Short)、开路器(Open)、匹配负载件(Match)、直通校准件(Through)，进行7次校准测试操作，可消除全部12项误差，广泛用于同轴类对称端口校准；\n\n· UOSM校准相较于TOSM，可采用未知参数的互易直通，广泛用于同轴非对称端口校准；\n\n· TRL 校准使用3个校准件，直通校准件(Through)、反射校准件(Reflect)、传输线校准件(Line)，可确定12项误差系数，广泛用于片校准和波导校准.\n\n步骤说明\n\n 1. 点击仪器前面板上 SYSTME 区域的 PRESET 按键，进行初始化复位，避免设置错误；\n\n 2. 点击 START 和 STOP 按键设置扫描起止频率；\n\n 3. 根据被测件情况，设置合适的激励信号功率 POWER，如设置为 0 dBm；\n\n 4. 点击 Sweep 按键下，通过 "Number of Points" 设置扫描点数为 801（按实际要求来）；\n\n 5. 完成上述参数设置后，点击 CAL 按键进入校准菜单。\n\n 6. 选择“Calibration-Start Cal-Start…(Manual)“，弹出校准配置窗口。首先根据测试需求选择校准端口序号，如 P1 和 P2。再选择相应的校准方式，如TOSM，点击start出现下面画面，依次连接端口对应的校准件。\n\n\n\n每个校准元件连接好后点击鼠标确认，在其相应的位置会出现绿色对钩“√”符号，如图所示。7 个校准步骤完成后，点击“Apply”按钮，完成校准。校准完成后，在 FILE 按键下选择”Save”键，对校准结果进行命名保存。\n\n\n\n说明： a) 校准过程中若某个出现连接松动或错误，可以重新连接该校准件后执行单步覆盖校准， 无需从头校准; b) 连接每个校准件时，应用力矩扳手进行规范紧固; c) 最后一步”Isolation”是可选项，可以忽略。如果执行此步校准，可进一步提高系统传输动态范围。\n\n校准完成后，使用双阴直通接头将测试线缆对连，测量S21结果。在 100MHz-6GHz 频段，S21 结果的误差波动一般在 0.05dB 以内。此时，S21(dB)的显示数值理论上等于该直通件的物理真实插损。\n\n2） 电子校准\n\n电子校准件内置开关，提供可切换的开路、短路、负载标准件的功能及直通状态，相较于机械校准件，电子校准过程简单，只需和矢网连接一次，校准速度快，同时避免了多次手动更换校准件出现错误。\n\n\n\n电子校准件图片\n\n步骤说明\n\n电子校准件通过USB线连接网络分析仪，待指示灯由红变绿后，预热完成；其他步骤与机械校准一致，选择Ecal 及对应的port口，开启自动校准。校准完成后，使用双阴直通接头将测试线缆对连，测量S21结果进行验证。\n\n\n\n\n# 四. 矢网的操作步骤\n\n\n\n\n# 五. 矢网的测量功能\n\n\n\n矢网可表征射频和微波器件的正向和反向特性，定量表示器件的幅度和相位响应特性，可用于频域和时域分析。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 六. 矢网的测量举例\n\n\n# 1. 矢网的自动端口延伸功能APE\n\nAPE利用开路或者短路标准件对夹具进行补偿，可消除夹具或探测带来的损耗、失配、延时等影响。APE仪表自动把端口扩展到测试探针或者线的末端，并作出相位及损耗的修正。\n\n点击 Cal 按键 -- Port Extensions 由 OFF 切换成 ON--Auto Port Extension select port(选择需要APE的端口)\n\n\n\n\n# 2. 矢网的差分测试功能\n\n1）三端口网络：差分输入，单端口输出。\n\n点击 Analysis 按键 -- Fixture simulator: ON - Balun: on\n\n若 Port2 设置为 差分输入1，2端口，Port1设置为 输出单端口, 那么\n\nSSS11: 输出 RL Sds21: 隔离 Ssd12: Gain Sdd22: 输入RL\n\n\n\n2）四端口网络：差分输入，差分输出。需要配置差分端口，点击 TRACE 设置区域的 MEAS 按键-- "More S-Params"开启多端口设置，在该菜单栏下继续选择 "Balanced and Measured Ports" 对矢网上物理端口进行重新配置 。修改端口设置为下图所示，在右侧图形化框下拉栏内，找到希望构建的端口形式，例每两个端口合并为一个差分端口：\n\n\n\n勾选"True Differential Mode"，点击OK。\n\n\n\n设置成功后，可看到显示界面结果为 Sdd21,这时测量的结果即为差分S参数。如果需要选择其他差分S参数，点击 MEAS 按键，选择"More S-Parameters"，可选择期望的测试结果。如下图所示，在同一测试窗口内，同时测量了差分 S 参数和单端 S 参数的测试结果。Sdd 为差模激励，差模响应； Scc 为共模激励，共模响应； Sdc 为共模激励，差模响应，也代表了共模抑制比。\n\n\n\n\n# 3. 矢网的功率扫描功能\n\n如用矢网功率扫描功能来测功率放大器的1dB 3dB压缩点，如下图所示，矢网Sweep type选择 Power Sweep，端口1频率固定，测量S21。\n\n\n\n\n# 4. 矢网的TDR功能\n\n在测量脉冲回波损耗、时域阻抗、对传输线上阻抗不连续性进行检测时，可使用矢网的TDR功能。矢网通过发射扫频连续波，再接收源信号与散射信号并进行比值的方法，获得网络的 S 参数，再将测得的频域数据通过反傅立叶变换（IDFT）得到时域结果。现代网络分析仪在极限情况下已经可以测试 5km 长的电缆，位置精度可达到 mm 级。\n\n1）查看矢网是否有TDR选件\n\n点击 System -Service Menu-Enable Options, 观察里面是否有TDR选项卡，有的话切换成on。\n\n进入TDR模式：点击 Analysis，TDR由 OFF 切换成 ON，点击 YES 进入TDR 界面\n\n\n\n2）TDR校准\n\n· TDR模式后会自动进入校准界面，选择VNA对应的port端口，点击next。\n\n\n\n· 将测试线缆接上电子校准件（注意校准件的频率范围应包含测试频段），点击calibrate。\n\n· 将测试线缆与待测件分开，点击Fixture Comp，这一步是为了将测试线缆的测试时间去嵌到0s。\n\n· 将待测件接到测试线缆上，点击Fixture Comp，完成校准finish，进入TDR测试界面。\n\n\n\n3） TDR测试\n\n通过 Setup Wizard 按键选择 DUT 类型，在 TDR 下进行测量，此时网分其他按键失效，只能在此面板进行操作。横轴表示时间，纵轴表示阻抗。通过时延差，即可得到线缆的断点距离 2d=Vp×t2d=V_{p}\\times t2d=Vp ×t\n\n',normalizedContent:'【转载】 射频工程师工作笔记——第一讲 常用仪器仪表之矢量网络分析仪（上）1.3 - 知乎 (zhihu.com) 射频工程师工作笔记——第一讲 常用仪器仪表之矢量网络分析仪（下）1.3 - 知乎 (zhihu.com)\n\n\n# 一. 矢网的组成及工作原理\n\n矢网主要由信号源、信号源功率分配分离装置、接收机、处理显示单位组成，如下图所示。其中，信号源提供被测器件的激励输入信号；信号源功率分配分离装置含功分器和定向耦合器，功分器将信号源的输出信号分配给两个参考接收机及作为两个端口的输入信号，定向耦合器直接连接到测试端口上，用于提取反射信号，进行反射特性的测量；接收机，对被测器件的反射、传输和输入信号进行测试、比较和分析；处理显示单元，用于对测试结果进行处理和显示。\n\n\n\n\n# 二. 矢网的主要指标\n\n· 频率范围：一般为 xx khz —— 4/8/20/40 ghz\n\n· 端口数量: 多为2端口或4端口\n\n· 输出功率范围：一般为 -xx dbm —— +xx dbm\n\n· 动态范围：源最大输出功率和本底噪声比值\n\n· 测量点数: 时域模式下具有重要意义\n\n· 测量精度： 传输和发射的幅度和相位指标\n\n· 扫描时间\n\n· 中频带宽\n\n· 曲线、通道、显示数目：取决于仪器内存\n\n· 轨迹噪声 trace noise\n\n· 支持的校准方法\n\n\n\n\n\n\n# 三. 矢网的校准\n\n\n# 1. 误差来源\n\n矢网的测试误差主要包含随机误差和系统误差。\n\n\n\n随机误差：主要来自于仪表的内部噪声(如：激励源相位噪声、 采样噪声、 中频接收机的本振噪声)、仪表的开关动作重复性和连接器重复性等，无法通过校准消除。\n\n系统误差：由仪表内部测试装置的不理想引起的，如矢网内部各种器件的失配，耦合器的不理想定向性、连接电缆间的插损等都会造成的误差。这些误差造成了dut实际s参数和矢网测试出来的s参数的差别。因此，在使用矢网测试之前，都是需要作系统误差校准的。校准的目的就是将测试装置本身引入的误差项修正掉，得到dut真实的s参数。\n\n\n# 2. 误差模型\n\n· 单端口反射误差模型\n\n单端口测试时共有t、d、s三个误差项，如图所示。\n\n\n\n单端口反射误差模型\n\n单端口校准常采用osm校准，用open、short和match三个校准件，校准件理想的情况下，开路器反射为1，短路器反射为-1，匹配负载反射为0，进行3次校准测试操作，每个标准件得到一个方程，可唯一地求解出三个误差项，然后再对测量结果进行修正，即可消除被校准端口的3项系统误差。\n\n\n\n\n# 双端口12项误差模型\n\n双端口测试时，涉及到的误差比单端口测试多不少，需要采用更加复杂的校准方式才能完成测试结果的修正。矢网测量双端口网络的主要系统误差如图所示，其正向误差包含：1）方向性误差，定向耦合器阻隔特性不理想，信号源输出的部分信号进入反射通道a；由测试端口阻抗不匹配引起的 2）源失配误差 和 3）负载失配误差；由反射通道和传输通道的耦合度频率响应和变频器幅相频率响应不同而引起的 4）传输频率响应误差 和 5）反射频率响应误差；信号源的信号未经测试设备直接进入接收机的6）泄露误差。此外，还有与6个正向误差相对应的6个反向误差。误差模型如图所示。\n\n\n\n\n\n双端口校准常采用tosm法，需要用到open、short、match、 through 四个校准件。校准件理想的情况下，开路器反射为1，短路器反射为-1，匹配负载反射为0，直通时反射为0，传输为1。把这些元器件接入到测量系统中得到12个方程（公式不在这里列出了，感兴趣的小伙伴可查阅相关论文），可解出12项误差，然后再对测量结果进行修正，即可消除被校准端口的12项系统误差。\n\n\n# 3. 校准方式\n\n根据校准件的不同，校准方式可以分机械校准和电子校准。\n\n1）机械校准\n\n校准件的类型主要包括开路器、短路器、滑动负载、直通反射器、传输线等。这些标准件通常捆绑出售，称为机械校准套件，很多套件都包括测试端口适配器和扭矩扳手，方便用户的连接，如图所示机械校准套件。\n\n\n\n机械校准常用校准方式包括 tosm、uosm、trl 等，每种校准方式的校准件数目、测试的次数及消除误差项目的个数都不相同。\n\n\n\n· tosm校准使用4个校准件，短路器(short)、开路器(open)、匹配负载件(match)、直通校准件(through)，进行7次校准测试操作，可消除全部12项误差，广泛用于同轴类对称端口校准；\n\n· uosm校准相较于tosm，可采用未知参数的互易直通，广泛用于同轴非对称端口校准；\n\n· trl 校准使用3个校准件，直通校准件(through)、反射校准件(reflect)、传输线校准件(line)，可确定12项误差系数，广泛用于片校准和波导校准.\n\n步骤说明\n\n 1. 点击仪器前面板上 systme 区域的 preset 按键，进行初始化复位，避免设置错误；\n\n 2. 点击 start 和 stop 按键设置扫描起止频率；\n\n 3. 根据被测件情况，设置合适的激励信号功率 power，如设置为 0 dbm；\n\n 4. 点击 sweep 按键下，通过 "number of points" 设置扫描点数为 801（按实际要求来）；\n\n 5. 完成上述参数设置后，点击 cal 按键进入校准菜单。\n\n 6. 选择“calibration-start cal-start…(manual)“，弹出校准配置窗口。首先根据测试需求选择校准端口序号，如 p1 和 p2。再选择相应的校准方式，如tosm，点击start出现下面画面，依次连接端口对应的校准件。\n\n\n\n每个校准元件连接好后点击鼠标确认，在其相应的位置会出现绿色对钩“√”符号，如图所示。7 个校准步骤完成后，点击“apply”按钮，完成校准。校准完成后，在 file 按键下选择”save”键，对校准结果进行命名保存。\n\n\n\n说明： a) 校准过程中若某个出现连接松动或错误，可以重新连接该校准件后执行单步覆盖校准， 无需从头校准; b) 连接每个校准件时，应用力矩扳手进行规范紧固; c) 最后一步”isolation”是可选项，可以忽略。如果执行此步校准，可进一步提高系统传输动态范围。\n\n校准完成后，使用双阴直通接头将测试线缆对连，测量s21结果。在 100mhz-6ghz 频段，s21 结果的误差波动一般在 0.05db 以内。此时，s21(db)的显示数值理论上等于该直通件的物理真实插损。\n\n2） 电子校准\n\n电子校准件内置开关，提供可切换的开路、短路、负载标准件的功能及直通状态，相较于机械校准件，电子校准过程简单，只需和矢网连接一次，校准速度快，同时避免了多次手动更换校准件出现错误。\n\n\n\n电子校准件图片\n\n步骤说明\n\n电子校准件通过usb线连接网络分析仪，待指示灯由红变绿后，预热完成；其他步骤与机械校准一致，选择ecal 及对应的port口，开启自动校准。校准完成后，使用双阴直通接头将测试线缆对连，测量s21结果进行验证。\n\n\n\n\n# 四. 矢网的操作步骤\n\n\n\n\n# 五. 矢网的测量功能\n\n\n\n矢网可表征射频和微波器件的正向和反向特性，定量表示器件的幅度和相位响应特性，可用于频域和时域分析。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 六. 矢网的测量举例\n\n\n# 1. 矢网的自动端口延伸功能ape\n\nape利用开路或者短路标准件对夹具进行补偿，可消除夹具或探测带来的损耗、失配、延时等影响。ape仪表自动把端口扩展到测试探针或者线的末端，并作出相位及损耗的修正。\n\n点击 cal 按键 -- port extensions 由 off 切换成 on--auto port extension select port(选择需要ape的端口)\n\n\n\n\n# 2. 矢网的差分测试功能\n\n1）三端口网络：差分输入，单端口输出。\n\n点击 analysis 按键 -- fixture simulator: on - balun: on\n\n若 port2 设置为 差分输入1，2端口，port1设置为 输出单端口, 那么\n\nsss11: 输出 rl sds21: 隔离 ssd12: gain sdd22: 输入rl\n\n\n\n2）四端口网络：差分输入，差分输出。需要配置差分端口，点击 trace 设置区域的 meas 按键-- "more s-params"开启多端口设置，在该菜单栏下继续选择 "balanced and measured ports" 对矢网上物理端口进行重新配置 。修改端口设置为下图所示，在右侧图形化框下拉栏内，找到希望构建的端口形式，例每两个端口合并为一个差分端口：\n\n\n\n勾选"true differential mode"，点击ok。\n\n\n\n设置成功后，可看到显示界面结果为 sdd21,这时测量的结果即为差分s参数。如果需要选择其他差分s参数，点击 meas 按键，选择"more s-parameters"，可选择期望的测试结果。如下图所示，在同一测试窗口内，同时测量了差分 s 参数和单端 s 参数的测试结果。sdd 为差模激励，差模响应； scc 为共模激励，共模响应； sdc 为共模激励，差模响应，也代表了共模抑制比。\n\n\n\n\n# 3. 矢网的功率扫描功能\n\n如用矢网功率扫描功能来测功率放大器的1db 3db压缩点，如下图所示，矢网sweep type选择 power sweep，端口1频率固定，测量s21。\n\n\n\n\n# 4. 矢网的tdr功能\n\n在测量脉冲回波损耗、时域阻抗、对传输线上阻抗不连续性进行检测时，可使用矢网的tdr功能。矢网通过发射扫频连续波，再接收源信号与散射信号并进行比值的方法，获得网络的 s 参数，再将测得的频域数据通过反傅立叶变换（idft）得到时域结果。现代网络分析仪在极限情况下已经可以测试 5km 长的电缆，位置精度可达到 mm 级。\n\n1）查看矢网是否有tdr选件\n\n点击 system -service menu-enable options, 观察里面是否有tdr选项卡，有的话切换成on。\n\n进入tdr模式：点击 analysis，tdr由 off 切换成 on，点击 yes 进入tdr 界面\n\n\n\n2）tdr校准\n\n· tdr模式后会自动进入校准界面，选择vna对应的port端口，点击next。\n\n\n\n· 将测试线缆接上电子校准件（注意校准件的频率范围应包含测试频段），点击calibrate。\n\n· 将测试线缆与待测件分开，点击fixture comp，这一步是为了将测试线缆的测试时间去嵌到0s。\n\n· 将待测件接到测试线缆上，点击fixture comp，完成校准finish，进入tdr测试界面。\n\n\n\n3） tdr测试\n\n通过 setup wizard 按键选择 dut 类型，在 tdr 下进行测量，此时网分其他按键失效，只能在此面板进行操作。横轴表示时间，纵轴表示阻抗。通过时延差，即可得到线缆的断点距离 2d=vp×t2d=v_{p}\\times t2d=vp ×t\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"立碑现象",frontmatter:{title:"立碑现象",date:"2024-01-05T21:00:00.000Z",permalink:"/hardware/technology/libei/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/01.%E5%B7%A5%E8%89%BA%E5%9F%BA%E7%A1%80/03.%E7%AB%8B%E7%A2%91%E7%8E%B0%E8%B1%A1.html",relativePath:"03.硬件知识/01.工艺基础/03.立碑现象.md",key:"v-e4e4c3ac",path:"/hardware/technology/libei/",headers:[{level:2,title:"什么是PCB立碑效应",slug:"什么是pcb立碑效应",normalizedTitle:"什么是pcb立碑效应",charIndex:57},{level:2,title:"PCB立碑现象分析",slug:"pcb立碑现象分析",normalizedTitle:"pcb立碑现象分析",charIndex:190},{level:2,title:"导致PCB立碑的原因及解决办法",slug:"导致pcb立碑的原因及解决办法",normalizedTitle:"导致pcb立碑的原因及解决办法",charIndex:571},{level:3,title:"1、走线焊盘问题",slug:"_1、走线焊盘问题",normalizedTitle:"1、走线焊盘问题",charIndex:658},{level:3,title:"2、PTH靠近焊盘",slug:"_2、pth靠近焊盘",normalizedTitle:"2、pth靠近焊盘",charIndex:1026},{level:3,title:"3、连接到大铜区域的焊盘",slug:"_3、连接到大铜区域的焊盘",normalizedTitle:"3、连接到大铜区域的焊盘",charIndex:1301},{level:3,title:"4、焊盘内过孔",slug:"_4、焊盘内过孔",normalizedTitle:"4、焊盘内过孔",charIndex:1462},{level:3,title:"5、焊盘的形状和位置",slug:"_5、焊盘的形状和位置",normalizedTitle:"5、焊盘的形状和位置",charIndex:1783},{level:3,title:"6、组件下的图例",slug:"_6、组件下的图例",normalizedTitle:"6、组件下的图例",charIndex:1940},{level:2,title:"防止PCB立碑现象的措施",slug:"防止pcb立碑现象的措施",normalizedTitle:"防止pcb立碑现象的措施",charIndex:2072},{level:3,title:"1、两端同时焊接",slug:"_1、两端同时焊接",normalizedTitle:"1、两端同时焊接",charIndex:2089},{level:3,title:"2、合理的焊盘设计",slug:"_2、合理的焊盘设计",normalizedTitle:"2、合理的焊盘设计",charIndex:2186},{level:3,title:"3、保持锡膏活性",slug:"_3、保持锡膏活性",normalizedTitle:"3、保持锡膏活性",charIndex:2466},{level:3,title:"4、采取防污措施",slug:"_4、采取防污措施",normalizedTitle:"4、采取防污措施",charIndex:2804}],headersStr:"什么是PCB立碑效应 PCB立碑现象分析 导致PCB立碑的原因及解决办法 1、走线焊盘问题 2、PTH靠近焊盘 3、连接到大铜区域的焊盘 4、焊盘内过孔 5、焊盘的形状和位置 6、组件下的图例 防止PCB立碑现象的措施 1、两端同时焊接 2、合理的焊盘设计 3、保持锡膏活性 4、采取防污措施",content:"【转发】什么是PCB立碑现象？如何减少PCB立碑现象？一文帮你全部总结 - 知乎 (zhihu.com)\n\n\n# 什么是PCB立碑效应\n\n立碑效应通常会影响表面贴装无源元件，例如电阻、电容和电感，在焊接过程中，元件的一端从PCB的焊盘上抬起。\n\n\n\n组件的最终角度可能是几度-九十度不等，不管这个角度多大，最终结果都是其中一个组件端子未焊接到PCB焊盘，并产生开路。\n\n\n\n\n# PCB立碑现象分析\n\n立碑现象是MLCC与PCB焊接过程中，MLCC的一端离开焊接区域，倾斜或直立。主要原因是 MLCC 在焊接过程中两端润湿力不平衡。产生润湿力不平衡的主要因素有：\n\n1、MLCC两端不能同时熔化。\n\n2、焊盘设计不合理。根据机械机理，建议保持MLCC表面清洁，注意焊盘设计合理，避免焊膏活性减弱，保证MLCC两端熔化。该措施可有效防止立碑现象，在实际生产中取得了良好的效果。\n\n焊接前，片式多层陶瓷电容（MLCC）的两端用焊膏和板焊盘临时定位。当焊接成功完成后，它们就成为组装电路板的一部分。一旦熔锡时两端润湿不均匀，两端产生的不均匀表面张力就会导致其中一端从基板上滑落，或者整个MLCC起翘甚至立起。形似立碑，通常称为立碑现象，有时也称为吊桥现象。这种现象直接影响印制电路板和整机的质量和可靠性。同时也会增加厂家返修率，增加成本。\n\n\n# 导致PCB立碑的原因及解决办法\n\n * 走线焊盘问题\n * PTH靠近焊盘\n * 连接到大铜区域的焊盘\n * 焊盘内过孔\n * 焊盘的形状和位置\n * 组件下的图例\n\n\n# 1、走线焊盘问题\n\n现象：\n\n连接有多个走线的焊盘比连接单个走线的焊盘散热更快 但润湿过程将在不同的时间完成，就可能会导致立碑现象。\n\n避免一个焊盘有多个走线而另一个焊盘只有一个走线，同一个组件的焊盘有不同的走线宽度，也避免同一个组件的焊盘有不同的走线宽度。\n\n下面图一为通用的布局，图二为推荐的布局。\n\n\n\n通用布局\n\n\n\n建议代替的布局\n\n当焊盘连接到电源或GND时，如下图所示，使用较大的走线是很常见的，但是会导致具有较大走线的焊盘的润湿过程在具有较细走线的焊盘之前完成，并可能导致立碑现象。\n\n\n\n焊盘连接到电源或GND\n\n解决办法：\n\n下面显示了2种解决方案，目的是使组件的每个焊盘的走线宽度相同，需要考虑的重要一点是，在宽度变化之前，此统一走线宽度必须距离焊盘边缘至少0.25毫米，以帮助保持润湿过程同步。\n\n\n\n\n\n\n# 2、PTH靠近焊盘\n\n现象：\n\n任何PTH（电镀通孔），包括焊盘太近的过孔，都会在润湿过程中更快地散热。元件焊盘边缘与实际孔的边缘至少有0.25mm的距离。\n\n此外，如果PTH离元件焊盘太近而无法确保可靠的阻焊层，则焊料会流入孔中（称未芯吸或焊料溢出）。\n\n下图显示了PTH离元件焊盘太近的布局：\n\n\n\n下图图显示 PTH 从焊盘边缘到孔边缘的最小距离为 0.25mm。\n\n\n\n解决方案\n\n1）使用盘中孔，有助于减少焊盘的铜面积，但是盘中孔工艺本身会散热。\n\n\n\n2）更可靠的解决方案是将过孔从元件焊盘边缘移至过孔边缘至少0.25mm。\n\n\n\n\n# 3、连接到大铜区域的焊盘\n\n现象：\n\n较大的铜区域充当散热器，但如下图所示，将元件焊盘连接到一个元件焊盘可能会导致立碑效应。\n\n\n\n\n\n解决方法：\n\n确保将大小相似的走线连接到2个焊盘，如下图所示。另外，在接铜区之前至少要有0.25mm的走线。\n\n\n\n如果涉及高功率，则使用与上述类似的解决方案（走线焊盘问题）。\n\n\n# 4、焊盘内过孔\n\n现象：\n\n现在电子产品都在向着小型化发展，就通常会用到在元件焊盘中防止通孔，但是焊盘会沿芯吸/逸出，导致润湿过程不均匀。\n\n即使两个元件焊盘中都有通孔，仍然有很大的可能一个在另一个之前完成润湿过程，这取决于通孔连接到什么，立碑现象仍然可能发生。\n\n此外，对于焊盘中的通孔，存在有足够的焊膏填充通孔并在回流过程中仍然附着在组件端子上的问题。\n\n下图显示了组件焊盘中的过孔，因为未填充过孔，焊膏会芯吸/逸出到孔中，并可能导致元件端子立碑或脱焊。\n\n\n\n解决方案\n\n1、通孔填充，通孔填充是一种解决方案，有助于降低立碑效应的风险。\n\n\n\n2、将过孔从元件焊盘边缘移动至少 0.25mm 到过孔边缘是更可靠的解决方案。\n\n\n\n\n# 5、焊盘的形状和位置\n\n现象：\n\n如果焊盘尺寸太大，可能会导致元件移位或旋转或立碑现象。如果焊盘的位置与该特定组件所需的位置相差太多，那么焊接过程的结果很可能会很糟糕。\n\n解决方案：\n\n使用 IPC 标准 Pad 形状和尺寸来避免此类问题，将CAD 系统的 Pad 与 IPC 标准中推荐的那些进行比较。\n\n\n# 6、组件下的图例\n\n现象：\n\n即使在较小的组件下不适当的图例也可能导致立碑。铜层、阻焊层和图例层一起可以创建比铜焊盘高度高得多的点。请参见下图中的 R2 电阻。\n\n\n\n\n\n解决方案：\n\n这对于小组件（例如 0603）至关重要，避免将图例放在这些组件下方。\n\n\n# 防止PCB立碑现象的措施\n\n\n# 1、两端同时焊接\n\n尽量以最快的速度进行焊接，以减小两端的熔化差异。避免一端焊接成熟，而另一端仍处于未熔化阶段（见图一）。这很可能会被另一端的表面张力和浸锡力拉起（见下图二）。\n\n\n\n\n\n\n# 2、合理的焊盘设计\n\n一对大小不同或不对称的MLCC焊盘会造成焊膏用量不一致，小焊盘对温度反应快，上面的焊膏容易熔化，大焊盘则相反，所以经过小焊盘的焊膏熔化，MLCC在焊膏表面张力的作用下被拉直，形成立碑现象。因此，在设计中应注意以下几个方面：\n\n1）焊接的长度要尽可能的宽，MLCC金属端与焊盘的重叠长度至少要有0.3mm。\n\n2）焊盘空间的长度必须尽可能小，只要能填满锡即可。一般剩余长度不应超过0.5mm。如果为了测试探头的需要不得不加长房间，提前考虑印刷面的收缩。\n\n3）焊盘本身的宽度不宜过宽，与MLCC相比其合理宽度不应超过0.25mm。\n\n\n# 3、保持锡膏活性\n\n焊膏是一种比较敏感的焊接材料。污染、氧化或吸湿都会造成不同程度的劣化。锡膏变质会影响印刷效果，更严重的会造成立碑效应等焊接缺陷，因此在加工过程中应注意以下几点：\n\n1）锡膏应存放在5～10℃的环境中。\n\n2）刚从冰箱中取出的锡膏低于环境温度，不要立即打开它，以防止空气中的水分凝结在锡膏中，一般应在达到室温后使用。\n\n3）锡膏使用前应充分搅拌均匀。\n\n4）残留在槽内未使用的锡膏应用内外罩盖好，不能暴露在空气中，以免吸潮氧化。\n\n5）工作完成后，将钢网上剩余的锡装入空罐中，以备下次使用，用过的锡膏不得倒回未用过的锡膏中，否则会被污染，使新鲜的焊膏变质。\n\n6）锡膏印刷工序应远离经常打开的门窗，使其工作温度稳定，以免因外界空气引起局部环境变化。\n\n\n# 4、采取防污措施\n\n如果MLCC表面被污染，会导致润湿不良，造成立碑现象。因此，无论是MLCC厂商还是用户都需要采取防污措施。下图显示了 MLCC 在一个端面被污染和未被污染时的典型润湿曲线。\n\n\n\n\n\n从图中，可以明显看到，没有被污染的湿润曲线是良好，而被污染的湿润曲线不良好。因此要有防污措施。",normalizedContent:"【转发】什么是pcb立碑现象？如何减少pcb立碑现象？一文帮你全部总结 - 知乎 (zhihu.com)\n\n\n# 什么是pcb立碑效应\n\n立碑效应通常会影响表面贴装无源元件，例如电阻、电容和电感，在焊接过程中，元件的一端从pcb的焊盘上抬起。\n\n\n\n组件的最终角度可能是几度-九十度不等，不管这个角度多大，最终结果都是其中一个组件端子未焊接到pcb焊盘，并产生开路。\n\n\n\n\n# pcb立碑现象分析\n\n立碑现象是mlcc与pcb焊接过程中，mlcc的一端离开焊接区域，倾斜或直立。主要原因是 mlcc 在焊接过程中两端润湿力不平衡。产生润湿力不平衡的主要因素有：\n\n1、mlcc两端不能同时熔化。\n\n2、焊盘设计不合理。根据机械机理，建议保持mlcc表面清洁，注意焊盘设计合理，避免焊膏活性减弱，保证mlcc两端熔化。该措施可有效防止立碑现象，在实际生产中取得了良好的效果。\n\n焊接前，片式多层陶瓷电容（mlcc）的两端用焊膏和板焊盘临时定位。当焊接成功完成后，它们就成为组装电路板的一部分。一旦熔锡时两端润湿不均匀，两端产生的不均匀表面张力就会导致其中一端从基板上滑落，或者整个mlcc起翘甚至立起。形似立碑，通常称为立碑现象，有时也称为吊桥现象。这种现象直接影响印制电路板和整机的质量和可靠性。同时也会增加厂家返修率，增加成本。\n\n\n# 导致pcb立碑的原因及解决办法\n\n * 走线焊盘问题\n * pth靠近焊盘\n * 连接到大铜区域的焊盘\n * 焊盘内过孔\n * 焊盘的形状和位置\n * 组件下的图例\n\n\n# 1、走线焊盘问题\n\n现象：\n\n连接有多个走线的焊盘比连接单个走线的焊盘散热更快 但润湿过程将在不同的时间完成，就可能会导致立碑现象。\n\n避免一个焊盘有多个走线而另一个焊盘只有一个走线，同一个组件的焊盘有不同的走线宽度，也避免同一个组件的焊盘有不同的走线宽度。\n\n下面图一为通用的布局，图二为推荐的布局。\n\n\n\n通用布局\n\n\n\n建议代替的布局\n\n当焊盘连接到电源或gnd时，如下图所示，使用较大的走线是很常见的，但是会导致具有较大走线的焊盘的润湿过程在具有较细走线的焊盘之前完成，并可能导致立碑现象。\n\n\n\n焊盘连接到电源或gnd\n\n解决办法：\n\n下面显示了2种解决方案，目的是使组件的每个焊盘的走线宽度相同，需要考虑的重要一点是，在宽度变化之前，此统一走线宽度必须距离焊盘边缘至少0.25毫米，以帮助保持润湿过程同步。\n\n\n\n\n\n\n# 2、pth靠近焊盘\n\n现象：\n\n任何pth（电镀通孔），包括焊盘太近的过孔，都会在润湿过程中更快地散热。元件焊盘边缘与实际孔的边缘至少有0.25mm的距离。\n\n此外，如果pth离元件焊盘太近而无法确保可靠的阻焊层，则焊料会流入孔中（称未芯吸或焊料溢出）。\n\n下图显示了pth离元件焊盘太近的布局：\n\n\n\n下图图显示 pth 从焊盘边缘到孔边缘的最小距离为 0.25mm。\n\n\n\n解决方案\n\n1）使用盘中孔，有助于减少焊盘的铜面积，但是盘中孔工艺本身会散热。\n\n\n\n2）更可靠的解决方案是将过孔从元件焊盘边缘移至过孔边缘至少0.25mm。\n\n\n\n\n# 3、连接到大铜区域的焊盘\n\n现象：\n\n较大的铜区域充当散热器，但如下图所示，将元件焊盘连接到一个元件焊盘可能会导致立碑效应。\n\n\n\n\n\n解决方法：\n\n确保将大小相似的走线连接到2个焊盘，如下图所示。另外，在接铜区之前至少要有0.25mm的走线。\n\n\n\n如果涉及高功率，则使用与上述类似的解决方案（走线焊盘问题）。\n\n\n# 4、焊盘内过孔\n\n现象：\n\n现在电子产品都在向着小型化发展，就通常会用到在元件焊盘中防止通孔，但是焊盘会沿芯吸/逸出，导致润湿过程不均匀。\n\n即使两个元件焊盘中都有通孔，仍然有很大的可能一个在另一个之前完成润湿过程，这取决于通孔连接到什么，立碑现象仍然可能发生。\n\n此外，对于焊盘中的通孔，存在有足够的焊膏填充通孔并在回流过程中仍然附着在组件端子上的问题。\n\n下图显示了组件焊盘中的过孔，因为未填充过孔，焊膏会芯吸/逸出到孔中，并可能导致元件端子立碑或脱焊。\n\n\n\n解决方案\n\n1、通孔填充，通孔填充是一种解决方案，有助于降低立碑效应的风险。\n\n\n\n2、将过孔从元件焊盘边缘移动至少 0.25mm 到过孔边缘是更可靠的解决方案。\n\n\n\n\n# 5、焊盘的形状和位置\n\n现象：\n\n如果焊盘尺寸太大，可能会导致元件移位或旋转或立碑现象。如果焊盘的位置与该特定组件所需的位置相差太多，那么焊接过程的结果很可能会很糟糕。\n\n解决方案：\n\n使用 ipc 标准 pad 形状和尺寸来避免此类问题，将cad 系统的 pad 与 ipc 标准中推荐的那些进行比较。\n\n\n# 6、组件下的图例\n\n现象：\n\n即使在较小的组件下不适当的图例也可能导致立碑。铜层、阻焊层和图例层一起可以创建比铜焊盘高度高得多的点。请参见下图中的 r2 电阻。\n\n\n\n\n\n解决方案：\n\n这对于小组件（例如 0603）至关重要，避免将图例放在这些组件下方。\n\n\n# 防止pcb立碑现象的措施\n\n\n# 1、两端同时焊接\n\n尽量以最快的速度进行焊接，以减小两端的熔化差异。避免一端焊接成熟，而另一端仍处于未熔化阶段（见图一）。这很可能会被另一端的表面张力和浸锡力拉起（见下图二）。\n\n\n\n\n\n\n# 2、合理的焊盘设计\n\n一对大小不同或不对称的mlcc焊盘会造成焊膏用量不一致，小焊盘对温度反应快，上面的焊膏容易熔化，大焊盘则相反，所以经过小焊盘的焊膏熔化，mlcc在焊膏表面张力的作用下被拉直，形成立碑现象。因此，在设计中应注意以下几个方面：\n\n1）焊接的长度要尽可能的宽，mlcc金属端与焊盘的重叠长度至少要有0.3mm。\n\n2）焊盘空间的长度必须尽可能小，只要能填满锡即可。一般剩余长度不应超过0.5mm。如果为了测试探头的需要不得不加长房间，提前考虑印刷面的收缩。\n\n3）焊盘本身的宽度不宜过宽，与mlcc相比其合理宽度不应超过0.25mm。\n\n\n# 3、保持锡膏活性\n\n焊膏是一种比较敏感的焊接材料。污染、氧化或吸湿都会造成不同程度的劣化。锡膏变质会影响印刷效果，更严重的会造成立碑效应等焊接缺陷，因此在加工过程中应注意以下几点：\n\n1）锡膏应存放在5～10℃的环境中。\n\n2）刚从冰箱中取出的锡膏低于环境温度，不要立即打开它，以防止空气中的水分凝结在锡膏中，一般应在达到室温后使用。\n\n3）锡膏使用前应充分搅拌均匀。\n\n4）残留在槽内未使用的锡膏应用内外罩盖好，不能暴露在空气中，以免吸潮氧化。\n\n5）工作完成后，将钢网上剩余的锡装入空罐中，以备下次使用，用过的锡膏不得倒回未用过的锡膏中，否则会被污染，使新鲜的焊膏变质。\n\n6）锡膏印刷工序应远离经常打开的门窗，使其工作温度稳定，以免因外界空气引起局部环境变化。\n\n\n# 4、采取防污措施\n\n如果mlcc表面被污染，会导致润湿不良，造成立碑现象。因此，无论是mlcc厂商还是用户都需要采取防污措施。下图显示了 mlcc 在一个端面被污染和未被污染时的典型润湿曲线。\n\n\n\n\n\n从图中，可以明显看到，没有被污染的湿润曲线是良好，而被污染的湿润曲线不良好。因此要有防污措施。",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"常用仪器仪表之频谱仪1.2",frontmatter:{title:"常用仪器仪表之频谱仪1.2",date:"2024-01-27T21:00:00.000Z",permalink:"/hardware/rf/spectrum/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/02.%E5%B8%B8%E7%94%A8%E4%BB%AA%E5%99%A8%E4%BB%AA%E8%A1%A8%E4%B9%8B%E9%A2%91%E8%B0%B1%E4%BB%AA1.2.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/02.常用仪器仪表之频谱仪1.2.md",key:"v-32887b2f",path:"/hardware/rf/spectrum/",headers:[{level:2,title:"一. 频谱仪原理",slug:"一-频谱仪原理",normalizedTitle:"一. 频谱仪原理",charIndex:55},{level:2,title:"二. 频谱仪的重要参数",slug:"二-频谱仪的重要参数",normalizedTitle:"二. 频谱仪的重要参数",charIndex:190},{level:3,title:"1.SPAN",slug:"_1-span",normalizedTitle:"1.span",charIndex:206},{level:3,title:"2. 幅度",slug:"_2-幅度",normalizedTitle:"2. 幅度",charIndex:338},{level:3,title:"3. Sweep",slug:"_3-sweep",normalizedTitle:"3. sweep",charIndex:464},{level:3,title:"4. Attenuation",slug:"_4-attenuation",normalizedTitle:"4. attenuation",charIndex:479},{level:3,title:"5. Res BW",slug:"_5-res-bw",normalizedTitle:"5. res bw",charIndex:702},{level:3,title:"6. VBW",slug:"_6-vbw",normalizedTitle:"6. vbw",charIndex:1105},{level:3,title:"7. Detector",slug:"_7-detector",normalizedTitle:"7. detector",charIndex:1189},{level:3,title:"8. Trace",slug:"_8-trace",normalizedTitle:"8. trace",charIndex:1584},{level:2,title:"三. 射频常用测试功能举例",slug:"三-射频常用测试功能举例",normalizedTitle:"三. 射频常用测试功能举例",charIndex:1599},{level:3,title:"例1. 用频谱仪测WCDMA信号邻道功率泄漏比ACLR",slug:"例1-用频谱仪测wcdma信号邻道功率泄漏比aclr",normalizedTitle:"例1. 用频谱仪测wcdma信号邻道功率泄漏比aclr",charIndex:1621},{level:3,title:"例2：用频谱仪测WCDMA信号CCDF",slug:"例2-用频谱仪测wcdma信号ccdf",normalizedTitle:"例2：用频谱仪测wcdma信号ccdf",charIndex:1930},{level:3,title:"例3：5G NR 下行多载波信号的解调分析",slug:"例3-5g-nr-下行多载波信号的解调分析",normalizedTitle:"例3：5g nr 下行多载波信号的解调分析",charIndex:2172}],headersStr:"一. 频谱仪原理 二. 频谱仪的重要参数 1.SPAN 2. 幅度 3. Sweep 4. Attenuation 5. Res BW 6. VBW 7. Detector 8. Trace 三. 射频常用测试功能举例 例1. 用频谱仪测WCDMA信号邻道功率泄漏比ACLR 例2：用频谱仪测WCDMA信号CCDF 例3：5G NR 下行多载波信号的解调分析",content:"【转载】 射频工程师工作笔记——第一讲 常用仪器仪表之频谱仪1.2 - 知乎 (zhihu.com)\n\n\n# 一. 频谱仪原理\n\n工作中较常用的频谱仪是超外差式扫描调频谱仪，其原理图如图所示，射频信号首先经过衰减器，然后与本振信号混频至中频，再经中频放大器、中频滤波器、对数放大器、检波器、视频滤波器、ADC转换到CPU进行数据处理，最后显示出图形。\n\n\n\n频谱仪框架图\n\n\n# 二. 频谱仪的重要参数\n\n\n# 1.SPAN\n\nSPAN 指的是扫频宽度，SPAN=Stop frequency-Start frequency，与测量速度有关，可参考公式： $$ T_{Sweep}\\simeq k\\times\\frac{S_{span}}{RBW^2}\n$$\n\n\n\n\n\n\n# 2. 幅度\n\nRef Level 参考电平，是频谱图最上方的刻度电平值。推荐将信号尖峰调整到屏幕最上边，此时频谱仪射频链路线 性度最好，测试值最准确。注意功率不能溢出！（左下角会有红色报警）\n\nScale/Div Y轴每格刻度 XX dB\n\n\n\n\n# 3. Sweep\n\n\n\n\n# 4. Attenuation\n\n频谱仪的内部衰减器可通过按键 Amplitude-Attenuation-mesh atten 进行设置，一般auto就可。\n\n若频谱仪外部有接衰减器，可通过按键 Input/Output- External Gain-External Gain-BTS, 将外部的衰减值补进频谱仪里，我们可理解为外部的校准值。如频谱仪外接了20dB的衰减器，我们可将External Gain-BTS设置为-20。\n\n\n\n\n# 5. Res BW\n\nRBW，即分辨率带宽，对应频谱仪框架图中频滤波器的带宽。\n\nNF, rms=-174+NFSA+10log (RBW) ；RBW增大10倍，噪底抬高10dB.\n\n\n\nMarker显示的功率值是RBW带宽内的总功率，RBW减小，Marker对应的功率值降低是正常现象。\n\nRBW越小，频谱仪本底噪声越低，微弱信号越好分辨，但扫描速度变慢。在测试微弱信号时，如测试杂散，高次谐波，就需减小RBW，降低噪底，提高信噪比。\n\n一般扫频式数字频谱仪的 SPAN、RBW、SWEEP Time三者相关，默认会自动设置，但其具体的值应根据信号特性来确定。在不考虑信号特性时，一般RBW<Span/N（扫描点数），如扫描点数为600，SPAN为12M，RBW应为10k或者5k量级。对于常规信号， 1kHz、3kHz、5kHz、10kHz、30kHz、100kHz这几挡 RBW 最为常用。\n\n\n# 6. VBW\n\nVBW，对应频谱仪框架图视频滤波器的带宽，是一个低通滤波器。\n\nVBW设置越小其测试曲线越光滑，更有利于小信号的显示，但测试速度变慢。\n\n\n\n\n\n\n# 7. Detector\n\n1）检波器种类：\n\n▪ Positive Peak：最大值检波 ▪ Negative Peak：最小值检波\n\n▪ Auto Peak：最大-最小值同时检波 ▪ Sample：随机检波，能够保持信号随机性\n\n▪ RMS：均方根值检波，功率测量最准确\n\nUrms=∑i=1NUi2NU_{rms}=\\sqrt[]{ {\\textstyle \\sum_{i=1}^{N}}\\frac{U_{i}^{2} }{N} }Urms =∑i=1N NUi2\n\n▪ Average：平均值检波 Uav=∑i=1NUiNU_{av}= {\\textstyle \\sum_{i=1}^{N}}\\frac{U_{i}}{N}Uav =∑i=1N NUi\n\n\n\n2）检波器的选择：\n\n▪ 一般频谱测试通常取峰值\n\n▪ 功率测试和信道功率测试一般取RMS\n\n▪ 噪声测试一般取均值\n\n\n# 8. Trace\n\n\n\n\n# 三. 射频常用测试功能举例\n\n\n\n\n\n\n# 例1. 用频谱仪测WCDMA信号邻道功率泄漏比ACLR\n\n对于 FDD 测量，LTE 定义了两种 ACLR 测量方法：一种是在中心频率和偏置频率上使用 E-UTRA(LTE)；一种是在中心频率使用 LTE，在邻近和相间的偏置频率上使用 UTRA(WCDMA)。\n\n如图是 E-UTRA 邻近和相间频偏信道的 ACLR 测量结果。对于此次测量，选择 5MHz 载波，由于下行链路有 256个子载波（子载波带宽15K），所以测量噪声带宽为 3.84MHz（15K*256）。第一个频偏位于 5MHz 处，Integra BW集成带宽为 3.84MHz；另外一个频偏位于 10MHz 处，有相同的集成带宽。\n\n\n\n\n\n\n# 例2：用频谱仪测WCDMA信号CCDF\n\nPAR(Peak to Average Radio信号峰均比)常用CCDF(complementary Cumulative Distribution Function，互补累计分布函数）这样一个统计函数来表示，曲线表示的是信号的功率（幅度）值和其对应的出现概率。如某个信号的平均功率是10dBm, 它出现超过15dBm功率的统计概率是0.01%，可认为它的PAR是5dB。在概率为0.01%处的PAR，一般称为CREST因子。\n\n\n\n\n# 例3：5G NR 下行多载波信号的解调分析\n\n信号参数如下：频率设置3.5G 幅度-10dBm, 带宽50M，子载波间隔30kHz，双工类型FDD，test mode TM3.1A，两载波：CC1_3.475GHz CC2_3.525GHz。\n\n频谱仪设置：MODE--5G NR\n\n\n\n\n\n\n\n",normalizedContent:"【转载】 射频工程师工作笔记——第一讲 常用仪器仪表之频谱仪1.2 - 知乎 (zhihu.com)\n\n\n# 一. 频谱仪原理\n\n工作中较常用的频谱仪是超外差式扫描调频谱仪，其原理图如图所示，射频信号首先经过衰减器，然后与本振信号混频至中频，再经中频放大器、中频滤波器、对数放大器、检波器、视频滤波器、adc转换到cpu进行数据处理，最后显示出图形。\n\n\n\n频谱仪框架图\n\n\n# 二. 频谱仪的重要参数\n\n\n# 1.span\n\nspan 指的是扫频宽度，span=stop frequency-start frequency，与测量速度有关，可参考公式： $$ t_{sweep}\\simeq k\\times\\frac{s_{span}}{rbw^2}\n$$\n\n\n\n\n\n\n# 2. 幅度\n\nref level 参考电平，是频谱图最上方的刻度电平值。推荐将信号尖峰调整到屏幕最上边，此时频谱仪射频链路线 性度最好，测试值最准确。注意功率不能溢出！（左下角会有红色报警）\n\nscale/div y轴每格刻度 xx db\n\n\n\n\n# 3. sweep\n\n\n\n\n# 4. attenuation\n\n频谱仪的内部衰减器可通过按键 amplitude-attenuation-mesh atten 进行设置，一般auto就可。\n\n若频谱仪外部有接衰减器，可通过按键 input/output- external gain-external gain-bts, 将外部的衰减值补进频谱仪里，我们可理解为外部的校准值。如频谱仪外接了20db的衰减器，我们可将external gain-bts设置为-20。\n\n\n\n\n# 5. res bw\n\nrbw，即分辨率带宽，对应频谱仪框架图中频滤波器的带宽。\n\nnf, rms=-174+nfsa+10log (rbw) ；rbw增大10倍，噪底抬高10db.\n\n\n\nmarker显示的功率值是rbw带宽内的总功率，rbw减小，marker对应的功率值降低是正常现象。\n\nrbw越小，频谱仪本底噪声越低，微弱信号越好分辨，但扫描速度变慢。在测试微弱信号时，如测试杂散，高次谐波，就需减小rbw，降低噪底，提高信噪比。\n\n一般扫频式数字频谱仪的 span、rbw、sweep time三者相关，默认会自动设置，但其具体的值应根据信号特性来确定。在不考虑信号特性时，一般rbw<span/n（扫描点数），如扫描点数为600，span为12m，rbw应为10k或者5k量级。对于常规信号， 1khz、3khz、5khz、10khz、30khz、100khz这几挡 rbw 最为常用。\n\n\n# 6. vbw\n\nvbw，对应频谱仪框架图视频滤波器的带宽，是一个低通滤波器。\n\nvbw设置越小其测试曲线越光滑，更有利于小信号的显示，但测试速度变慢。\n\n\n\n\n\n\n# 7. detector\n\n1）检波器种类：\n\n▪ positive peak：最大值检波 ▪ negative peak：最小值检波\n\n▪ auto peak：最大-最小值同时检波 ▪ sample：随机检波，能够保持信号随机性\n\n▪ rms：均方根值检波，功率测量最准确\n\nurms=∑i=1nui2nu_{rms}=\\sqrt[]{ {\\textstyle \\sum_{i=1}^{n}}\\frac{u_{i}^{2} }{n} }urms =∑i=1n nui2\n\n▪ average：平均值检波 uav=∑i=1nuinu_{av}= {\\textstyle \\sum_{i=1}^{n}}\\frac{u_{i}}{n}uav =∑i=1n nui\n\n\n\n2）检波器的选择：\n\n▪ 一般频谱测试通常取峰值\n\n▪ 功率测试和信道功率测试一般取rms\n\n▪ 噪声测试一般取均值\n\n\n# 8. trace\n\n\n\n\n# 三. 射频常用测试功能举例\n\n\n\n\n\n\n# 例1. 用频谱仪测wcdma信号邻道功率泄漏比aclr\n\n对于 fdd 测量，lte 定义了两种 aclr 测量方法：一种是在中心频率和偏置频率上使用 e-utra(lte)；一种是在中心频率使用 lte，在邻近和相间的偏置频率上使用 utra(wcdma)。\n\n如图是 e-utra 邻近和相间频偏信道的 aclr 测量结果。对于此次测量，选择 5mhz 载波，由于下行链路有 256个子载波（子载波带宽15k），所以测量噪声带宽为 3.84mhz（15k*256）。第一个频偏位于 5mhz 处，integra bw集成带宽为 3.84mhz；另外一个频偏位于 10mhz 处，有相同的集成带宽。\n\n\n\n\n\n\n# 例2：用频谱仪测wcdma信号ccdf\n\npar(peak to average radio信号峰均比)常用ccdf(complementary cumulative distribution function，互补累计分布函数）这样一个统计函数来表示，曲线表示的是信号的功率（幅度）值和其对应的出现概率。如某个信号的平均功率是10dbm, 它出现超过15dbm功率的统计概率是0.01%，可认为它的par是5db。在概率为0.01%处的par，一般称为crest因子。\n\n\n\n\n# 例3：5g nr 下行多载波信号的解调分析\n\n信号参数如下：频率设置3.5g 幅度-10dbm, 带宽50m，子载波间隔30khz，双工类型fdd，test mode tm3.1a，两载波：cc1_3.475ghz cc2_3.525ghz。\n\n频谱仪设置：mode--5g nr\n\n\n\n\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"常用仪器仪表之功率计和探头1.4",frontmatter:{title:"常用仪器仪表之功率计和探头1.4",date:"2024-01-27T21:00:00.000Z",permalink:"/hardware/rf/power/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/04.%E5%B8%B8%E7%94%A8%E4%BB%AA%E5%99%A8%E4%BB%AA%E8%A1%A8%E4%B9%8B%E5%8A%9F%E7%8E%87%E8%AE%A1%E5%92%8C%E6%8E%A2%E5%A4%B41.4.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/04.常用仪器仪表之功率计和探头1.4.md",key:"v-7a27a3e4",path:"/hardware/rf/power/",headers:[{level:2,title:"一. 射频功率计简介",slug:"一-射频功率计简介",normalizedTitle:"一. 射频功率计简介",charIndex:58},{level:2,title:"二. 功率计的重要参数",slug:"二-功率计的重要参数",normalizedTitle:"二. 功率计的重要参数",charIndex:350},{level:3,title:"1. 频率范围",slug:"_1-频率范围",normalizedTitle:"1. 频率范围",charIndex:366},{level:3,title:"2. 功率范围（动态范围）",slug:"_2-功率范围-动态范围",normalizedTitle:"2. 功率范围（动态范围）",charIndex:403},{level:3,title:"3. 测量精度",slug:"_3-测量精度",normalizedTitle:"3. 测量精度",charIndex:499},{level:3,title:"4. 稳定性",slug:"_4-稳定性",normalizedTitle:"4. 稳定性",charIndex:559},{level:3,title:"5. 响应时间",slug:"_5-响应时间",normalizedTitle:"5. 响应时间",charIndex:603},{level:3,title:"6. 探头的型号、阻抗",slug:"_6-探头的型号、阻抗",normalizedTitle:"6. 探头的型号、阻抗",charIndex:654},{level:2,title:"三. 功率计探头",slug:"三-功率计探头",normalizedTitle:"三. 功率计探头",charIndex:728}],headersStr:"一. 射频功率计简介 二. 功率计的重要参数 1. 频率范围 2. 功率范围（动态范围） 3. 测量精度 4. 稳定性 5. 响应时间 6. 探头的型号、阻抗 三. 功率计探头",content:"【转载】 射频工程师工作笔记——第一讲 常用仪器仪表之功率计和探头1.4 - 知乎 (zhihu.com)\n\n\n# 一. 射频功率计简介\n\n射频功率计是测量射频微波功率的仪器，常和功率计探头配合使用，可测量平均功率、峰值功率、脉冲功率、峰均比、VSWR、CCDF等。一台功率计可配置若干个不同功能的探头，来满足不同频段、不同信号的测试需求。常用的射频功率计可分为两大类：一类是采用热敏元件（热电阻，热电偶）的功率计，热敏元件将电路中的功率转换成能量，再将能量转换成电信号，以读出被测功率的大小；另一类是检波式功率计，检波管将高频信号变换为直流信号，通过适当的设置，使检波管输出信号的幅度正比于输入的高频信号的功率，最基本的就是二极管检波，利用二极管的整流特性，将AC信号转换成DC信号。\n\n\n\n\n# 二. 功率计的重要参数\n\n\n# 1. 频率范围\n\n能保证测量精度和性能指标的被测信号的频率范围。\n\n\n# 2. 功率范围（动态范围）\n\n保证测量精度的可测功率最大值和最小值范围。功率计的功率范围决定于功率探头。\n\n使用功率计时绝对不能测量大于允许功率值的信号，否则会造成功率探头烧毁！！！\n\n\n# 3. 测量精度\n\n指功率探头校准修正后的精度，不包括测试系统的失配误差。有的功率计的精度能做到 ±0.1dB。\n\n\n# 4. 稳定性\n\n功率计的稳定性取决于功率探头的稳定性和功率器的零漂和噪声干扰。\n\n\n# 5. 响应时间\n\n即功率传感元件的时间常数，通常指功率指示器上升到稳定值的64%所需的时间。\n\n\n# 6. 探头的型号、阻抗\n\n选用功率计探头时，功率探头的使用频率、功率范围必须与被测信号一致，探头传输线的结构和阻抗应与被测传输线相互匹配。\n\n\n# 三. 功率计探头\n\n使用RF功率计时，有许多不同类型的功率探头，它们适合不同类型的RF功率测量。平均功率的测试一般采用热功率探头；峰值功率，脉冲调制信号，通常采用峰值功率探头测试，即宽带二极管探头，视频带宽决定其窄脉冲测试能力；大动态功率范围测量，需兼顾测试准确度和测量动态范围，常采用二极管探头。如下图为R&S公司不同类型的探头。\n\n",normalizedContent:"【转载】 射频工程师工作笔记——第一讲 常用仪器仪表之功率计和探头1.4 - 知乎 (zhihu.com)\n\n\n# 一. 射频功率计简介\n\n射频功率计是测量射频微波功率的仪器，常和功率计探头配合使用，可测量平均功率、峰值功率、脉冲功率、峰均比、vswr、ccdf等。一台功率计可配置若干个不同功能的探头，来满足不同频段、不同信号的测试需求。常用的射频功率计可分为两大类：一类是采用热敏元件（热电阻，热电偶）的功率计，热敏元件将电路中的功率转换成能量，再将能量转换成电信号，以读出被测功率的大小；另一类是检波式功率计，检波管将高频信号变换为直流信号，通过适当的设置，使检波管输出信号的幅度正比于输入的高频信号的功率，最基本的就是二极管检波，利用二极管的整流特性，将ac信号转换成dc信号。\n\n\n\n\n# 二. 功率计的重要参数\n\n\n# 1. 频率范围\n\n能保证测量精度和性能指标的被测信号的频率范围。\n\n\n# 2. 功率范围（动态范围）\n\n保证测量精度的可测功率最大值和最小值范围。功率计的功率范围决定于功率探头。\n\n使用功率计时绝对不能测量大于允许功率值的信号，否则会造成功率探头烧毁！！！\n\n\n# 3. 测量精度\n\n指功率探头校准修正后的精度，不包括测试系统的失配误差。有的功率计的精度能做到 ±0.1db。\n\n\n# 4. 稳定性\n\n功率计的稳定性取决于功率探头的稳定性和功率器的零漂和噪声干扰。\n\n\n# 5. 响应时间\n\n即功率传感元件的时间常数，通常指功率指示器上升到稳定值的64%所需的时间。\n\n\n# 6. 探头的型号、阻抗\n\n选用功率计探头时，功率探头的使用频率、功率范围必须与被测信号一致，探头传输线的结构和阻抗应与被测传输线相互匹配。\n\n\n# 三. 功率计探头\n\n使用rf功率计时，有许多不同类型的功率探头，它们适合不同类型的rf功率测量。平均功率的测试一般采用热功率探头；峰值功率，脉冲调制信号，通常采用峰值功率探头测试，即宽带二极管探头，视频带宽决定其窄脉冲测试能力；大动态功率范围测量，需兼顾测试准确度和测量动态范围，常采用二极管探头。如下图为r&s公司不同类型的探头。\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"射频无源器件之功分器",frontmatter:{title:"射频无源器件之功分器",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/splitter/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/05.%E5%B0%84%E9%A2%91%E6%97%A0%E6%BA%90%E5%99%A8%E4%BB%B6%E4%B9%8B%E5%8A%9F%E5%88%86%E5%99%A8.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/05.射频无源器件之功分器.md",key:"v-ae6819d6",path:"/hardware/si/splitter/",headers:[{level:2,title:"一. 功分器定义",slug:"一-功分器定义",normalizedTitle:"一. 功分器定义",charIndex:52},{level:2,title:"指标",slug:"指标",normalizedTitle:"指标",charIndex:198},{level:2,title:"常用的功分器",slug:"常用的功分器",normalizedTitle:"常用的功分器",charIndex:1462},{level:3,title:"T 结型功分器",slug:"t-结型功分器",normalizedTitle:"t 结型功分器",charIndex:1481},{level:3,title:"威尔金森功分器",slug:"威尔金森功分器",normalizedTitle:"威尔金森功分器",charIndex:1489}],headersStr:"一. 功分器定义 指标 常用的功分器 T 结型功分器 威尔金森功分器",content:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之功分器 - 知乎 (zhihu.com)\n\n\n# 一. 功分器定义\n\n\n\n功率分配器（power divider）是一种将一路输入信号能量分成两路或多路输出相等或不相等能量的器件，通常为能量的等值分配，按输出分为二功分、三功分、四功分、六功分，八功分，十二功分等。也可反过来用作合路器使用。常被应用于射频微波领域的天线、移动通信等。\n\n\n# 指标\n\n 1. 频率范围\n 2. 分配损耗 指信号功率经过理想功率分配后与原输入信号功率相比减小的量。该值是理论值，理想分配损耗的计算公式：dB=10log(1/N) (N=2, 3....) 如二功分分配损耗3dB，三功分是4.8dB，四功分是6dB, 六公分是7.8dB，八功分是9dB，12功分是10.8dB.\n 3. 插入损耗 理论定义是：信号功率通过实际功分器后输出的功率和原输入信号相比所减小的量再减去分配损耗的值，如通过网络分析仪可测出输入端1口到输出端2、3口的损耗，假设测得是3.2dB, 那插损=实际损耗 -理论分配损耗=3.2dB-3dB=0.2dB。 实际上，为方便起见，可用网分能测量的值，即整个路径上的损耗来表示（分配损耗+插损)。假设输入端口的输入功率为 P1P_{1}P1  ，输出端口 2，3 的输出功率为 P2P_{2}P2 , P3P_{3}P3 ，那么 C21=−10log(P2P1)=−20log∣S21∣C_{21}=-10 log (\\frac{P_{2}}{P_{1}})=-20 log|S_{21}|C21 =−10log(P1 P2 )=−20log∣S21 ∣ C31=−10log(P3P1)=−20log∣S31∣C_{31}=-10 log (\\frac{P_{3}}{P_{1}})=-20 log|S_{31}|C31 =−10log(P1 P3 )=−20log∣S31 ∣\n 4. 输入端口驻波比/回波损耗 输入电压驻波比指的是输入端口的匹配情况，驻波比越小越好，驻波越小，能量反射越小。 回波损耗 C11=−10log(PreflectPinput)=−20log∣S11∣C_{11}=-10log(\\frac{P_{reflect}}{P_{input}})=-20log|S_{11}|C11 =−10log(Pinput Preflect )=−20log∣S11 ∣\n 5. 隔离度 隔离度可通过网络分析仪测得，直接测出各个输出端口之间的损耗。如果从每个支路端口输入功率只能从主路端口输出，而不应该从其他支路输出，这就要求支路之间有足够的隔离度。输出端口2，3的隔离度根据两者的功率输出比来计算。 C23=−10log(P2P3)=−20log∣S21S31∣C_{23}=-10log(\\frac{P_{2}{P_{3}}})=-20log|\\frac{S_{21}}{S_{31}}|C23 =−10log()P2 P3 =−20log∣S31 S21 ∣\n 6. 公分比 端口无反射时，功分比用输出端口3的功率和输出端口2的功率来计算。 k2=P3P2k^2=\\frac{P_{3}}{P_{2}}k2=P2 P3\n 7. 功率容限 指可以在此功分器上长期（不损坏的）通过的最大工作功率容限。\n 8. 幅度平衡 指频带内所有输出端口之间的幅度误差最大值。\n 9. 相位平衡 指频带内各输出端口之间相对于输入端口相移量的起伏程度。\n\n\n# 常用的功分器\n\n工程上常用的功分器有 T 结型功分器和威尔金森功分器。\n\n\n# T 结型功分器\n\n\n\n\n# 威尔金森功分器\n\n相较于T结型功分器，威尔金森功分器添加了隔离电阻，有更好的隔离度和更宽的带宽，如下图所示。\n\n\n\n除了常见的等分功分器，Wilkinson 功分器也可设计成任意功率分配，公式如下：\n\nZ02=k2Z03=Z0K(1+K2)Z_{02}=k^2Z_{03}=Z_{0}\\sqrt{K(1+K^2)}Z02 =k2Z03 =Z0 K(1+K2) Z03=Z01+K2K3Z_{03}=Z_{0}\\sqrt[]{\\frac{1+K^2}{K^3} }Z03 =Z0 K31+K2 R=Z0(K+1K)R=Z_{0}(K+\\frac{1}{K})R=Z0 (K+K1 ) R2=Z0KR_{2}=Z_{0}KR2 =Z0 K R3=Z0KR_{3}=\\frac{Z_{0}}{K}R3 =KZ0 下图为设计的一个一分四 Wilkinson 功分器",normalizedContent:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之功分器 - 知乎 (zhihu.com)\n\n\n# 一. 功分器定义\n\n\n\n功率分配器（power divider）是一种将一路输入信号能量分成两路或多路输出相等或不相等能量的器件，通常为能量的等值分配，按输出分为二功分、三功分、四功分、六功分，八功分，十二功分等。也可反过来用作合路器使用。常被应用于射频微波领域的天线、移动通信等。\n\n\n# 指标\n\n 1. 频率范围\n 2. 分配损耗 指信号功率经过理想功率分配后与原输入信号功率相比减小的量。该值是理论值，理想分配损耗的计算公式：db=10log(1/n) (n=2, 3....) 如二功分分配损耗3db，三功分是4.8db，四功分是6db, 六公分是7.8db，八功分是9db，12功分是10.8db.\n 3. 插入损耗 理论定义是：信号功率通过实际功分器后输出的功率和原输入信号相比所减小的量再减去分配损耗的值，如通过网络分析仪可测出输入端1口到输出端2、3口的损耗，假设测得是3.2db, 那插损=实际损耗 -理论分配损耗=3.2db-3db=0.2db。 实际上，为方便起见，可用网分能测量的值，即整个路径上的损耗来表示（分配损耗+插损)。假设输入端口的输入功率为 p1p_{1}p1  ，输出端口 2，3 的输出功率为 p2p_{2}p2 , p3p_{3}p3 ，那么 c21=−10log(p2p1)=−20log∣s21∣c_{21}=-10 log (\\frac{p_{2}}{p_{1}})=-20 log|s_{21}|c21 =−10log(p1 p2 )=−20log∣s21 ∣ c31=−10log(p3p1)=−20log∣s31∣c_{31}=-10 log (\\frac{p_{3}}{p_{1}})=-20 log|s_{31}|c31 =−10log(p1 p3 )=−20log∣s31 ∣\n 4. 输入端口驻波比/回波损耗 输入电压驻波比指的是输入端口的匹配情况，驻波比越小越好，驻波越小，能量反射越小。 回波损耗 c11=−10log(preflectpinput)=−20log∣s11∣c_{11}=-10log(\\frac{p_{reflect}}{p_{input}})=-20log|s_{11}|c11 =−10log(pinput preflect )=−20log∣s11 ∣\n 5. 隔离度 隔离度可通过网络分析仪测得，直接测出各个输出端口之间的损耗。如果从每个支路端口输入功率只能从主路端口输出，而不应该从其他支路输出，这就要求支路之间有足够的隔离度。输出端口2，3的隔离度根据两者的功率输出比来计算。 c23=−10log(p2p3)=−20log∣s21s31∣c_{23}=-10log(\\frac{p_{2}{p_{3}}})=-20log|\\frac{s_{21}}{s_{31}}|c23 =−10log()p2 p3 =−20log∣s31 s21 ∣\n 6. 公分比 端口无反射时，功分比用输出端口3的功率和输出端口2的功率来计算。 k2=p3p2k^2=\\frac{p_{3}}{p_{2}}k2=p2 p3\n 7. 功率容限 指可以在此功分器上长期（不损坏的）通过的最大工作功率容限。\n 8. 幅度平衡 指频带内所有输出端口之间的幅度误差最大值。\n 9. 相位平衡 指频带内各输出端口之间相对于输入端口相移量的起伏程度。\n\n\n# 常用的功分器\n\n工程上常用的功分器有 t 结型功分器和威尔金森功分器。\n\n\n# t 结型功分器\n\n\n\n\n# 威尔金森功分器\n\n相较于t结型功分器，威尔金森功分器添加了隔离电阻，有更好的隔离度和更宽的带宽，如下图所示。\n\n\n\n除了常见的等分功分器，wilkinson 功分器也可设计成任意功率分配，公式如下：\n\nz02=k2z03=z0k(1+k2)z_{02}=k^2z_{03}=z_{0}\\sqrt{k(1+k^2)}z02 =k2z03 =z0 k(1+k2) z03=z01+k2k3z_{03}=z_{0}\\sqrt[]{\\frac{1+k^2}{k^3} }z03 =z0 k31+k2 r=z0(k+1k)r=z_{0}(k+\\frac{1}{k})r=z0 (k+k1 ) r2=z0kr_{2}=z_{0}kr2 =z0 k r3=z0kr_{3}=\\frac{z_{0}}{k}r3 =kz0 下图为设计的一个一分四 wilkinson 功分器",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:30:43",lastUpdatedTimestamp:1706621443e3},{title:"射频无源器件之环形器",frontmatter:{title:"射频无源器件之环形器",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/circulator/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/08.%E5%B0%84%E9%A2%91%E6%97%A0%E6%BA%90%E5%99%A8%E4%BB%B6%E4%B9%8B%E7%8E%AF%E5%BD%A2%E5%99%A8.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/08.射频无源器件之环形器.md",key:"v-4cfbd904",path:"/hardware/si/circulator/",headers:[{level:2,title:"一. 环形器的作用",slug:"一-环形器的作用",normalizedTitle:"一. 环形器的作用",charIndex:52},{level:2,title:"二. 环形器的结构",slug:"二-环形器的结构",normalizedTitle:"二. 环形器的结构",charIndex:345},{level:2,title:"三. 环形器常见形式",slug:"三-环形器常见形式",normalizedTitle:"三. 环形器常见形式",charIndex:668},{level:2,title:"四. 环形器的重要指标",slug:"四-环形器的重要指标",normalizedTitle:"四. 环形器的重要指标",charIndex:766},{level:3,title:"1. 频率范围",slug:"_1-频率范围",normalizedTitle:"1. 频率范围",charIndex:782},{level:3,title:"2. 传输方向",slug:"_2-传输方向",normalizedTitle:"2. 传输方向",charIndex:794},{level:3,title:"3. 插入损耗 Insertion Loss",slug:"_3-插入损耗-insertion-loss",normalizedTitle:"3. 插入损耗 insertion loss",charIndex:826},{level:3,title:"4. 反向隔离 Isolation",slug:"_4-反向隔离-isolation",normalizedTitle:"4. 反向隔离 isolation",charIndex:881},{level:3,title:"5. 驻波比 VSWR /回波损耗",slug:"_5-驻波比-vswr-回波损耗",normalizedTitle:"5. 驻波比 vswr /回波损耗",charIndex:925},{level:3,title:"6. 输入/输出连接器形式 Connector type",slug:"_6-输入-输出连接器形式-connector-type",normalizedTitle:"6. 输入/输出连接器形式 connector type",charIndex:975},{level:3,title:"7. 承受功率 Power",slug:"_7-承受功率-power",normalizedTitle:"7. 承受功率 power",charIndex:1024},{level:3,title:"8. 工作温度 Operating Temperature",slug:"_8-工作温度-operating-temperature",normalizedTitle:"8. 工作温度 operating temperature",charIndex:1042},{level:3,title:"9. 尺寸 Dimension",slug:"_9-尺寸-dimension",normalizedTitle:"9. 尺寸 dimension",charIndex:1076}],headersStr:"一. 环形器的作用 二. 环形器的结构 三. 环形器常见形式 四. 环形器的重要指标 1. 频率范围 2. 传输方向 3. 插入损耗 Insertion Loss 4. 反向隔离 Isolation 5. 驻波比 VSWR /回波损耗 6. 输入/输出连接器形式 Connector type 7. 承受功率 Power 8. 工作温度 Operating Temperature 9. 尺寸 Dimension",content:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之环形器 - 知乎 (zhihu.com)\n\n\n# 一. 环形器的作用\n\n环行器是一个有单向传输特性的三端口器件，它表明器件从1到2，从2到3和从3到1是导通的，反过来信号从2到1，从3到2和从1到3是隔离的。改变铁氧体偏置场的方向即可改变信号导通的方向，在环行器的一个端口端接匹配负载就可用作隔离器。\n\n环行器在系统中起到信号定向传输、收发双工的作用，可用于雷达/通讯系统里使收/发信号互相隔离，收发可共用同一个天线。\n\n隔离器在系统中起级间隔离、阻抗匹配、传输功率信号以及保护前级功率合成系统的作用。通过功率负载，承受后级因为匹配或者可能出现的故障失配时反射的功率信号，来保护前级功率合成系统，是通信系统中的重要元器件。\n\n\n\n\n# 二. 环形器的结构\n\n环形器的原理是磁场偏置铁氧体材料各向异性特性。利用了电磁波在有外加直流磁场的旋磁铁氧体材料中传输时极化平面发生旋转的法拉第旋转效应，经过适当设计，使正向传输时电磁波极化平面与接地电阻性插板垂直，因而衰减很小，反向传输时电磁波极化平面与接地性电阻插板平行，几乎完全被吸收。微波结构有微带式、波导式、带状线和同轴式，其中以微带三端环形器用的最多，用铁氧体材料作介质，上置导带结构，加恒定磁场，就具有环行特性。如果改变偏置磁场的方向，环行方向就会改变。\n\n下图为一个表贴式环形器的结构，由中心导体（CC）、铁氧体(FE) 、匀磁片(PO) 、磁体(MG)、温度补偿片(TC)、 盖子(Lid）及壳体（Body）组成。\n\n\n\n\n# 三. 环形器常见形式\n\n包含同轴环形器（N, SMA）、表贴环形器（SMT环形器）、带线环形器（D，也称嵌入式环形器）、波导环形器（W）、微带环形器（M，也称基片环形器），如图所示。\n\n\n\n\n# 四. 环形器的重要指标\n\n\n# 1. 频率范围\n\n\n# 2. 传输方向\n\n顺时针和逆时针，也称正旋和反旋。\n\n\n\n\n# 3. 插入损耗 Insertion Loss\n\n描述的是信号从一端传输到另一端的能量，插损越小越好。\n\n\n# 4. 反向隔离 Isolation\n\n隔离度越大越好，绝对值大于20dB较好。\n\n\n# 5. 驻波比 VSWR /回波损耗\n\n驻波比越接近1越好，回波损耗绝对值大于18dB较好。\n\n\n# 6. 输入/输出连接器形式 Connector type\n\n一般有N、SMA、BNC等。\n\n\n# 7. 承受功率 Power\n\n\n# 8. 工作温度 Operating Temperature\n\n\n# 9. 尺寸 Dimension\n\n下图为电科9所部分环形器技术指标。\n\n",normalizedContent:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之环形器 - 知乎 (zhihu.com)\n\n\n# 一. 环形器的作用\n\n环行器是一个有单向传输特性的三端口器件，它表明器件从1到2，从2到3和从3到1是导通的，反过来信号从2到1，从3到2和从1到3是隔离的。改变铁氧体偏置场的方向即可改变信号导通的方向，在环行器的一个端口端接匹配负载就可用作隔离器。\n\n环行器在系统中起到信号定向传输、收发双工的作用，可用于雷达/通讯系统里使收/发信号互相隔离，收发可共用同一个天线。\n\n隔离器在系统中起级间隔离、阻抗匹配、传输功率信号以及保护前级功率合成系统的作用。通过功率负载，承受后级因为匹配或者可能出现的故障失配时反射的功率信号，来保护前级功率合成系统，是通信系统中的重要元器件。\n\n\n\n\n# 二. 环形器的结构\n\n环形器的原理是磁场偏置铁氧体材料各向异性特性。利用了电磁波在有外加直流磁场的旋磁铁氧体材料中传输时极化平面发生旋转的法拉第旋转效应，经过适当设计，使正向传输时电磁波极化平面与接地电阻性插板垂直，因而衰减很小，反向传输时电磁波极化平面与接地性电阻插板平行，几乎完全被吸收。微波结构有微带式、波导式、带状线和同轴式，其中以微带三端环形器用的最多，用铁氧体材料作介质，上置导带结构，加恒定磁场，就具有环行特性。如果改变偏置磁场的方向，环行方向就会改变。\n\n下图为一个表贴式环形器的结构，由中心导体（cc）、铁氧体(fe) 、匀磁片(po) 、磁体(mg)、温度补偿片(tc)、 盖子(lid）及壳体（body）组成。\n\n\n\n\n# 三. 环形器常见形式\n\n包含同轴环形器（n, sma）、表贴环形器（smt环形器）、带线环形器（d，也称嵌入式环形器）、波导环形器（w）、微带环形器（m，也称基片环形器），如图所示。\n\n\n\n\n# 四. 环形器的重要指标\n\n\n# 1. 频率范围\n\n\n# 2. 传输方向\n\n顺时针和逆时针，也称正旋和反旋。\n\n\n\n\n# 3. 插入损耗 insertion loss\n\n描述的是信号从一端传输到另一端的能量，插损越小越好。\n\n\n# 4. 反向隔离 isolation\n\n隔离度越大越好，绝对值大于20db较好。\n\n\n# 5. 驻波比 vswr /回波损耗\n\n驻波比越接近1越好，回波损耗绝对值大于18db较好。\n\n\n# 6. 输入/输出连接器形式 connector type\n\n一般有n、sma、bnc等。\n\n\n# 7. 承受功率 power\n\n\n# 8. 工作温度 operating temperature\n\n\n# 9. 尺寸 dimension\n\n下图为电科9所部分环形器技术指标。\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"导航站",frontmatter:{title:"导航站",date:"2022-01-04T20:02:46.000Z",permalink:"/navigation/",private:!0,titleTag:"优质",article:!1,categories:[null],tags:[null],readingShow:"top"},regularPath:"/01.%E5%AF%BC%E8%88%AA%E7%AB%99.html",relativePath:"01.导航站.md",key:"v-06599184",path:"/navigation/",headers:[{level:2,title:"友情链接",slug:"友情链接",normalizedTitle:"友情链接",charIndex:66},{level:2,title:"搜索引擎",slug:"搜索引擎",normalizedTitle:"搜索引擎",charIndex:1943},{level:2,title:"代码托管",slug:"代码托管",normalizedTitle:"代码托管",charIndex:1952},{level:2,title:"前端开发",slug:"前端开发",normalizedTitle:"前端开发",charIndex:1961},{level:2,title:"后端开发",slug:"后端开发",normalizedTitle:"后端开发",charIndex:1970},{level:2,title:"文档工具",slug:"文档工具",normalizedTitle:"文档工具",charIndex:1979},{level:2,title:"热门社区",slug:"热门社区",normalizedTitle:"热门社区",charIndex:1988},{level:2,title:"工具合集",slug:"工具合集",normalizedTitle:"工具合集",charIndex:1997},{level:2,title:"文档教程",slug:"文档教程",normalizedTitle:"文档教程",charIndex:2006},{level:2,title:"动态图表",slug:"动态图表",normalizedTitle:"动态图表",charIndex:2015},{level:2,title:"图片图标",slug:"图片图标",normalizedTitle:"图片图标",charIndex:2024},{level:2,title:"CSS样式",slug:"css样式",normalizedTitle:"css样式",charIndex:2033},{level:2,title:"网站分析",slug:"网站分析",normalizedTitle:"网站分析",charIndex:2043},{level:2,title:"其它资源",slug:"其它资源",normalizedTitle:"其它资源",charIndex:2052},{level:2,title:"参考来源",slug:"参考来源",normalizedTitle:"参考来源",charIndex:2061}],headersStr:"友情链接 搜索引擎 代码托管 前端开发 后端开发 文档工具 热门社区 工具合集 文档教程 动态图表 图片图标 CSS样式 网站分析 其它资源 参考来源",content:"笔记\n\n本内容因为制作卡片效果，导致空间大小有限，如果想访问更多内容，点击前往。\n\n2023-06-13 @icaiwei\n\n\n# 友情链接\n\nGeorge Chan\n\n让我给你讲讲他的传奇故事吧\n\nbutcher2000\n\n即使再小的帆，也能远航\n\nEvan's blog\n\n前端的小学生\n\n二丫讲梵\n\n💻学习📝记录🔗分享\n\nWeibw\n\n一个没有梦想的咸鱼\n\nJava 全栈知识体系\n\nJava 全栈知识体系\n\n风祈的时光录\n\n主要是Java技术栈的博客，比较偏原理，源码类型的博主\n\nxustudyxu\n\n一起学习编程!\n\n- name: George Chan\n  desc: 让我给你讲讲他的传奇故事吧\n  avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://cyc0819.top/\n  bgColor: '#FFB6C1'\n  textColor: '#621529'  \n  \n- name: butcher2000\n  desc: 即使再小的帆，也能远航\n  avatar: https://cdn.staticaly.com/gh/Kele-Bingtang/static@master/user/20211029181901.png\n  link: https://blog.csdn.net/weixin_46827107\n  bgColor: '#CBEAFA'\n  textColor: '#6854A1'\n  \n- name: Evan's blog\n  desc: 前端的小学生\n  avatar: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200103123203.jpg\n  link: https://xugaoyi.com/\n  bgColor: '#B9D59C'\n  textColor: '#3B551F'\n\n- name: 二丫讲梵\n  desc: 💻学习📝记录🔗分享\n  avatar: https://wiki.eryajf.net/img/logo.png\n  link: https://wiki.eryajf.net/\n  bgColor: '#FBEBEC'\n  textColor: '#603420'\n\n- name: Weibw\n  link: http://weibw162.com/\n  avatar: https://cdn.staticaly.com/gh/Weibw162/image-hosting@dev/杂录/image.735febsv1zo0.webp\n  desc: 一个没有梦想的咸鱼\n  bgColor: '#FFCEDE'\n  textColor: '#621529'\n  \n- name: Java 全栈知识体系\n  desc: Java 全栈知识体系\n  avatar: https://www.pdai.tech/_images/index-read.gif\n  link: https://www.pdai.tech/\n  bgColor: '#FCDBA0'\n  textColor: '#A05F2C'\n  \n- name: 风祈的时光录\n  link: https://imlql.cn/\n  avatar: https://npm.elemecdn.com/lql_static@latest/avatar/1.jpg\n  desc: 主要是Java技术栈的博客，比较偏原理，源码类型的博主\n  bgColor: '#FFEFE2'\n  textColor: '#A05F2C'\n \n- name: xustudyxu\n  desc: 一起学习编程!\n  avatar: https://cdn.staticaly.com/gh/xustudyxu/image-hosting@master/20220423/01.3d9wrma6qlq0.webp\n  link: https://frxcat.fun/\n  bgColor: '#CBEAFA'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n\n\n如果您想互留友链，点击前往\n\n\n# 搜索引擎\n\n\n# 代码托管\n\n\n# 前端开发\n\n\n# 后端开发\n\n\n# 文档工具\n\n\n# 热门社区\n\n\n# 工具合集\n\n\n# 文档教程\n\n\n# 动态图表\n\n\n# 图片图标\n\n\n# CSS样式\n\n\n# 网站分析\n\n\n# 其它资源\n\n\n# 参考来源\n\nhttps://www.pdai.tech/md/resource/tools.html",normalizedContent:"笔记\n\n本内容因为制作卡片效果，导致空间大小有限，如果想访问更多内容，点击前往。\n\n2023-06-13 @icaiwei\n\n\n# 友情链接\n\ngeorge chan\n\n让我给你讲讲他的传奇故事吧\n\nbutcher2000\n\n即使再小的帆，也能远航\n\nevan's blog\n\n前端的小学生\n\n二丫讲梵\n\n💻学习📝记录🔗分享\n\nweibw\n\n一个没有梦想的咸鱼\n\njava 全栈知识体系\n\njava 全栈知识体系\n\n风祈的时光录\n\n主要是java技术栈的博客，比较偏原理，源码类型的博主\n\nxustudyxu\n\n一起学习编程!\n\n- name: george chan\n  desc: 让我给你讲讲他的传奇故事吧\n  avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://cyc0819.top/\n  bgcolor: '#ffb6c1'\n  textcolor: '#621529'  \n  \n- name: butcher2000\n  desc: 即使再小的帆，也能远航\n  avatar: https://cdn.staticaly.com/gh/kele-bingtang/static@master/user/20211029181901.png\n  link: https://blog.csdn.net/weixin_46827107\n  bgcolor: '#cbeafa'\n  textcolor: '#6854a1'\n  \n- name: evan's blog\n  desc: 前端的小学生\n  avatar: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200103123203.jpg\n  link: https://xugaoyi.com/\n  bgcolor: '#b9d59c'\n  textcolor: '#3b551f'\n\n- name: 二丫讲梵\n  desc: 💻学习📝记录🔗分享\n  avatar: https://wiki.eryajf.net/img/logo.png\n  link: https://wiki.eryajf.net/\n  bgcolor: '#fbebec'\n  textcolor: '#603420'\n\n- name: weibw\n  link: http://weibw162.com/\n  avatar: https://cdn.staticaly.com/gh/weibw162/image-hosting@dev/杂录/image.735febsv1zo0.webp\n  desc: 一个没有梦想的咸鱼\n  bgcolor: '#ffcede'\n  textcolor: '#621529'\n  \n- name: java 全栈知识体系\n  desc: java 全栈知识体系\n  avatar: https://www.pdai.tech/_images/index-read.gif\n  link: https://www.pdai.tech/\n  bgcolor: '#fcdba0'\n  textcolor: '#a05f2c'\n  \n- name: 风祈的时光录\n  link: https://imlql.cn/\n  avatar: https://npm.elemecdn.com/lql_static@latest/avatar/1.jpg\n  desc: 主要是java技术栈的博客，比较偏原理，源码类型的博主\n  bgcolor: '#ffefe2'\n  textcolor: '#a05f2c'\n \n- name: xustudyxu\n  desc: 一起学习编程!\n  avatar: https://cdn.staticaly.com/gh/xustudyxu/image-hosting@master/20220423/01.3d9wrma6qlq0.webp\n  link: https://frxcat.fun/\n  bgcolor: '#cbeafa'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n\n\n如果您想互留友链，点击前往\n\n\n# 搜索引擎\n\n\n# 代码托管\n\n\n# 前端开发\n\n\n# 后端开发\n\n\n# 文档工具\n\n\n# 热门社区\n\n\n# 工具合集\n\n\n# 文档教程\n\n\n# 动态图表\n\n\n# 图片图标\n\n\n# css样式\n\n\n# 网站分析\n\n\n# 其它资源\n\n\n# 参考来源\n\nhttps://www.pdai.tech/md/resource/tools.html",charsets:{cjk:!0},lastUpdated:"2023/06/18, 23:24:16",lastUpdatedTimestamp:1687101856e3},{title:"射频无源器件之耦合器",frontmatter:{title:"射频无源器件之耦合器",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/coupling/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/06.%E5%B0%84%E9%A2%91%E6%97%A0%E6%BA%90%E5%99%A8%E4%BB%B6%E4%B9%8B%E8%80%A6%E5%90%88%E5%99%A8.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/06.射频无源器件之耦合器.md",key:"v-0c375de9",path:"/hardware/si/coupling/",headers:[{level:2,title:"一. 耦合器的作用",slug:"一-耦合器的作用",normalizedTitle:"一. 耦合器的作用",charIndex:52},{level:2,title:"二. 耦合器的重要指标",slug:"二-耦合器的重要指标",normalizedTitle:"二. 耦合器的重要指标",charIndex:209},{level:3,title:"1. 频率范围",slug:"_1-频率范围",normalizedTitle:"1. 频率范围",charIndex:268},{level:3,title:"2. 插入损耗",slug:"_2-插入损耗",normalizedTitle:"2. 插入损耗",charIndex:280},{level:3,title:"3. 耦合度",slug:"_3-耦合度",normalizedTitle:"3. 耦合度",charIndex:398},{level:3,title:"4. 隔离度",slug:"_4-隔离度",normalizedTitle:"4. 隔离度",charIndex:508},{level:3,title:"5. 方向性",slug:"_5-方向性",normalizedTitle:"5. 方向性",charIndex:619},{level:3,title:"6. 输入回波损耗",slug:"_6-输入回波损耗",normalizedTitle:"6. 输入回波损耗",charIndex:831},{level:3,title:"7. 工作带宽",slug:"_7-工作带宽",normalizedTitle:"7. 工作带宽",charIndex:943},{level:2,title:"三. 混合耦合器",slug:"三-混合耦合器",normalizedTitle:"三. 混合耦合器",charIndex:978}],headersStr:"一. 耦合器的作用 二. 耦合器的重要指标 1. 频率范围 2. 插入损耗 3. 耦合度 4. 隔离度 5. 方向性 6. 输入回波损耗 7. 工作带宽 三. 混合耦合器",content:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之耦合器 - 知乎 (zhihu.com)\n\n\n# 一. 耦合器的作用\n\n在射频电路中，射频耦合器将一路微波功率按比例分成几路，用于检测或监测信号，如功率测量和波检测，还可改变信号的幅度、相位等特性，以满足不同的通信需求。根据输入与耦合端的功率差，常被分为5dB、6dB、10dB等耦合器。射频耦合器的类型主要包括定向耦合器、双定向耦合器和混合耦合器。\n\n\n\n\n# 二. 耦合器的重要指标\n\n设前向波耦合器的P1为输入端口，P2为直通端口，P3为耦合端口，P4为隔离端口\n\n\n\n\n# 1. 频率范围\n\n\n# 2. 插入损耗\n\nIL=10logP1P2=−20log∣S21∣IL =10log\\frac{P_{1}}{P_{2}}=-20log|S_{21}|IL=10logP2 P1 =−20log∣S21 ∣ 输入/输出理想为0\n\n\n# 3. 耦合度\n\nC=10logP1P3=−20log∣S31∣C=10log\\frac{P_{1}}{P_{3}}= -20log|S_{31}|C=10logP3 P1 =−20log∣S31 ∣ 输入/耦合\n\n\n# 4. 隔离度\n\nI=10logP1P4=−20log∣S41∣I =10log\\frac{P_{1}}{P_{4}}= -20log|S_{41}|I=10logP4 P1 =−20log∣S41 ∣ 输入/隔离\n\n\n# 5. 方向性\n\n定向耦合器的方向性可用来反映定向耦合器分离两个相反传输方向信号的能力：\n\nD=10logP3P4=20log∣S31∣∣S41∣D = 10log\\frac{P_{3}}{P_{4}}= 20log|S_{31}||S_{41}|D=10logP4 P3 =20log∣S31 ∣∣S41 ∣\n\nD=I(隔离度)−C(耦合度)D = I (隔离度) - C (耦合度)D=I(隔离度)−C(耦合度)\n\n\n# 6. 输入回波损耗\n\nRL=10logP1P1=−20log∣S11∣RL = 10log\\frac{P_{1}}{P_{1}}= -20log|S_{11}|RL=10logP1 P1 =−20log∣S11 ∣\n\n\n# 7. 工作带宽\n\nI、D、C等参数均满足指标的工作频率范围。\n\n\n# 三. 混合耦合器\n\n混合耦合器根据输出两端口的相移程度可分为90°混合耦合器，180°混合耦合器和0°混合耦合器。其重要指标除上述指标外，还包括相位平衡、振幅平衡。\n\n 1. 90°混合耦合器\n\n90°耦合器也称为正交混合耦合器，因为信号输入任何接口都会使得两个输出端口产生两个90度异相信号。通常是输入信号平均分配给两个输出端口，即比输入端低3dB。\n\n\n\n\n\n 2. 180°混合耦合器\n\n通常用于将输入信号平均分为180度的两个输出信号。还可合并两个输入信号，同时保持两者之间的高度隔离。\n\n\n\n\n\n\n\n\n\n\n\n\n\nCoupler可采用HFSS进行仿真设计，将会在《射频工程师工作笔记——第四讲 射频软件工具之HFSS》进行讲解。",normalizedContent:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之耦合器 - 知乎 (zhihu.com)\n\n\n# 一. 耦合器的作用\n\n在射频电路中，射频耦合器将一路微波功率按比例分成几路，用于检测或监测信号，如功率测量和波检测，还可改变信号的幅度、相位等特性，以满足不同的通信需求。根据输入与耦合端的功率差，常被分为5db、6db、10db等耦合器。射频耦合器的类型主要包括定向耦合器、双定向耦合器和混合耦合器。\n\n\n\n\n# 二. 耦合器的重要指标\n\n设前向波耦合器的p1为输入端口，p2为直通端口，p3为耦合端口，p4为隔离端口\n\n\n\n\n# 1. 频率范围\n\n\n# 2. 插入损耗\n\nil=10logp1p2=−20log∣s21∣il =10log\\frac{p_{1}}{p_{2}}=-20log|s_{21}|il=10logp2 p1 =−20log∣s21 ∣ 输入/输出理想为0\n\n\n# 3. 耦合度\n\nc=10logp1p3=−20log∣s31∣c=10log\\frac{p_{1}}{p_{3}}= -20log|s_{31}|c=10logp3 p1 =−20log∣s31 ∣ 输入/耦合\n\n\n# 4. 隔离度\n\ni=10logp1p4=−20log∣s41∣i =10log\\frac{p_{1}}{p_{4}}= -20log|s_{41}|i=10logp4 p1 =−20log∣s41 ∣ 输入/隔离\n\n\n# 5. 方向性\n\n定向耦合器的方向性可用来反映定向耦合器分离两个相反传输方向信号的能力：\n\nd=10logp3p4=20log∣s31∣∣s41∣d = 10log\\frac{p_{3}}{p_{4}}= 20log|s_{31}||s_{41}|d=10logp4 p3 =20log∣s31 ∣∣s41 ∣\n\nd=i(隔离度)−c(耦合度)d = i (隔离度) - c (耦合度)d=i(隔离度)−c(耦合度)\n\n\n# 6. 输入回波损耗\n\nrl=10logp1p1=−20log∣s11∣rl = 10log\\frac{p_{1}}{p_{1}}= -20log|s_{11}|rl=10logp1 p1 =−20log∣s11 ∣\n\n\n# 7. 工作带宽\n\ni、d、c等参数均满足指标的工作频率范围。\n\n\n# 三. 混合耦合器\n\n混合耦合器根据输出两端口的相移程度可分为90°混合耦合器，180°混合耦合器和0°混合耦合器。其重要指标除上述指标外，还包括相位平衡、振幅平衡。\n\n 1. 90°混合耦合器\n\n90°耦合器也称为正交混合耦合器，因为信号输入任何接口都会使得两个输出端口产生两个90度异相信号。通常是输入信号平均分配给两个输出端口，即比输入端低3db。\n\n\n\n\n\n 2. 180°混合耦合器\n\n通常用于将输入信号平均分为180度的两个输出信号。还可合并两个输入信号，同时保持两者之间的高度隔离。\n\n\n\n\n\n\n\n\n\n\n\n\n\ncoupler可采用hfss进行仿真设计，将会在《射频工程师工作笔记——第四讲 射频软件工具之hfss》进行讲解。",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"射频无源器件之天线",frontmatter:{title:"射频无源器件之天线",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/wire/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/10.%E5%B0%84%E9%A2%91%E6%97%A0%E6%BA%90%E5%99%A8%E4%BB%B6%E4%B9%8B%E5%A4%A9%E7%BA%BF.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/10.射频无源器件之天线.md",key:"v-5039df00",path:"/hardware/si/wire/",headers:[{level:2,title:"一. 天线的作用",slug:"一-天线的作用",normalizedTitle:"一. 天线的作用",charIndex:51},{level:2,title:"二. 天线的工作原理",slug:"二-天线的工作原理",normalizedTitle:"二. 天线的工作原理",charIndex:156},{level:2,title:"三. 天线的分类",slug:"三-天线的分类",normalizedTitle:"三. 天线的分类",charIndex:441},{level:2,title:"四. 天线的性能指标",slug:"四-天线的性能指标",normalizedTitle:"四. 天线的性能指标",charIndex:1295},{level:2,title:"· 电性能参数",slug:"·-电性能参数",normalizedTitle:"· 电性能参数",charIndex:1310},{level:3,title:"1. polarization（极化）",slug:"_1-polarization-极化",normalizedTitle:"1. polarization（极化）",charIndex:1322},{level:3,title:"2. Gain（增益）",slug:"_2-gain-增益",normalizedTitle:"2. gain（增益）",charIndex:1422},{level:3,title:"3. Radiation pattern 辐射方向图（波瓣图）",slug:"_3-radiation-pattern-辐射方向图-波瓣图",normalizedTitle:"3. radiation pattern 辐射方向图（波瓣图）",charIndex:1680},{level:3,title:"4. 方位角和下倾角",slug:"_4-方位角和下倾角",normalizedTitle:"4. 方位角和下倾角",charIndex:2280},{level:2,title:"· 机械性能参数",slug:"·-机械性能参数",normalizedTitle:"· 机械性能参数",charIndex:2561},{level:2,title:"五. 天线的测量",slug:"五-天线的测量",normalizedTitle:"五. 天线的测量",charIndex:2858}],headersStr:"一. 天线的作用 二. 天线的工作原理 三. 天线的分类 四. 天线的性能指标 · 电性能参数 1. polarization（极化） 2. Gain（增益） 3. Radiation pattern 辐射方向图（波瓣图） 4. 方位角和下倾角 · 机械性能参数 五. 天线的测量",content:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之天线 - 知乎 (zhihu.com)\n\n\n# 一. 天线的作用\n\n天线在无线电设备中用于发射和接收电磁波，可相互转化传输线上的导行波和空间的电磁波，是一种无源器件，不能产生能量，被广泛应用于通信、雷达、电视、导航、遥感、射电天文、电子对抗等领域。\n\n\n# 二. 天线的工作原理\n\n导体上通过高频电流会产生电磁和磁场，辐射能力与导线长度和形状相关。如图是典型的半波偶极子天线在交变电流的作用下产生电磁和磁场，极性每半个周期变换一次，电磁和磁场均为球形且互为直角正交。\n\n\n\n产生电磁场的这两根导线，就叫做振子。两臂长度相等称为叫对称振子，是一种经典的、迄今为止最广泛使用的天线。每臂长度为1/4波长的振子称为半波振子，可独立使用，也可用多个半波对称振子组成天线阵。\n\n\n\n由于 c=λf，一个1/2波长的对称振子，在800MHz，约200mm长；在2.4G时，约6cm长；在3G时，约5cm长；在5G时，约3cm 长。\n\n\n# 三. 天线的分类\n\n 1. 按用途分：基站天线、电视天线、雷达天线、车载天线···\n\n 2. 按辐射方向分：Directional(定向天线)和 Omni-directional(全向天线)\n\n· 全向天线：在水平面360度辐射，所有方向上辐射出的电波能量都是相同的，但在垂直面内不同方向上辐射出的电波能量是不同的。如路由器棒状天线、玻璃钢天线等。\n\n· 定向天线：在水平面与垂直面内的所有方向上辐射出的电波能量都不相同。方向图辐射类似手电筒辐射可见光，朝某方向定向辐射，相同的射频能量下可以实现更远的覆盖距离，但是是以牺牲其他区域覆盖为代价的。如微带贴片天线，平板天线，八木天线，喇叭天线，抛物面天线等。\n\n 3. 按波长分：中波天线、短波天线、超短波天线、微波天线等等。\n\n\n\n 4. 基站天线一般分为室内天线和室外天线。\n\n1）室内天线主要有全向吸顶天线和定向壁挂天线：\n\n\n\n2）室外基站天线主要有单极化全向天线、单极化定向和双极化定向天线：\n\n\n\n\n\n 3. Massive MIMO\n\nMIMO(Multiple input multiple output，多进多出) 在发送端和接收端都使用多根天线，收发之间构成多个信道，从而大幅提高信道容量，抗衰落性能和频谱利用率。\n\n\n\nMassive MIMO：对MIMO进行了扩展和延伸，扩增为16/32/64/128天线，被称为Massive MIMO。通过集成更多射频通道和天线，实现三维精准波束赋形和多流多用户复用技术。\n\n\n\n采用Massvie MIMO技术，天线在不同Pattern配置下，不同数字方向角、数字下倾角配置下，增益波形差异明显，因此，可以根据不同场景配置不同的广播波束，以匹配多种多样的覆盖场景。\n\n\n\n\n\n5.手机天线\n\n从早期的外置天线到现在的内置天线。现在5G手机开始采用44、88的 MIMO天线，大力提升了传输速度。如在同样频宽下，下载一部500MB的视频，单天线手机耗时4min，8天线手机仅需30s.\n\n\n\n\n# 四. 天线的性能指标\n\n\n# · 电性能参数\n\n\n# 1. polarization（极化）\n\n指天线辐射电磁场的电磁方向，分为线极化（水平/垂直）、圆极化（左旋/右旋）、椭圆极化（左旋/右旋）等。移动通信系统中常用垂直极化和±45°极化。\n\n\n\n\n# 2. Gain（增益）\n\n指在相同输入功率时，天线在某一特定方向上辐射功率密度与参考天线辐射功率密度之比。增益与方向图密切相关，主瓣越窄，副瓣越小，增益越高。在相同条件下，增益越高，传输越远。在实际情况中，应以波速和覆盖目标区相匹配的前提下，合理选择天线增益，如覆盖距离较近时，为保证近点的覆盖效果，应选择垂直波瓣较宽的低增益天线。\n\n\n\n· dBi(isotropic)：相对于点源天线的增益，在各方向辐射是均匀的。\n\n· dBd(dipole)：相对于半波振子天线的增益\n\ndBi = dBd+2.15\n\n\n# 3. Radiation pattern 辐射方向图（波瓣图）\n\n波瓣图可表征天线在空间各个方向上辐射场的相对大小。\n\n\n\n\n\n\n\nMain lobe(主瓣)与side lobe(旁瓣)：辐射强度最大的称为主瓣，其余的称为旁瓣或副瓣。\n\n**SLL(副瓣电平)**是指所有副瓣中最大的那一个副瓣电平。\n\n3dB Bandwidth(半功率波束宽度HPBW): 相对最大辐射方向功率密度下降至一半时的角域宽度，也叫3dB波束宽度。\n\n水平面的叫水平波束宽度，宽度越宽，在扇区交界处的覆盖越好；垂直平面的叫垂直波束宽度，垂直波瓣宽度越窄，偏离主波束方向时信号衰减越快，与天线倾角相关。\n\n**FNBW(First null beamwidth第一零波束宽度)：**如图所示，指方向图主瓣两侧第一个零点之间的夹角。\n\nIsolation between two ports(交叉极化鉴别率): 一般是指与主极化正交的极化分量，多出现在双极化天线中，表示极化纯度。\n\nFront-to-back ratio(前后比): 指主瓣的最大辐射方向（规定为0°）的功率通量密度与相反方向附近（规定为180°±20°范围内）的最大功率通量密度之比值。表面了天线对后瓣抑制的优劣。前后比越大，天线的后向辐射越小，典型值为25~30dB。\n\nF/B=10log(P1/P2)\n\n(P1:前向功率；P2：后向功率)\n\n\n# 4. 方位角和下倾角\n\n方位角：从正北方向水平顺时针旋转至天线主瓣方向的夹角。\n\n下倾角：天线主瓣方向和水平面的夹角。\n\n\n\n通过调节天线方位角和下倾角的方法，可控制天线信号覆盖范围。\n\n天线方位角设计原则：主瓣方向对准主要覆盖区域；天线正向尽量避开建筑山体等高大建筑；两定向天线间夹角大于90°；为避免波导效应，城市各小区天线方位角不能正对街道安装。\n\n此外，电性能参数还有Frequency range(频带)、input impedance(阻抗)、VSWR、maximum input power(最大功率)、IMD3(三阶无源交调)等等。\n\n\n\n\n# · 机械性能参数\n\n 1. disminsion（尺寸）：\n\n长：与垂直波瓣、增益、波长有关；\n\n宽：与水平波瓣、波长有关，\n\n厚：与天线技术有关\n\n 2. weight（重量）：影响安装运输\n\n 3. 天线罩材料：PVC ABS等，需要防晒、防冻、防盐雾、阻燃、抗老化等\n\n 4. 抗风能力、抱杆直径、安装套件等\n\n 5. lightning protection（雷达保护）：direct ground（直流接地）\n\n 6. operating temperature range，storage temperature range\n\n下图为一些天线的datasheet：\n\n\n\n\n\n\n# 五. 天线的测量\n\n\n\n天线场区分为：reactive near-field region(感应近场区)，radiating near-field region(辐射近场区)，far-field(远场区)。在近场区，电场有明显的纵向(或径向)分量，但功率流不是完全径向的，场波瓣图的形状取决于到天线的距离。在远场区，测量到的场分量位于以天线为中心的径向的横截面上，并且所有的功率流(更确切地说是能量流)都是沿径向向外的。场波瓣图的形状与到天线的距离无关。\n\n\n\n微波暗室中通过控制的源天线和被测天线的距离，可进行天线的近场辐射测量和远场测量。距离场源3至10个波长的区域为近场辐射区，10个波长以上的区域为远场区。近场测量系统需要架扫描架，远场测量系统需要架转台。暗室的四周和上下通过铺设吸波材料来减小电磁反射。吸波材料的材质、厚度、形状等直接影响微波暗室的性能好坏。吸波材料的吸收率越高，微波暗室的静区越接近自由空间，测量效果越好。\n\n\n\n天线Friis弗里斯传输公式\n\n\n\n\n\n（注：弗里斯传输公式需满足收发天线阻抗共轭匹配、极化匹配、且最大辐射方向相互对等的条件）\n\n",normalizedContent:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之天线 - 知乎 (zhihu.com)\n\n\n# 一. 天线的作用\n\n天线在无线电设备中用于发射和接收电磁波，可相互转化传输线上的导行波和空间的电磁波，是一种无源器件，不能产生能量，被广泛应用于通信、雷达、电视、导航、遥感、射电天文、电子对抗等领域。\n\n\n# 二. 天线的工作原理\n\n导体上通过高频电流会产生电磁和磁场，辐射能力与导线长度和形状相关。如图是典型的半波偶极子天线在交变电流的作用下产生电磁和磁场，极性每半个周期变换一次，电磁和磁场均为球形且互为直角正交。\n\n\n\n产生电磁场的这两根导线，就叫做振子。两臂长度相等称为叫对称振子，是一种经典的、迄今为止最广泛使用的天线。每臂长度为1/4波长的振子称为半波振子，可独立使用，也可用多个半波对称振子组成天线阵。\n\n\n\n由于 c=λf，一个1/2波长的对称振子，在800mhz，约200mm长；在2.4g时，约6cm长；在3g时，约5cm长；在5g时，约3cm 长。\n\n\n# 三. 天线的分类\n\n 1. 按用途分：基站天线、电视天线、雷达天线、车载天线···\n\n 2. 按辐射方向分：directional(定向天线)和 omni-directional(全向天线)\n\n· 全向天线：在水平面360度辐射，所有方向上辐射出的电波能量都是相同的，但在垂直面内不同方向上辐射出的电波能量是不同的。如路由器棒状天线、玻璃钢天线等。\n\n· 定向天线：在水平面与垂直面内的所有方向上辐射出的电波能量都不相同。方向图辐射类似手电筒辐射可见光，朝某方向定向辐射，相同的射频能量下可以实现更远的覆盖距离，但是是以牺牲其他区域覆盖为代价的。如微带贴片天线，平板天线，八木天线，喇叭天线，抛物面天线等。\n\n 3. 按波长分：中波天线、短波天线、超短波天线、微波天线等等。\n\n\n\n 4. 基站天线一般分为室内天线和室外天线。\n\n1）室内天线主要有全向吸顶天线和定向壁挂天线：\n\n\n\n2）室外基站天线主要有单极化全向天线、单极化定向和双极化定向天线：\n\n\n\n\n\n 3. massive mimo\n\nmimo(multiple input multiple output，多进多出) 在发送端和接收端都使用多根天线，收发之间构成多个信道，从而大幅提高信道容量，抗衰落性能和频谱利用率。\n\n\n\nmassive mimo：对mimo进行了扩展和延伸，扩增为16/32/64/128天线，被称为massive mimo。通过集成更多射频通道和天线，实现三维精准波束赋形和多流多用户复用技术。\n\n\n\n采用massvie mimo技术，天线在不同pattern配置下，不同数字方向角、数字下倾角配置下，增益波形差异明显，因此，可以根据不同场景配置不同的广播波束，以匹配多种多样的覆盖场景。\n\n\n\n\n\n5.手机天线\n\n从早期的外置天线到现在的内置天线。现在5g手机开始采用44、88的 mimo天线，大力提升了传输速度。如在同样频宽下，下载一部500mb的视频，单天线手机耗时4min，8天线手机仅需30s.\n\n\n\n\n# 四. 天线的性能指标\n\n\n# · 电性能参数\n\n\n# 1. polarization（极化）\n\n指天线辐射电磁场的电磁方向，分为线极化（水平/垂直）、圆极化（左旋/右旋）、椭圆极化（左旋/右旋）等。移动通信系统中常用垂直极化和±45°极化。\n\n\n\n\n# 2. gain（增益）\n\n指在相同输入功率时，天线在某一特定方向上辐射功率密度与参考天线辐射功率密度之比。增益与方向图密切相关，主瓣越窄，副瓣越小，增益越高。在相同条件下，增益越高，传输越远。在实际情况中，应以波速和覆盖目标区相匹配的前提下，合理选择天线增益，如覆盖距离较近时，为保证近点的覆盖效果，应选择垂直波瓣较宽的低增益天线。\n\n\n\n· dbi(isotropic)：相对于点源天线的增益，在各方向辐射是均匀的。\n\n· dbd(dipole)：相对于半波振子天线的增益\n\ndbi = dbd+2.15\n\n\n# 3. radiation pattern 辐射方向图（波瓣图）\n\n波瓣图可表征天线在空间各个方向上辐射场的相对大小。\n\n\n\n\n\n\n\nmain lobe(主瓣)与side lobe(旁瓣)：辐射强度最大的称为主瓣，其余的称为旁瓣或副瓣。\n\n**sll(副瓣电平)**是指所有副瓣中最大的那一个副瓣电平。\n\n3db bandwidth(半功率波束宽度hpbw): 相对最大辐射方向功率密度下降至一半时的角域宽度，也叫3db波束宽度。\n\n水平面的叫水平波束宽度，宽度越宽，在扇区交界处的覆盖越好；垂直平面的叫垂直波束宽度，垂直波瓣宽度越窄，偏离主波束方向时信号衰减越快，与天线倾角相关。\n\n**fnbw(first null beamwidth第一零波束宽度)：**如图所示，指方向图主瓣两侧第一个零点之间的夹角。\n\nisolation between two ports(交叉极化鉴别率): 一般是指与主极化正交的极化分量，多出现在双极化天线中，表示极化纯度。\n\nfront-to-back ratio(前后比): 指主瓣的最大辐射方向（规定为0°）的功率通量密度与相反方向附近（规定为180°±20°范围内）的最大功率通量密度之比值。表面了天线对后瓣抑制的优劣。前后比越大，天线的后向辐射越小，典型值为25~30db。\n\nf/b=10log(p1/p2)\n\n(p1:前向功率；p2：后向功率)\n\n\n# 4. 方位角和下倾角\n\n方位角：从正北方向水平顺时针旋转至天线主瓣方向的夹角。\n\n下倾角：天线主瓣方向和水平面的夹角。\n\n\n\n通过调节天线方位角和下倾角的方法，可控制天线信号覆盖范围。\n\n天线方位角设计原则：主瓣方向对准主要覆盖区域；天线正向尽量避开建筑山体等高大建筑；两定向天线间夹角大于90°；为避免波导效应，城市各小区天线方位角不能正对街道安装。\n\n此外，电性能参数还有frequency range(频带)、input impedance(阻抗)、vswr、maximum input power(最大功率)、imd3(三阶无源交调)等等。\n\n\n\n\n# · 机械性能参数\n\n 1. disminsion（尺寸）：\n\n长：与垂直波瓣、增益、波长有关；\n\n宽：与水平波瓣、波长有关，\n\n厚：与天线技术有关\n\n 2. weight（重量）：影响安装运输\n\n 3. 天线罩材料：pvc abs等，需要防晒、防冻、防盐雾、阻燃、抗老化等\n\n 4. 抗风能力、抱杆直径、安装套件等\n\n 5. lightning protection（雷达保护）：direct ground（直流接地）\n\n 6. operating temperature range，storage temperature range\n\n下图为一些天线的datasheet：\n\n\n\n\n\n\n# 五. 天线的测量\n\n\n\n天线场区分为：reactive near-field region(感应近场区)，radiating near-field region(辐射近场区)，far-field(远场区)。在近场区，电场有明显的纵向(或径向)分量，但功率流不是完全径向的，场波瓣图的形状取决于到天线的距离。在远场区，测量到的场分量位于以天线为中心的径向的横截面上，并且所有的功率流(更确切地说是能量流)都是沿径向向外的。场波瓣图的形状与到天线的距离无关。\n\n\n\n微波暗室中通过控制的源天线和被测天线的距离，可进行天线的近场辐射测量和远场测量。距离场源3至10个波长的区域为近场辐射区，10个波长以上的区域为远场区。近场测量系统需要架扫描架，远场测量系统需要架转台。暗室的四周和上下通过铺设吸波材料来减小电磁反射。吸波材料的材质、厚度、形状等直接影响微波暗室的性能好坏。吸波材料的吸收率越高，微波暗室的静区越接近自由空间，测量效果越好。\n\n\n\n天线friis弗里斯传输公式\n\n\n\n\n\n（注：弗里斯传输公式需满足收发天线阻抗共轭匹配、极化匹配、且最大辐射方向相互对等的条件）\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"射频无源器件之巴伦",frontmatter:{title:"射频无源器件之巴伦",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/barron/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/09.%E5%B0%84%E9%A2%91%E6%97%A0%E6%BA%90%E5%99%A8%E4%BB%B6%E4%B9%8B%E5%B7%B4%E4%BC%A6.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/09.射频无源器件之巴伦.md",key:"v-69cd01c8",path:"/hardware/si/barron/",headers:[{level:2,title:"一. 巴伦的作用",slug:"一-巴伦的作用",normalizedTitle:"一. 巴伦的作用",charIndex:51},{level:2,title:"二. 巴伦的性能指标",slug:"二-巴伦的性能指标",normalizedTitle:"二. 巴伦的性能指标",charIndex:306},{level:3,title:"1. 频率范围",slug:"_1-频率范围",normalizedTitle:"1. 频率范围",charIndex:321},{level:3,title:"3. 回波损耗 RL",slug:"_3-回波损耗-rl",normalizedTitle:"3. 回波损耗 rl",charIndex:365},{level:3,title:"4. 幅度平衡度",slug:"_4-幅度平衡度",normalizedTitle:"4. 幅度平衡度",charIndex:399},{level:3,title:"5. 相位平衡度",slug:"_5-相位平衡度",normalizedTitle:"5. 相位平衡度",charIndex:445},{level:3,title:"6. 共模抑制比CMRR",slug:"_6-共模抑制比cmrr",normalizedTitle:"6. 共模抑制比cmrr",charIndex:489},{level:3,title:"7. 阻抗比",slug:"_7-阻抗比",normalizedTitle:"7. 阻抗比",charIndex:586},{level:2,title:"三. 常见的巴伦类型",slug:"三-常见的巴伦类型",normalizedTitle:"三. 常见的巴伦类型",charIndex:678},{level:3,title:"1. Flux Coupled Transformer Balun 磁通耦合变压器巴伦",slug:"_1-flux-coupled-transformer-balun-磁通耦合变压器巴伦",normalizedTitle:"1. flux coupled transformer balun 磁通耦合变压器巴伦",charIndex:693},{level:3,title:"2. Transformer Balun 变压器巴伦",slug:"_2-transformer-balun-变压器巴伦",normalizedTitle:"2. transformer balun 变压器巴伦",charIndex:792},{level:3,title:"3. Transmission Line Balun 传输线巴伦",slug:"_3-transmission-line-balun-传输线巴伦",normalizedTitle:"3. transmission line balun 传输线巴伦",charIndex:911}],headersStr:"一. 巴伦的作用 二. 巴伦的性能指标 1. 频率范围 3. 回波损耗 RL 4. 幅度平衡度 5. 相位平衡度 6. 共模抑制比CMRR 7. 阻抗比 三. 常见的巴伦类型 1. Flux Coupled Transformer Balun 磁通耦合变压器巴伦 2. Transformer Balun 变压器巴伦 3. Transmission Line Balun 传输线巴伦",content:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之巴伦 - 知乎 (zhihu.com)\n\n\n# 一. 巴伦的作用\n\nBalun，balanced-unbalanced的缩写，即平衡-不平衡转换器，是一种三端口无源器件，其本质是通过电感线圈的相互耦合实现的信号转换。用于平衡信号（差分信号，即振幅相等、相位相差180 °的两个信号）与非平衡信号（单端信号）的相互转换。\n\n\n\nBalun是高频电路重要器件，主要用途有：1. 差分和单端信号的接口，如变频与PA间、PA与天线间、天线与同轴线、微带线间；2. 阻抗匹配，保证器件间最大功率传输；3. 提高电路抗干扰能力，抑制高次谐波，起共模抑制的作用。\n\n\n# 二. 巴伦的性能指标\n\n\n# 1. 频率范围\n\n2. 插入损耗 IL\n\n插入巴伦后带来的功率损耗，越小越好。\n\n\n# 3. 回波损耗 RL\n\n入射功率与反射功率之比，越大越好。\n\n\n# 4. 幅度平衡度\n\n指两输出功率之间的差值，由Balun的结构与线路的匹配度决定。\n\n\n# 5. 相位平衡度\n\n指两个差分输出的实际相位差与理想相位差180°的偏离程度。\n\n\n# 6. 共模抑制比CMRR\n\nCMRR (Common Mode Rejection Ratio) ， 指巴伦对注入平衡端口的相同信号进行抑制的能力，与巴伦的幅度平衡度和相位平衡度相关。\n\n\n# 7. 阻抗比\n\n指非平衡端口阻抗与平衡端口阻抗之比。根据实际需求来选用合适阻抗比。常用的阻抗比有1：1、 1：2、 1：4 、2：1、 4：1等。\n\n1：2\n\n\n\n2：1\n\n\n\n\n# 三. 常见的巴伦类型\n\n\n# 1. Flux Coupled Transformer Balun 磁通耦合变压器巴伦\n\n由磁芯及缠绕于磁芯上的两条不同导线构成。Primary为不平衡侧，Secondary为平衡侧。\n\n\n\n\n# 2. Transformer Balun 变压器巴伦\n\n由变压器芯（空气、陶瓷等磁性中性材料、磁导体或软铁都可以）和两个缠绕于芯上的独立线圈绕组组成。在理想的变压器中，功率保持不变，电压与电流的比值与绕组匝数比的平方成正比。\n\n\n\n\n# 3. Transmission Line Balun 传输线巴伦\n\n在高频磁环上缠绕一组或几组传输线，利用不同的连接方法来完成阻抗变换和平衡-不平衡变换作用。\n\n",normalizedContent:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之巴伦 - 知乎 (zhihu.com)\n\n\n# 一. 巴伦的作用\n\nbalun，balanced-unbalanced的缩写，即平衡-不平衡转换器，是一种三端口无源器件，其本质是通过电感线圈的相互耦合实现的信号转换。用于平衡信号（差分信号，即振幅相等、相位相差180 °的两个信号）与非平衡信号（单端信号）的相互转换。\n\n\n\nbalun是高频电路重要器件，主要用途有：1. 差分和单端信号的接口，如变频与pa间、pa与天线间、天线与同轴线、微带线间；2. 阻抗匹配，保证器件间最大功率传输；3. 提高电路抗干扰能力，抑制高次谐波，起共模抑制的作用。\n\n\n# 二. 巴伦的性能指标\n\n\n# 1. 频率范围\n\n2. 插入损耗 il\n\n插入巴伦后带来的功率损耗，越小越好。\n\n\n# 3. 回波损耗 rl\n\n入射功率与反射功率之比，越大越好。\n\n\n# 4. 幅度平衡度\n\n指两输出功率之间的差值，由balun的结构与线路的匹配度决定。\n\n\n# 5. 相位平衡度\n\n指两个差分输出的实际相位差与理想相位差180°的偏离程度。\n\n\n# 6. 共模抑制比cmrr\n\ncmrr (common mode rejection ratio) ， 指巴伦对注入平衡端口的相同信号进行抑制的能力，与巴伦的幅度平衡度和相位平衡度相关。\n\n\n# 7. 阻抗比\n\n指非平衡端口阻抗与平衡端口阻抗之比。根据实际需求来选用合适阻抗比。常用的阻抗比有1：1、 1：2、 1：4 、2：1、 4：1等。\n\n1：2\n\n\n\n2：1\n\n\n\n\n# 三. 常见的巴伦类型\n\n\n# 1. flux coupled transformer balun 磁通耦合变压器巴伦\n\n由磁芯及缠绕于磁芯上的两条不同导线构成。primary为不平衡侧，secondary为平衡侧。\n\n\n\n\n# 2. transformer balun 变压器巴伦\n\n由变压器芯（空气、陶瓷等磁性中性材料、磁导体或软铁都可以）和两个缠绕于芯上的独立线圈绕组组成。在理想的变压器中，功率保持不变，电压与电流的比值与绕组匝数比的平方成正比。\n\n\n\n\n# 3. transmission line balun 传输线巴伦\n\n在高频磁环上缠绕一组或几组传输线，利用不同的连接方法来完成阻抗变换和平衡-不平衡变换作用。\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"射频有源器件之放大器PA",frontmatter:{title:"射频有源器件之放大器PA",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/maxpa/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/12.%E5%B0%84%E9%A2%91%E6%9C%89%E6%BA%90%E5%99%A8%E4%BB%B6%E4%B9%8B%E6%94%BE%E5%A4%A7%E5%99%A8PA.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/12.射频有源器件之放大器PA.md",key:"v-0b974b70",path:"/hardware/si/maxpa/",headers:[{level:2,title:"一. PA 的原理",slug:"一-pa-的原理",normalizedTitle:"一. pa 的原理",charIndex:54},{level:2,title:"二. PA的分类",slug:"二-pa的分类",normalizedTitle:"二. pa的分类",charIndex:527},{level:3,title:"1. Class A/Class B/Class AB/Class C",slug:"_1-class-a-class-b-class-ab-class-c",normalizedTitle:"1. class a/class b/class ab/class c",charIndex:540},{level:3,title:"2. Class D/E/F/G/H/S",slug:"_2-class-d-e-f-g-h-s",normalizedTitle:"2. class d/e/f/g/h/s",charIndex:764},{level:3,title:"3. Doherty",slug:"_3-doherty",normalizedTitle:"3. doherty",charIndex:903},{level:2,title:"三. PA的重要指标",slug:"三-pa的重要指标",normalizedTitle:"三. pa的重要指标",charIndex:1383},{level:3,title:"1. Frequency Range/Input、Output RL",slug:"_1-frequency-range-input、output-rl",normalizedTitle:"1. frequency range/input、output rl",charIndex:1398},{level:3,title:"2. Output Power/P1/P3",slug:"_2-output-power-p1-p3",normalizedTitle:"2. output power/p1/p3",charIndex:1437},{level:3,title:"3. Gain/Gain flatness",slug:"_3-gain-gain-flatness",normalizedTitle:"3. gain/gain flatness",charIndex:1666},{level:3,title:"4. Efficiency",slug:"_4-efficiency",normalizedTitle:"4. efficiency",charIndex:1694},{level:3,title:"5. ACLR/ACPR",slug:"_5-aclr-acpr",normalizedTitle:"5. aclr/acpr",charIndex:1906},{level:3,title:"6. Stability",slug:"_6-stability",normalizedTitle:"6. stability",charIndex:2181}],headersStr:"一. PA 的原理 二. PA的分类 1. Class A/Class B/Class AB/Class C 2. Class D/E/F/G/H/S 3. Doherty 三. PA的重要指标 1. Frequency Range/Input、Output RL 2. Output Power/P1/P3 3. Gain/Gain flatness 4. Efficiency 5. ACLR/ACPR 6. Stability",content:"【转载】 射频工程师工作笔记——第三讲 射频有源器件之放大器PA - 知乎 (zhihu.com)\n\n\n# 一. PA 的原理\n\n射频功率放大器（Power amplifier，PA，简称功放），是发射系统的重要部分，用来放大高频信号，使发射机末级获得足够大的发射功率，再通过天线辐射出去。\n\nPA是基于晶体管的特性工作的，可采用HBT、MOSFET、GaN、GaAs等多种半导体工艺进行设计。不同工艺设计在PA的Load-line理论中分析方法基本相同。以一个采用硅工艺的LDMOS(Lateral double-diffused MOSFET)技术为例，是一种增强型的N沟道MOSFET，为使其工作，需要在G、S之间加正电压VGS及在D、S之间加正电压VDS。当VGS>=Vth时，为可变电阻区；当VGS>=Vth 且 VDS>=VGS-Vth，为饱和区，有放大功能，改变VGS的电压可控制工作电流ID；当VDS<Vth，为截止区，ID=0。\n\n\n\n\n\n直流状态下的电流电压曲线，简称DC-IV曲线，是半导体器件中的重要特性曲线。在功放中，常选择不同的静态工作点，使功放工作在不同特性的区段上。下图粉色的线为负载线，其斜率与负载呈反比。\n\n\n\n\n# 二. PA的分类\n\n\n# 1. Class A/Class B/Class AB/Class C\n\nA，B，AB和C类放大器，是较为常见的放大器，通过控制导通角的大小来定义。输出级晶体管工作在完全开启和完全关闭之间的某个位置。A类在整个周期都导通，B类只在半个周期导通，最大效率可达78.5%，C类的导通角小于180°，通常在90°附近。放大器效率与导通角成反比，导通时间少，有利于减少耗散功率，提高效率，但晶体管从通到断过程中存在交越点，失真也更大。\n\n\n\n\n\n\n\n\n# 2. Class D/E/F/G/H/S\n\nD，E，F，G，H，S类等放大器属于开关功率放大器的范畴，它们使用数字电路和脉冲宽度调制（PWM）来不断地在全开和全关状态切换，将输出驱动到晶体管的饱和和截止区域，中间没有任何其他电平，可达到 90%~100% 的理论效率。\n\n\n# 3. Doherty\n\n调制信号的峰均比越来越大，但传统的功率放大器在功率回退时效率很低，无法满足通信电路对效率的要求，Doherty就是一种利用有源负载调制技术来提高回退效率的功放。\n\n典型的两路1：1Doherty架构如图所示。\n\nMain：主功放，工作在AB类，一直在工作，其负载随着信号强度的变化而变化。Peak: 辅助功放，工作在C类，达到额定峰值才开始工作。主功放后面的四分之一波长线是阻抗变换，目的是在辅助功放工作时，将主功放的阻抗减小，保证辅助功放工作时和后面的电路组成的有源负载阻抗变低，这样主功放输出电流就变大。由于主功放后面有了四分之一波长线，为了使两个功放输出同相，在辅助功放前也需要四分之一波长线。\n\n\n\n\n\n有源负载牵引理论：可将主路和辅路功放等效为两个电流源，Im和Ip。电流源Ip对电流源Im的阻抗进行了牵引。假设两电流源的电流一样，那么当辅路电流为0时，主路的阻抗为负载阻抗R，辅路的阻抗为开路状态；当辅路逐渐开启，电流Ip由小变大时，主路的阻抗由R变为2R。这样通过辅路电流注入的变换就完成了对主路阻抗的调制。\n\n\n\n\n# 三. PA的重要指标\n\n\n# 1. Frequency Range/Input、Output RL\n\n\n# 2. Output Power/P1/P3\n\nPA是一种非线性器件，在线性工作区，PA器的理想曲线和实际曲线相同，但当进入非线性区，实际输出的曲线将受到压缩。P1dB，即1dB压缩点，指实际输出增益与理想输出增益相差1dB，P3dB，即3dB压缩点，实际输出增益与理想输出增益相差3dB。实际测量中，可通过矢网的功率扫描功能来测功率放大器的1dB、3dB压缩点。在文章《射频工程师工作笔记——第一讲 常用仪器仪表之矢量网络分析仪（下）》有讲解。\n\n\n\n\n# 3. Gain/Gain flatness\n\n\n\n\n# 4. Efficiency\n\n\n\nPdc + Pin = Pout + Pdispation\n\nPower added efficiency (PAE)：定义为输出信号功率Pout与输入信号功率Pin之差与直流电源消耗的功率Pdc之比: PAE = (Pout - Pin) / Pdc\n\nDrain efficiency：定义为输出信号功率Pout与直流电源消耗的功率Pdc之比：Eff = Pout / Pdc\n\n\n# 5. ACLR/ACPR\n\nACLR（Adjacent Channel Leakage Rate，相邻信道泄漏比）定义为从主信道泄露到相邻信道的平均功率与主信道的平均功率之比：\n\n\n\n下图显示了一个好的和差的ACLR，较差（高）的ACPR在主通道旁边有更高的意外功率，会导致一些本应在主信道中的能量溢出到相邻信道，这意味着有用的能量以无用的形式流失，会降低传输效率。在实际功放的设计中，可用DPD对功放输出的ACLR性能进行一定程度的改善。\n\n\n\nACLR可用频谱仪测量。在文章《射频工程师工作笔记——第一讲 常用仪器仪表之频谱仪》有讲解。\n\n\n# 6. Stability\n\n将PA看成一个二端口网络器件，其稳定的充分必要条件如下所示。在实际测量中，可用网络分析仪测量其S参数，保存S2P文件，再代入ADS进行仿真计算得到频带内PA的稳定因子。当K<1时，是潜在不稳定，有自激振荡的可能。\n\n\n\n7. AM-AM、AM-PM曲线\n\nAM-AM：Gain versus Pout\n\n\n\nAM-PM：Phase versus Pout\n\n\n\n8. HD与IMD\n\nHD(Harmonic Distortion，谐波失真)：\n\n\n\n\n\nIMD(intermodulation distortion, 交调失真)：\n\n当输入激励信号中包含两个以上不同频率的信号时，通过放大器时产生了各个基频信号之间和各次谐波组合的和频、差频信号，新增加的频率分量称为交调失真。\n\n\n\n三阶互调交截点（Third-order Intercept Point，IP3）是衡量功放线性度的重要指标，定义为基波分量与三阶互调分量线性延长线的交点，如图所示。其值越大代表功放的线性度越好。\n\n",normalizedContent:"【转载】 射频工程师工作笔记——第三讲 射频有源器件之放大器pa - 知乎 (zhihu.com)\n\n\n# 一. pa 的原理\n\n射频功率放大器（power amplifier，pa，简称功放），是发射系统的重要部分，用来放大高频信号，使发射机末级获得足够大的发射功率，再通过天线辐射出去。\n\npa是基于晶体管的特性工作的，可采用hbt、mosfet、gan、gaas等多种半导体工艺进行设计。不同工艺设计在pa的load-line理论中分析方法基本相同。以一个采用硅工艺的ldmos(lateral double-diffused mosfet)技术为例，是一种增强型的n沟道mosfet，为使其工作，需要在g、s之间加正电压vgs及在d、s之间加正电压vds。当vgs>=vth时，为可变电阻区；当vgs>=vth 且 vds>=vgs-vth，为饱和区，有放大功能，改变vgs的电压可控制工作电流id；当vds<vth，为截止区，id=0。\n\n\n\n\n\n直流状态下的电流电压曲线，简称dc-iv曲线，是半导体器件中的重要特性曲线。在功放中，常选择不同的静态工作点，使功放工作在不同特性的区段上。下图粉色的线为负载线，其斜率与负载呈反比。\n\n\n\n\n# 二. pa的分类\n\n\n# 1. class a/class b/class ab/class c\n\na，b，ab和c类放大器，是较为常见的放大器，通过控制导通角的大小来定义。输出级晶体管工作在完全开启和完全关闭之间的某个位置。a类在整个周期都导通，b类只在半个周期导通，最大效率可达78.5%，c类的导通角小于180°，通常在90°附近。放大器效率与导通角成反比，导通时间少，有利于减少耗散功率，提高效率，但晶体管从通到断过程中存在交越点，失真也更大。\n\n\n\n\n\n\n\n\n# 2. class d/e/f/g/h/s\n\nd，e，f，g，h，s类等放大器属于开关功率放大器的范畴，它们使用数字电路和脉冲宽度调制（pwm）来不断地在全开和全关状态切换，将输出驱动到晶体管的饱和和截止区域，中间没有任何其他电平，可达到 90%~100% 的理论效率。\n\n\n# 3. doherty\n\n调制信号的峰均比越来越大，但传统的功率放大器在功率回退时效率很低，无法满足通信电路对效率的要求，doherty就是一种利用有源负载调制技术来提高回退效率的功放。\n\n典型的两路1：1doherty架构如图所示。\n\nmain：主功放，工作在ab类，一直在工作，其负载随着信号强度的变化而变化。peak: 辅助功放，工作在c类，达到额定峰值才开始工作。主功放后面的四分之一波长线是阻抗变换，目的是在辅助功放工作时，将主功放的阻抗减小，保证辅助功放工作时和后面的电路组成的有源负载阻抗变低，这样主功放输出电流就变大。由于主功放后面有了四分之一波长线，为了使两个功放输出同相，在辅助功放前也需要四分之一波长线。\n\n\n\n\n\n有源负载牵引理论：可将主路和辅路功放等效为两个电流源，im和ip。电流源ip对电流源im的阻抗进行了牵引。假设两电流源的电流一样，那么当辅路电流为0时，主路的阻抗为负载阻抗r，辅路的阻抗为开路状态；当辅路逐渐开启，电流ip由小变大时，主路的阻抗由r变为2r。这样通过辅路电流注入的变换就完成了对主路阻抗的调制。\n\n\n\n\n# 三. pa的重要指标\n\n\n# 1. frequency range/input、output rl\n\n\n# 2. output power/p1/p3\n\npa是一种非线性器件，在线性工作区，pa器的理想曲线和实际曲线相同，但当进入非线性区，实际输出的曲线将受到压缩。p1db，即1db压缩点，指实际输出增益与理想输出增益相差1db，p3db，即3db压缩点，实际输出增益与理想输出增益相差3db。实际测量中，可通过矢网的功率扫描功能来测功率放大器的1db、3db压缩点。在文章《射频工程师工作笔记——第一讲 常用仪器仪表之矢量网络分析仪（下）》有讲解。\n\n\n\n\n# 3. gain/gain flatness\n\n\n\n\n# 4. efficiency\n\n\n\npdc + pin = pout + pdispation\n\npower added efficiency (pae)：定义为输出信号功率pout与输入信号功率pin之差与直流电源消耗的功率pdc之比: pae = (pout - pin) / pdc\n\ndrain efficiency：定义为输出信号功率pout与直流电源消耗的功率pdc之比：eff = pout / pdc\n\n\n# 5. aclr/acpr\n\naclr（adjacent channel leakage rate，相邻信道泄漏比）定义为从主信道泄露到相邻信道的平均功率与主信道的平均功率之比：\n\n\n\n下图显示了一个好的和差的aclr，较差（高）的acpr在主通道旁边有更高的意外功率，会导致一些本应在主信道中的能量溢出到相邻信道，这意味着有用的能量以无用的形式流失，会降低传输效率。在实际功放的设计中，可用dpd对功放输出的aclr性能进行一定程度的改善。\n\n\n\naclr可用频谱仪测量。在文章《射频工程师工作笔记——第一讲 常用仪器仪表之频谱仪》有讲解。\n\n\n# 6. stability\n\n将pa看成一个二端口网络器件，其稳定的充分必要条件如下所示。在实际测量中，可用网络分析仪测量其s参数，保存s2p文件，再代入ads进行仿真计算得到频带内pa的稳定因子。当k<1时，是潜在不稳定，有自激振荡的可能。\n\n\n\n7. am-am、am-pm曲线\n\nam-am：gain versus pout\n\n\n\nam-pm：phase versus pout\n\n\n\n8. hd与imd\n\nhd(harmonic distortion，谐波失真)：\n\n\n\n\n\nimd(intermodulation distortion, 交调失真)：\n\n当输入激励信号中包含两个以上不同频率的信号时，通过放大器时产生了各个基频信号之间和各次谐波组合的和频、差频信号，新增加的频率分量称为交调失真。\n\n\n\n三阶互调交截点（third-order intercept point，ip3）是衡量功放线性度的重要指标，定义为基波分量与三阶互调分量线性延长线的交点，如图所示。其值越大代表功放的线性度越好。\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"射频无源器件之衰减器",frontmatter:{title:"射频无源器件之衰减器",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/attenuator",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/11.%E5%B0%84%E9%A2%91%E6%97%A0%E6%BA%90%E5%99%A8%E4%BB%B6%E4%B9%8B%E8%A1%B0%E5%87%8F%E5%99%A8.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/11.射频无源器件之衰减器.md",key:"v-426e6f91",path:"/hardware/si/attenuator/",headers:[{level:2,title:"一. 衰减器简介",slug:"一-衰减器简介",normalizedTitle:"一. 衰减器简介",charIndex:52},{level:2,title:"二. 衰减器的性能指标",slug:"二-衰减器的性能指标",normalizedTitle:"二. 衰减器的性能指标",charIndex:400},{level:3,title:"1. 频率范围",slug:"_1-频率范围",normalizedTitle:"1. 频率范围",charIndex:416},{level:3,title:"2. 衰减量",slug:"_2-衰减量",normalizedTitle:"2. 衰减量",charIndex:451},{level:3,title:"3. 功率容量",slug:"_3-功率容量",normalizedTitle:"3. 功率容量",charIndex:611},{level:3,title:"4. 驻波比",slug:"_4-驻波比",normalizedTitle:"4. 驻波比",charIndex:693},{level:2,title:"三. 电阻网络衰减器",slug:"三-电阻网络衰减器",normalizedTitle:"三. 电阻网络衰减器",charIndex:768},{level:3,title:"1. L attenuator",slug:"_1-l-attenuator",normalizedTitle:"1. l attenuator",charIndex:816},{level:3,title:"2. T attenuator",slug:"_2-t-attenuator",normalizedTitle:"2. t attenuator",charIndex:910},{level:3,title:"3. π attenuator",slug:"_3-π-attenuator",normalizedTitle:"3. π attenuator",charIndex:1212},{level:3,title:"4. Bridged attenuator",slug:"_4-bridged-attenuator",normalizedTitle:"4. bridged attenuator",charIndex:1568},{level:3,title:"5. Reflection attenuator",slug:"_5-reflection-attenuator",normalizedTitle:"5. reflection attenuator",charIndex:1864},{level:3,title:"6. Balanced attenuator",slug:"_6-balanced-attenuator",normalizedTitle:"6. balanced attenuator",charIndex:1945}],headersStr:"一. 衰减器简介 二. 衰减器的性能指标 1. 频率范围 2. 衰减量 3. 功率容量 4. 驻波比 三. 电阻网络衰减器 1. L attenuator 2. T attenuator 3. π attenuator 4. Bridged attenuator 5. Reflection attenuator 6. Balanced attenuator",content:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之衰减器 - 知乎 (zhihu.com)\n\n\n# 一. 衰减器简介\n\n\n\n衰减器在通信系统中主要用于1)信号衰减，调节信号的幅度和功率，防止信号过载，保护仪器设备；2)优化信号的传输、改善阻抗匹配。\n\n衰减器分为有源衰减器和无源衰减器两种。其中，有源衰减器与其他热敏电阻相配合组成可变衰减器，常被用于放大器的自动增益控制电路中。\n\n本文主要介绍无源衰减器。无源衰减器包含可变衰减器和固定衰减器：\n\n可变衰减器，可根据实际需求来调节衰减值，通常由可变电阻、可变电容或可变电感组成，通过调节这些元件的值，可以实现对信号的可调衰减。\n\n固定衰减器，通常由电阻网络组成，常用的有2dB、3dB、10dB衰减器等，电路结构有L型、T型、π型、桥型、反射式及平衡式。L 型为不对称衰减器，主要用于阻抗匹配，对于高频衰减网络，通常选用π型或T型网络。\n\n\n# 二. 衰减器的性能指标\n\n\n# 1. 频率范围\n\n衰减器正常工作时的最小频率和最大频率范围。\n\n\n# 2. 衰减量\n\n用来描述功率通过衰减器后功率的变小程度。衰减量的大小由构成衰减器的材料和结构确定，单位为dB。输入功率为P1，输出功率为P2，衰减量：\n\nAtten= -10log(P2/P1)= -20log(S21)\n\n例：50W信号经3dB衰减器变为25W，\n\n50W信号经20dB衰减器，变为0.5W。\n\n\n# 3. 功率容量\n\n指衰减器可以承受的功率大小，单位为W或dBm。功率容量与衰减器的结构材料有关，使用衰减器时，其承受的功率不能超过该极限值，否则会被烧毁！\n\n\n# 4. 驻波比\n\n理想的衰减器仅仅是一个功率消耗元件，对两端电路不会产生影响，衰减器与两端端口相匹配，即衰减器两端的输入输出驻波比应尽可能小。\n\n\n# 三. 电阻网络衰减器\n\n下面介绍6种电路结构：L型、T型、π型、桥型、反射式及平衡式。\n\n\n# 1. L attenuator\n\n最简单的L型电路，其实就是分压电路，如下图所示。只在一个方向上提供阻抗匹配，存在功率失配的情况，因此很少用于射频微波电路，更多用于音频电路。\n\n\n\n\n# 2. T attenuator\n\nT型电路较为常用，如下图所示。其中，N=10^(Atten/20)（本文出现的所有N都等于该值），Atten为需要衰减量，单位dB。\n\n\n\nZ0一般为50Ω，可计算得到 R1、R2、R3的值\n\nT ATTENUATOR   R1、R2/Ω   R3/Ω\n1dB            2.9       433.3\n2dB            5.7       215.2\n3dB            8.5       141.9\n4dB            11.3      104.8\n5dB            14.0      82.2\n\n\n# 3. π attenuator\n\n在这几种电路结构中，π型为最常用的，被广泛应用于滤波、放大、稳压等电路中。在放大器的设计中，可用来改善放大器的稳定性。\n\n\n\nZ0一般为50Ω，可计算得到 R1、R2、R3的值\n\nΠ ATTENUATOR   R1/Ω   R2、R3/Ω\n1dB            5.8    869.5\n2dB            11.6   436.2\n3dB            17.6   292.4\n4dB            23.8   221\n5dB            30.4   178.5\n\n注意：上述是理论计算值，实际使用的电阻值没法这么精确，用相邻电阻值即可。如2dB衰减，多采用 430Ω、12Ω；3dB衰减，多采用300Ω、 18Ω。\n\n\n# 4. Bridged attenuator\n\n桥型电路,比π型和T型电路少一个可变电阻，在设计PIN管或FET单片集成衰减器时有一定优势。\n\n\n\nZ0一般为50Ω，可计算得到 R1、R2的值\n\nBRIDGE ATTENUATOR   R1/Ω   R2/Ω\n1dB                 6.1    409.8\n2dB                 12.9   193.1\n3dB                 20.6   121.2\n4dB                 29.2   85.5\n5dB                 38.9   64.2\n\n\n# 5. Reflection attenuator\n\n反射式衰减器只有一个可变电阻，分为两种情况，电路如下\n\n1）R1>Z0\n\n\n\n2）R 1<Z 0\n\n\n\n\n# 6. Balanced attenuator\n\n平衡式衰减器也只有一个可变电阻，电路如下\n\n",normalizedContent:"【转载】 射频工程师工作笔记——第二讲 射频无源器件之衰减器 - 知乎 (zhihu.com)\n\n\n# 一. 衰减器简介\n\n\n\n衰减器在通信系统中主要用于1)信号衰减，调节信号的幅度和功率，防止信号过载，保护仪器设备；2)优化信号的传输、改善阻抗匹配。\n\n衰减器分为有源衰减器和无源衰减器两种。其中，有源衰减器与其他热敏电阻相配合组成可变衰减器，常被用于放大器的自动增益控制电路中。\n\n本文主要介绍无源衰减器。无源衰减器包含可变衰减器和固定衰减器：\n\n可变衰减器，可根据实际需求来调节衰减值，通常由可变电阻、可变电容或可变电感组成，通过调节这些元件的值，可以实现对信号的可调衰减。\n\n固定衰减器，通常由电阻网络组成，常用的有2db、3db、10db衰减器等，电路结构有l型、t型、π型、桥型、反射式及平衡式。l 型为不对称衰减器，主要用于阻抗匹配，对于高频衰减网络，通常选用π型或t型网络。\n\n\n# 二. 衰减器的性能指标\n\n\n# 1. 频率范围\n\n衰减器正常工作时的最小频率和最大频率范围。\n\n\n# 2. 衰减量\n\n用来描述功率通过衰减器后功率的变小程度。衰减量的大小由构成衰减器的材料和结构确定，单位为db。输入功率为p1，输出功率为p2，衰减量：\n\natten= -10log(p2/p1)= -20log(s21)\n\n例：50w信号经3db衰减器变为25w，\n\n50w信号经20db衰减器，变为0.5w。\n\n\n# 3. 功率容量\n\n指衰减器可以承受的功率大小，单位为w或dbm。功率容量与衰减器的结构材料有关，使用衰减器时，其承受的功率不能超过该极限值，否则会被烧毁！\n\n\n# 4. 驻波比\n\n理想的衰减器仅仅是一个功率消耗元件，对两端电路不会产生影响，衰减器与两端端口相匹配，即衰减器两端的输入输出驻波比应尽可能小。\n\n\n# 三. 电阻网络衰减器\n\n下面介绍6种电路结构：l型、t型、π型、桥型、反射式及平衡式。\n\n\n# 1. l attenuator\n\n最简单的l型电路，其实就是分压电路，如下图所示。只在一个方向上提供阻抗匹配，存在功率失配的情况，因此很少用于射频微波电路，更多用于音频电路。\n\n\n\n\n# 2. t attenuator\n\nt型电路较为常用，如下图所示。其中，n=10^(atten/20)（本文出现的所有n都等于该值），atten为需要衰减量，单位db。\n\n\n\nz0一般为50ω，可计算得到 r1、r2、r3的值\n\nt attenuator   r1、r2/ω   r3/ω\n1db            2.9       433.3\n2db            5.7       215.2\n3db            8.5       141.9\n4db            11.3      104.8\n5db            14.0      82.2\n\n\n# 3. π attenuator\n\n在这几种电路结构中，π型为最常用的，被广泛应用于滤波、放大、稳压等电路中。在放大器的设计中，可用来改善放大器的稳定性。\n\n\n\nz0一般为50ω，可计算得到 r1、r2、r3的值\n\nπ attenuator   r1/ω   r2、r3/ω\n1db            5.8    869.5\n2db            11.6   436.2\n3db            17.6   292.4\n4db            23.8   221\n5db            30.4   178.5\n\n注意：上述是理论计算值，实际使用的电阻值没法这么精确，用相邻电阻值即可。如2db衰减，多采用 430ω、12ω；3db衰减，多采用300ω、 18ω。\n\n\n# 4. bridged attenuator\n\n桥型电路,比π型和t型电路少一个可变电阻，在设计pin管或fet单片集成衰减器时有一定优势。\n\n\n\nz0一般为50ω，可计算得到 r1、r2的值\n\nbridge attenuator   r1/ω   r2/ω\n1db                 6.1    409.8\n2db                 12.9   193.1\n3db                 20.6   121.2\n4db                 29.2   85.5\n5db                 38.9   64.2\n\n\n# 5. reflection attenuator\n\n反射式衰减器只有一个可变电阻，分为两种情况，电路如下\n\n1）r1>z0\n\n\n\n2）r 1<z 0\n\n\n\n\n# 6. balanced attenuator\n\n平衡式衰减器也只有一个可变电阻，电路如下\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:30:43",lastUpdatedTimestamp:1706621443e3},{title:"射频有源器件之低噪放",frontmatter:{title:"射频有源器件之低噪放",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/lowpa/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/13.%E5%B0%84%E9%A2%91%E6%9C%89%E6%BA%90%E5%99%A8%E4%BB%B6%E4%B9%8B%E4%BD%8E%E5%99%AA%E6%94%BE.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/13.射频有源器件之低噪放.md",key:"v-28de161d",path:"/hardware/si/lowpa/",headers:[{level:2,title:"一. LNA 的概念",slug:"一-lna-的概念",normalizedTitle:"一. lna 的概念",charIndex:52},{level:2,title:"二. LNA的性能指标",slug:"二-lna的性能指标",normalizedTitle:"二. lna的性能指标",charIndex:196},{level:3,title:"1. NF",slug:"_1-nf",normalizedTitle:"1. nf",charIndex:332},{level:3,title:"2. OIP3",slug:"_2-oip3",normalizedTitle:"2. oip3",charIndex:1089},{level:3,title:"3. P1dB",slug:"_3-p1db",normalizedTitle:"3. p1db",charIndex:1300},{level:3,title:"4. Gain/Gain flatness",slug:"_4-gain-gain-flatness",normalizedTitle:"4. gain/gain flatness",charIndex:1314},{level:3,title:"5. 稳定性",slug:"_5-稳定性",normalizedTitle:"5. 稳定性",charIndex:1609},{level:3,title:"6. Frequency/Input RL/Output RL",slug:"_6-frequency-input-rl-output-rl",normalizedTitle:"6. frequency/input rl/output rl",charIndex:1922},{level:2,title:"三. LNA的设计要求及步骤",slug:"三-lna的设计要求及步骤",normalizedTitle:"三. lna的设计要求及步骤",charIndex:1979}],headersStr:"一. LNA 的概念 二. LNA的性能指标 1. NF 2. OIP3 3. P1dB 4. Gain/Gain flatness 5. 稳定性 6. Frequency/Input RL/Output RL 三. LNA的设计要求及步骤",content:"【转载】 射频工程师工作笔记——第三讲 射频有源器件之低噪放 - 知乎 (zhihu.com)\n\n\n# 一. LNA 的概念\n\n低噪声放大器(Low Noise Amplifier，LNA)，作为通信系统接收前端的重要器件，对系统的噪声性能和接收灵敏度起决定性的作用。在放大天线接收到的小信号同时，还要尽可能少地引入噪声。输入输出端的阻抗匹配和噪声匹配是其实现高增益和低噪声的关键。\n\n\n# 二. LNA的性能指标\n\nLNA是一种特殊的放大器，和上文功放一样有Frequency、Gain、Gain flatness、P1dB等指标。一个好的LNA需在放大信号的同时，产生尽可能低的噪声和失真，这两个参数通常使用噪声系数NF和三阶互调截点OIP3来表征。\n\n\n# 1. NF\n\n噪声系数会影响接收机灵敏度，公式如下：\n\nS=−174dBm+NF+SNRmin+10log(BW) S=-174dBm+NF+SNR_{min}+10log(BW) S=−174dBm+NF+SNRmin +10log(BW)\n\n噪声系数(noise factor，NF）定义为输入信噪比与输出信噪比的比值:\n\nNF=Sin/NinSout/Nout NF=\\frac{S_{in}/{N_{in}}}{S_{out}/N_{out}} NF=Sout /Nout Sin /Nin\n\n其中，Sin、Nin 为输入端的信号功率和噪声功率， Sout、Nout 为输出端的信号功率和噪声功率。若用 dB 表示，那么，\n\nNF(dB)=10log(NF)=Nout(dBm)−Gain(dB)−Nin(dBm) NF(dB)=10log(NF)=N_{out}(dBm) - Gain(dB) - N_{in}(dBm) NF(dB)=10log(NF)=Nout (dBm)−Gain(dB)−Nin (dBm)\n\n对于级联系统，\n\nNF=NF1+NF2−1G1+NF3−1G1G2+... NF=NF_{1}+\\frac{NF_{2}-1}{G_{1}}+\\frac{NF_{3}-1}{G_{1}G_{2}}+... NF=NF1 +G1 NF2 −1 +G1 G2 NF3 −1 +...\n\n可看出，前几级的噪声系数对整个系统的噪声系数影响很大。前几级的放大器噪声系数必须小，尤其是第一级。噪声系数与放大器的工作频率、静态工作点及工艺有关。\n\n· 噪声系数常用测量方法：\n\n对于无源器件，一般NF=IL；\n\n实际工程中，常用基于噪声分析仪的Y因子法和基于频谱分析仪的增益法（冷源法）。\n\n\n# 2. OIP3\n\n当放大器输入双频信号时，由于非线性失真，输出端会产生交调分量，三阶交调频率（2f1-f2、2f2-f1），主频与三阶交调频率的输出功率之差即为三阶交调失真。基波信号输出功率特性延长线与三阶交调特性延长线的交点称为三阶交调交截点（Third-order Intercept Point，IP3），对于的输入功率为IIP3，输出功率是OPI3，如图，值越大代表线性度越好。\n\n\n\n对于级联系统：\n\n\n\n\n# 3. P1dB\n\n\n\n\n# 4. Gain/Gain flatness\n\nGain=10log(PoutPin)=Pout(dBm)−Pin(dBm) Gain=10log(\\frac{P_{out}}{P_{in}})=P_{out}(dBm)-P_{in}(dBm) Gain=10log(Pin Pout )=Pout (dBm)−Pin (dBm)\nGain flatness=Gain(max)−Gain(min) Gain\\ flatness=Gain(max)-Gain(min) Gain flatness=Gain(max)−Gain(min)\n\n在频带内，增益不能出现抖动，波动越小越好。\n\n\n# 5. 稳定性\n\n放大器绝对稳定的充分必要条件：\n\nK=1+∣Δ∣2−∣S11∣2−∣S22∣22∣S21∣∣S12∣>1 K=\\frac{1+|\\Delta|^2-|S_{11}|^2-|S_{22}|^2}{2|S_{21}||S_{12}|}>1 K=2∣S21 ∣∣S12 ∣1+∣Δ∣2−∣S11 ∣2−∣S22 ∣2 >1\nΔ=S11S22−S12S21<1 \\Delta =S_{11}S_{22}-S{12}S_{21}<1 Δ=S11 S22 −S12S21 <1\n\n提高低噪声放大器的反向隔离（减小S12）可以提高放大器的稳定性。\n\n通常采用中和电容法及晶体管共射共基(或共源共栅)结构提高稳定性。\n\n\n# 6. Frequency/Input RL/Output RL\n\n下图为某LNA的datasheet\n\n\n\n\n# 三. LNA的设计要求及步骤\n\n在LNA的设计中主要考虑低噪声系数、足够的增益和绝对的稳定性。\n\n设计步骤如下：\n\n 1. 根据应用要求选择合适的晶体管；\n\n 2. 确定放大器的直流工作点和设计偏置电路；\n\n 3. 确定最小噪声输入阻抗并将其匹配到信号源阻抗(输入匹配网络)；\n\n 4. 确定输出阻抗并将其匹配到负载阻抗(输出匹配网络)；\n\n 5. 仿真LNA的性能及优化；\n\n 6. 电路制作及性能调试。",normalizedContent:"【转载】 射频工程师工作笔记——第三讲 射频有源器件之低噪放 - 知乎 (zhihu.com)\n\n\n# 一. lna 的概念\n\n低噪声放大器(low noise amplifier，lna)，作为通信系统接收前端的重要器件，对系统的噪声性能和接收灵敏度起决定性的作用。在放大天线接收到的小信号同时，还要尽可能少地引入噪声。输入输出端的阻抗匹配和噪声匹配是其实现高增益和低噪声的关键。\n\n\n# 二. lna的性能指标\n\nlna是一种特殊的放大器，和上文功放一样有frequency、gain、gain flatness、p1db等指标。一个好的lna需在放大信号的同时，产生尽可能低的噪声和失真，这两个参数通常使用噪声系数nf和三阶互调截点oip3来表征。\n\n\n# 1. nf\n\n噪声系数会影响接收机灵敏度，公式如下：\n\ns=−174dbm+nf+snrmin+10log(bw) s=-174dbm+nf+snr_{min}+10log(bw) s=−174dbm+nf+snrmin +10log(bw)\n\n噪声系数(noise factor，nf）定义为输入信噪比与输出信噪比的比值:\n\nnf=sin/ninsout/nout nf=\\frac{s_{in}/{n_{in}}}{s_{out}/n_{out}} nf=sout /nout sin /nin\n\n其中，sin、nin 为输入端的信号功率和噪声功率， sout、nout 为输出端的信号功率和噪声功率。若用 db 表示，那么，\n\nnf(db)=10log(nf)=nout(dbm)−gain(db)−nin(dbm) nf(db)=10log(nf)=n_{out}(dbm) - gain(db) - n_{in}(dbm) nf(db)=10log(nf)=nout (dbm)−gain(db)−nin (dbm)\n\n对于级联系统，\n\nnf=nf1+nf2−1g1+nf3−1g1g2+... nf=nf_{1}+\\frac{nf_{2}-1}{g_{1}}+\\frac{nf_{3}-1}{g_{1}g_{2}}+... nf=nf1 +g1 nf2 −1 +g1 g2 nf3 −1 +...\n\n可看出，前几级的噪声系数对整个系统的噪声系数影响很大。前几级的放大器噪声系数必须小，尤其是第一级。噪声系数与放大器的工作频率、静态工作点及工艺有关。\n\n· 噪声系数常用测量方法：\n\n对于无源器件，一般nf=il；\n\n实际工程中，常用基于噪声分析仪的y因子法和基于频谱分析仪的增益法（冷源法）。\n\n\n# 2. oip3\n\n当放大器输入双频信号时，由于非线性失真，输出端会产生交调分量，三阶交调频率（2f1-f2、2f2-f1），主频与三阶交调频率的输出功率之差即为三阶交调失真。基波信号输出功率特性延长线与三阶交调特性延长线的交点称为三阶交调交截点（third-order intercept point，ip3），对于的输入功率为iip3，输出功率是opi3，如图，值越大代表线性度越好。\n\n\n\n对于级联系统：\n\n\n\n\n# 3. p1db\n\n\n\n\n# 4. gain/gain flatness\n\ngain=10log(poutpin)=pout(dbm)−pin(dbm) gain=10log(\\frac{p_{out}}{p_{in}})=p_{out}(dbm)-p_{in}(dbm) gain=10log(pin pout )=pout (dbm)−pin (dbm)\ngain flatness=gain(max)−gain(min) gain\\ flatness=gain(max)-gain(min) gain flatness=gain(max)−gain(min)\n\n在频带内，增益不能出现抖动，波动越小越好。\n\n\n# 5. 稳定性\n\n放大器绝对稳定的充分必要条件：\n\nk=1+∣δ∣2−∣s11∣2−∣s22∣22∣s21∣∣s12∣>1 k=\\frac{1+|\\delta|^2-|s_{11}|^2-|s_{22}|^2}{2|s_{21}||s_{12}|}>1 k=2∣s21 ∣∣s12 ∣1+∣δ∣2−∣s11 ∣2−∣s22 ∣2 >1\nδ=s11s22−s12s21<1 \\delta =s_{11}s_{22}-s{12}s_{21}<1 δ=s11 s22 −s12s21 <1\n\n提高低噪声放大器的反向隔离（减小s12）可以提高放大器的稳定性。\n\n通常采用中和电容法及晶体管共射共基(或共源共栅)结构提高稳定性。\n\n\n# 6. frequency/input rl/output rl\n\n下图为某lna的datasheet\n\n\n\n\n# 三. lna的设计要求及步骤\n\n在lna的设计中主要考虑低噪声系数、足够的增益和绝对的稳定性。\n\n设计步骤如下：\n\n 1. 根据应用要求选择合适的晶体管；\n\n 2. 确定放大器的直流工作点和设计偏置电路；\n\n 3. 确定最小噪声输入阻抗并将其匹配到信号源阻抗(输入匹配网络)；\n\n 4. 确定输出阻抗并将其匹配到负载阻抗(输出匹配网络)；\n\n 5. 仿真lna的性能及优化；\n\n 6. 电路制作及性能调试。",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"dB概念",frontmatter:{title:"dB概念",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/si/db/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/02.dB%E6%A6%82%E5%BF%B5.html",relativePath:"03.硬件知识/02.信号完整性/02.dB概念.md",key:"v-e23f7370",path:"/hardware/si/db/",headers:[{level:2,title:"dB",slug:"db",normalizedTitle:"db",charIndex:2},{level:3,title:"概念",slug:"概念",normalizedTitle:"概念",charIndex:9},{level:3,title:"计算",slug:"计算",normalizedTitle:"计算",charIndex:346},{level:3,title:"常用分贝的值和对应的系数关系",slug:"常用分贝的值和对应的系数关系",normalizedTitle:"常用分贝的值和对应的系数关系",charIndex:1647},{level:2,title:"dBm/dBW",slug:"dbm-dbw",normalizedTitle:"dbm/dbw",charIndex:2e3},{level:3,title:"概念",slug:"概念-2",normalizedTitle:"概念",charIndex:9}],headersStr:"dB 概念 计算 常用分贝的值和对应的系数关系 dBm/dBW 概念",content:"# dB\n\n\n# 概念\n\ndB 是某一个比值基于 10 倍 log 的单位，基本单位有 dB/dBm/dBw。\n\n对于 a 和 b 两个具有相同单位的数，他们的比值 (dB)是 10 log (a/b)。\n\n如果参考值是 1 W，单位便是 dBW，如果参考值是 1 mW，单位便是 dBm。 dBm 和 dBW 是衡量功率，dB 是衡量比值。\n\n发射机发射的信号可能会是到达接收机信号的十亿倍，乘或除这么大的数字是很难把握的，于是就出现了使用加减法来代替乘除法的对数。\n\n在射频中，只需要知道有关对数的两个知识点，\n\n * 对数是两个值的比值\n * 该比值的单位是分贝 (dB)。其定义是 10 lg (输出功率/输入功率)，对于放大器其定义为 20 lg (输出电压/输入电压)。\n\n\n# 计算\n\n如一个放大器将信号功率放大100倍，换算成分贝，就是增益为20dB；如果放大器将信号电压放大100倍，换算成分贝，则是增益为40dB。\n\n分贝（dB）定义：\n\n(dB)=10log(PPref)(dB)=10 log (\\frac{P}{P{ref} } )(dB)=10log(PrefP )\n\n(dB)=20log(VVref) (dB)=20log(\\frac{V}{V{ref} } ) (dB)=20log(VrefV )\n\n根据功率和电压（电流）的比值前面乘的系数不同，功率是 10 倍，电压（电流）是 20 倍。平时说的增益等都是指的功率。只需要记住两种 dB 的转换就可以进行简单的分贝转换：\n\n+3 dB 指的是 2 倍大（乘以 2）； +10 dB 指的是 10 倍大（乘以 10）； -3 dB 指的是减小到 1/2（除以 2）； -10 dB 指的是减小到 1/10（除以 10）； 0 dB 指的是没有变大和变小就是 1。\n\n例 1：如果信号的放大增益为4000倍，那么放大增益为多少 dB？   解：本题可以通过两种方法进行计算，分别是公式计算法和快速计算法。增益用英文单词 G 表示。\n\n公式计算法：\n\nGain(dB)=10logPPvref=10log(4000)=36.02dB Gain(dB)=10log\\frac{P}{P{vref}}=10log(4000)=36.02 dB Gain(dB)=10logPvrefP =10log(4000)=36.02dB\n\n快速计算法：\n\nGain=4000=2∗2∗10∗10∗10=3dB+3dB+10dB+10dB+10dB=36dB Gain=4000=2*2*10*10*10=3dB+3dB+10dB+10dB+10dB=36dB Gain=4000=2∗2∗10∗10∗10=3dB+3dB+10dB+10dB+10dB=36dB\n\n例 2：如果信号经历的增益为0.000125，那么增益是多少 dB？ 解：本题同样可以通过两种方法进行计算，分别是公式计算法和快速计算法。\n\n公式计算法：\n\nGain(dB)=10logPPvref=10log(0.000125)=−39.03dB Gain(dB)=10log\\frac{P}{P{vref}}=10log(0.000125)=-39.03 dB Gain(dB)=10logPvrefP =10log(0.000125)=−39.03dB\n\n快速计算法：\n\nGain=0.000125=1÷2÷2÷2÷10÷10÷10=0dB−3dB−3dB−3dB−10dB−10dB−10dB=−39dB Gain=0.000125=1{\\div} 2{\\div} 2{\\div} 2{\\div}10{\\div} 10{\\div}10=0dB-3dB-3dB-3dB-10dB-10dB-10dB=-39dB Gain=0.000125=1÷2÷2÷2÷10÷10÷10=0dB−3dB−3dB−3dB−10dB−10dB−10dB=−39dB\n\n\n# 常用分贝的值和对应的系数关系\n\n增加      参数        减少       参数\n0 dB    1 x       0 dB     1 x\n1 dB    1.25 x    -1 dB    0.8 x\n3 dB    2 x       -3 dB    0.5 x\n6 dB    4 x       -6 dB    0.25 x\n10 dB   10 x      -10 dB   0.1 x\n12 dB   16 x      -12 dB   0.06 x\n20 dB   100 x     -20 dB   0.01 x\n30 dB   1000 x    -30 dB   0.001 x\n40 dB   10000 x   -40 dB   0.0001 x\n\n\n# dBm/dBW\n\n\n# 概念\n\n在前面讲 dB 的时候我们提到过由于两个信号的能量可能差10亿倍，如果只是简单的用瓦这个单位会非常的不方便，所以在射频应用中一般用 dBm 来作为功率的单位，定义0dBm=1mW；0dBW=1W，那么： W 和 dBm 的转换公式为：\n\nPdBm=10logPdBm1mW P_{dBm} =10log\\frac{P_{dBm}}{1mW} PdBm =10log1mWPdBm\n\nW 和 dBW 的转换公式为：\n\nPdBW=10logPW1W P_{dBW} =10log\\frac{P_{W}}{1W} PdBW =10log1WPW\n\n所以：+30 dBm = 0 dBW；- 30 dBW = 0 dBm。需要说明的一点是在射频工程中最常用的功率单位是 dBm，常用换算如下：\n\n * 1 mW=0 dBm\n * 10 mW=10 dBm\n * 2 mW=3 dBm\n * 0.1 mW=-10 dBm\n * 1×10−7mW=−70dBm1\\times 10^{-7} mW=-70dBm1×10−7mW=−70dBm\n\n例：一个设备的输出功率为33dBm，其输出功率是多少瓦？\n\n解：+33 dBm＝0 dBm +10 dB +10 dB +10 dB +3 dB\n＝1mW ×10 ×10 ×10 ×2 ＝2W。因此这个设备的输出功率为2W。\n\n例：一个设备的输出功率为0.00025mW，其输出功率是多少 dBm？ 解：0.00025 mW＝1 mW ÷10 ÷10 ÷10 ÷2 ÷2\n＝0 dBm -10 -10 -10 -3 -3＝-36 dBm。因此这个设备的输出功率为-36 dBm。",normalizedContent:"# db\n\n\n# 概念\n\ndb 是某一个比值基于 10 倍 log 的单位，基本单位有 db/dbm/dbw。\n\n对于 a 和 b 两个具有相同单位的数，他们的比值 (db)是 10 log (a/b)。\n\n如果参考值是 1 w，单位便是 dbw，如果参考值是 1 mw，单位便是 dbm。 dbm 和 dbw 是衡量功率，db 是衡量比值。\n\n发射机发射的信号可能会是到达接收机信号的十亿倍，乘或除这么大的数字是很难把握的，于是就出现了使用加减法来代替乘除法的对数。\n\n在射频中，只需要知道有关对数的两个知识点，\n\n * 对数是两个值的比值\n * 该比值的单位是分贝 (db)。其定义是 10 lg (输出功率/输入功率)，对于放大器其定义为 20 lg (输出电压/输入电压)。\n\n\n# 计算\n\n如一个放大器将信号功率放大100倍，换算成分贝，就是增益为20db；如果放大器将信号电压放大100倍，换算成分贝，则是增益为40db。\n\n分贝（db）定义：\n\n(db)=10log(ppref)(db)=10 log (\\frac{p}{p{ref} } )(db)=10log(prefp )\n\n(db)=20log(vvref) (db)=20log(\\frac{v}{v{ref} } ) (db)=20log(vrefv )\n\n根据功率和电压（电流）的比值前面乘的系数不同，功率是 10 倍，电压（电流）是 20 倍。平时说的增益等都是指的功率。只需要记住两种 db 的转换就可以进行简单的分贝转换：\n\n+3 db 指的是 2 倍大（乘以 2）； +10 db 指的是 10 倍大（乘以 10）； -3 db 指的是减小到 1/2（除以 2）； -10 db 指的是减小到 1/10（除以 10）； 0 db 指的是没有变大和变小就是 1。\n\n例 1：如果信号的放大增益为4000倍，那么放大增益为多少 db？   解：本题可以通过两种方法进行计算，分别是公式计算法和快速计算法。增益用英文单词 g 表示。\n\n公式计算法：\n\ngain(db)=10logppvref=10log(4000)=36.02db gain(db)=10log\\frac{p}{p{vref}}=10log(4000)=36.02 db gain(db)=10logpvrefp =10log(4000)=36.02db\n\n快速计算法：\n\ngain=4000=2∗2∗10∗10∗10=3db+3db+10db+10db+10db=36db gain=4000=2*2*10*10*10=3db+3db+10db+10db+10db=36db gain=4000=2∗2∗10∗10∗10=3db+3db+10db+10db+10db=36db\n\n例 2：如果信号经历的增益为0.000125，那么增益是多少 db？ 解：本题同样可以通过两种方法进行计算，分别是公式计算法和快速计算法。\n\n公式计算法：\n\ngain(db)=10logppvref=10log(0.000125)=−39.03db gain(db)=10log\\frac{p}{p{vref}}=10log(0.000125)=-39.03 db gain(db)=10logpvrefp =10log(0.000125)=−39.03db\n\n快速计算法：\n\ngain=0.000125=1÷2÷2÷2÷10÷10÷10=0db−3db−3db−3db−10db−10db−10db=−39db gain=0.000125=1{\\div} 2{\\div} 2{\\div} 2{\\div}10{\\div} 10{\\div}10=0db-3db-3db-3db-10db-10db-10db=-39db gain=0.000125=1÷2÷2÷2÷10÷10÷10=0db−3db−3db−3db−10db−10db−10db=−39db\n\n\n# 常用分贝的值和对应的系数关系\n\n增加      参数        减少       参数\n0 db    1 x       0 db     1 x\n1 db    1.25 x    -1 db    0.8 x\n3 db    2 x       -3 db    0.5 x\n6 db    4 x       -6 db    0.25 x\n10 db   10 x      -10 db   0.1 x\n12 db   16 x      -12 db   0.06 x\n20 db   100 x     -20 db   0.01 x\n30 db   1000 x    -30 db   0.001 x\n40 db   10000 x   -40 db   0.0001 x\n\n\n# dbm/dbw\n\n\n# 概念\n\n在前面讲 db 的时候我们提到过由于两个信号的能量可能差10亿倍，如果只是简单的用瓦这个单位会非常的不方便，所以在射频应用中一般用 dbm 来作为功率的单位，定义0dbm=1mw；0dbw=1w，那么： w 和 dbm 的转换公式为：\n\npdbm=10logpdbm1mw p_{dbm} =10log\\frac{p_{dbm}}{1mw} pdbm =10log1mwpdbm\n\nw 和 dbw 的转换公式为：\n\npdbw=10logpw1w p_{dbw} =10log\\frac{p_{w}}{1w} pdbw =10log1wpw\n\n所以：+30 dbm = 0 dbw；- 30 dbw = 0 dbm。需要说明的一点是在射频工程中最常用的功率单位是 dbm，常用换算如下：\n\n * 1 mw=0 dbm\n * 10 mw=10 dbm\n * 2 mw=3 dbm\n * 0.1 mw=-10 dbm\n * 1×10−7mw=−70dbm1\\times 10^{-7} mw=-70dbm1×10−7mw=−70dbm\n\n例：一个设备的输出功率为33dbm，其输出功率是多少瓦？\n\n解：+33 dbm＝0 dbm +10 db +10 db +10 db +3 db\n＝1mw ×10 ×10 ×10 ×2 ＝2w。因此这个设备的输出功率为2w。\n\n例：一个设备的输出功率为0.00025mw，其输出功率是多少 dbm？ 解：0.00025 mw＝1 mw ÷10 ÷10 ÷10 ÷2 ÷2\n＝0 dbm -10 -10 -10 -3 -3＝-36 dbm。因此这个设备的输出功率为-36 dbm。",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"Ka频段双极化低剖面卫通相控阵天线",frontmatter:{title:"Ka频段双极化低剖面卫通相控阵天线",date:"2024-02-22T21:00:00.000Z",permalink:"/hardware/si/phased-array/ka",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/02.%E7%9B%B8%E6%8E%A7%E9%98%B5/01.Ka%E9%A2%91%E6%AE%B5%E5%8F%8C%E6%9E%81%E5%8C%96%E4%BD%8E%E5%89%96%E9%9D%A2%E5%8D%AB%E9%80%9A%E7%9B%B8%E6%8E%A7%E9%98%B5%E5%A4%A9%E7%BA%BF.html",relativePath:"03.硬件知识/02.信号完整性/02.相控阵/01.Ka频段双极化低剖面卫通相控阵天线.md",key:"v-4ca4e26a",path:"/hardware/si/phased-array/ka/",headers:[{level:2,title:"摘要",slug:"摘要",normalizedTitle:"摘要",charIndex:46},{level:2,title:"关键词",slug:"关键词",normalizedTitle:"关键词",charIndex:390},{level:2,title:"引言",slug:"引言",normalizedTitle:"引言",charIndex:430},{level:2,title:"相控阵系统设计",slug:"相控阵系统设计",normalizedTitle:"相控阵系统设计",charIndex:837},{level:3,title:"架构设计",slug:"架构设计",normalizedTitle:"架构设计",charIndex:849},{level:3,title:"天线叠层设计",slug:"天线叠层设计",normalizedTitle:"天线叠层设计",charIndex:1195},{level:2,title:"结论",slug:"结论",normalizedTitle:"结论",charIndex:2379}],headersStr:"摘要 关键词 引言 相控阵系统设计 架构设计 天线叠层设计 结论",content:"[转载]1、Ka频段双极化低剖面卫通相控阵天线_ka频段相控阵若天线-CSDN博客\n\n\n# 摘要\n\n当前国内外低轨通信互联网星座发展迅猛, 面向卫通天线跨星跨波束快速切换、低剖面应用需求, 提出了一种 Ka 频段层叠式缝隙合双圆极化发射相控阵天线。 基于多层 PCB 叠层瓦式架构, 将天线层、电源与控制层、功分网络层和芯片层一体化集成。基于“双线极化天线 +移相控制”设计实现左右旋圆极化及其极化切换, 采用子阵相位旋转排布实现天线整阵二次圆极化。 测试结果表明: 天线工作频段为 27.5 ~31 CHz, 29.2 CHz 处法向等效各向同性辐射功率值为 165 dBW, 可实现 +-60°扫描, 法向轴比<2 dB, 左右旋圆极化可切换, 天线子阵厚度 3 mm。 相比传统砖式相控阵天线大幅降低了剖面和重量。对卫通天线低剖面、波束快速切换等具有重要应用意义。\n\n\n# 关键词\n\n相控阵天线; Ka 频段: 双圆极化; 等效各向同性辐射功率\n\n\n# 引言\n\n近年来国内外低轨通信互联网星座发展迅猛，随着低轨宽带通信卫星数量和通信容量的快速提升对卫通天线提出了新的应用需求，支持星地覆盖区跨星跨波束快速切换，满足低剖面,轻量化,高集成应用需求，规模化应用或批量化应用低成本，传统卫通天线多采用伺服平板天线或伺服抛物面天线 响应速度慢响应速度慢响应速度慢 剖面高重量大，难以满足应用需求。相控阵天线的波束切换可达到微秒，量级通常具有厘米级较低轮廓，而且长期工作具有可靠性高，可支持极化切换与灵活赋形等优势，针对低轨宽带互联网天线低剖面,跨星跨波束快速切换应用需求。本文提出了一种 J 频段圆极化可切换发射相控阵天线天线整体采用多层 d\\c 层叠瓦式架构集成天线层,电源层,控制层, 功分网络层和芯片层等一体实现天线网络芯片一体化低剖面集成，天线采用十字缝隙耦合形式双线极化合成圆极化并采用旋转馈电实现二次圆极化可实现扫描快速波束切换以及左右旋双圆极化等功能。\n\n\n# 相控阵系统设计\n\n\n# 架构设计\n\n本文设计的 J 频段双圆极化可切换发射阵元相控阵天线架构，整阵系统由 16个辐射微带天线单元 64个通道多功能射频发射芯片,馈电网络和波束控制模块等组成，多功能芯片的公共端通过威尔金斯电桥网络实现合路互联，波束控制模块主要由 edIH 和 eDH&G 等组成，整板对内输入一个发射射频信号的射频连接器以及一个供电及控制数据下发低频连接器，天线阵列每个阵元具有 2个馈电过孔，分别对应(水平)和(垂直)馈电端口，与多功能射频幅相芯片的两个射频发射通道相连，每个多功能射频发射芯片可实现对接收天线模块的相位控制与功率分配。控制天线单元端口的馈电相位差实现天线圆极化合成与左右旋圆极化切换，同时以阵列为子阵进行相位旋转排布实现整阵二次圆极化，进一步提高天线整阵圆极化轴比。\n\n\n\n\n# 天线叠层设计\n\n本文研究的 Ka 频段双圆极化可切换发射 64 阵元相控阵天线采用多层板 PCB 混压工艺，使用盲孔, 表贴, 埋孔背钻等工艺实现馈电带线的垂直互联' 微带天线设计在多层板的顶层及紧邻内层，通过馈电金属化过孔与底层的多功能发射射频芯片输出管脚相连! 多功能射频发射芯片的射频输入管脚通过带线及馈电过孔与板子内层的威尔金森功分网络相连! 芯片数字控制信号及供电信号通过板子内层的控制层和电源层实现互联，为减少层间干扰，电源和控制网络层的低频信号线通过金属地隔离，多层 PCB 板叠层结构如图 = 所示，天线层, 控制 S 电源层, 工分网络层, 芯片层等通过多层印制板实现，实现天线板厚度在 3mm 以内。\n\n本文采用叠层缝隙耦合天线，设计了一种低剖面双线极化微带天线，其单元结构如图所示，采用 3 层 PCB 每层 PCB 之间采用半固化片压合粘接，从上到下依次为辐射贴片层, 耦合缝隙层, 馈线层和地板。为提高极化间隔离度，耦合缝隙层通过十字形缝隙进行耦合馈电，极化的馈线分布在不同层，天线单元采用屏蔽孔隔离，网络采用带状线，带状线通过金属通孔与底层共面波导垂直互连，共面波导与芯片输出管脚连接' 相比于普通的微带天线，本文设计的叠层缝隙耦合天线具有更宽的带宽以及更高的端口隔离度。 为实现相控阵左右旋圆极化可切换功能，采用层叠缝隙耦合双极化耦合天线，馈电形式为双线极化馈电，通过馈电网络产生 90 度相位差，同时采用 2 x 2 子阵天线单元旋转馈电排布实现二次圆极化, 提高天线极化轴比性能。图 5 为 2 x 2 阵列左右旋二次圆极化馈电相位示意图 为实现 8 x 8 阵列整体优化设计, 由 2 x 2 阵列旋转组阵为 8 x 8 阵列, 根据相控阵天线扫描角范围不出现栅瓣条件，图 6 为 8 x 8 阵列整体结构示意图。 利用电磁仿真软件进行全波仿真, 其归一化方向图如图 7 和图 8 所示, 左右旋极化天线可分别实现土 60°扫描，同时左旋和右旋天线一致性好, 天线扫描范围可达到土 60°, 副瓣电平均较低, 扫描 30 和 60°增益分别下降 1.3 dB 和 4 dB。由于采用“双线极化天线 + 移相控制”架构模式，左右旋极化共用同一天线, 通过多功能射频发射芯片控制馈电相位, 控制实现左右双圆极化及其极化切换。\n\n在微波暗室对研制的 64 阵元发射相控阵天线进行平面近场扫描测试, 如图 10 所示： 天线测试方向图与轴比如图 11、图 12 和图 13 所示, 其法向轴比小于 2 dB 在微波暗室对 64 阵元发射相控阵天线进行法向 EIRP 值测试, 测试结果如表 1 所列, 与理论值小于 1 dB 误差, 考虑到多层 PCB 加工误差、高低频电磁干扰、芯片焊接误差、测试误差等因素, 天线设计满足要求。\n\n\n# 结论\n\n针对低轨卫星通信对天线跨星波束切换、低成本、低剖面需求, 本文提出了一种 Ka 频段圆极化可切换卫通发射相控阵天线，整体采用瓦式层叠相控阵架构。设计了双馈口叠层十字缝隙耦合天线，采用“双线极化天线 +旋转馈电 + 移相控制”架构，采用双馈口的叠层十字缝隙耦合天线, 并以 2 x 2 阵列为主体, 旋转排布实现二次圆极化，同时极化可切换, 通过多层 PCB 工艺实现天线层、控制/电源层功分网终层、芯片层一体化集成, 研制出 64 阵元的圆极化可切换发射天线，测试结果表明: 天线工作频段为 27.5 ~31 GHz, 可实现 60°扫描, 法向轴比<2 dB, 左右旋圆极化可切换，EIRP 值可达 16.5 dBw@ 29.2 Hz, 厚度 3 mm。对了通天线低剖面快速波束切换等具有重要应用意义。",normalizedContent:"[转载]1、ka频段双极化低剖面卫通相控阵天线_ka频段相控阵若天线-csdn博客\n\n\n# 摘要\n\n当前国内外低轨通信互联网星座发展迅猛, 面向卫通天线跨星跨波束快速切换、低剖面应用需求, 提出了一种 ka 频段层叠式缝隙合双圆极化发射相控阵天线。 基于多层 pcb 叠层瓦式架构, 将天线层、电源与控制层、功分网络层和芯片层一体化集成。基于“双线极化天线 +移相控制”设计实现左右旋圆极化及其极化切换, 采用子阵相位旋转排布实现天线整阵二次圆极化。 测试结果表明: 天线工作频段为 27.5 ~31 chz, 29.2 chz 处法向等效各向同性辐射功率值为 165 dbw, 可实现 +-60°扫描, 法向轴比<2 db, 左右旋圆极化可切换, 天线子阵厚度 3 mm。 相比传统砖式相控阵天线大幅降低了剖面和重量。对卫通天线低剖面、波束快速切换等具有重要应用意义。\n\n\n# 关键词\n\n相控阵天线; ka 频段: 双圆极化; 等效各向同性辐射功率\n\n\n# 引言\n\n近年来国内外低轨通信互联网星座发展迅猛，随着低轨宽带通信卫星数量和通信容量的快速提升对卫通天线提出了新的应用需求，支持星地覆盖区跨星跨波束快速切换，满足低剖面,轻量化,高集成应用需求，规模化应用或批量化应用低成本，传统卫通天线多采用伺服平板天线或伺服抛物面天线 响应速度慢响应速度慢响应速度慢 剖面高重量大，难以满足应用需求。相控阵天线的波束切换可达到微秒，量级通常具有厘米级较低轮廓，而且长期工作具有可靠性高，可支持极化切换与灵活赋形等优势，针对低轨宽带互联网天线低剖面,跨星跨波束快速切换应用需求。本文提出了一种 j 频段圆极化可切换发射相控阵天线天线整体采用多层 d\\c 层叠瓦式架构集成天线层,电源层,控制层, 功分网络层和芯片层等一体实现天线网络芯片一体化低剖面集成，天线采用十字缝隙耦合形式双线极化合成圆极化并采用旋转馈电实现二次圆极化可实现扫描快速波束切换以及左右旋双圆极化等功能。\n\n\n# 相控阵系统设计\n\n\n# 架构设计\n\n本文设计的 j 频段双圆极化可切换发射阵元相控阵天线架构，整阵系统由 16个辐射微带天线单元 64个通道多功能射频发射芯片,馈电网络和波束控制模块等组成，多功能芯片的公共端通过威尔金斯电桥网络实现合路互联，波束控制模块主要由 edih 和 edh&g 等组成，整板对内输入一个发射射频信号的射频连接器以及一个供电及控制数据下发低频连接器，天线阵列每个阵元具有 2个馈电过孔，分别对应(水平)和(垂直)馈电端口，与多功能射频幅相芯片的两个射频发射通道相连，每个多功能射频发射芯片可实现对接收天线模块的相位控制与功率分配。控制天线单元端口的馈电相位差实现天线圆极化合成与左右旋圆极化切换，同时以阵列为子阵进行相位旋转排布实现整阵二次圆极化，进一步提高天线整阵圆极化轴比。\n\n\n\n\n# 天线叠层设计\n\n本文研究的 ka 频段双圆极化可切换发射 64 阵元相控阵天线采用多层板 pcb 混压工艺，使用盲孔, 表贴, 埋孔背钻等工艺实现馈电带线的垂直互联' 微带天线设计在多层板的顶层及紧邻内层，通过馈电金属化过孔与底层的多功能发射射频芯片输出管脚相连! 多功能射频发射芯片的射频输入管脚通过带线及馈电过孔与板子内层的威尔金森功分网络相连! 芯片数字控制信号及供电信号通过板子内层的控制层和电源层实现互联，为减少层间干扰，电源和控制网络层的低频信号线通过金属地隔离，多层 pcb 板叠层结构如图 = 所示，天线层, 控制 s 电源层, 工分网络层, 芯片层等通过多层印制板实现，实现天线板厚度在 3mm 以内。\n\n本文采用叠层缝隙耦合天线，设计了一种低剖面双线极化微带天线，其单元结构如图所示，采用 3 层 pcb 每层 pcb 之间采用半固化片压合粘接，从上到下依次为辐射贴片层, 耦合缝隙层, 馈线层和地板。为提高极化间隔离度，耦合缝隙层通过十字形缝隙进行耦合馈电，极化的馈线分布在不同层，天线单元采用屏蔽孔隔离，网络采用带状线，带状线通过金属通孔与底层共面波导垂直互连，共面波导与芯片输出管脚连接' 相比于普通的微带天线，本文设计的叠层缝隙耦合天线具有更宽的带宽以及更高的端口隔离度。 为实现相控阵左右旋圆极化可切换功能，采用层叠缝隙耦合双极化耦合天线，馈电形式为双线极化馈电，通过馈电网络产生 90 度相位差，同时采用 2 x 2 子阵天线单元旋转馈电排布实现二次圆极化, 提高天线极化轴比性能。图 5 为 2 x 2 阵列左右旋二次圆极化馈电相位示意图 为实现 8 x 8 阵列整体优化设计, 由 2 x 2 阵列旋转组阵为 8 x 8 阵列, 根据相控阵天线扫描角范围不出现栅瓣条件，图 6 为 8 x 8 阵列整体结构示意图。 利用电磁仿真软件进行全波仿真, 其归一化方向图如图 7 和图 8 所示, 左右旋极化天线可分别实现土 60°扫描，同时左旋和右旋天线一致性好, 天线扫描范围可达到土 60°, 副瓣电平均较低, 扫描 30 和 60°增益分别下降 1.3 db 和 4 db。由于采用“双线极化天线 + 移相控制”架构模式，左右旋极化共用同一天线, 通过多功能射频发射芯片控制馈电相位, 控制实现左右双圆极化及其极化切换。\n\n在微波暗室对研制的 64 阵元发射相控阵天线进行平面近场扫描测试, 如图 10 所示： 天线测试方向图与轴比如图 11、图 12 和图 13 所示, 其法向轴比小于 2 db 在微波暗室对 64 阵元发射相控阵天线进行法向 eirp 值测试, 测试结果如表 1 所列, 与理论值小于 1 db 误差, 考虑到多层 pcb 加工误差、高低频电磁干扰、芯片焊接误差、测试误差等因素, 天线设计满足要求。\n\n\n# 结论\n\n针对低轨卫星通信对天线跨星波束切换、低成本、低剖面需求, 本文提出了一种 ka 频段圆极化可切换卫通发射相控阵天线，整体采用瓦式层叠相控阵架构。设计了双馈口叠层十字缝隙耦合天线，采用“双线极化天线 +旋转馈电 + 移相控制”架构，采用双馈口的叠层十字缝隙耦合天线, 并以 2 x 2 阵列为主体, 旋转排布实现二次圆极化，同时极化可切换, 通过多层 pcb 工艺实现天线层、控制/电源层功分网终层、芯片层一体化集成, 研制出 64 阵元的圆极化可切换发射天线，测试结果表明: 天线工作频段为 27.5 ~31 ghz, 可实现 60°扫描, 法向轴比<2 db, 左右旋圆极化可切换，eirp 值可达 16.5 dbw@ 29.2 hz, 厚度 3 mm。对了通天线低剖面快速波束切换等具有重要应用意义。",charsets:{cjk:!0},lastUpdated:"2024/03/06, 17:30:12",lastUpdatedTimestamp:1709717412e3},{title:"阻抗变换器",frontmatter:{title:"阻抗变换器",date:"2024-01-27T21:00:00.000Z",permalink:"/hardware/si/impedance-tran/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/03.%E9%98%BB%E6%8A%97%E5%8F%98%E6%8D%A2%E5%99%A8.html",relativePath:"03.硬件知识/02.信号完整性/03.阻抗变换器.md",key:"v-31d64c66",path:"/hardware/si/impedance-tran/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"1/4 波长阻抗变换器",slug:"_1-4-波长阻抗变换器",normalizedTitle:"1/4 波长阻抗变换器",charIndex:506},{level:3,title:"说明",slug:"说明-2",normalizedTitle:"说明",charIndex:2},{level:3,title:"计算",slug:"计算",normalizedTitle:"计算",charIndex:422},{level:4,title:"阻抗计算",slug:"阻抗计算",normalizedTitle:"阻抗计算",charIndex:896},{level:4,title:"贴片计算",slug:"贴片计算",normalizedTitle:"贴片计算",charIndex:1489},{level:2,title:"HFSS仿真实例",slug:"hfss仿真实例",normalizedTitle:"hfss仿真实例",charIndex:2604},{level:3,title:"计算公式",slug:"计算公式",normalizedTitle:"计算公式",charIndex:2617},{level:3,title:"参数计算",slug:"参数计算",normalizedTitle:"参数计算",charIndex:3092}],headersStr:"说明 1/4 波长阻抗变换器 说明 计算 阻抗计算 贴片计算 HFSS仿真实例 计算公式 参数计算",content:"# 说明\n\n阻抗变换器的作用是解决微波传输线与微波器件之间匹配的。\n\n在通常情况下，50Ω的同轴电缆主要应用于传输射频信号； 75Ω的同轴电缆则主要应用于视频信号的传输，而与馈线相连的极化分离器和波道滤波器的输入输出阻抗为50Ω。\n\n为什么是50欧姆的同轴电缆？\n\n在美国，用作射频功率传输的标准同轴电缆的阻抗几乎无一例外地都是50欧姆。为什么选用这个数值，在伯德电子公司出示的一篇论文中有解释。\n\n是因为既要考虑“损耗最小”，也要考虑能承受“最大击穿功率”。对于空气介质，优先考虑“损耗最小”，要求同轴线缆“屏蔽层内径”与“芯线外径”的最佳比值为3.6（推导过程繁杂，略过），此时线缆特性阻抗为77Ω。这一比例下，线缆损耗虽然小，在遇到大功率时，屏蔽层和芯线层会出现击穿。同理，当考虑最大功率容量时，屏蔽层内径与芯线外径之比应为1.65，此时对应的特性阻抗为30Ω，此时线缆损耗也比较大。\n\n所以，在传输功率不大的弱信号下（譬如电视信号），为计算简便，采用了75欧来作为低于77欧的最小损耗点。而50欧是77和30的平均近似，是最小损耗和最大功率容量之间的折中值。即，50欧能比70欧有更大承载功率。\n\n\n# 1/4 波长阻抗变换器\n\n\n# 说明\n\n天线高度为辐射信号波长的四分之一时，天线的辐射能力最强。根据传输线的理论，1/4波长的开路线相当于一个串联谐振电路，使得整个负载呈现纯电阻性，有利于增强天线的辐射能力。\n\n对于一个端接实数负载的射频电路，我们可以接一段1/4波长特定阻抗 Z1 的传输线将负载阻抗 RL 变换到和馈线阻抗 Z0 一样的输入阻抗 Zin，以满足阻抗匹配的要求。\n\n\n\n这段1/4波长阻抗变换器的阻抗 Z1 可以由下面公式计算得出：\n\nZ1=Z0RL Z_{1}=\\sqrt{Z_{0}R_{L}} Z1 =Z0 RL\n\n也就是说通过这个阻抗变换器，我们把负载阻抗 RL 变换成和馈线阻抗 Z0 一样了。因为与波长相关，这个匹配只是在1/4波长(或者1/4波长的奇数倍)所对应的频率点实现了完全匹配，没有驻波，但是在其他频率点依然是失配的。\n\n\n# 计算\n\n# 阻抗计算\n\n\n\n例：Z 1=50 ohm，负载阻抗 Z 2=288 欧姆，求在 2.4 GHz 下，使用介电常数为 2.2 厚度 RO5880 的 1.575 mm 芯板，需要的 1/4 波长宽度和长度，以及阻抗？ 解：真空中传播速度为 c=3×108m/sc=3\\times10^{8} m/sc=3×108m/s 在 f=2.4 GHz 频率下，波长为 $$ \\lambda = \\frac{c}{f} = \\frac{3\\times 10^{8}m/s}{2.4GHz} = \\frac{3\\times 10^{8}m/s}{2.4\\times10^{9}Hz} = 0.125m $$\n\n1/4 波长为 1/4λ=0.125m4×εe=21.5mm1/4 \\lambda = \\frac{0.125m}{4\\times\\sqrt{\\varepsilon _{e}}} = 21.5mm1/4λ=4×εe 0.125m =21.5mm 1/4 波长处的阻抗为 ZTO=Z1Z2=50×288=120ΩZ_{TO}=\\sqrt{Z_{1}Z_{2}} = \\sqrt{50\\times 288}= 120\\OmegaZTO =Z1 Z2 =50×288 =120Ω 根据阻抗值 120和材料介电常数 2.2，铜厚 35 um， 计算出 1/4 波长处的宽度 0.848 mm\n\n# 贴片计算\n\n工作频率：f 相对介电常数：εr\\varepsilon_{r}εr 有效介电常数：εe\\varepsilon_{e}εe 光速：c=3×108m/sc=3\\times 10^{8}m/sc=3×108m/s 贴片宽度 W：\n\nW=c2f(εr+12)−12 W=\\frac{c}{2f} (\\frac{\\varepsilon_{r}+1}{2})^{-\\frac{1}{2} } W=2fc (2εr +1 )−21\n\n贴片长度一般取 λe/2\\lambda_{e}/2λe /2，λe\\lambda_{e}λe 为介质内的导波波长 考虑到边缘缩短效应，实际贴片长度 L 应为：\n\nL=c2fεe−2ΔL L=\\frac{c}{2f\\sqrt{\\varepsilon_{e}}} - 2\\Delta L L=2fεe c −2ΔL\n\n式中， 等效辐射缝隙长度：\n\nΔL=0.412h(εe+0.3)(Wh+0.264)(εe−0.258)(Wh+0.8) \\Delta L=0.412h\\frac{(\\varepsilon_{e}+0.3)(\\frac{W}{h}+0.264)}{(\\varepsilon_{e}-0.258)(\\frac{W}{h}+0.8 )} ΔL=0.412h(εe −0.258)(hW +0.8)(εe +0.3)(hW +0.264)\n\n有效介电常数：\n\nεe=εr+12+εr−12(1+12hW)−12 \\varepsilon_{e}=\\frac{\\varepsilon_{r}+1}{2}+\\frac{\\varepsilon_{r}-1}{2}(1+\\frac{12h}{W})^{-\\frac{1}{2} } εe =2εr +1 +2εr −1 (1+W12h )−21\n\n输入阻抗为 50Ω50\\Omega50Ω 时馈电点的近似位置（距贴片长 L 的中心）：\n\nXf=L2ξre X_{f}=\\frac{L}{2\\sqrt{\\xi_{re} } } Xf =2ξre L\n\n式中，\n\nξre(L)=εr+12+εr−12(1+12hL)−12 \\xi_{re}(L)=\\frac{\\varepsilon_{r}+1}{2}+ \\frac{\\varepsilon_{r}-1}{2}(1+\\frac{12h}{L})^{-\\frac{1}{2} } ξre (L)=2εr +1 +2εr −1 (1+L12h )−21\n\n介质板长宽取贴片长宽的 2 倍，也可加上 6 倍的介质厚度：\n\n辐射边界表面距辐射体 ≥λ4\\ge \\frac{\\lambda }{4}≥4λ\n\n\n# HFSS仿真实例\n\n\n# 计算公式\n\nW: 贴片宽度\n\nλ\\lambdaλ: 波长\n\nRinR_{in}Rin ：贴片输入端阻抗\n\nG={W290λ02    W≤λ0W2120λ02    W>λ0(1) G=\\left\\{\\begin{matrix} \\frac{W^{2}}{90\\lambda_{0}^{2}} \\ \\ \\ \\ W\\le\\lambda_{0} & \\\\ \\frac{W^{2}}{120\\lambda_{0}^{2}} \\ \\ \\ \\ W>\\lambda_{0} & \\end{matrix}\\right. \\tag{1} G={90λ02 W2     W≤λ0 120λ02 W2     W>λ0 (1)\nYin=2G(2) Y_{in}=2G \\tag{2} Yin =2G(2)\nRin=1Yin(3) R_{in}=\\frac{1}{Y_{in}} \\tag{3} Rin =Yin 1 (3)\nZT0=50×Rin(4) Z_{T0}=\\sqrt{50\\times R_{in}} \\tag{4} ZT0 =50×Rin (4)\n\n\n# 参数计算\n\n求解：2.4 GHz，RO 5880，dk 2.2，厚度 1.575 mm， 贴片 41.4 x 49.4 mm， 根据上述公式计算得 λ=125mm\\lambda =125 mmλ=125mm Rin≈288ΩRin\\approx288\\OmegaRin≈288Ω ZT0=50×Rin=120ΩZ_{T 0}=\\sqrt{50\\times R_{in}}=120\\OmegaZT0 =50×Rin =120Ω 根据图知 Z1=50Ω  ZTO=120Ω  Z2=Rin=288ΩZ_{1}=50\\Omega\\ \\ Z_{TO}=120\\Omega \\ \\ Z_{2}=R_{in}=288\\OmegaZ1 =50Ω  ZTO =120Ω  Z2 =Rin =288Ω 计算宽度 Z1=4.8mm  ZTO=0.86mmZ_{1}=4.8mm\\ \\ Z_{TO}=0.86mmZ1 =4.8mm  ZTO =0.86mm",normalizedContent:"# 说明\n\n阻抗变换器的作用是解决微波传输线与微波器件之间匹配的。\n\n在通常情况下，50ω的同轴电缆主要应用于传输射频信号； 75ω的同轴电缆则主要应用于视频信号的传输，而与馈线相连的极化分离器和波道滤波器的输入输出阻抗为50ω。\n\n为什么是50欧姆的同轴电缆？\n\n在美国，用作射频功率传输的标准同轴电缆的阻抗几乎无一例外地都是50欧姆。为什么选用这个数值，在伯德电子公司出示的一篇论文中有解释。\n\n是因为既要考虑“损耗最小”，也要考虑能承受“最大击穿功率”。对于空气介质，优先考虑“损耗最小”，要求同轴线缆“屏蔽层内径”与“芯线外径”的最佳比值为3.6（推导过程繁杂，略过），此时线缆特性阻抗为77ω。这一比例下，线缆损耗虽然小，在遇到大功率时，屏蔽层和芯线层会出现击穿。同理，当考虑最大功率容量时，屏蔽层内径与芯线外径之比应为1.65，此时对应的特性阻抗为30ω，此时线缆损耗也比较大。\n\n所以，在传输功率不大的弱信号下（譬如电视信号），为计算简便，采用了75欧来作为低于77欧的最小损耗点。而50欧是77和30的平均近似，是最小损耗和最大功率容量之间的折中值。即，50欧能比70欧有更大承载功率。\n\n\n# 1/4 波长阻抗变换器\n\n\n# 说明\n\n天线高度为辐射信号波长的四分之一时，天线的辐射能力最强。根据传输线的理论，1/4波长的开路线相当于一个串联谐振电路，使得整个负载呈现纯电阻性，有利于增强天线的辐射能力。\n\n对于一个端接实数负载的射频电路，我们可以接一段1/4波长特定阻抗 z1 的传输线将负载阻抗 rl 变换到和馈线阻抗 z0 一样的输入阻抗 zin，以满足阻抗匹配的要求。\n\n\n\n这段1/4波长阻抗变换器的阻抗 z1 可以由下面公式计算得出：\n\nz1=z0rl z_{1}=\\sqrt{z_{0}r_{l}} z1 =z0 rl\n\n也就是说通过这个阻抗变换器，我们把负载阻抗 rl 变换成和馈线阻抗 z0 一样了。因为与波长相关，这个匹配只是在1/4波长(或者1/4波长的奇数倍)所对应的频率点实现了完全匹配，没有驻波，但是在其他频率点依然是失配的。\n\n\n# 计算\n\n# 阻抗计算\n\n\n\n例：z 1=50 ohm，负载阻抗 z 2=288 欧姆，求在 2.4 ghz 下，使用介电常数为 2.2 厚度 ro5880 的 1.575 mm 芯板，需要的 1/4 波长宽度和长度，以及阻抗？ 解：真空中传播速度为 c=3×108m/sc=3\\times10^{8} m/sc=3×108m/s 在 f=2.4 ghz 频率下，波长为 $$ \\lambda = \\frac{c}{f} = \\frac{3\\times 10^{8}m/s}{2.4ghz} = \\frac{3\\times 10^{8}m/s}{2.4\\times10^{9}hz} = 0.125m $$\n\n1/4 波长为 1/4λ=0.125m4×εe=21.5mm1/4 \\lambda = \\frac{0.125m}{4\\times\\sqrt{\\varepsilon _{e}}} = 21.5mm1/4λ=4×εe 0.125m =21.5mm 1/4 波长处的阻抗为 zto=z1z2=50×288=120ωz_{to}=\\sqrt{z_{1}z_{2}} = \\sqrt{50\\times 288}= 120\\omegazto =z1 z2 =50×288 =120ω 根据阻抗值 120和材料介电常数 2.2，铜厚 35 um， 计算出 1/4 波长处的宽度 0.848 mm\n\n# 贴片计算\n\n工作频率：f 相对介电常数：εr\\varepsilon_{r}εr 有效介电常数：εe\\varepsilon_{e}εe 光速：c=3×108m/sc=3\\times 10^{8}m/sc=3×108m/s 贴片宽度 w：\n\nw=c2f(εr+12)−12 w=\\frac{c}{2f} (\\frac{\\varepsilon_{r}+1}{2})^{-\\frac{1}{2} } w=2fc (2εr +1 )−21\n\n贴片长度一般取 λe/2\\lambda_{e}/2λe /2，λe\\lambda_{e}λe 为介质内的导波波长 考虑到边缘缩短效应，实际贴片长度 l 应为：\n\nl=c2fεe−2δl l=\\frac{c}{2f\\sqrt{\\varepsilon_{e}}} - 2\\delta l l=2fεe c −2δl\n\n式中， 等效辐射缝隙长度：\n\nδl=0.412h(εe+0.3)(wh+0.264)(εe−0.258)(wh+0.8) \\delta l=0.412h\\frac{(\\varepsilon_{e}+0.3)(\\frac{w}{h}+0.264)}{(\\varepsilon_{e}-0.258)(\\frac{w}{h}+0.8 )} δl=0.412h(εe −0.258)(hw +0.8)(εe +0.3)(hw +0.264)\n\n有效介电常数：\n\nεe=εr+12+εr−12(1+12hw)−12 \\varepsilon_{e}=\\frac{\\varepsilon_{r}+1}{2}+\\frac{\\varepsilon_{r}-1}{2}(1+\\frac{12h}{w})^{-\\frac{1}{2} } εe =2εr +1 +2εr −1 (1+w12h )−21\n\n输入阻抗为 50ω50\\omega50ω 时馈电点的近似位置（距贴片长 l 的中心）：\n\nxf=l2ξre x_{f}=\\frac{l}{2\\sqrt{\\xi_{re} } } xf =2ξre l\n\n式中，\n\nξre(l)=εr+12+εr−12(1+12hl)−12 \\xi_{re}(l)=\\frac{\\varepsilon_{r}+1}{2}+ \\frac{\\varepsilon_{r}-1}{2}(1+\\frac{12h}{l})^{-\\frac{1}{2} } ξre (l)=2εr +1 +2εr −1 (1+l12h )−21\n\n介质板长宽取贴片长宽的 2 倍，也可加上 6 倍的介质厚度：\n\n辐射边界表面距辐射体 ≥λ4\\ge \\frac{\\lambda }{4}≥4λ\n\n\n# hfss仿真实例\n\n\n# 计算公式\n\nw: 贴片宽度\n\nλ\\lambdaλ: 波长\n\nrinr_{in}rin ：贴片输入端阻抗\n\ng={w290λ02    w≤λ0w2120λ02    w>λ0(1) g=\\left\\{\\begin{matrix} \\frac{w^{2}}{90\\lambda_{0}^{2}} \\ \\ \\ \\ w\\le\\lambda_{0} & \\\\ \\frac{w^{2}}{120\\lambda_{0}^{2}} \\ \\ \\ \\ w>\\lambda_{0} & \\end{matrix}\\right. \\tag{1} g={90λ02 w2     w≤λ0 120λ02 w2     w>λ0 (1)\nyin=2g(2) y_{in}=2g \\tag{2} yin =2g(2)\nrin=1yin(3) r_{in}=\\frac{1}{y_{in}} \\tag{3} rin =yin 1 (3)\nzt0=50×rin(4) z_{t0}=\\sqrt{50\\times r_{in}} \\tag{4} zt0 =50×rin (4)\n\n\n# 参数计算\n\n求解：2.4 ghz，ro 5880，dk 2.2，厚度 1.575 mm， 贴片 41.4 x 49.4 mm， 根据上述公式计算得 λ=125mm\\lambda =125 mmλ=125mm rin≈288ωrin\\approx288\\omegarin≈288ω zt0=50×rin=120ωz_{t 0}=\\sqrt{50\\times r_{in}}=120\\omegazt0 =50×rin =120ω 根据图知 z1=50ω  zto=120ω  z2=rin=288ωz_{1}=50\\omega\\ \\ z_{to}=120\\omega \\ \\ z_{2}=r_{in}=288\\omegaz1 =50ω  zto =120ω  z2 =rin =288ω 计算宽度 z1=4.8mm  zto=0.86mmz_{1}=4.8mm\\ \\ z_{to}=0.86mmz1 =4.8mm  zto =0.86mm",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"射频有源器件之射频开关",frontmatter:{title:"射频有源器件之射频开关",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/switch/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/14.%E5%B0%84%E9%A2%91%E6%9C%89%E6%BA%90%E5%99%A8%E4%BB%B6%E4%B9%8B%E5%B0%84%E9%A2%91%E5%BC%80%E5%85%B3.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/14.射频有源器件之射频开关.md",key:"v-d5337ff2",path:"/hardware/si/switch/",headers:[{level:2,title:"一. RF Switch 的作用",slug:"一-rf-switch-的作用",normalizedTitle:"一. rf switch 的作用",charIndex:53},{level:2,title:"二. RF Switch的分类",slug:"二-rf-switch的分类",normalizedTitle:"二. rf switch的分类",charIndex:218},{level:2,title:"三. RF Switch的重要参数",slug:"三-rf-switch的重要参数",normalizedTitle:"三. rf switch的重要参数",charIndex:600},{level:3,title:"1. Frequency Range",slug:"_1-frequency-range",normalizedTitle:"1. frequency range",charIndex:622},{level:3,title:"2. Insert loss",slug:"_2-insert-loss",normalizedTitle:"2. insert loss",charIndex:657},{level:3,title:"3. Isolation",slug:"_3-isolation",normalizedTitle:"3. isolation",charIndex:727},{level:3,title:"4. RF rise time/fall time",slug:"_4-rf-rise-time-fall-time",normalizedTitle:"4. rf rise time/fall time",charIndex:776},{level:3,title:"5. Switching time",slug:"_5-switching-time",normalizedTitle:"5. switching time",charIndex:856},{level:3,title:"6. Power capacity",slug:"_6-power-capacity",normalizedTitle:"6. power capacity",charIndex:960},{level:2,title:"四. RF Switch切换时间的测试方法",slug:"四-rf-switch切换时间的测试方法",normalizedTitle:"四. rf switch切换时间的测试方法",charIndex:1017}],headersStr:"一. RF Switch 的作用 二. RF Switch的分类 三. RF Switch的重要参数 1. Frequency Range 2. Insert loss 3. Isolation 4. RF rise time/fall time 5. Switching time 6. Power capacity 四. RF Switch切换时间的测试方法",content:'【转载】 射频工程师工作笔记——第三讲 射频有源器件之射频开关 - 知乎 (zhihu.com)\n\n\n# 一. RF Switch 的作用\n\n射频开关（RF Switch）是射频电路中的常用器件，用于实现不同信号路径的切换，包括接收与发射、不同频段、不同天线间的切换等，被广泛应用于手机、基站、卫星通信等系统，有利于共用天线、节省成本。\n\n主要供应厂商有Skyworks、Qorvo、NXP、Infineon、Murata等。\n\n\n# 二. RF Switch的分类\n\n· 机械开关(Mechanical)\n\n可制成波导或同轴线形式，功率高但笨重且速度较慢；\n\n· 固态开关(Solid-State)\n\n开关速度快、尺寸小，更易集成应用。\n\n多采用半导体器件，如PIN二极管（利用其直流正-反偏压下呈现近似导通或断开的阻抗特性）、场效应管（如GaN HEMT、MOSFET，利用其饱和区低阻导通，截止区高阻关断的特性）来实现。晶体管在on状态可近似等效为一个电阻Ron，Ron决定了开关损耗的大小；在off状态可近似等效为一个电容Coff，Coff的存在会造成信号的泄露，决定了开关隔离的大小。Ron与Coff都是越小越好。\n\n此外，根据不同的应用场景，射频开关还经常会被分为nPmT（n刀m掷），如SPST（单刀单掷）、SPDT（单刀双掷）、SP3T（单刀三掷）、SP4T（单刀四掷）\n\n\n\n\n# 三. RF Switch的重要参数\n\n\n# 1. Frequency Range\n\n正常工作的频率范围。\n\n\n# 2. Insert loss\n\n插入损耗，指射频开关在导通时对信号的衰减程度。插入损耗会直接导致系统噪声系数的增大，差损越小越好。\n\n\n# 3. Isolation\n\n隔离度，指射频开关在断开时对信号的抑制程度。隔离度越高越好。\n\n\n# 4. RF rise time/fall time\n\n瞬变时间，指导通时RF输出从10%增加到90%或断开时RF输出从90%减少到10%所需要的时间。\n\n\n# 5. Switching time\n\n切换时间，通常指开断时控制电压达到其50%至射频输出达到其90%所需的时间（以datasheet为准）。高功率开关可达几uS级，低功率高速开关可达几nS级。\n\n\n\n\n# 6. Power capacity\n\n功率容量，指开关在不降低性能的情况下，所能承受的最大射频输入功率。\n\n\n# 四. RF Switch切换时间的测试方法\n\n· 法一：频谱仪法\n\n扫频范围设置为零扫频"Zero Span"，触发方式设置为"RF Burst", 根据信号设置合适的RBW和VBW，用频谱仪的"Spectrum View" 的瞬态分析功能直接显示 Magnitude vs Time。\n\n\n\n· 法二：示波器法\n\n如图所示，信号源提供CW信号馈入开关，控制电路（周期方波即可，周期要大于开关切换时间）在控制开关切换的同时，也给示波器提供一路触发信号作为时间参考。在示波器侧通过比较外触发信号与射频输出包络信号之间的延迟，便可以确定切换时间。\n\n\n\n下面给出一些射频开关的datasheet.\n\n\n\n\n\n',normalizedContent:'【转载】 射频工程师工作笔记——第三讲 射频有源器件之射频开关 - 知乎 (zhihu.com)\n\n\n# 一. rf switch 的作用\n\n射频开关（rf switch）是射频电路中的常用器件，用于实现不同信号路径的切换，包括接收与发射、不同频段、不同天线间的切换等，被广泛应用于手机、基站、卫星通信等系统，有利于共用天线、节省成本。\n\n主要供应厂商有skyworks、qorvo、nxp、infineon、murata等。\n\n\n# 二. rf switch的分类\n\n· 机械开关(mechanical)\n\n可制成波导或同轴线形式，功率高但笨重且速度较慢；\n\n· 固态开关(solid-state)\n\n开关速度快、尺寸小，更易集成应用。\n\n多采用半导体器件，如pin二极管（利用其直流正-反偏压下呈现近似导通或断开的阻抗特性）、场效应管（如gan hemt、mosfet，利用其饱和区低阻导通，截止区高阻关断的特性）来实现。晶体管在on状态可近似等效为一个电阻ron，ron决定了开关损耗的大小；在off状态可近似等效为一个电容coff，coff的存在会造成信号的泄露，决定了开关隔离的大小。ron与coff都是越小越好。\n\n此外，根据不同的应用场景，射频开关还经常会被分为npmt（n刀m掷），如spst（单刀单掷）、spdt（单刀双掷）、sp3t（单刀三掷）、sp4t（单刀四掷）\n\n\n\n\n# 三. rf switch的重要参数\n\n\n# 1. frequency range\n\n正常工作的频率范围。\n\n\n# 2. insert loss\n\n插入损耗，指射频开关在导通时对信号的衰减程度。插入损耗会直接导致系统噪声系数的增大，差损越小越好。\n\n\n# 3. isolation\n\n隔离度，指射频开关在断开时对信号的抑制程度。隔离度越高越好。\n\n\n# 4. rf rise time/fall time\n\n瞬变时间，指导通时rf输出从10%增加到90%或断开时rf输出从90%减少到10%所需要的时间。\n\n\n# 5. switching time\n\n切换时间，通常指开断时控制电压达到其50%至射频输出达到其90%所需的时间（以datasheet为准）。高功率开关可达几us级，低功率高速开关可达几ns级。\n\n\n\n\n# 6. power capacity\n\n功率容量，指开关在不降低性能的情况下，所能承受的最大射频输入功率。\n\n\n# 四. rf switch切换时间的测试方法\n\n· 法一：频谱仪法\n\n扫频范围设置为零扫频"zero span"，触发方式设置为"rf burst", 根据信号设置合适的rbw和vbw，用频谱仪的"spectrum view" 的瞬态分析功能直接显示 magnitude vs time。\n\n\n\n· 法二：示波器法\n\n如图所示，信号源提供cw信号馈入开关，控制电路（周期方波即可，周期要大于开关切换时间）在控制开关切换的同时，也给示波器提供一路触发信号作为时间参考。在示波器侧通过比较外触发信号与射频输出包络信号之间的延迟，便可以确定切换时间。\n\n\n\n下面给出一些射频开关的datasheet.\n\n\n\n\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"电磁波中的波段划分",frontmatter:{title:"电磁波中的波段划分",date:"2024-01-27T21:00:00.000Z",permalink:"/hardware/si/wave/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/04.%E7%94%B5%E7%A3%81%E6%B3%A2%E4%B8%AD%E7%9A%84%E6%B3%A2%E6%AE%B5%E5%88%92%E5%88%86.html",relativePath:"03.硬件知识/02.信号完整性/04.电磁波中的波段划分.md",key:"v-966d118e",path:"/hardware/si/wave/",headersStr:null,content:"(IEEE 标准 521-1984)\n\n波段          频率 (GHZ)   自由空间内波长 (CM)   波段   频率 (GHZ)   自由空间内波长 (CM)\nL           1-2        30-15          V    40-75      0.75-0.40\nS           2-4        15-7.5         W    75-110     0.40-0.27\nC           4-8        7.5-3.8                        \nX           8-12       3.8-2.5                        \nKuK_{u}Ku   12-18      2.5-1.7                        \nK           18-27      1.7-1.1                        \nKaK_{a}Ka   27-40      1.1-0.75                       \n\n新的频段划分\n\n频段定义    频率               频段定义   频率\nI 波段    UP to 200 MHz    Q 波段   33 to 50 GHz\nG 波段    200 to 250 MHz   U 波段   40 to 60 GHz\nP 波段    250 to 500 MHz   V 波段   50 to 75 GHz\nL 波段    0.5 to 1.5 GHz   E 波段   60 to 90 GHz\nS 波段    2 to 4 GHz       W 波段   75 to 110 GHz\nC 波段    4 to 8 GHz       F 波段   90 to 140 GHz\nX 波段    8 to 12 GHz      D 波段   110 to 170 GHz\nKu 波段   12.4 to 18 GHz   G 波段   140 to 220 GHz\nK 波段    18 to 26.5 GHz          \nKa 波段   26.5 to 40 GHz          \n\n电子战频段划分\n\n频率定义   频率（MHZ）        带宽（MHZ）\nA 波段   0-250          15\nB 波段   250-500        25\nC 波段   500-1000       50\nD 波段   1000-2000      100\nE 波段   2000-3000      100\nF 波段   3000-4000      100\nG 波段   4000-6000      200\nH 波段   6000-8000      200\nI 波段   8000-10000     200\nJ 波段   10000-20000    1000\nK 波段   20000-40000    2000\nL 波段   40000-60000    4000\nM 波段   60000-100000   4000",normalizedContent:"(ieee 标准 521-1984)\n\n波段          频率 (ghz)   自由空间内波长 (cm)   波段   频率 (ghz)   自由空间内波长 (cm)\nl           1-2        30-15          v    40-75      0.75-0.40\ns           2-4        15-7.5         w    75-110     0.40-0.27\nc           4-8        7.5-3.8                        \nx           8-12       3.8-2.5                        \nkuk_{u}ku   12-18      2.5-1.7                        \nk           18-27      1.7-1.1                        \nkak_{a}ka   27-40      1.1-0.75                       \n\n新的频段划分\n\n频段定义    频率               频段定义   频率\ni 波段    up to 200 mhz    q 波段   33 to 50 ghz\ng 波段    200 to 250 mhz   u 波段   40 to 60 ghz\np 波段    250 to 500 mhz   v 波段   50 to 75 ghz\nl 波段    0.5 to 1.5 ghz   e 波段   60 to 90 ghz\ns 波段    2 to 4 ghz       w 波段   75 to 110 ghz\nc 波段    4 to 8 ghz       f 波段   90 to 140 ghz\nx 波段    8 to 12 ghz      d 波段   110 to 170 ghz\nku 波段   12.4 to 18 ghz   g 波段   140 to 220 ghz\nk 波段    18 to 26.5 ghz          \nka 波段   26.5 to 40 ghz          \n\n电子战频段划分\n\n频率定义   频率（mhz）        带宽（mhz）\na 波段   0-250          15\nb 波段   250-500        25\nc 波段   500-1000       50\nd 波段   1000-2000      100\ne 波段   2000-3000      100\nf 波段   3000-4000      100\ng 波段   4000-6000      200\nh 波段   6000-8000      200\ni 波段   8000-10000     200\nj 波段   10000-20000    1000\nk 波段   20000-40000    2000\nl 波段   40000-60000    4000\nm 波段   60000-100000   4000",charsets:{cjk:!0},lastUpdated:"2024/03/06, 15:54:00",lastUpdatedTimestamp:170971164e4},{title:"HFSS端口区分",frontmatter:{title:"HFSS端口区分",date:"2024-03-06T21:00:00.000Z",permalink:"/hardware/si/hfss/port",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/05.HFSS%E7%AB%AF%E5%8F%A3%E5%8C%BA%E5%88%86.html",relativePath:"03.硬件知识/02.信号完整性/05.HFSS端口区分.md",key:"v-6be6cc3c",path:"/hardware/si/hfss/port/",headers:[{level:2,title:"激励端口设置",slug:"激励端口设置",normalizedTitle:"激励端口设置",charIndex:15},{level:3,title:"端口定义",slug:"端口定义",normalizedTitle:"端口定义",charIndex:63},{level:3,title:"波端口激励设置——HFSS",slug:"波端口激励设置-hfss",normalizedTitle:"波端口激励设置——hfss",charIndex:334},{level:4,title:"模式驱动求解类型——操作",slug:"模式驱动求解类型-操作",normalizedTitle:"模式驱动求解类型——操作",charIndex:443},{level:4,title:"终端驱动求解类型——操作",slug:"终端驱动求解类型-操作",normalizedTitle:"终端驱动求解类型——操作",charIndex:699},{level:4,title:"同轴线波端口积分线设置",slug:"同轴线波端口积分线设置",normalizedTitle:"同轴线波端口积分线设置",charIndex:818},{level:3,title:"集总端口激励设置",slug:"集总端口激励设置",normalizedTitle:"集总端口激励设置",charIndex:890},{level:4,title:"模式驱动求解类型——操作",slug:"模式驱动求解类型-操作-2",normalizedTitle:"模式驱动求解类型——操作",charIndex:443},{level:4,title:"终端驱动求解类型——操作",slug:"终端驱动求解类型-操作-2",normalizedTitle:"终端驱动求解类型——操作",charIndex:699},{level:2,title:"波端口和集总端口的区别",slug:"波端口和集总端口的区别",normalizedTitle:"波端口和集总端口的区别",charIndex:1298}],headersStr:"激励端口设置 端口定义 波端口激励设置——HFSS 模式驱动求解类型——操作 终端驱动求解类型——操作 同轴线波端口积分线设置 集总端口激励设置 模式驱动求解类型——操作 终端驱动求解类型——操作 波端口和集总端口的区别",content:"[转载] HFSS学习记录——激励端口设置-波导端口/集总端口_hfss激励端口-CSDN博客\n\n\n# 激励端口设置\n\n\n# 端口定义\n\nHFSS 中定义多种激励方式 主要有波端口激励 (Wave Port)、集总端口激励（Lump Port）、Floquet 端口激励（Floquet Port）、入射波激励（Incident Wave）、电压源激励（Voltage Source）、电流源激励（Current Source）和磁偏置激励（Magnetic Bias）\n\n天线设计中，端口平面的激励方式多设置为波端口激励或者集总端口激励\n\n提示\n\n如果端口平面和背景相接触，激励方式需要设置波端口激励 如果端口平面在模型内部，激励方式需要设置为集总端口激励\n\n\n# 波端口激励设置——HFSS\n\n\n\n天线设计中，模式驱动和终端驱动的区别\n\n模式驱动求解类型是根据导波模式的入射和反射功率来计算 S 参数矩阵的解 终端驱动求解类型是根据传输线终端的电压和电流来计算S参数矩阵的解\n\n# 模式驱动求解类型——操作\n\n 1. 设置一个平面,平面的尺寸，不包含接地平面 假设微带线的线宽为 w，介质层厚度为 h， 波端口的高度一般设置为6～10h 当w≥h时，波端口的宽度一般设置为10w 当w < h时，波端口的宽度一般设置5w或者3～4h\n\n2.设置波导端口激励\n\n设置波端口激励方式是，需要设定端口的积分线(Integration Line) 目的： 确定电场的方向，积分线的箭头指向即为电场的正方向 设定端口电压的积分路径，用于计算端口电压等参数\n\n\n\n归一化阻抗（50Ω） 3.完成设置\n\n# 终端驱动求解类型——操作\n\n1.设置一个平面 与上文波导端口设置一样 2.端口设置（前提: 设置求解方式为终端求解） 要求用户指定终端线的参考导体，对于常用的微带线结构通常是把参考地面 GND 最为终端线的参考导体，即选中 gnd\n\n# 同轴线波端口积分线设置\n\n\n\n同轴电缆波端口的积分线展示在图中的红线 积分线是在最大电位差的两点之间绘制，即内导体外侧和外导体内侧之间\n\n\n# 集总端口激励设置\n\n集总激励端口（Lumped Port）类似于传统的波端口激励，与波端口激励不同的是集总端口激励需要设置在物体模型内部，且用户必须设定端口阻抗。\n\n集总端口直接在端口处计算 S 参数设定的端口阻抗为集总端口上 S 参数的参考阻抗。\n\n集总端口不计算端口处的传播常数。\n\n# 模式驱动求解类型——操作\n\n1.设置一个平面\n\n2.设置集总端口 选择指定端口的表面，然后点击 HFSS>Excitations>Assign>Lumped Port 打开Lumped Port: General  对话框，并定义端口阻抗 点击 下一页   到达 Lumped Port: Modes 对话框 Notes：由于集总端口只能仿真一种模式，故其 Number of Modes 不能够编辑 积分线设置与波导端口中的设置一样\n\n# 终端驱动求解类型——操作\n\n与波导端口设置一样，不同的是端口的平面的大小\n\n\n# 波端口和集总端口的区别\n\n",normalizedContent:"[转载] hfss学习记录——激励端口设置-波导端口/集总端口_hfss激励端口-csdn博客\n\n\n# 激励端口设置\n\n\n# 端口定义\n\nhfss 中定义多种激励方式 主要有波端口激励 (wave port)、集总端口激励（lump port）、floquet 端口激励（floquet port）、入射波激励（incident wave）、电压源激励（voltage source）、电流源激励（current source）和磁偏置激励（magnetic bias）\n\n天线设计中，端口平面的激励方式多设置为波端口激励或者集总端口激励\n\n提示\n\n如果端口平面和背景相接触，激励方式需要设置波端口激励 如果端口平面在模型内部，激励方式需要设置为集总端口激励\n\n\n# 波端口激励设置——hfss\n\n\n\n天线设计中，模式驱动和终端驱动的区别\n\n模式驱动求解类型是根据导波模式的入射和反射功率来计算 s 参数矩阵的解 终端驱动求解类型是根据传输线终端的电压和电流来计算s参数矩阵的解\n\n# 模式驱动求解类型——操作\n\n 1. 设置一个平面,平面的尺寸，不包含接地平面 假设微带线的线宽为 w，介质层厚度为 h， 波端口的高度一般设置为6～10h 当w≥h时，波端口的宽度一般设置为10w 当w < h时，波端口的宽度一般设置5w或者3～4h\n\n2.设置波导端口激励\n\n设置波端口激励方式是，需要设定端口的积分线(integration line) 目的： 确定电场的方向，积分线的箭头指向即为电场的正方向 设定端口电压的积分路径，用于计算端口电压等参数\n\n\n\n归一化阻抗（50ω） 3.完成设置\n\n# 终端驱动求解类型——操作\n\n1.设置一个平面 与上文波导端口设置一样 2.端口设置（前提: 设置求解方式为终端求解） 要求用户指定终端线的参考导体，对于常用的微带线结构通常是把参考地面 gnd 最为终端线的参考导体，即选中 gnd\n\n# 同轴线波端口积分线设置\n\n\n\n同轴电缆波端口的积分线展示在图中的红线 积分线是在最大电位差的两点之间绘制，即内导体外侧和外导体内侧之间\n\n\n# 集总端口激励设置\n\n集总激励端口（lumped port）类似于传统的波端口激励，与波端口激励不同的是集总端口激励需要设置在物体模型内部，且用户必须设定端口阻抗。\n\n集总端口直接在端口处计算 s 参数设定的端口阻抗为集总端口上 s 参数的参考阻抗。\n\n集总端口不计算端口处的传播常数。\n\n# 模式驱动求解类型——操作\n\n1.设置一个平面\n\n2.设置集总端口 选择指定端口的表面，然后点击 hfss>excitations>assign>lumped port 打开lumped port: general  对话框，并定义端口阻抗 点击 下一页   到达 lumped port: modes 对话框 notes：由于集总端口只能仿真一种模式，故其 number of modes 不能够编辑 积分线设置与波导端口中的设置一样\n\n# 终端驱动求解类型——操作\n\n与波导端口设置一样，不同的是端口的平面的大小\n\n\n# 波端口和集总端口的区别\n\n",charsets:{cjk:!0},lastUpdated:"2024/03/06, 17:30:12",lastUpdatedTimestamp:1709717412e3},{title:"设计方法",frontmatter:{title:"设计方法",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/way/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/01.%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95.html",relativePath:"03.硬件知识/03.原理模块设计/01.设计方法.md",key:"v-53009be3",path:"/hardware/use/way/",headers:[{level:2,title:"看芯片手册",slug:"看芯片手册",normalizedTitle:"看芯片手册",charIndex:2},{level:2,title:"官网手册，Demo板和规范",slug:"官网手册-demo板和规范",normalizedTitle:"官网手册，demo板和规范",charIndex:14},{level:2,title:"相关资料",slug:"相关资料",normalizedTitle:"相关资料",charIndex:179},{level:2,title:"视频教程",slug:"视频教程",normalizedTitle:"视频教程",charIndex:194},{level:2,title:"各模块资料整合",slug:"各模块资料整合",normalizedTitle:"各模块资料整合",charIndex:217}],headersStr:"看芯片手册 官网手册，Demo板和规范 相关资料 视频教程 各模块资料整合",content:"# 看芯片手册\n\n\n\n\n# 官网手册，Demo板和规范\n\nwww.xilinx.com/power\n\nwww.xilinx.com/productors/intellectual-property/clicking_wizard.htm\n\nxilinx.eetrend.com 电子创新网赛灵思社区\n\nwww.t-firefly.com 瑞芯微电子\n\n\n# 相关资料\n\n\n\n\n\n\n\n\n# 视频教程\n\n张飞硬件，正点原子，B站\n\n\n# 各模块资料整合",normalizedContent:"# 看芯片手册\n\n\n\n\n# 官网手册，demo板和规范\n\nwww.xilinx.com/power\n\nwww.xilinx.com/productors/intellectual-property/clicking_wizard.htm\n\nxilinx.eetrend.com 电子创新网赛灵思社区\n\nwww.t-firefly.com 瑞芯微电子\n\n\n# 相关资料\n\n\n\n\n\n\n\n\n# 视频教程\n\n张飞硬件，正点原子，b站\n\n\n# 各模块资料整合",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"以太网设计",frontmatter:{title:"以太网设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/eth/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/02.%E4%BB%A5%E5%A4%AA%E7%BD%91%E8%AE%BE%E8%AE%A1.html",relativePath:"03.硬件知识/03.原理模块设计/02.以太网设计.md",key:"v-668b5aae",path:"/hardware/use/eth/",headers:[{level:2,title:"以太网概述",slug:"以太网概述",normalizedTitle:"以太网概述",charIndex:2},{level:2,title:"常用电路设计",slug:"常用电路设计",normalizedTitle:"常用电路设计",charIndex:30},{level:2,title:"PCB规范",slug:"pcb规范",normalizedTitle:"pcb规范",charIndex:41}],headersStr:"以太网概述 常用电路设计 PCB规范",content:"# 以太网概述\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 常用电路设计\n\n\n# PCB规范\n\n",normalizedContent:"# 以太网概述\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 常用电路设计\n\n\n# pcb规范\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"射频有源器件之混频器",frontmatter:{title:"射频有源器件之混频器",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/Mixer/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/02.%E4%BF%A1%E5%8F%B7%E5%AE%8C%E6%95%B4%E6%80%A7/01.%E5%B0%84%E9%A2%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/15.%E5%B0%84%E9%A2%91%E6%9C%89%E6%BA%90%E5%99%A8%E4%BB%B6%E4%B9%8B%E6%B7%B7%E9%A2%91%E5%99%A8.html",relativePath:"03.硬件知识/02.信号完整性/01.射频工程师工作笔记/15.射频有源器件之混频器.md",key:"v-f86c7022",path:"/hardware/si/Mixer/",headers:[{level:2,title:"一. 混频器的原理",slug:"一-混频器的原理",normalizedTitle:"一. 混频器的原理",charIndex:52},{level:2,title:"二. 混频器的性能参数",slug:"二-混频器的性能参数",normalizedTitle:"二. 混频器的性能参数",charIndex:357},{level:2,title:"三. 混频器的分类",slug:"三-混频器的分类",normalizedTitle:"三. 混频器的分类",charIndex:1223},{level:3,title:"· 二极管无源双平衡混频器",slug:"·-二极管无源双平衡混频器",normalizedTitle:"· 二极管无源双平衡混频器",charIndex:1666},{level:3,title:"· 吉尔伯特（Gilbert）有源双平衡混频器",slug:"·-吉尔伯特-gilbert-有源双平衡混频器",normalizedTitle:"· 吉尔伯特（gilbert）有源双平衡混频器",charIndex:1698}],headersStr:"一. 混频器的原理 二. 混频器的性能参数 三. 混频器的分类 · 二极管无源双平衡混频器 · 吉尔伯特（Gilbert）有源双平衡混频器",content:"【转载】 射频工程师工作笔记——第三讲 射频有源器件之混频器 - 知乎 (zhihu.com)\n\n\n# 一. 混频器的原理\n\n混频器通常也被称为频率转换设备，实现输入信号的上变频（Upper Sideband, USB）或下变频（Lower Sideband, LSB），被广泛应用于无线通信系统中的频率转换、频率合成、调制解调。\n\n混频器是一个三端口器件，两端口输入，一端口输出。基于二极管或晶体管的非线性原理，将两个不同频率的输入信号转变成一系列不同频率的输出信号。理想的输出频率为两个输入频率的和频、差频信号，如下图所示。实际上输出除了和频、差频信号外，还有谐波等各种频率组合，通过选择合适的偏置电压及输入功率和利用滤波器来选取所需的频率分量。混频器可通过乘积法和叠加法来实现。\n\n\n\n\n\n\n\n\n\n\n\n\n# 二. 混频器的性能参数\n\n1. RF，IF，LO Frequency\n\n2. LO Power（本振激励功率）\n\n混频器的指标受本振功率控制，本振功率是指最佳工作状态时所需的本振功率。若本振功率不够，就会降低混频器的性能，甚至使混频器无法工作。因此，混频器要求给出本振功率的参数，以dBm为单位。实际使用的混频器也是按本振功率进行分类，如7dBm、10dBm LO等。\n\n3. Conversion Loss/Gain（变频损耗/增益）\n\n变频损耗指混频器输入信号功率PRF与输出中频信号功率PIF之比，单位dB\n\nCL =10log(PRF/PIF)\n\n对于双极晶体管和场效应晶体管，多用上述比值的倒数来定义射频增益CG。\n\n4. Noise Factor（噪声系数）\n\n噪声系数定义为混频器输入端的信噪比与输出端的信噪比：\n\n\n\nPn_out 输出端噪声功率，CG 变频增益，Pn_in 输入端噪声功率。\n\n5. Isolation（端口间隔离度）\n\nLO、RF、IF端口的频率不同，端口隔离度定义为一个端口的输入信号与其他端口得到的该频率信号功率的衰减量，以dB为单位，一般要高于20dB。端口隔离度包括3项，分别是信号与本振之间的隔离度、信号与中频之间的隔离度、本振与中频之间的隔离度。\n\n\n\n6. Conversion compression（变频压缩）\n\n通常用P1dB来表征，指变频增益下降1dB时对应的输出功率值。压缩点越高意味着输出功率越高。但为了防止输出信号产生失真，必须对压缩点进行相应的限制。\n\n7. Dynamic Range（动态范围）\n\n定义为1dB压缩点与混频器的噪声基底之比，单位dB。\n\n8. Third-order Intercept Point（三阶交调截点）\n\n表征线性度或失真性能的参数，IIP3越高表示线性度越好、失真越小。\n\n\n\n9. 回波损耗\n\n通常情况下，射频RF输出信号不是全部输出的，会有一部分信号被反射回到发射端。这种反射性能的大小可以用回波损耗来描述。单位dB。\n\n\n# 三. 混频器的分类\n\n· 无源混频器：单端平衡混频器、单平衡混频器、双平衡混频器、三平衡混频器等。\n\n无源混频器不用外加电源，用二极管制作（以肖特基二极管为主），结构简单、成本低、存在转换损耗，没有增益，噪声系数等于转换损耗。\n\n· 有源混频器：单端平衡器、单平衡和双平衡混频器。\n\n有源混频器需要外加电源，使用双极晶体管（BJTs）或场效应晶体管（FETs），具有较高的转换增益，有良好的隔离。\n\n举例 ——\n\n下图（a）就是用单个肖特基二极管构成的单端混频器。射频信号和本振信号被加到一个适当偏置的二极管上，二极管后面连了一个谐振频率等于所需中频频率的谐振电路。图（b）是采用场效应晶体管的混频器，与二极管不同，场效应晶体管能对输入的射频信号和本振信号进行放大。\n\n\n\n在线性度、噪声系数和端口隔离各方面，双平衡混频器表现出最佳的整体性能。下面分别给出二极管无源双平衡混频器和Gilbert有源双平衡混频器的详细推导过程，看着公式很多，实际不难，不要怕，自己推导一遍试试。\n\n\n# · 二极管无源双平衡混频器\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# · 吉尔伯特（Gilbert）有源双平衡混频器\n\n\n\n\n\n\n\n\n\n实际工程中，混频器也经常和振荡器、PLL（锁相环）、VCO（压控振荡器）、倍频器、增益模块、检波器等器件集成在同一封装或芯片中。如图为一个双平衡的混频器及振荡器原理图及datasheet。\n\n",normalizedContent:"【转载】 射频工程师工作笔记——第三讲 射频有源器件之混频器 - 知乎 (zhihu.com)\n\n\n# 一. 混频器的原理\n\n混频器通常也被称为频率转换设备，实现输入信号的上变频（upper sideband, usb）或下变频（lower sideband, lsb），被广泛应用于无线通信系统中的频率转换、频率合成、调制解调。\n\n混频器是一个三端口器件，两端口输入，一端口输出。基于二极管或晶体管的非线性原理，将两个不同频率的输入信号转变成一系列不同频率的输出信号。理想的输出频率为两个输入频率的和频、差频信号，如下图所示。实际上输出除了和频、差频信号外，还有谐波等各种频率组合，通过选择合适的偏置电压及输入功率和利用滤波器来选取所需的频率分量。混频器可通过乘积法和叠加法来实现。\n\n\n\n\n\n\n\n\n\n\n\n\n# 二. 混频器的性能参数\n\n1. rf，if，lo frequency\n\n2. lo power（本振激励功率）\n\n混频器的指标受本振功率控制，本振功率是指最佳工作状态时所需的本振功率。若本振功率不够，就会降低混频器的性能，甚至使混频器无法工作。因此，混频器要求给出本振功率的参数，以dbm为单位。实际使用的混频器也是按本振功率进行分类，如7dbm、10dbm lo等。\n\n3. conversion loss/gain（变频损耗/增益）\n\n变频损耗指混频器输入信号功率prf与输出中频信号功率pif之比，单位db\n\ncl =10log(prf/pif)\n\n对于双极晶体管和场效应晶体管，多用上述比值的倒数来定义射频增益cg。\n\n4. noise factor（噪声系数）\n\n噪声系数定义为混频器输入端的信噪比与输出端的信噪比：\n\n\n\npn_out 输出端噪声功率，cg 变频增益，pn_in 输入端噪声功率。\n\n5. isolation（端口间隔离度）\n\nlo、rf、if端口的频率不同，端口隔离度定义为一个端口的输入信号与其他端口得到的该频率信号功率的衰减量，以db为单位，一般要高于20db。端口隔离度包括3项，分别是信号与本振之间的隔离度、信号与中频之间的隔离度、本振与中频之间的隔离度。\n\n\n\n6. conversion compression（变频压缩）\n\n通常用p1db来表征，指变频增益下降1db时对应的输出功率值。压缩点越高意味着输出功率越高。但为了防止输出信号产生失真，必须对压缩点进行相应的限制。\n\n7. dynamic range（动态范围）\n\n定义为1db压缩点与混频器的噪声基底之比，单位db。\n\n8. third-order intercept point（三阶交调截点）\n\n表征线性度或失真性能的参数，iip3越高表示线性度越好、失真越小。\n\n\n\n9. 回波损耗\n\n通常情况下，射频rf输出信号不是全部输出的，会有一部分信号被反射回到发射端。这种反射性能的大小可以用回波损耗来描述。单位db。\n\n\n# 三. 混频器的分类\n\n· 无源混频器：单端平衡混频器、单平衡混频器、双平衡混频器、三平衡混频器等。\n\n无源混频器不用外加电源，用二极管制作（以肖特基二极管为主），结构简单、成本低、存在转换损耗，没有增益，噪声系数等于转换损耗。\n\n· 有源混频器：单端平衡器、单平衡和双平衡混频器。\n\n有源混频器需要外加电源，使用双极晶体管（bjts）或场效应晶体管（fets），具有较高的转换增益，有良好的隔离。\n\n举例 ——\n\n下图（a）就是用单个肖特基二极管构成的单端混频器。射频信号和本振信号被加到一个适当偏置的二极管上，二极管后面连了一个谐振频率等于所需中频频率的谐振电路。图（b）是采用场效应晶体管的混频器，与二极管不同，场效应晶体管能对输入的射频信号和本振信号进行放大。\n\n\n\n在线性度、噪声系数和端口隔离各方面，双平衡混频器表现出最佳的整体性能。下面分别给出二极管无源双平衡混频器和gilbert有源双平衡混频器的详细推导过程，看着公式很多，实际不难，不要怕，自己推导一遍试试。\n\n\n# · 二极管无源双平衡混频器\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# · 吉尔伯特（gilbert）有源双平衡混频器\n\n\n\n\n\n\n\n\n\n实际工程中，混频器也经常和振荡器、pll（锁相环）、vco（压控振荡器）、倍频器、增益模块、检波器等器件集成在同一封装或芯片中。如图为一个双平衡的混频器及振荡器原理图及datasheet。\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:30:43",lastUpdatedTimestamp:1706621443e3},{title:"万兆以太网设计",frontmatter:{title:"万兆以太网设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/eth/gbit/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/03.%E4%B8%87%E5%85%86%E4%BB%A5%E5%A4%AA%E7%BD%91%E8%AE%BE%E8%AE%A1.html",relativePath:"03.硬件知识/03.原理模块设计/03.万兆以太网设计.md",key:"v-97f62282",path:"/hardware/use/eth/gbit/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"RS232设计",frontmatter:{title:"RS232设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/rs232/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/04.RS232%E8%AE%BE%E8%AE%A1.html",relativePath:"03.硬件知识/03.原理模块设计/04.RS232设计.md",key:"v-0583b5f8",path:"/hardware/use/rs232/",headers:[{level:2,title:"串口介绍",slug:"串口介绍",normalizedTitle:"串口介绍",charIndex:2}],headersStr:"串口介绍",content:"# 串口介绍\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",normalizedContent:"# 串口介绍\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"RS485设计",frontmatter:{title:"RS485设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/rs485/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/05.RS485%E8%AE%BE%E8%AE%A1.html",relativePath:"03.硬件知识/03.原理模块设计/05.RS485设计.md",key:"v-2ae71202",path:"/hardware/use/rs485/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"CAN设计",frontmatter:{title:"CAN设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/can/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/06.CAN%E8%AE%BE%E8%AE%A1.html",relativePath:"03.硬件知识/03.原理模块设计/06.CAN设计.md",key:"v-2d947180",path:"/hardware/use/can/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"USB转串口",frontmatter:{title:"USB转串口",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usb2serialport/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/07.USB%E8%BD%AC%E4%B8%B2%E5%8F%A3.html",relativePath:"03.硬件知识/03.原理模块设计/07.USB转串口.md",key:"v-36fbe97c",path:"/hardware/use/usb2serialport/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"SD卡",frontmatter:{title:"SD卡",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/sd/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/08.SD%E5%8D%A1.html",relativePath:"03.硬件知识/03.原理模块设计/08.SD卡.md",key:"v-7d8f6dd8",path:"/hardware/use/sd/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"红外",frontmatter:{title:"红外",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/infrared/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/10.%E7%BA%A2%E5%A4%96.html",relativePath:"03.硬件知识/03.原理模块设计/10.红外.md",key:"v-b62eeb40",path:"/hardware/use/infrared/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"蜂鸣器",frontmatter:{title:"蜂鸣器",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/beep/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/09.%E8%9C%82%E9%B8%A3%E5%99%A8.html",relativePath:"03.硬件知识/03.原理模块设计/09.蜂鸣器.md",key:"v-58f458a4",path:"/hardware/use/beep/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"风扇",frontmatter:{title:"风扇",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/fan/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/12.%E9%A3%8E%E6%89%87.html",relativePath:"03.硬件知识/03.原理模块设计/12.风扇.md",key:"v-156cc6db",path:"/hardware/use/fan/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"数字温度湿度传感器",frontmatter:{title:"数字温度湿度传感器",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/temp/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/11.%E6%95%B0%E5%AD%97%E6%B8%A9%E5%BA%A6%E6%B9%BF%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8.html",relativePath:"03.硬件知识/03.原理模块设计/11.数字温度湿度传感器.md",key:"v-7f0effda",path:"/hardware/use/temp/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"HDMI",frontmatter:{title:"HDMI",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/hdmi/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/13.HDMI.html",relativePath:"03.硬件知识/03.原理模块设计/13.HDMI.md",key:"v-d8f3cfbc",path:"/hardware/use/hdmi/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"DVI",frontmatter:{title:"DVI",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/dvi/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/14.DVI.html",relativePath:"03.硬件知识/03.原理模块设计/14.DVI.md",key:"v-5a682088",path:"/hardware/use/dvi/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"VGA",frontmatter:{title:"VGA",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/vga/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/15.VGA.html",relativePath:"03.硬件知识/03.原理模块设计/15.VGA.md",key:"v-5071b594",path:"/hardware/use/vga/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"DP",frontmatter:{title:"DP",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/dp/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/16.DP.html",relativePath:"03.硬件知识/03.原理模块设计/16.DP.md",key:"v-8b4b9bfc",path:"/hardware/use/dp/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"LVDS",frontmatter:{title:"LVDS",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/lvds/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/17.LVDS.html",relativePath:"03.硬件知识/03.原理模块设计/17.LVDS.md",key:"v-4d2d85fc",path:"/hardware/use/lvds/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"LCD",frontmatter:{title:"LCD",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/lcd/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/18.LCD.html",relativePath:"03.硬件知识/03.原理模块设计/18.LCD.md",key:"v-490e56d8",path:"/hardware/use/lcd/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"时钟",frontmatter:{title:"时钟",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/clk/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/19.%E6%97%B6%E9%92%9F.html",relativePath:"03.硬件知识/03.原理模块设计/19.时钟.md",key:"v-61b44b6c",path:"/hardware/use/clk/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"复位",frontmatter:{title:"复位",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/reset/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/20.%E5%A4%8D%E4%BD%8D.html",relativePath:"03.硬件知识/03.原理模块设计/20.复位.md",key:"v-0bb7cad2",path:"/hardware/use/reset/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"EEPROM",frontmatter:{title:"EEPROM",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/eeprom/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/21.EEPROM.html",relativePath:"03.硬件知识/03.原理模块设计/21.EEPROM.md",key:"v-8e84a37c",path:"/hardware/use/eeprom/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"SPI Flash",frontmatter:{title:"SPI Flash",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/spi/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/22.SPI%20Flash.html",relativePath:"03.硬件知识/03.原理模块设计/22.SPI Flash.md",key:"v-63bc3f07",path:"/hardware/use/spi/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"DDR3",frontmatter:{title:"DDR3",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/ddr3/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/23.DDR3.html",relativePath:"03.硬件知识/03.原理模块设计/23.DDR3.md",key:"v-15f8803c",path:"/hardware/use/ddr3/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"DDR4",frontmatter:{title:"DDR4",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/ddr4/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/24.DDR4.html",relativePath:"03.硬件知识/03.原理模块设计/24.DDR4.md",key:"v-b6ec883c",path:"/hardware/use/ddr4/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"SODIMM",frontmatter:{title:"SODIMM",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/sodimm/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/25.SODIMM.html",relativePath:"03.硬件知识/03.原理模块设计/25.SODIMM.md",key:"v-15923fe2",path:"/hardware/use/sodimm/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"QDR",frontmatter:{title:"QDR",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/qdr/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/26.QDR.html",relativePath:"03.硬件知识/03.原理模块设计/26.QDR.md",key:"v-6ec220b6",path:"/hardware/use/qdr/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"EMMC",frontmatter:{title:"EMMC",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/emmc/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/27.EMMC.html",relativePath:"03.硬件知识/03.原理模块设计/27.EMMC.md",key:"v-58e48742",path:"/hardware/use/emmc/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"NAND FLASH",frontmatter:{title:"NAND FLASH",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/nand/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/28.NAND%20FLASH.html",relativePath:"03.硬件知识/03.原理模块设计/28.NAND FLASH.md",key:"v-7d39e2f6",path:"/hardware/use/nand/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"NOR FLASH",frontmatter:{title:"NOR FLASH",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/nor/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/29.NOR%20FLASH.html",relativePath:"03.硬件知识/03.原理模块设计/29.NOR FLASH.md",key:"v-0c03c4a2",path:"/hardware/use/nor/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"JTAG",frontmatter:{title:"JTAG",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/jtag/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/31.JTAG.html",relativePath:"03.硬件知识/03.原理模块设计/31.JTAG.md",key:"v-60cc5aa2",path:"/hardware/use/jtag/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"SDRAM",frontmatter:{title:"SDRAM",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/sdram/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/30.SDRAM.html",relativePath:"03.硬件知识/03.原理模块设计/30.SDRAM.md",key:"v-5a38e6b0",path:"/hardware/use/sdram/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"PS2",frontmatter:{title:"PS2",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/ps2/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/33.PS2.html",relativePath:"03.硬件知识/03.原理模块设计/33.PS2.md",key:"v-d93d5cc4",path:"/hardware/use/ps2/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"SWD",frontmatter:{title:"SWD",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/swd/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/32.SWD.html",relativePath:"03.硬件知识/03.原理模块设计/32.SWD.md",key:"v-0be2f604",path:"/hardware/use/swd/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"USB",frontmatter:{title:"USB",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usb/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/34.USB.html",relativePath:"03.硬件知识/03.原理模块设计/34.USB.md",key:"v-07127d1c",path:"/hardware/use/usb/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"USB HUB",frontmatter:{title:"USB HUB",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usbhub/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/36.USB%20HUB.html",relativePath:"03.硬件知识/03.原理模块设计/36.USB HUB.md",key:"v-3cbcb3c7",path:"/hardware/use/usbhub/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"USB PHY",frontmatter:{title:"USB PHY",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usbphy/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/35.USB%20PHY.html",relativePath:"03.硬件知识/03.原理模块设计/35.USB PHY.md",key:"v-df678a1e",path:"/hardware/use/usbphy/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"USB HOST",frontmatter:{title:"USB HOST",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usbhost/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/37.USB%20HOST.html",relativePath:"03.硬件知识/03.原理模块设计/37.USB HOST.md",key:"v-2efae27f",path:"/hardware/use/usbhost/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"USB3.0",frontmatter:{title:"USB3.0",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usb30/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/38.USB30.html",relativePath:"03.硬件知识/03.原理模块设计/38.USB30.md",key:"v-eb82b1a0",path:"/hardware/use/usb30/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"PCIE转USB",frontmatter:{title:"PCIE转USB",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/pcie2usb/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/39.PCIE%E8%BD%ACUSB.html",relativePath:"03.硬件知识/03.原理模块设计/39.PCIE转USB.md",key:"v-670549ce",path:"/hardware/use/pcie2usb/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"TypeC",frontmatter:{title:"TypeC",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/typec/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/40.TypeC.html",relativePath:"03.硬件知识/03.原理模块设计/40.TypeC.md",key:"v-3fc803b2",path:"/hardware/use/typec/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"音频",frontmatter:{title:"音频",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/audio/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/41.%E9%9F%B3%E9%A2%91.html",relativePath:"03.硬件知识/03.原理模块设计/41.音频.md",key:"v-f3b67386",path:"/hardware/use/audio/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"LED",frontmatter:{title:"LED",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/led/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/42.LED.html",relativePath:"03.硬件知识/03.原理模块设计/42.LED.md",key:"v-d7f1afac",path:"/hardware/use/led/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"SATA",frontmatter:{title:"SATA",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/sata/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/43.SATA.html",relativePath:"03.硬件知识/03.原理模块设计/43.SATA.md",key:"v-e24e9b3c",path:"/hardware/use/sata/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"mSATA",frontmatter:{title:"mSATA",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/msata/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/44.mSATA.html",relativePath:"03.硬件知识/03.原理模块设计/44.mSATA.md",key:"v-391a74ac",path:"/hardware/use/msata/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"M.2 SSD",frontmatter:{title:"M.2 SSD",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/m2/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/45.M2.html",relativePath:"03.硬件知识/03.原理模块设计/45.M2.md",key:"v-a6e0b3bc",path:"/hardware/use/m2/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"PCIe转SATA",frontmatter:{title:"PCIe转SATA",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/pcie2sata/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/46.PCIe%E8%BD%ACSATA.html",relativePath:"03.硬件知识/03.原理模块设计/46.PCIe转SATA.md",key:"v-18040388",path:"/hardware/use/pcie2sata/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"PCIe",frontmatter:{title:"PCIe",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/pcie/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/47.PCIe.html",relativePath:"03.硬件知识/03.原理模块设计/47.PCIe.md",key:"v-2b52b462",path:"/hardware/use/pcie/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"PCIe转串口并口",frontmatter:{title:"PCIe转串口并口",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/pcie2serial/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/48.PCIe%E8%BD%AC%E4%B8%B2%E5%8F%A3%E5%B9%B6%E5%8F%A3.html",relativePath:"03.硬件知识/03.原理模块设计/48.PCIe转串口并口.md",key:"v-7965789e",path:"/hardware/use/pcie2serial/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"PCIe转网口",frontmatter:{title:"PCIe转网口",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/pcie2eth/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/49.PCIe%E8%BD%AC%E7%BD%91%E5%8F%A3.html",relativePath:"03.硬件知识/03.原理模块设计/49.PCIe转网口.md",key:"v-46bd822e",path:"/hardware/use/pcie2eth/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"RGMII",frontmatter:{title:"RGMII",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/rgmii/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/50.RGMII.html",relativePath:"03.硬件知识/03.原理模块设计/50.RGMII.md",key:"v-db5076d4",path:"/hardware/use/rgmii/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"M2-5G-SIM卡",frontmatter:{title:"M2-5G-SIM卡",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/sim/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/51.M2-5G-SIM%E5%8D%A1.html",relativePath:"03.硬件知识/03.原理模块设计/51.M2-5G-SIM卡.md",key:"v-66f148ec",path:"/hardware/use/sim/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"M2-WIFI-蓝牙",frontmatter:{title:"M2-WIFI-蓝牙",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/m2wifi/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/52.M2-WIFI-%E8%93%9D%E7%89%99.html",relativePath:"03.硬件知识/03.原理模块设计/52.M2-WIFI-蓝牙.md",key:"v-3bb07131",path:"/hardware/use/m2wifi/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"WIFI-蓝牙",frontmatter:{title:"WIFI-蓝牙",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/wifi/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/53.WIFI-%E8%93%9D%E7%89%99.html",relativePath:"03.硬件知识/03.原理模块设计/53.WIFI-蓝牙.md",key:"v-a08a6cf2",path:"/hardware/use/wifi/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"MIPI",frontmatter:{title:"MIPI",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/mipi/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/55.MIPI.html",relativePath:"03.硬件知识/03.原理模块设计/55.MIPI.md",key:"v-a0a23c7c",path:"/hardware/use/mipi/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"VPX",frontmatter:{title:"VPX",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/vpx/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/57.VPX.html",relativePath:"03.硬件知识/03.原理模块设计/57.VPX.md",key:"v-2a4ecd88",path:"/hardware/use/vpx/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"摄像头DVP",frontmatter:{title:"摄像头DVP",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/dvp/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/54.%E6%91%84%E5%83%8F%E5%A4%B4DVP.html",relativePath:"03.硬件知识/03.原理模块设计/54.摄像头DVP.md",key:"v-866120c2",path:"/hardware/use/dvp/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"FMC",frontmatter:{title:"FMC",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/fmc/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/03.%E5%8E%9F%E7%90%86%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/56.FMC.html",relativePath:"03.硬件知识/03.原理模块设计/56.FMC.md",key:"v-7a242d02",path:"/hardware/use/fmc/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"电源设计方法",frontmatter:{title:"电源设计方法",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/04.%E5%8E%9F%E7%90%86%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/01.%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95.html",relativePath:"03.硬件知识/04.原理电源设计/01.电源设计方法.md",key:"v-d9f5d5c4",path:"/hardware/use/power/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"ATX",frontmatter:{title:"ATX",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/atx/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/04.%E5%8E%9F%E7%90%86%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/02.ATX.html",relativePath:"03.硬件知识/04.原理电源设计/02.ATX.md",key:"v-1dc38e57",path:"/hardware/use/power/atx/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"12V电源适配器",frontmatter:{title:"12V电源适配器",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/12v/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/04.%E5%8E%9F%E7%90%86%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/03.12V%E7%94%B5%E6%BA%90%E9%80%82%E9%85%8D%E5%99%A8.html",relativePath:"03.硬件知识/04.原理电源设计/03.12V电源适配器.md",key:"v-459d5263",path:"/hardware/use/power/12v/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"TPS62130",frontmatter:{title:"TPS62130",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/tps62130/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/04.%E5%8E%9F%E7%90%86%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/04.TPS62130.html",relativePath:"03.硬件知识/04.原理电源设计/04.TPS62130.md",key:"v-a924237e",path:"/hardware/use/power/tps62130/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"TPS54620",frontmatter:{title:"TPS54620",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/tps54620/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/04.%E5%8E%9F%E7%90%86%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/05.TPS54620.html",relativePath:"03.硬件知识/04.原理电源设计/05.TPS54620.md",key:"v-6002cbfe",path:"/hardware/use/power/tps54620/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"TPS51200",frontmatter:{title:"TPS51200",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/tps51200/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/04.%E5%8E%9F%E7%90%86%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/06.TPS51200.html",relativePath:"03.硬件知识/04.原理电源设计/06.TPS51200.md",key:"v-dedafbfe",path:"/hardware/use/power/tps51200/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"IS6608A",frontmatter:{title:"IS6608A",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/is6608a/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/04.%E5%8E%9F%E7%90%86%E7%94%B5%E6%BA%90%E8%AE%BE%E8%AE%A1/07.IS6608A.html",relativePath:"03.硬件知识/04.原理电源设计/07.IS6608A.md",key:"v-6d935179",path:"/hardware/use/power/is6608a/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"Allegro Device文件详解",frontmatter:{title:"Allegro Device文件详解",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/cadence/device/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/07.Cadence/01.Allegro%20Device%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3.html",relativePath:"03.硬件知识/07.Cadence/01.Allegro Device文件详解.md",key:"v-1073f2ec",path:"/hardware/cadence/device/",headers:[{level:2,title:"DEVICE文件",slug:"device文件",normalizedTitle:"device文件",charIndex:2},{level:2,title:"DEVICE文件与网络的对应关系",slug:"device文件与网络的对应关系",normalizedTitle:"device文件与网络的对应关系",charIndex:356},{level:2,title:"DEVICE 文件包含信息说明",slug:"device-文件包含信息说明",normalizedTitle:"device 文件包含信息说明",charIndex:663},{level:2,title:"DEVICE文件使用举例",slug:"device文件使用举例",normalizedTitle:"device文件使用举例",charIndex:3569}],headersStr:"DEVICE文件 DEVICE文件与网络的对应关系 DEVICE 文件包含信息说明 DEVICE文件使用举例",content:"# DEVICE文件\n\nDevice是给器件提供逻辑信息的一个文件，在调入网表过程中，allegro通过device文件去获取关于器件完整的信息描述。 Device主要包含以下信息： l 封装构造（比如DIP、SIP） l 器件类型（比如 IC、DISCRETE、IO） l 封装的管脚数量 l 封装管脚的电气描述（比如逻辑使用和PIN Swap等信息） l 封装的物理功能块数量 l 各个功能与封装的映射关系 l Pin Use（即PIN使用的功能），比如输入、输出、输入输出。 l 逻辑功能与物理PIN脚的对应关系 l 电源、地管脚 l 属性定义，比如alternatesymbols功能，可以将同一器件用不同封装替代。 （比如LM124A，其内部包含4相同运放，每个运放就是一个独立的物理功能块）\n\n\n# DEVICE文件与网络的对应关系\n\nDevice 文件仅适用于调第三方网表的情况。网表文件主要包含各个器件的封装信息，管脚互连关系。 在网表文件中多个部分都需要DEVICE文件名： $PACKAGES部分 该部分网表格式如下： 封装名 ! DEVICE文件名 ! 器件VALUE值 ; 器件位号\n\n\n\n该部分主要用于识别BRD中需要调入的器件。每行代表一个器件，在每个器件信息中，需要提供该器件对应的DEVICE文件（注意各个参数之间的分割符号） $FUNCTIONS部分（可选） 该部分用于定义器件的功能，网表文件中若存在该部分，那么必须在这儿提供完整的DEVICE文件名。一般情况我们调网表可以省略。\n\n\n# DEVICE 文件包含信息说明\n\nDevice 文件由多行数据来记录器件的逻辑信息。每一行包含一个关键词，后面紧跟一个或多个数据字段。一个关键词就是描述器件的一个属性。各个字段主要提供关于该属性的值。 DEVICE文件完整格式如下：\n\n(comment line)\nPACKAGE <matching_package_symbol_name>\nCLASS <type>\nPINCOUNT <number_of_pins>\nPINORDER <function_type> <list_of_pin_name>\nPINUSE <function_type><list_of_pin_use_codes>\nPINSWAP <function_type> <list_of_pin_names>\nFUNCTION <slot_name> <function_type><list_of_pin_numbers>\nPOWER <net_name> ; <list_of_pin_numbers>\nGROUND <net_name> ; <list_of_pin_numbers>\nNC ; <list_of_pin_numbers>\nPACKAGEPROP <property_type> <property_value>\nEND\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n各参数说明如下：\n\n(comment line)：注释部分，无意义。括号中的内容可以任意字符，一般可写成封装名。\nPACKAGE：该DEVICE对应的封装。\nCLASS：   对应的器件类型，共三种：IC(一般为有源器件)；IO(一般指接口器件)；DISCRETE(无源器件，比如电阻电容)\nPINCOUNT：该器件具有的PIN数量。\nPINORDER：该部分用于描述单个独立的功能块，可结合后面的PINUSE、PINSWAP、FUNCTION来详细描述该功能块；<function_type>是功能块的名称，<list_of_pin_name>是各个功能块对应的管脚名，比SCLK、SDATA。顺序需与后面的PINUSE、FUNCTION所对应。\nPINUSE：各个功能块对应PIN的逻辑功能，比如IN(输入)、OUTPUT(输出)、BIDIRECTIONAL(输入输出)、TRI(三态)。\nPINSWAP：各个功能块内部对应PIN之间的互换关系。<function_type>为功能块的名称，需要与PINORDER所定义的对应。<list_of_pin_names>该功能块可互换的管脚名。\nFUNCTION：各个功能块的PIN NAME与PIN NUMBER的对应关系。<slot_name>为功能块下的单个模块名，名字可为任意字符串；<function_type>需与PINORDER所对应；<list_of_pin_numbers>为PIN NUMBER，与前面PINORDER的PIN NAME顺序对应。\nPOWER：描述器件的及电源网络及对应的电源管脚。<net_name>为电源的网络名；<list_of_pin_numbers>为电源所对应的PIN NUMBER\nGROUND：描述器件的地网络及地管脚。与POWER功能一样\nNC：描述了器件未使用的管脚，即不包含任何功能的管脚。\nPACKAGEPROP：用于指定器件的某些属性，比如VALUE值、可替换的封装、高度信息等等。\n<property_type>为属性名，共有以下几种类型：  \n1)     DEVICE_LABEL    目前已经不再适用\n2)     VALUE             器件VALUE值，比如”sn74ls00”\n3)     PART_NUMBER      不适用于PCB EDITOR，因此PCB设计中用处不大\n4)     INSERTION_CODE  自动插件零件分类码，常用于将器件自动分类\n5)     TERMINATOR_PACK 不适用于PCB EDITOR，因此PCB设计中用处不大\n6)     HEIGHT            记录器件高度信息\n7)     ALT_SYMBOLS      设计过程中，通过该属性可以指定一个替代的封装。其基本格式如下：\n                       PACKAGEPROP ALT_SYMBOLS'(Subclass:Symbol,...;Subclass:Symbol,...)'\n                     注意每个Subclass直接需要用分号隔开。\n                                                 Subclass：代表所在层可替换的封装，可以设置为TOP或者BOTTOM层。可省略Subclass，省略后，默认是表底层都可使用替换封装。比如当前设置Subclass为TOP(也可用T)，那么当前封装只有在表层时，才能使用替代的封装。\n                     Symbol：为allegro的封装名，指定与当前封装替换的封装名。\n                     例如：当前板上有C0402的封装，我们需要使用C0402-BGA与之替换，且只有器件在底层时才可以替换，那么C0402封装DEVICE中的ALT_SYMBOLS可设置如下：\nPACKAGEPROP ALT_SYMBOLS '(B:C0402,C0402-BGA)'\n如果忽略层面的话，可直接设置如下：\nPACKAGEPROP ALT_SYMBOLS '(C0402,C0402-BGA)'\n例如：当前板上有SOP16的封装，我们需要使用DIP16或者QFN16与之替换，且只有器件在表层时可使用DIP16和QFN16；底层只能使用QFN16替换，那么SOP16封装DEVICE中的ALT_SYMBOLS可设置如下：\nPACKAGEPROP ALT_SYMBOLS '(T: SOP16, DIP16,QFN16;B:SOP16, QFN16)'\n注：当我们只需要将C0402替换为C0402-BGA时，只需要在C0402的DEVICE里面添加ALT_SYMBOLS属性即可，不需要在C0402-BGA中添加ALT_SYMBOLS属性。有时导出的库里面有很多同样的DEVICE，比如c0402__1.txt、c0402__2.txt等等，我们可以直接删除，只打开原始的c0402.txt，将其中的PACKAGEPROP VALUE参数删除（即该DEVICE可对应所有VALUE值的封装），再添加ALT_SYMBOLS属性就可以赋给所有c0402封装。\nEND：DEVICE文件结束。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# DEVICE文件使用举例\n\n下面以一个SN74LS00为例，说明DEVICE与封装的对应关系。\n\n74LS00为2输入4通道与非门逻辑器件。内部包含四个相同的功能模块。每个功能块有两个输入脚，一个输出脚。如下图所示：\n\n\n\n\n\n以上DEVICE文件描述了74ls00的基本信息。共有四个功能块（G1 G2 G3G4），每个功能块有三个引脚。分别对应为A B Y，其中A B为输入，Y为输出。1、4、10、13脚为每个模块的A输入，2、5、9、12为每个模块的B输入，3、6、8、11为每个模块的Y输出。每个模块可以在A、B之间互相交换。\n\n注：当器件内部有多个不同的功能块（FUNCTION）时，其DEVICE文件中需要单独定义每个功能块，定义方法与上面的类似。\n\n例如排阻，一般内部有四个电阻组成，现在我们需要定义其单个电阻的两个脚可以互换，且四个电阻间也能够互换，其DEVICE文件内容如下：\n\n\n\n当使用命令swap pins(菜单Place a Swap a Pins执行)时，点击排阻的单个引脚，只能在其单个电阻内部交换网络。当使用swap functions(菜单Place a Swap a Functions执行)时，点击排阻的单个PIN，可直接将排阻内部电阻与其余几个电阻交换。\n\n\n\n在PCB设计中，可适当利用好DEVICE文件，提升设计效率。除了以上提到过的功能外，还可以充分运用DEVICE创建更多的功能，比如FPGA的各个BANK之间的SWAP属性、替代封装、交换网络等等。",normalizedContent:"# device文件\n\ndevice是给器件提供逻辑信息的一个文件，在调入网表过程中，allegro通过device文件去获取关于器件完整的信息描述。 device主要包含以下信息： l 封装构造（比如dip、sip） l 器件类型（比如 ic、discrete、io） l 封装的管脚数量 l 封装管脚的电气描述（比如逻辑使用和pin swap等信息） l 封装的物理功能块数量 l 各个功能与封装的映射关系 l pin use（即pin使用的功能），比如输入、输出、输入输出。 l 逻辑功能与物理pin脚的对应关系 l 电源、地管脚 l 属性定义，比如alternatesymbols功能，可以将同一器件用不同封装替代。 （比如lm124a，其内部包含4相同运放，每个运放就是一个独立的物理功能块）\n\n\n# device文件与网络的对应关系\n\ndevice 文件仅适用于调第三方网表的情况。网表文件主要包含各个器件的封装信息，管脚互连关系。 在网表文件中多个部分都需要device文件名： $packages部分 该部分网表格式如下： 封装名 ! device文件名 ! 器件value值 ; 器件位号\n\n\n\n该部分主要用于识别brd中需要调入的器件。每行代表一个器件，在每个器件信息中，需要提供该器件对应的device文件（注意各个参数之间的分割符号） $functions部分（可选） 该部分用于定义器件的功能，网表文件中若存在该部分，那么必须在这儿提供完整的device文件名。一般情况我们调网表可以省略。\n\n\n# device 文件包含信息说明\n\ndevice 文件由多行数据来记录器件的逻辑信息。每一行包含一个关键词，后面紧跟一个或多个数据字段。一个关键词就是描述器件的一个属性。各个字段主要提供关于该属性的值。 device文件完整格式如下：\n\n(comment line)\npackage <matching_package_symbol_name>\nclass <type>\npincount <number_of_pins>\npinorder <function_type> <list_of_pin_name>\npinuse <function_type><list_of_pin_use_codes>\npinswap <function_type> <list_of_pin_names>\nfunction <slot_name> <function_type><list_of_pin_numbers>\npower <net_name> ; <list_of_pin_numbers>\nground <net_name> ; <list_of_pin_numbers>\nnc ; <list_of_pin_numbers>\npackageprop <property_type> <property_value>\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n各参数说明如下：\n\n(comment line)：注释部分，无意义。括号中的内容可以任意字符，一般可写成封装名。\npackage：该device对应的封装。\nclass：   对应的器件类型，共三种：ic(一般为有源器件)；io(一般指接口器件)；discrete(无源器件，比如电阻电容)\npincount：该器件具有的pin数量。\npinorder：该部分用于描述单个独立的功能块，可结合后面的pinuse、pinswap、function来详细描述该功能块；<function_type>是功能块的名称，<list_of_pin_name>是各个功能块对应的管脚名，比sclk、sdata。顺序需与后面的pinuse、function所对应。\npinuse：各个功能块对应pin的逻辑功能，比如in(输入)、output(输出)、bidirectional(输入输出)、tri(三态)。\npinswap：各个功能块内部对应pin之间的互换关系。<function_type>为功能块的名称，需要与pinorder所定义的对应。<list_of_pin_names>该功能块可互换的管脚名。\nfunction：各个功能块的pin name与pin number的对应关系。<slot_name>为功能块下的单个模块名，名字可为任意字符串；<function_type>需与pinorder所对应；<list_of_pin_numbers>为pin number，与前面pinorder的pin name顺序对应。\npower：描述器件的及电源网络及对应的电源管脚。<net_name>为电源的网络名；<list_of_pin_numbers>为电源所对应的pin number\nground：描述器件的地网络及地管脚。与power功能一样\nnc：描述了器件未使用的管脚，即不包含任何功能的管脚。\npackageprop：用于指定器件的某些属性，比如value值、可替换的封装、高度信息等等。\n<property_type>为属性名，共有以下几种类型：  \n1)     device_label    目前已经不再适用\n2)     value             器件value值，比如”sn74ls00”\n3)     part_number      不适用于pcb editor，因此pcb设计中用处不大\n4)     insertion_code  自动插件零件分类码，常用于将器件自动分类\n5)     terminator_pack 不适用于pcb editor，因此pcb设计中用处不大\n6)     height            记录器件高度信息\n7)     alt_symbols      设计过程中，通过该属性可以指定一个替代的封装。其基本格式如下：\n                       packageprop alt_symbols'(subclass:symbol,...;subclass:symbol,...)'\n                     注意每个subclass直接需要用分号隔开。\n                                                 subclass：代表所在层可替换的封装，可以设置为top或者bottom层。可省略subclass，省略后，默认是表底层都可使用替换封装。比如当前设置subclass为top(也可用t)，那么当前封装只有在表层时，才能使用替代的封装。\n                     symbol：为allegro的封装名，指定与当前封装替换的封装名。\n                     例如：当前板上有c0402的封装，我们需要使用c0402-bga与之替换，且只有器件在底层时才可以替换，那么c0402封装device中的alt_symbols可设置如下：\npackageprop alt_symbols '(b:c0402,c0402-bga)'\n如果忽略层面的话，可直接设置如下：\npackageprop alt_symbols '(c0402,c0402-bga)'\n例如：当前板上有sop16的封装，我们需要使用dip16或者qfn16与之替换，且只有器件在表层时可使用dip16和qfn16；底层只能使用qfn16替换，那么sop16封装device中的alt_symbols可设置如下：\npackageprop alt_symbols '(t: sop16, dip16,qfn16;b:sop16, qfn16)'\n注：当我们只需要将c0402替换为c0402-bga时，只需要在c0402的device里面添加alt_symbols属性即可，不需要在c0402-bga中添加alt_symbols属性。有时导出的库里面有很多同样的device，比如c0402__1.txt、c0402__2.txt等等，我们可以直接删除，只打开原始的c0402.txt，将其中的packageprop value参数删除（即该device可对应所有value值的封装），再添加alt_symbols属性就可以赋给所有c0402封装。\nend：device文件结束。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# device文件使用举例\n\n下面以一个sn74ls00为例，说明device与封装的对应关系。\n\n74ls00为2输入4通道与非门逻辑器件。内部包含四个相同的功能模块。每个功能块有两个输入脚，一个输出脚。如下图所示：\n\n\n\n\n\n以上device文件描述了74ls00的基本信息。共有四个功能块（g1 g2 g3g4），每个功能块有三个引脚。分别对应为a b y，其中a b为输入，y为输出。1、4、10、13脚为每个模块的a输入，2、5、9、12为每个模块的b输入，3、6、8、11为每个模块的y输出。每个模块可以在a、b之间互相交换。\n\n注：当器件内部有多个不同的功能块（function）时，其device文件中需要单独定义每个功能块，定义方法与上面的类似。\n\n例如排阻，一般内部有四个电阻组成，现在我们需要定义其单个电阻的两个脚可以互换，且四个电阻间也能够互换，其device文件内容如下：\n\n\n\n当使用命令swap pins(菜单place a swap a pins执行)时，点击排阻的单个引脚，只能在其单个电阻内部交换网络。当使用swap functions(菜单place a swap a functions执行)时，点击排阻的单个pin，可直接将排阻内部电阻与其余几个电阻交换。\n\n\n\n在pcb设计中，可适当利用好device文件，提升设计效率。除了以上提到过的功能外，还可以充分运用device创建更多的功能，比如fpga的各个bank之间的swap属性、替代封装、交换网络等等。",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"Allegro小知识",frontmatter:{title:"Allegro小知识",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/cadence/allegro/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/07.Cadence/02.Allegro%E5%B0%8F%E7%9F%A5%E8%AF%86.html",relativePath:"03.硬件知识/07.Cadence/02.Allegro小知识.md",key:"v-34ff6ca6",path:"/hardware/cadence/allegro/",headers:[{level:2,title:"360°复制极性过孔",slug:"_360°复制极性过孔",normalizedTitle:"360°复制极性过孔",charIndex:2},{level:2,title:"坐标中心",slug:"坐标中心",normalizedTitle:"坐标中心",charIndex:19},{level:2,title:"Allegro 17.2添加XNet",slug:"allegro-17-2添加xnet",normalizedTitle:"allegro 17.2添加xnet",charIndex:150}],headersStr:"360°复制极性过孔 坐标中心 Allegro 17.2添加XNet",content:"# 360°复制极性过孔\n\n\n\n\n# 坐标中心\n\nAllegro导出坐标选择中心，默认是以PlaceBound中心坐标导出，如果封装中没有PlaceBound，放进PCB会自动生成一个PlaceBound，包含住所有元素。\n\n删除PlaceBound后，器件中心是以Pin对称中心为器件中心\n\n\n# Allegro 17.2添加XNet\n\n打开ENV，增加set CDS_XNET_STATE_UI=1；\n\n重新打开Allegro和规则管理其器；\n\n从规则管理器 Tools > Options 选择 “Create XNets and Differential Pairs using DML Models (same as SPB16.6)”选项；\n\n另存为新的设计。\n\n如果没能生效，建议打最新补丁S061补丁实测如上。",normalizedContent:"# 360°复制极性过孔\n\n\n\n\n# 坐标中心\n\nallegro导出坐标选择中心，默认是以placebound中心坐标导出，如果封装中没有placebound，放进pcb会自动生成一个placebound，包含住所有元素。\n\n删除placebound后，器件中心是以pin对称中心为器件中心\n\n\n# allegro 17.2添加xnet\n\n打开env，增加set cds_xnet_state_ui=1；\n\n重新打开allegro和规则管理其器；\n\n从规则管理器 tools > options 选择 “create xnets and differential pairs using dml models (same as spb16.6)”选项；\n\n另存为新的设计。\n\n如果没能生效，建议打最新补丁s061补丁实测如上。",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"刚挠设计",frontmatter:{title:"刚挠设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/ad/rou/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/08.Altium%20Designer/01.%E5%88%9A%E6%8C%A0%E8%AE%BE%E8%AE%A1.html",relativePath:"03.硬件知识/08.Altium Designer/01.刚挠设计.md",key:"v-42c8d527",path:"/hardware/ad/rou/",headers:[{level:2,title:"1.打开PCB,点击视图->板子规划模式1，如下图所示",slug:"_1-打开pcb-点击视图-板子规划模式1-如下图所示",normalizedTitle:"1.打开pcb,点击视图-&gt;板子规划模式1，如下图所示",charIndex:null},{level:2,title:"2.点击设计->定义分割线，用两条分割线绘出要折弯的区域，D+S快捷键",slug:"_2-点击设计-定义分割线-用两条分割线绘出要折弯的区域-d-s快捷键",normalizedTitle:"2.点击设计-&gt;定义分割线，用两条分割线绘出要折弯的区域，d+s快捷键",charIndex:null},{level:2,title:"3.点击设计->定义弯曲线(弯曲线呈现黄色)",slug:"_3-点击设计-定义弯曲线-弯曲线呈现黄色",normalizedTitle:"3.点击设计-&gt;定义弯曲线(弯曲线呈现黄色)",charIndex:null},{level:2,title:"4.用快捷键d,k进入layer manage stack(层叠管理器)，在feature中选择rigid/flex,在左边添加两个stack，并分别更名为rigid、flex，注意stack2勾选Is Flex",slug:"_4-用快捷键d-k进入layer-manage-stack-层叠管理器-在feature中选择rigid-flex-在左边添加两个stack-并分别更名为rigid、flex-注意stack2勾选is-flex",normalizedTitle:"4.用快捷键d,k进入layer manage stack(层叠管理器)，在feature中选择rigid/flex,在左边添加两个stack，并分别更名为rigid、flex，注意stack2勾选is flex",charIndex:109},{level:2,title:"5.修改完后进入到PCB，刚才的分割线已经将pcb分成了三部分，我们点击上下两部分，选中3D锁定；点击中间部分选择层栈为flex",slug:"_5-修改完后进入到pcb-刚才的分割线已经将pcb分成了三部分-我们点击上下两部分-选中3d锁定-点击中间部分选择层栈为flex",normalizedTitle:"5.修改完后进入到pcb，刚才的分割线已经将pcb分成了三部分，我们点击上下两部分，选中3d锁定；点击中间部分选择层栈为flex",charIndex:222},{level:2,title:"6.双击中间黄色弯曲线，修改参数，修改完后拖动折叠状态滑条调整弯折程度",slug:"_6-双击中间黄色弯曲线-修改参数-修改完后拖动折叠状态滑条调整弯折程度",normalizedTitle:"6.双击中间黄色弯曲线，修改参数，修改完后拖动折叠状态滑条调整弯折程度",charIndex:295},{level:2,title:"7.按数字3查看3D效果",slug:"_7-按数字3查看3d效果",normalizedTitle:"7.按数字3查看3d效果",charIndex:337}],headersStr:"1.打开PCB,点击视图->板子规划模式1，如下图所示 2.点击设计->定义分割线，用两条分割线绘出要折弯的区域，D+S快捷键 3.点击设计->定义弯曲线(弯曲线呈现黄色) 4.用快捷键d,k进入layer manage stack(层叠管理器)，在feature中选择rigid/flex,在左边添加两个stack，并分别更名为rigid、flex，注意stack2勾选Is Flex 5.修改完后进入到PCB，刚才的分割线已经将pcb分成了三部分，我们点击上下两部分，选中3D锁定；点击中间部分选择层栈为flex 6.双击中间黄色弯曲线，修改参数，修改完后拖动折叠状态滑条调整弯折程度 7.按数字3查看3D效果",content:"# 1.打开PCB,点击视图->板子规划模式1，如下图所示\n\n\n\n\n\n\n# 2.点击设计->定义分割线，用两条分割线绘出要折弯的区域，D+S快捷键\n\n\n\n\n# 3.点击设计->定义弯曲线(弯曲线呈现黄色)\n\n\n\n\n# 4.用快捷键d,k进入layer manage stack(层叠管理器)，在feature中选择rigid/flex,在左边添加两个stack，并分别更名为rigid、flex，注意stack2勾选Is Flex\n\n\n\n\n# 5.修改完后进入到PCB，刚才的分割线已经将pcb分成了三部分，我们点击上下两部分，选中3D锁定；点击中间部分选择层栈为flex\n\n\n\n\n\n\n# 6.双击中间黄色弯曲线，修改参数，修改完后拖动折叠状态滑条调整弯折程度\n\n\n\n\n# 7.按数字3查看3D效果\n\n",normalizedContent:"# 1.打开pcb,点击视图->板子规划模式1，如下图所示\n\n\n\n\n\n\n# 2.点击设计->定义分割线，用两条分割线绘出要折弯的区域，d+s快捷键\n\n\n\n\n# 3.点击设计->定义弯曲线(弯曲线呈现黄色)\n\n\n\n\n# 4.用快捷键d,k进入layer manage stack(层叠管理器)，在feature中选择rigid/flex,在左边添加两个stack，并分别更名为rigid、flex，注意stack2勾选is flex\n\n\n\n\n# 5.修改完后进入到pcb，刚才的分割线已经将pcb分成了三部分，我们点击上下两部分，选中3d锁定；点击中间部分选择层栈为flex\n\n\n\n\n\n\n# 6.双击中间黄色弯曲线，修改参数，修改完后拖动折叠状态滑条调整弯折程度\n\n\n\n\n# 7.按数字3查看3d效果\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"OrCAD小知识",frontmatter:{title:"OrCAD小知识",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/cadence/orcad/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/07.Cadence/03.OrCAD%E5%B0%8F%E7%9F%A5%E8%AF%86.html",relativePath:"03.硬件知识/07.Cadence/03.OrCAD小知识.md",key:"v-dc1e5696",path:"/hardware/cadence/orcad/",headers:[{level:2,title:"复制器件位号太长",slug:"复制器件位号太长",normalizedTitle:"复制器件位号太长",charIndex:2},{level:2,title:"位号带下划线",slug:"位号带下划线",normalizedTitle:"位号带下划线",charIndex:17},{level:2,title:"查看版本更改，原理图对比（仅17.2）",slug:"查看版本更改-原理图对比-仅17-2",normalizedTitle:"查看版本更改，原理图对比（仅17.2）",charIndex:70},{level:2,title:"pdf原理图交互pcb",slug:"pdf原理图交互pcb",normalizedTitle:"pdf原理图交互pcb",charIndex:116},{level:2,title:"批量修改Value",slug:"批量修改value",normalizedTitle:"批量修改value",charIndex:140}],headersStr:"复制器件位号太长 位号带下划线 查看版本更改，原理图对比（仅17.2） pdf原理图交互pcb 批量修改Value",content:"# 复制器件位号太长\n\n\n\n\n# 位号带下划线\n\n右键位号，User Assigned Reference-Unset，再左键点击\n\n\n# 查看版本更改，原理图对比（仅17.2）\n\nTools-Compare Design\n\n\n# pdf原理图交互pcb\n\n复制为lst\n\n\n# 批量修改Value\n\nTools->Export Properties导出EXP文件\n\n\n\n用Excel打开EXP文件，修改后，再导入",normalizedContent:"# 复制器件位号太长\n\n\n\n\n# 位号带下划线\n\n右键位号，user assigned reference-unset，再左键点击\n\n\n# 查看版本更改，原理图对比（仅17.2）\n\ntools-compare design\n\n\n# pdf原理图交互pcb\n\n复制为lst\n\n\n# 批量修改value\n\ntools->export properties导出exp文件\n\n\n\n用excel打开exp文件，修改后，再导入",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"AD小知识",frontmatter:{title:"AD小知识",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/ad/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/08.Altium%20Designer/02.AD%E5%B0%8F%E7%9F%A5%E8%AF%86.html",relativePath:"03.硬件知识/08.Altium Designer/02.AD小知识.md",key:"v-14b63fb6",path:"/hardware/ad/",headers:[{level:2,title:"对覆铜的切割和挖孔",slug:"对覆铜的切割和挖孔",normalizedTitle:"对覆铜的切割和挖孔",charIndex:2}],headersStr:"对覆铜的切割和挖孔",content:"# 对覆铜的切割和挖孔\n\n方法是\n1 、分割覆铜place->slice polygonpour ，在覆铜上画一条线就将覆铜陵一分为二。\n2 、覆铜部分挖除：place->polygonpour cutout ，在覆铜上本一个封闭区域，该覆铜块repour 一下，就出现一个掏空区域。\n3 、Pcb 导线切割edit->sliceslice tracks ，一拉就断。\n\n\n1\n2\n3\n4\n",normalizedContent:"# 对覆铜的切割和挖孔\n\n方法是\n1 、分割覆铜place->slice polygonpour ，在覆铜上画一条线就将覆铜陵一分为二。\n2 、覆铜部分挖除：place->polygonpour cutout ，在覆铜上本一个封闭区域，该覆铜块repour 一下，就出现一个掏空区域。\n3 、pcb 导线切割edit->sliceslice tracks ，一拉就断。\n\n\n1\n2\n3\n4\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"Mentor小知识",frontmatter:{title:"Mentor小知识",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/mentor/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/09.Mentor/02.Mentor%E5%B0%8F%E7%9F%A5%E8%AF%86.html",relativePath:"03.硬件知识/09.Mentor/02.Mentor小知识.md",key:"v-20977689",path:"/hardware/mentor/",headers:[{level:2,title:"重命名层名",slug:"重命名层名",normalizedTitle:"重命名层名",charIndex:2},{level:2,title:"器件定位",slug:"器件定位",normalizedTitle:"器件定位",charIndex:49}],headersStr:"重命名层名 器件定位",content:"# 重命名层名\n\nSetup->Stackup Editor\n\n\n\n或\n\n在CES中\n\n\n\n\n# 器件定位\n\nShift+右键定位点 Ctrl+V 取消 选中器件，右键 Set Origin 按 F 2，移动到附近 Ctrl+右键定位",normalizedContent:"# 重命名层名\n\nsetup->stackup editor\n\n\n\n或\n\n在ces中\n\n\n\n\n# 器件定位\n\nshift+右键定位点 ctrl+v 取消 选中器件，右键 set origin 按 f 2，移动到附近 ctrl+右键定位",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"快捷键",frontmatter:{title:"快捷键",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/mentor/shortkey/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/09.Mentor/01.%E5%BF%AB%E6%8D%B7%E9%94%AE.html",relativePath:"03.硬件知识/09.Mentor/01.快捷键.md",key:"v-3c1d644a",path:"/hardware/mentor/shortkey/",headers:[{level:2,title:"添加脚本",slug:"添加脚本",normalizedTitle:"添加脚本",charIndex:2},{level:2,title:"设定快捷键",slug:"设定快捷键",normalizedTitle:"设定快捷键",charIndex:143}],headersStr:"添加脚本 设定快捷键",content:'# 添加脚本\n\n安装盘\\MentorGraphics\\EEVX.1.2\\SDD_HOME\\standard目录下，然后在打开scripts.ini文件，添加启动路径如下\n\n[Expedition PCB - Document]\nScript#0=$key.vbs\n\n\n1\n2\n\n\n\n# 设定快捷键\n\n新建key.vbs\n\n\' Modifiers exist for key combinations such as:\n\'   <key>\n\'   Alt+<key>\n\'   Ctrl+<key>\n\'   Alt+Shift+<key>\n\'   Ctrl+Shift+<key>\n\'   Ctrl+Alt+Shift+<key>\n\' where <key> is the keyname such as: Enter, Space, A-Z, 0-9, F1-F12,\n\'\n\' One exception: Do not override any of the existing function keys (F1-F12) without\n\' using a modifier or that functionality will be disabled in the product.\n\'\nBindMenu = 0\nBindAccelerator = 1\nBindCommand = 1\n\nSet keyBindTables = Gui.Bindings("Document")\n\n\' Bind the menu command to a key\nkeyBindTables.AddKeyBinding "Q", "Edit->Properties->Net Properties", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "W", "Edit->Properties->Padstack Properties", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "A", "Edit->Properties->Part Properties", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "Ctrl+M", "Edit->Measure->Minimum Distance", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "S", "Edit->FixLock->Fix", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "Home", "View->Fit All", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "L", "View->Display Control", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "Ctrl+P", "Setup->Project Integration", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "E", "Setup->Editor Control", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "Ctrl+C", "Setup->Constraint Manager", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "J", "Place->Mounting Hole", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "E", "Setup->Editor Control", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "Ctrl+N", "Route->Net Explorer", BindMenu, BindAccelerator\nkeyBindTables.AddKeyBinding "T", "Route->TeardropsTracedrops->Teardrops", BindMenu, BindAccelerator\n\t\n\' Bind the execution of a user script to a key\nkeyBindTables.AddKeyBinding "Ctrl+3", "run c:\\temp\\HotKey.vbs", BindCommand, BindAccelerator\nkeyBindTables.AddKeyBinding "Alt+X", "run c:\\temp\\alt_x.vbs", BindCommand, BindAccelerator\nkeyBindTables.AddKeyBinding "Ctrl+Alt+Shift+5", "run c:\\temp\\ctrl_alt_shift_5.vbs", BindCommand, BindAccelerator\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n',normalizedContent:'# 添加脚本\n\n安装盘\\mentorgraphics\\eevx.1.2\\sdd_home\\standard目录下，然后在打开scripts.ini文件，添加启动路径如下\n\n[expedition pcb - document]\nscript#0=$key.vbs\n\n\n1\n2\n\n\n\n# 设定快捷键\n\n新建key.vbs\n\n\' modifiers exist for key combinations such as:\n\'   <key>\n\'   alt+<key>\n\'   ctrl+<key>\n\'   alt+shift+<key>\n\'   ctrl+shift+<key>\n\'   ctrl+alt+shift+<key>\n\' where <key> is the keyname such as: enter, space, a-z, 0-9, f1-f12,\n\'\n\' one exception: do not override any of the existing function keys (f1-f12) without\n\' using a modifier or that functionality will be disabled in the product.\n\'\nbindmenu = 0\nbindaccelerator = 1\nbindcommand = 1\n\nset keybindtables = gui.bindings("document")\n\n\' bind the menu command to a key\nkeybindtables.addkeybinding "q", "edit->properties->net properties", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "w", "edit->properties->padstack properties", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "a", "edit->properties->part properties", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "ctrl+m", "edit->measure->minimum distance", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "s", "edit->fixlock->fix", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "home", "view->fit all", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "l", "view->display control", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "ctrl+p", "setup->project integration", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "e", "setup->editor control", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "ctrl+c", "setup->constraint manager", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "j", "place->mounting hole", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "e", "setup->editor control", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "ctrl+n", "route->net explorer", bindmenu, bindaccelerator\nkeybindtables.addkeybinding "t", "route->teardropstracedrops->teardrops", bindmenu, bindaccelerator\n\t\n\' bind the execution of a user script to a key\nkeybindtables.addkeybinding "ctrl+3", "run c:\\temp\\hotkey.vbs", bindcommand, bindaccelerator\nkeybindtables.addkeybinding "alt+x", "run c:\\temp\\alt_x.vbs", bindcommand, bindaccelerator\nkeybindtables.addkeybinding "ctrl+alt+shift+5", "run c:\\temp\\ctrl_alt_shift_5.vbs", bindcommand, bindaccelerator\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n',charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"Pads无模命令",frontmatter:{title:"Pads无模命令",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/pads/command/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/10.Pads/01.Pads%E6%97%A0%E6%A8%A1%E5%91%BD%E4%BB%A4.html",relativePath:"03.硬件知识/10.Pads/01.Pads无模命令.md",key:"v-c6124cee",path:"/hardware/pads/command/",headersStr:null,content:"什么是无模命令？\n\nModeless Commands在某些文章中翻译为无模指令，两者意思相同。无模命令就是在PADS中通过键盘快捷输入“命令”让PADS去执行的一系列指令集。掌握一些常用的无模命令能够加快设计，达到事半功倍的目的。\n\n全局设置(Global Settings)\n\n命令                                   说明\nC                                    负片视图\nZ (Layer)                            显示某层\nZ T                                  显示 TOP 层\nZ T SST                              显示丝印顶层和 TOP\nZ SMT                                显示 Solder Mask Top 阻焊顶层顶层\nZZ                                   显示全部层\nD                                    打开或关闭当前层拥有最高优先显示权\nDO                                   打开可关闭当前通孔显示模式\nET                                   设置暂停走线时以测试点为结束方式\nI                                    进行数据库完整测试\nL                                    改变当前层\nL2                                   改变当前层为第二层\nN                                    高亮某一网络\nN GND                                高亮GND网络\nO                                    将焊盘和走线以其轮廓形式显示\nPO                                   将灌铜只显示其轮廓\nQ                                    打开快速测量器，以当前位置开始测量，即用于测量板子上两点之间的距离\nQL                                   对点亮网络、管脚对走线和某一选择范围进行快速测量其长度\n                                     先输入N GND点亮GND网络，然后再输入QL测量其长度\nR                                    设置最小显示线宽，小于此值的则只显示其中线，比如R 10\nRV                                   保持建立重复性使用电路模式\nSPD                                  显示生成混合分割层的数据\nSPI                                  显示热焊盘标示符号“”在其热盘上\nSPO                                  只显示混合分割层的轮廓\nT                                    设置设计画面为透明显示模式\nX                                    打开或关闭文字轮廓显示\nW                                    改变线宽，比如 W 4\nUMM                                  单位切换为公制mm\nUM                                   单位切换为英制mil\nUI                                   单位切换为英制inch\n格点设置                                 \nG                                    过孔和设计栅格设置\nGD                                   显示栅格设置\nGP                                   打开或关闭极性栅格\nGP r a                               移动到一个指定的极坐标点\nGPR r                                在角度一定条件下，移动一个指定的径向半径为的点\nGPA a                                在径向半径一定的条件下，按指定的角度移动\nGPRA da                              在径向半径一定的条件下，按当前的角度进行移动\nGPRR dr                              在角度一定条件下，按当前的径向半径进行移动\nGR                                   设置设计栅格\nGV                                   设置过孔栅格\n器件查找                                 \nS                                    搜索元件管脚或元件，例如S R1搜索R1\nS X Y                                搜索一个绝对坐标点，比如 S 15 12\nSR                                   搜索一个相对坐标点\nSRX                                  保持当前坐标不变，搜索一个相对坐标点\nSRY                                  保持当前坐标不变，搜索一个相对坐标点\nSS                                   搜索或选择某一个或某一类无件， 因为此命令支持通配符号\nSX                                   保持当前坐标不变，移动到一个指定的绝对坐标点\nSY                                   保持当前坐标不变，移动到一个指定的绝对坐标点\nSP                                   搜索或选择使用像素面不是线宽的线段\nAA                                   转换到任意角度模式\nAD                                   转换到斜角度模式\nAO                                   转换到直角模式\nUN[]                                 可取消多次的操作，因为是可变的\nRE[]                                 重复多次操作\n设计规则检查 DRC (Design Rules Checking)   \nDRP                                  禁止违背设计规则\nDRW                                  违背警告模式\nDRI                                  忽略设计规则\nDRO                                  完全关闭设计规则\n走线(Routing)                          \nE                                    无过孔结束暂停走线\nLD                                   使用前层走线为垂直或水平方面\nPL                                   锁定当前操作层对\nSH                                   打开或关闭推挤模式\nV                                    选择当前使用过孔类型\nVA                                   自动过孔选择\nVP                                   使用埋孔或盲孔式过孔\nVT                                   使用通孔式过孔\n绘制对象(Drafting Objects)               \nHC                                   转换到绘制圆形图形模式\nHH                                   转换到绘制非封闭性图形模式\nHP                                   转换到绘制多边形图形模式\nHR                                   转换到绘制矩形图形模式\n替代鼠标单击(Mouse Click Substitutes)      \nM                                    激活当前功能模式下的弹出菜单，相当于单击鼠标右键\nSpacebar                             相当于在当前十字光标位置单击鼠标左键，比如增加走线拐角\n其他方面(Various)                        \n?                                    显示当前帮助主题\nBMW                                  打开对话窗口\nBLT                                  打开对话窗口\n@CAMDOCS                             设置光绘",normalizedContent:"什么是无模命令？\n\nmodeless commands在某些文章中翻译为无模指令，两者意思相同。无模命令就是在pads中通过键盘快捷输入“命令”让pads去执行的一系列指令集。掌握一些常用的无模命令能够加快设计，达到事半功倍的目的。\n\n全局设置(global settings)\n\n命令                                   说明\nc                                    负片视图\nz (layer)                            显示某层\nz t                                  显示 top 层\nz t sst                              显示丝印顶层和 top\nz smt                                显示 solder mask top 阻焊顶层顶层\nzz                                   显示全部层\nd                                    打开或关闭当前层拥有最高优先显示权\ndo                                   打开可关闭当前通孔显示模式\net                                   设置暂停走线时以测试点为结束方式\ni                                    进行数据库完整测试\nl                                    改变当前层\nl2                                   改变当前层为第二层\nn                                    高亮某一网络\nn gnd                                高亮gnd网络\no                                    将焊盘和走线以其轮廓形式显示\npo                                   将灌铜只显示其轮廓\nq                                    打开快速测量器，以当前位置开始测量，即用于测量板子上两点之间的距离\nql                                   对点亮网络、管脚对走线和某一选择范围进行快速测量其长度\n                                     先输入n gnd点亮gnd网络，然后再输入ql测量其长度\nr                                    设置最小显示线宽，小于此值的则只显示其中线，比如r 10\nrv                                   保持建立重复性使用电路模式\nspd                                  显示生成混合分割层的数据\nspi                                  显示热焊盘标示符号“”在其热盘上\nspo                                  只显示混合分割层的轮廓\nt                                    设置设计画面为透明显示模式\nx                                    打开或关闭文字轮廓显示\nw                                    改变线宽，比如 w 4\numm                                  单位切换为公制mm\num                                   单位切换为英制mil\nui                                   单位切换为英制inch\n格点设置                                 \ng                                    过孔和设计栅格设置\ngd                                   显示栅格设置\ngp                                   打开或关闭极性栅格\ngp r a                               移动到一个指定的极坐标点\ngpr r                                在角度一定条件下，移动一个指定的径向半径为的点\ngpa a                                在径向半径一定的条件下，按指定的角度移动\ngpra da                              在径向半径一定的条件下，按当前的角度进行移动\ngprr dr                              在角度一定条件下，按当前的径向半径进行移动\ngr                                   设置设计栅格\ngv                                   设置过孔栅格\n器件查找                                 \ns                                    搜索元件管脚或元件，例如s r1搜索r1\ns x y                                搜索一个绝对坐标点，比如 s 15 12\nsr                                   搜索一个相对坐标点\nsrx                                  保持当前坐标不变，搜索一个相对坐标点\nsry                                  保持当前坐标不变，搜索一个相对坐标点\nss                                   搜索或选择某一个或某一类无件， 因为此命令支持通配符号\nsx                                   保持当前坐标不变，移动到一个指定的绝对坐标点\nsy                                   保持当前坐标不变，移动到一个指定的绝对坐标点\nsp                                   搜索或选择使用像素面不是线宽的线段\naa                                   转换到任意角度模式\nad                                   转换到斜角度模式\nao                                   转换到直角模式\nun[]                                 可取消多次的操作，因为是可变的\nre[]                                 重复多次操作\n设计规则检查 drc (design rules checking)   \ndrp                                  禁止违背设计规则\ndrw                                  违背警告模式\ndri                                  忽略设计规则\ndro                                  完全关闭设计规则\n走线(routing)                          \ne                                    无过孔结束暂停走线\nld                                   使用前层走线为垂直或水平方面\npl                                   锁定当前操作层对\nsh                                   打开或关闭推挤模式\nv                                    选择当前使用过孔类型\nva                                   自动过孔选择\nvp                                   使用埋孔或盲孔式过孔\nvt                                   使用通孔式过孔\n绘制对象(drafting objects)               \nhc                                   转换到绘制圆形图形模式\nhh                                   转换到绘制非封闭性图形模式\nhp                                   转换到绘制多边形图形模式\nhr                                   转换到绘制矩形图形模式\n替代鼠标单击(mouse click substitutes)      \nm                                    激活当前功能模式下的弹出菜单，相当于单击鼠标右键\nspacebar                             相当于在当前十字光标位置单击鼠标左键，比如增加走线拐角\n其他方面(various)                        \n?                                    显示当前帮助主题\nbmw                                  打开对话窗口\nblt                                  打开对话窗口\n@camdocs                             设置光绘",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"点亮LED",frontmatter:{title:"点亮LED",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/led/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/11.C51%E6%B1%87%E7%BC%96/01.%E7%82%B9%E4%BA%AELED.html",relativePath:"03.硬件知识/11.C51汇编/01.点亮LED.md",key:"v-f54ab30e",path:"/hardware/c51/led/",headers:[{level:2,title:"原理图",slug:"原理图",normalizedTitle:"原理图",charIndex:2},{level:2,title:"源程序",slug:"源程序",normalizedTitle:"源程序",charIndex:12}],headersStr:"原理图 源程序",content:"# 原理图\n\n\n\n\n# 源程序\n\n;=============================\n;单灯亮灭\n;延时计算12MHz=1us,6MHz=2us\n;DELAY:\n;\tMOV R7,#250\t\t1周期\n;D1: MOV R6,#250\t1周期\n;D2: DJNZ R6,D2\t\t2周期\n;\tDJNZ R7,D1\t\t2周期\n;\tRET\t\t\t\t2周期\n;延时时间=1T+1T+250*(2T*250+2T+1T)+2T=≈0.125ms\n;=============================\nORG 10  ;程序起始地址\nSTART:\n    SETB P1.0\n\tLCALL DELAY\n\tCLR P1.0\n\tLCALL DELAY\n\tAJMP START\t\t//跳转到START循环\n\nDELAY:\n\tMOV R7,#250\nD1: MOV R6,#250\nD2: DJNZ R6,D2\t\t//R6减1后判断是否为0，不为0则执行D2，为0则执行下一句\n\tDJNZ R7,D1\t\t//R7减1后判断是否为0，不为0则执行D1，D2，为0则返回\n\tRET\n\tEND\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n",normalizedContent:"# 原理图\n\n\n\n\n# 源程序\n\n;=============================\n;单灯亮灭\n;延时计算12mhz=1us,6mhz=2us\n;delay:\n;\tmov r7,#250\t\t1周期\n;d1: mov r6,#250\t1周期\n;d2: djnz r6,d2\t\t2周期\n;\tdjnz r7,d1\t\t2周期\n;\tret\t\t\t\t2周期\n;延时时间=1t+1t+250*(2t*250+2t+1t)+2t=≈0.125ms\n;=============================\norg 10  ;程序起始地址\nstart:\n    setb p1.0\n\tlcall delay\n\tclr p1.0\n\tlcall delay\n\tajmp start\t\t//跳转到start循环\n\ndelay:\n\tmov r7,#250\nd1: mov r6,#250\nd2: djnz r6,d2\t\t//r6减1后判断是否为0，不为0则执行d2，为0则执行下一句\n\tdjnz r7,d1\t\t//r7减1后判断是否为0，不为0则执行d1，d2，为0则返回\n\tret\n\tend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"多灯亮灭",frontmatter:{title:"多灯亮灭",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/led/multi",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/11.C51%E6%B1%87%E7%BC%96/02.%E5%A4%9ALED%E4%BA%AE%E7%81%AD.html",relativePath:"03.硬件知识/11.C51汇编/02.多LED亮灭.md",key:"v-5e62b2a2",path:"/hardware/c51/led/multi/",headers:[{level:2,title:"原理图",slug:"原理图",normalizedTitle:"原理图",charIndex:2},{level:2,title:"源程序",slug:"源程序",normalizedTitle:"源程序",charIndex:12}],headersStr:"原理图 源程序",content:"# 原理图\n\n\n\n\n# 源程序\n\n;=============================\n;多灯亮灭\n;=============================\nORG 10\nSTART:\n    MOV P1,#0\n\tLCALL DELAY\n\tMOV P1,#0FFH\n\tLCALL DELAY\n\tAJMP START\t\t//跳转到START循环\n\nDELAY:\n\tMOV R7,#250\nD1: MOV R6,#250\nD2: DJNZ R6,D2\t\t//R6减1后判断是否为0，不为0则执行D2，为0则执行下一句\n\tDJNZ R7,D1\t\t//R7减1后判断是否为0，不为0则执行D1，D2，为0则返回\n\tRET\n\tEND\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n",normalizedContent:"# 原理图\n\n\n\n\n# 源程序\n\n;=============================\n;多灯亮灭\n;=============================\norg 10\nstart:\n    mov p1,#0\n\tlcall delay\n\tmov p1,#0ffh\n\tlcall delay\n\tajmp start\t\t//跳转到start循环\n\ndelay:\n\tmov r7,#250\nd1: mov r6,#250\nd2: djnz r6,d2\t\t//r6减1后判断是否为0，不为0则执行d2，为0则执行下一句\n\tdjnz r7,d1\t\t//r7减1后判断是否为0，不为0则执行d1，d2，为0则返回\n\tret\n\tend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"多开关控制灯亮灭",frontmatter:{title:"多开关控制灯亮灭",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/switch/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/11.C51%E6%B1%87%E7%BC%96/03.%E5%BC%80%E5%85%B3%E6%8E%A7%E5%88%B6%E7%81%AF%E4%BA%AE%E7%81%AD.html",relativePath:"03.硬件知识/11.C51汇编/03.开关控制灯亮灭.md",key:"v-3e82775e",path:"/hardware/c51/switch/",headers:[{level:2,title:"原理图",slug:"原理图",normalizedTitle:"原理图",charIndex:2},{level:2,title:"源程序",slug:"源程序",normalizedTitle:"源程序",charIndex:12}],headersStr:"原理图 源程序",content:"# 原理图\n\n\n\n\n# 源程序\n\n//=========================\n//多开关控制灯亮灭\n//=========================\n\tORG 10\n\tCLR P1.0\n\tCLR P1.1\n\tCLR P1.2\nSTART:\n\tSETB P0.0\n\tSETB P0.1\n\tSETB P0.2\n\tJB   P0.0,LIG0\n\tSETB P1.0\n\tSJMP NEXT1\nLIG0:\n\tCLR P1.0\nNEXT1:\n\tJB P0.1,LIG1\n\tSETB P1.1\n\tSJMP NEXT2\nLIG1:\n\tCLR P1.1\nNEXT2:\n\tJB P0.2,LIG2\n\tSETB P1.2\n\tSJMP NEXT3\nLIG2:\n\tCLR P1.2\nNEXT3:\n\tJB P0.3,LIG3\n\tSETB P1.3\n\tSJMP NEXT4\nLIG3:\n\tCLR P1.3\nNEXT4:\n\tJB P0.4,LIG4\n\tSETB P1.4\n\tSJMP START\nLIG4:\n\tCLR P1.4\n\tSJMP START\n\tEND\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n",normalizedContent:"# 原理图\n\n\n\n\n# 源程序\n\n//=========================\n//多开关控制灯亮灭\n//=========================\n\torg 10\n\tclr p1.0\n\tclr p1.1\n\tclr p1.2\nstart:\n\tsetb p0.0\n\tsetb p0.1\n\tsetb p0.2\n\tjb   p0.0,lig0\n\tsetb p1.0\n\tsjmp next1\nlig0:\n\tclr p1.0\nnext1:\n\tjb p0.1,lig1\n\tsetb p1.1\n\tsjmp next2\nlig1:\n\tclr p1.1\nnext2:\n\tjb p0.2,lig2\n\tsetb p1.2\n\tsjmp next3\nlig2:\n\tclr p1.2\nnext3:\n\tjb p0.3,lig3\n\tsetb p1.3\n\tsjmp next4\nlig3:\n\tclr p1.3\nnext4:\n\tjb p0.4,lig4\n\tsetb p1.4\n\tsjmp start\nlig4:\n\tclr p1.4\n\tsjmp start\n\tend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"开关控制灯亮灭",frontmatter:{title:"开关控制灯亮灭",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/switch/multi/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/11.C51%E6%B1%87%E7%BC%96/04.%E5%A4%9A%E5%BC%80%E5%85%B3%E6%8E%A7%E5%88%B6%E7%81%AF%E4%BA%AE%E7%81%AD.html",relativePath:"03.硬件知识/11.C51汇编/04.多开关控制灯亮灭.md",key:"v-287cec73",path:"/hardware/c51/switch/multi/",headers:[{level:2,title:"原理图",slug:"原理图",normalizedTitle:"原理图",charIndex:2},{level:2,title:"源程序",slug:"源程序",normalizedTitle:"源程序",charIndex:12}],headersStr:"原理图 源程序",content:"# 原理图\n\n\n\n\n# 源程序\n\n;=============================\n;开关控制灯亮灭\n;=============================\n\tORG 10\n\tCLR P1.0\nSTART:\n\tSETB P0.0\n\tJB   P0.0,LIG\t//若等于1则跳转\n\tSETB P1.0\n\tSJMP START\n\nLIG:\n\tCLR  P1.0\n\tSJMP START\n\tEND\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",normalizedContent:"# 原理图\n\n\n\n\n# 源程序\n\n;=============================\n;开关控制灯亮灭\n;=============================\n\torg 10\n\tclr p1.0\nstart:\n\tsetb p0.0\n\tjb   p0.0,lig\t//若等于1则跳转\n\tsetb p1.0\n\tsjmp start\n\nlig:\n\tclr  p1.0\n\tsjmp start\n\tend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"开关控制灯亮灭-软件防抖",frontmatter:{title:"开关控制灯亮灭-软件防抖",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/switch/antishake/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/11.C51%E6%B1%87%E7%BC%96/05.%E5%A4%9A%E5%BC%80%E5%85%B3%E6%8E%A7%E5%88%B6%E7%81%AF%E4%BA%AE%E7%81%AD-%E8%BD%AF%E4%BB%B6%E9%98%B2%E6%8A%96.html",relativePath:"03.硬件知识/11.C51汇编/05.多开关控制灯亮灭-软件防抖.md",key:"v-2cd2db6f",path:"/hardware/c51/switch/antishake/",headers:[{level:2,title:"原理图",slug:"原理图",normalizedTitle:"原理图",charIndex:2},{level:2,title:"源程序",slug:"源程序",normalizedTitle:"源程序",charIndex:12}],headersStr:"原理图 源程序",content:"# 原理图\n\n\n\n\n# 源程序\n\n;====================\n;按键软件防抖\n;====================\n\tORG 000H\nSTART:\n\tMOV P0,#00FH\t;高4位全灭，低4位送1\n\tMOV A,P0\t\t;读P0口状态并送入A\n\tSWAP A\t\t\t;将累加器A的高、低4位数据交换\n\tANL A,#0F0H\t\t;保留高4位 ANL与\n\tMOV P0,A\t\t;从P0口输出\n\tLCALL DELAY\n\tSJMP START\n\nDELAY:\n\tMOV R6,#20\nD2: MOV R7,#70H\t\t;值太小会有余晖鬼辉效果\nD1: NOP\n\tNOP\n\tDJNZ R7,D1\n\tDJNZ R6,D2\n\tRET\n\tEND\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n",normalizedContent:"# 原理图\n\n\n\n\n# 源程序\n\n;====================\n;按键软件防抖\n;====================\n\torg 000h\nstart:\n\tmov p0,#00fh\t;高4位全灭，低4位送1\n\tmov a,p0\t\t;读p0口状态并送入a\n\tswap a\t\t\t;将累加器a的高、低4位数据交换\n\tanl a,#0f0h\t\t;保留高4位 anl与\n\tmov p0,a\t\t;从p0口输出\n\tlcall delay\n\tsjmp start\n\ndelay:\n\tmov r6,#20\nd2: mov r7,#70h\t\t;值太小会有余晖鬼辉效果\nd1: nop\n\tnop\n\tdjnz r7,d1\n\tdjnz r6,d2\n\tret\n\tend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"查表方式灯循环亮灭",frontmatter:{title:"查表方式灯循环亮灭",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/led/table/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/11.C51%E6%B1%87%E7%BC%96/06.%E6%9F%A5%E8%A1%A8%E6%96%B9%E5%BC%8F%E7%81%AF%E5%BE%AA%E7%8E%AF%E4%BA%AE%E7%81%AD.html",relativePath:"03.硬件知识/11.C51汇编/06.查表方式灯循环亮灭.md",key:"v-2741cd6f",path:"/hardware/c51/led/table/",headers:[{level:2,title:"原理图",slug:"原理图",normalizedTitle:"原理图",charIndex:2},{level:2,title:"源程序",slug:"源程序",normalizedTitle:"源程序",charIndex:12}],headersStr:"原理图 源程序",content:"# 原理图\n\n\n\n\n# 源程序\n\n;====================\n;从右到左分别亮和灭LED\n;数据指针(DPTR)是80C51中一个功能比较特殊的寄存器。从结构DPTR是一个16位的特殊功能寄存器， 其高位字节寄存器用DPH表示，低位字节寄存器用DPL表示，DPTR既可以作为一个16位的寄存器来处理，也可以作为两个独立的8位寄存器来使用。主要功能是存放16位地址，作为片外RAM寻址用的地址寄存器（间接寻址），故称数据指针。\n;访问片外数据存储器的指令：\n;MOVX A,@DPTR读\n;MOVX @DPTR,A写\n;指令以16位DPTR为间址寄存器读片外RAM，可以寻址整个64KB的片外空间。指令执行时，在DPH中的高八位地址由P2口输出，在DPL中的低八位地址由P0口分时输出，并由ALE信号锁存在地址锁存器中。\n;　　DPTR的另一个作用是变址寻址，访问程序存储器，做查表指令：如：\n;　　以dptr为基址寄存器,将dptr的内容与累加器a的内容相加得到变址地址\n;　　movc a, @a+dptr ; (a)<-----((a)+(dptr)\n;　　jmp @a+dptr;将DPTR中的内容作为基地址，通过修改a的内容实现散转\n;====================\n\tORG 0000H\n\tAJMP MAIN\n\tORG 0030H\nMAIN:\n\tMOV R0,#0FFH\t;(R0) 0FFH 即-1\n\tMOV R2,#16\t\t;总共16个数据\n\tMOV DPTR,#TAB\nLOOP:\n\tINC R0\t\t\t;R0+1\n\tMOV A,R0\t\t;将R0赋给A\n\tMOVC A,@A+DPTR\t;以A为下标读取地址并赋给A\nSHOW:\n\tMOV P0,A\t\t;将得到的表数据A赋给P0\n\tLCALL DELAY\n\tLCALL DELAY\n\tLCALL DELAY\n\tDJNZ R2,LOOP\t;循环16次\n\tAJMP MAIN\nDELAY:\n\tMOV R6,#255\nD2: MOV R7,#255\n\tDJNZ R7,$\t\t;$ 指本条指令的起始位置\n\tDJNZ R6,D2\n\tRET\n\nTAB:\n\t;0FEH 0FCH 0F8H 0F0H 0E0H 0CH 80H 00H 01H 03H 07H 0FH 1FH 3FH 7FH 0FFH\n\tDB 11111110B\n\tDB 11111100B\n\tDB 11111000B\n\tDB 11110000B\n\tDB 11100000B\n\tDB 11000000B\n\tDB 10000000B\n\tDB 00000000B\n\tDB 00000001B\n\tDB 00000011B\n\tDB 00000111B\n\tDB 00001111B\n\tDB 00011111B\n\tDB 00111111B\n\tDB 01111111B\n\tDB 11111111B\t\n\tEND\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n",normalizedContent:"# 原理图\n\n\n\n\n# 源程序\n\n;====================\n;从右到左分别亮和灭led\n;数据指针(dptr)是80c51中一个功能比较特殊的寄存器。从结构dptr是一个16位的特殊功能寄存器， 其高位字节寄存器用dph表示，低位字节寄存器用dpl表示，dptr既可以作为一个16位的寄存器来处理，也可以作为两个独立的8位寄存器来使用。主要功能是存放16位地址，作为片外ram寻址用的地址寄存器（间接寻址），故称数据指针。\n;访问片外数据存储器的指令：\n;movx a,@dptr读\n;movx @dptr,a写\n;指令以16位dptr为间址寄存器读片外ram，可以寻址整个64kb的片外空间。指令执行时，在dph中的高八位地址由p2口输出，在dpl中的低八位地址由p0口分时输出，并由ale信号锁存在地址锁存器中。\n;　　dptr的另一个作用是变址寻址，访问程序存储器，做查表指令：如：\n;　　以dptr为基址寄存器,将dptr的内容与累加器a的内容相加得到变址地址\n;　　movc a, @a+dptr ; (a)<-----((a)+(dptr)\n;　　jmp @a+dptr;将dptr中的内容作为基地址，通过修改a的内容实现散转\n;====================\n\torg 0000h\n\tajmp main\n\torg 0030h\nmain:\n\tmov r0,#0ffh\t;(r0) 0ffh 即-1\n\tmov r2,#16\t\t;总共16个数据\n\tmov dptr,#tab\nloop:\n\tinc r0\t\t\t;r0+1\n\tmov a,r0\t\t;将r0赋给a\n\tmovc a,@a+dptr\t;以a为下标读取地址并赋给a\nshow:\n\tmov p0,a\t\t;将得到的表数据a赋给p0\n\tlcall delay\n\tlcall delay\n\tlcall delay\n\tdjnz r2,loop\t;循环16次\n\tajmp main\ndelay:\n\tmov r6,#255\nd2: mov r7,#255\n\tdjnz r7,$\t\t;$ 指本条指令的起始位置\n\tdjnz r6,d2\n\tret\n\ntab:\n\t;0feh 0fch 0f8h 0f0h 0e0h 0ch 80h 00h 01h 03h 07h 0fh 1fh 3fh 7fh 0ffh\n\tdb 11111110b\n\tdb 11111100b\n\tdb 11111000b\n\tdb 11110000b\n\tdb 11100000b\n\tdb 11000000b\n\tdb 10000000b\n\tdb 00000000b\n\tdb 00000001b\n\tdb 00000011b\n\tdb 00000111b\n\tdb 00001111b\n\tdb 00011111b\n\tdb 00111111b\n\tdb 01111111b\n\tdb 11111111b\t\n\tend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"查表方式按键控制灯亮灭",frontmatter:{title:"查表方式按键控制灯亮灭",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/switch/table/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/11.C51%E6%B1%87%E7%BC%96/07.%E6%9F%A5%E8%A1%A8%E6%96%B9%E5%BC%8F%E6%8C%89%E9%94%AE%E6%8E%A7%E5%88%B6%E7%81%AF%E4%BA%AE%E7%81%AD.html",relativePath:"03.硬件知识/11.C51汇编/07.查表方式按键控制灯亮灭.md",key:"v-1d354fb3",path:"/hardware/c51/switch/table/",headers:[{level:2,title:"原理图",slug:"原理图",normalizedTitle:"原理图",charIndex:2},{level:2,title:"源程序",slug:"源程序",normalizedTitle:"源程序",charIndex:12}],headersStr:"原理图 源程序",content:"# 原理图\n\n\n\n\n# 源程序\n\n;====================\n;查表方式从右到左分别亮和灭LED\n;====================\n\tORG 0000H\n\tAJMP START\n\tORG 0030H\nSTART:\n\tSETB P2.0\t;设置P2.0为输入功能\nMAIN:\n\tMOV R0,#0FFH\t;(R0) 0FFH 即-1\n\tMOV R2,#16\t\t;总共16个数据\n\tMOV DPTR,#TAB\nLOOP:\n\tINC R0\t\t\t;R0+1\n\tMOV A,R0\t\t;将R0赋给A\n\tMOVC A,@A+DPTR\t;以A为下标读取地址并赋给A\nSHOW:\n\tJNB P2.0,INCR\t;若P2.0=0则跳转\n\tJMP SHOW\t\t;若按键未按下则循环检测\nINCR:\n\tJNB P2.0,INCR\t;若按键未松，则等待\n\tMOV P0,A\n\tLCALL DELAY\n\tLCALL DELAY\n\tLCALL DELAY\n\tDJNZ R2,LOOP\t;循环16次\n\tAJMP MAIN\n\t\nDELAY:\n\tMOV R6,#255\nD2: MOV R7,#255\n\tDJNZ R7,$\t\t;$ 指本条指令的起始位置\n\tDJNZ R6,D2\n\tRET\n\nTAB:\n\t;0FEH 0FCH 0F8H 0F0H 0E0H 0CH 80H 00H 01H 03H 07H 0FH 1FH 3FH 7FH 0FFH\n\tDB 11111110B\n\tDB 11111100B\n\tDB 11111000B\n\tDB 11110000B\n\tDB 11100000B\n\tDB 11000000B\n\tDB 10000000B\n\tDB 00000000B\n\tDB 00000001B\n\tDB 00000011B\n\tDB 00000111B\n\tDB 00001111B\n\tDB 00011111B\n\tDB 00111111B\n\tDB 01111111B\n\tDB 11111111B\t\n\tEND\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n",normalizedContent:"# 原理图\n\n\n\n\n# 源程序\n\n;====================\n;查表方式从右到左分别亮和灭led\n;====================\n\torg 0000h\n\tajmp start\n\torg 0030h\nstart:\n\tsetb p2.0\t;设置p2.0为输入功能\nmain:\n\tmov r0,#0ffh\t;(r0) 0ffh 即-1\n\tmov r2,#16\t\t;总共16个数据\n\tmov dptr,#tab\nloop:\n\tinc r0\t\t\t;r0+1\n\tmov a,r0\t\t;将r0赋给a\n\tmovc a,@a+dptr\t;以a为下标读取地址并赋给a\nshow:\n\tjnb p2.0,incr\t;若p2.0=0则跳转\n\tjmp show\t\t;若按键未按下则循环检测\nincr:\n\tjnb p2.0,incr\t;若按键未松，则等待\n\tmov p0,a\n\tlcall delay\n\tlcall delay\n\tlcall delay\n\tdjnz r2,loop\t;循环16次\n\tajmp main\n\t\ndelay:\n\tmov r6,#255\nd2: mov r7,#255\n\tdjnz r7,$\t\t;$ 指本条指令的起始位置\n\tdjnz r6,d2\n\tret\n\ntab:\n\t;0feh 0fch 0f8h 0f0h 0e0h 0ch 80h 00h 01h 03h 07h 0fh 1fh 3fh 7fh 0ffh\n\tdb 11111110b\n\tdb 11111100b\n\tdb 11111000b\n\tdb 11110000b\n\tdb 11100000b\n\tdb 11000000b\n\tdb 10000000b\n\tdb 00000000b\n\tdb 00000001b\n\tdb 00000011b\n\tdb 00000111b\n\tdb 00001111b\n\tdb 00011111b\n\tdb 00111111b\n\tdb 01111111b\n\tdb 11111111b\t\n\tend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"查表方式霓虹灯",frontmatter:{title:"查表方式霓虹灯",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/led/neonlamp/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/11.C51%E6%B1%87%E7%BC%96/08.%E6%9F%A5%E8%A1%A8%E6%96%B9%E5%BC%8F%E9%9C%93%E8%99%B9%E7%81%AF.html",relativePath:"03.硬件知识/11.C51汇编/08.查表方式霓虹灯.md",key:"v-37d824b0",path:"/hardware/c51/led/neonlamp/",headers:[{level:2,title:"原理图",slug:"原理图",normalizedTitle:"原理图",charIndex:2},{level:2,title:"源程序",slug:"源程序",normalizedTitle:"源程序",charIndex:12}],headersStr:"原理图 源程序",content:"# 原理图\n\n\n\n\n# 源程序\n\n;==================\n;查表霓虹灯\n;==================\n\tORG 0\nSTART:\n\tMOV R0,#0FH\nLOOP:\n\tINC R0\n\tCJNE R0,#25,LJSHOW\t;比较不相等跳转\n\tMOV R0,#0\nLJSHOW:\n\tACALL SHOW\n\tLCALL DELAY\n\tLCALL DELAY\n\tJMP LOOP\nSHOW:\n\tMOV A,R0\n\tMOV DPTR,#LED\n\tMOVC A,@A+DPTR\n\tMOV P0,A\n\tRET\nDELAY:\n\tMOV R5,#20\nD1: MOV R6,#20\nD2: MOV R7,#248\n\tDJNZ R7,$\n\tDJNZ R6,D2\n\tDJNZ R5,D1\n\tRET\nLED: DB 00H,0FFH,00H,0FFH\n\t DB 0FEH,0FDH,0FBH,0F7H,0EFH,0DFH,0BFH,7FH,0BFH,0DFH,0EFH,0F7H,0FBH,0FDH,0F7H,0FCH,0F8H,0E0H,0C0H,80H,00H\n\tEND\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n",normalizedContent:"# 原理图\n\n\n\n\n# 源程序\n\n;==================\n;查表霓虹灯\n;==================\n\torg 0\nstart:\n\tmov r0,#0fh\nloop:\n\tinc r0\n\tcjne r0,#25,ljshow\t;比较不相等跳转\n\tmov r0,#0\nljshow:\n\tacall show\n\tlcall delay\n\tlcall delay\n\tjmp loop\nshow:\n\tmov a,r0\n\tmov dptr,#led\n\tmovc a,@a+dptr\n\tmov p0,a\n\tret\ndelay:\n\tmov r5,#20\nd1: mov r6,#20\nd2: mov r7,#248\n\tdjnz r7,$\n\tdjnz r6,d2\n\tdjnz r5,d1\n\tret\nled: db 00h,0ffh,00h,0ffh\n\t db 0feh,0fdh,0fbh,0f7h,0efh,0dfh,0bfh,7fh,0bfh,0dfh,0efh,0f7h,0fbh,0fdh,0f7h,0fch,0f8h,0e0h,0c0h,80h,00h\n\tend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"介绍",frontmatter:{title:"介绍",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/info/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/12.STM32/01.%E4%BB%8B%E7%BB%8D.html",relativePath:"03.硬件知识/12.STM32/01.介绍.md",key:"v-0e277298",path:"/hardware/stm32/info/",headers:[{level:2,title:"Cortex内核",slug:"cortex内核",normalizedTitle:"cortex内核",charIndex:2},{level:3,title:"先进的Cortex-M4",slug:"先进的cortex-m4",normalizedTitle:"先进的cortex-m4",charIndex:263},{level:3,title:"更多的存储空间",slug:"更多的存储空间",normalizedTitle:"更多的存储空间",charIndex:305},{level:3,title:"极致的运行速度",slug:"极致的运行速度",normalizedTitle:"极致的运行速度",charIndex:372},{level:3,title:"更高级的外设",slug:"更高级的外设",normalizedTitle:"更高级的外设",charIndex:416},{level:3,title:"内核对比",slug:"内核对比",normalizedTitle:"内核对比",charIndex:494},{level:3,title:"低功耗设计",slug:"低功耗设计",normalizedTitle:"低功耗设计",charIndex:513},{level:3,title:"更高级外设",slug:"更高级外设",normalizedTitle:"更高级外设",charIndex:529},{level:2,title:"STM32家族",slug:"stm32家族",normalizedTitle:"stm32家族",charIndex:551}],headersStr:"Cortex内核 先进的Cortex-M4 更多的存储空间 极致的运行速度 更高级的外设 内核对比 低功耗设计 更高级外设 STM32家族",content:"# Cortex内核\n\n基于ARM内核的32位MCU系列，高性能、低成本、低功耗的嵌入式应用专门设计的Cortex-M4内核，\n\n * -A系列：面向尖端的基于虚拟内存的操作系统和用户应用\n * -R系列：针对实时系统\n * -M系列：针对微控制器\n\n内核             架构\nCortex-M4      ARMv7-ME\nCortex-M3      ARMv7-M\nCortex-M0      ARMv6-M\nCortex-A5/A8   ARMv7-A\nARM7           ARMv4T\n\n\n# 先进的Cortex-M4\n\n * 浮点运算能力\n * 增强的DSP处理指令\n\n\n# 更多的存储空间\n\n * 高达1M字节的片上闪存\n\n * 高达196K字节的内嵌SRAM\n\n * FSMC：灵活的外部存储接口\n\n\n# 极致的运行速度\n\n * 以168MHz高速运行时可达210DMIPS的处理能力\n\n\n# 更高级的外设\n\n * 新增功能：照相机接口、加密处理器、USB高速OTG接口\n * 增强功能：更快的通信接口、更高采样率、带FIFO的DMA控制器\n\n\n# 内核对比\n\n\n\n\n\n\n\n\n\n\n\n\n# 低功耗设计\n\n\n\n\n\n\n\n\n# 更高级外设\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# STM32家族\n\n\n\n\n\n",normalizedContent:"# cortex内核\n\n基于arm内核的32位mcu系列，高性能、低成本、低功耗的嵌入式应用专门设计的cortex-m4内核，\n\n * -a系列：面向尖端的基于虚拟内存的操作系统和用户应用\n * -r系列：针对实时系统\n * -m系列：针对微控制器\n\n内核             架构\ncortex-m4      armv7-me\ncortex-m3      armv7-m\ncortex-m0      armv6-m\ncortex-a5/a8   armv7-a\narm7           armv4t\n\n\n# 先进的cortex-m4\n\n * 浮点运算能力\n * 增强的dsp处理指令\n\n\n# 更多的存储空间\n\n * 高达1m字节的片上闪存\n\n * 高达196k字节的内嵌sram\n\n * fsmc：灵活的外部存储接口\n\n\n# 极致的运行速度\n\n * 以168mhz高速运行时可达210dmips的处理能力\n\n\n# 更高级的外设\n\n * 新增功能：照相机接口、加密处理器、usb高速otg接口\n * 增强功能：更快的通信接口、更高采样率、带fifo的dma控制器\n\n\n# 内核对比\n\n\n\n\n\n\n\n\n\n\n\n\n# 低功耗设计\n\n\n\n\n\n\n\n\n# 更高级外设\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# stm32家族\n\n\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"STM32F407芯片内部",frontmatter:{title:"STM32F407芯片内部",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/inner/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/12.STM32/02.STM32F407%E8%8A%AF%E7%89%87%E5%86%85%E9%83%A8.html",relativePath:"03.硬件知识/12.STM32/02.STM32F407芯片内部.md",key:"v-82223bb8",path:"/hardware/stm32/inner/",headers:[{level:2,title:"资源描述",slug:"资源描述",normalizedTitle:"资源描述",charIndex:2},{level:3,title:"内核：",slug:"内核",normalizedTitle:"内核：",charIndex:11},{level:3,title:"IO口",slug:"io口",normalizedTitle:"io口",charIndex:94},{level:3,title:"存储器容量",slug:"存储器容量",normalizedTitle:"存储器容量",charIndex:184},{level:3,title:"时钟，复位和电源管理",slug:"时钟-复位和电源管理",normalizedTitle:"时钟，复位和电源管理",charIndex:220},{level:3,title:"低功耗",slug:"低功耗",normalizedTitle:"低功耗",charIndex:463},{level:3,title:"AD",slug:"ad",normalizedTitle:"ad",charIndex:511},{level:3,title:"DA",slug:"da",normalizedTitle:"da",charIndex:571},{level:3,title:"DMA",slug:"dma",normalizedTitle:"dma",charIndex:587},{level:3,title:"定时器：多达17个定时器",slug:"定时器-多达17个定时器",normalizedTitle:"定时器：多达17个定时器",charIndex:664},{level:3,title:"通信接口：多达17个通信接口",slug:"通信接口-多达17个通信接口",normalizedTitle:"通信接口：多达17个通信接口",charIndex:754},{level:2,title:"芯片内部",slug:"芯片内部",normalizedTitle:"芯片内部",charIndex:839},{level:2,title:"最小系统",slug:"最小系统",normalizedTitle:"最小系统",charIndex:854}],headersStr:"资源描述 内核： IO口 存储器容量 时钟，复位和电源管理 低功耗 AD DA DMA 定时器：多达17个定时器 通信接口：多达17个通信接口 芯片内部 最小系统",content:"# 资源描述\n\n\n# 内核：\n\n * 32位 高性能ARM Cortex-M4处理器\n\n * 时钟：高达168M,实际还可以超屏一点点\n\n * 支持FPU（浮点运算）和DSP指令\n\n\n# IO口\n\n * STM32F407ZGT6: 144引脚 114个IO\n * 大部分IO口都耐5V(模拟通道除外)\n * 支持调试：SWD和JTAG，SWD只要2根数据线\n\n\n# 存储器容量\n\n * 1024K FLASH，192K SRAM\n\n\n# 时钟，复位和电源管理\n\n * 1.8~3.6V电源和IO电压\n\n * 上电复位，掉电复位和可编程的电压监控\n\n * 强大的时钟系统\n   \n   * 4~26M的外部高速晶振\n   \n   * 内部16MHz的高速RC振荡器\n   \n   * 内部32KHz低速RC振荡器，看门狗时钟\n   \n   * 内部锁相环（PLL，倍频），一般系统时钟都是外部\n   \n   * 或者内部高速时钟经过PLL倍频后得到\n   \n   * 外部低速32.768K的晶振，主要做RTC时钟源\n\n\n# 低功耗\n\n * 睡眠，停止和待机三种低功耗模式\n * 可用电池为RTC和备份寄存器供电\n\n\n# AD\n\n * 3个12位AD【多达24个外部测量通道】\n * 内部通道可以用于内部温度测量\n * 内置参考电压\n\n\n# DA\n\n2个12位DA\n\n\n# DMA\n\n * 16个DMA通道 ，带FIFO和突发支持\n * 支持外设：定时器，ADC,DAC，SDIO,I2S,SPI,I2C,和USART\n\n\n# 定时器：多达17个定时器\n\n * 10个通用定时器（TIM2和TIM5是32位）\n * 2个基本定时器\n * 2个高级定时器\n * 1个系统定时器\n * 2个看门狗定时器\n\n\n# 通信接口：多达17个通信接口\n\n * 3个I2C接口\n * 6个串口\n * 3个SPI接口\n * 2个CAN2.0\n * 2个USB OTG\n * 1个SDIO\n\n\n# 芯片内部\n\n\n\n\n\n\n\n\n# 最小系统\n\n * 供电\n * 复位\n * 时钟：外部晶振（2个）\n * Boot启动模式选择\n * 下载电路（串口/JTAG/SWD)\n * 后备电池",normalizedContent:"# 资源描述\n\n\n# 内核：\n\n * 32位 高性能arm cortex-m4处理器\n\n * 时钟：高达168m,实际还可以超屏一点点\n\n * 支持fpu（浮点运算）和dsp指令\n\n\n# io口\n\n * stm32f407zgt6: 144引脚 114个io\n * 大部分io口都耐5v(模拟通道除外)\n * 支持调试：swd和jtag，swd只要2根数据线\n\n\n# 存储器容量\n\n * 1024k flash，192k sram\n\n\n# 时钟，复位和电源管理\n\n * 1.8~3.6v电源和io电压\n\n * 上电复位，掉电复位和可编程的电压监控\n\n * 强大的时钟系统\n   \n   * 4~26m的外部高速晶振\n   \n   * 内部16mhz的高速rc振荡器\n   \n   * 内部32khz低速rc振荡器，看门狗时钟\n   \n   * 内部锁相环（pll，倍频），一般系统时钟都是外部\n   \n   * 或者内部高速时钟经过pll倍频后得到\n   \n   * 外部低速32.768k的晶振，主要做rtc时钟源\n\n\n# 低功耗\n\n * 睡眠，停止和待机三种低功耗模式\n * 可用电池为rtc和备份寄存器供电\n\n\n# ad\n\n * 3个12位ad【多达24个外部测量通道】\n * 内部通道可以用于内部温度测量\n * 内置参考电压\n\n\n# da\n\n2个12位da\n\n\n# dma\n\n * 16个dma通道 ，带fifo和突发支持\n * 支持外设：定时器，adc,dac，sdio,i2s,spi,i2c,和usart\n\n\n# 定时器：多达17个定时器\n\n * 10个通用定时器（tim2和tim5是32位）\n * 2个基本定时器\n * 2个高级定时器\n * 1个系统定时器\n * 2个看门狗定时器\n\n\n# 通信接口：多达17个通信接口\n\n * 3个i2c接口\n * 6个串口\n * 3个spi接口\n * 2个can2.0\n * 2个usb otg\n * 1个sdio\n\n\n# 芯片内部\n\n\n\n\n\n\n\n\n# 最小系统\n\n * 供电\n * 复位\n * 时钟：外部晶振（2个）\n * boot启动模式选择\n * 下载电路（串口/jtag/swd)\n * 后备电池",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"新建工程",frontmatter:{title:"新建工程",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/new/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/12.STM32/04.%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B.html",relativePath:"03.硬件知识/12.STM32/04.新建工程.md",key:"v-88880c64",path:"/hardware/stm32/new/",headers:[{level:2,title:"库函数和寄存器",slug:"库函数和寄存器",normalizedTitle:"库函数和寄存器",charIndex:2},{level:3,title:"区别",slug:"区别",normalizedTitle:"区别",charIndex:14},{level:2,title:"工程结构",slug:"工程结构",normalizedTitle:"工程结构",charIndex:214},{level:3,title:"文件夹",slug:"文件夹",normalizedTitle:"文件夹",charIndex:223},{level:3,title:"介绍",slug:"介绍",normalizedTitle:"介绍",charIndex:262},{level:2,title:"固件库模板",slug:"固件库模板",normalizedTitle:"固件库模板",charIndex:459},{level:3,title:"初始",slug:"初始",normalizedTitle:"初始",charIndex:469},{level:3,title:"常见错误",slug:"常见错误",normalizedTitle:"常见错误",charIndex:600},{level:3,title:"固件包",slug:"固件包",normalizedTitle:"固件包",charIndex:1308},{level:2,title:"寄存器模板",slug:"寄存器模板",normalizedTitle:"寄存器模板",charIndex:69},{level:3,title:"启动文件修改",slug:"启动文件修改",normalizedTitle:"启动文件修改",charIndex:1328},{level:2,title:"建立工程",slug:"建立工程",normalizedTitle:"建立工程",charIndex:1865}],headersStr:"库函数和寄存器 区别 工程结构 文件夹 介绍 固件库模板 初始 常见错误 固件包 寄存器模板 启动文件修改 建立工程",content:'# 库函数和寄存器\n\n\n# 区别\n\n本质上是一样的。我们可以在库函数模板里面，直接操作寄存器，因为官方库相关头文件有寄存器定义。但是不能在寄存器模板调用库函数，因为没有引入库函数相关定义。 了解寄存器基本原理的目的是为了让我们对STM32相关知识有比较深入的理解，这样在开发过程中方可得心应手，游刃有余。底层代码配置出了问题需要调试的话，必须对寄存器有一定的了解才能找到问题，因为调试代码，底层只能查看寄存器相关配置。\n\n\n# 工程结构\n\n\n# 文件夹\n\nUSER、CORE、FWLIB、SYSTEM、README\n\n\n# 介绍\n\n 1. “USER”:存放工程共用文件,延时函数、位操作\n\n 2. “CORE”：存放工程的主函数main.c\n\n 3. “FWLIB”：存放STM32 库文件\n\n 4. “SYSTEM”:存放STM32 的启动文件、核心文件和一些头文件\n\n 5. “README”:存放STM32 外设的驱动文件，如：led、key、lcd、ADC、DAC、PWM ……\n    \n    \n\n\n# 固件库模板\n\n\n# 初始\n\n环境：MDK5\n\n固件库版本：v1.4(F4专用)\n\n重要的预编译全局宏定义标识符：\n\nSTM32F40_41xxx,USE_STDPERIPH_DRIVER\n\n\n1\n\n\n启动文件：\n\nstartup_stm32f40_41xxx.s\n\n\n1\n\n\n\n# 常见错误\n\n"no source": Error: command-line: #992: invalid macro definition: STM32F40_41xxx.USE_STDPERIPH_DRIVER\n\n答案：STM32F40_41xxx,USE_STDPERIPH_DRIVER \n    宏定义标识符错误。。。。输入要正确，逗号隔开\n\n\n1\n2\n\n\n..\\FWLIB\\src\\stm32f4xx_usart.c(1038): warning: 223-D: function "assert_param" declared implicitly\n\n答案：宏定义标识符“USE_STDPERIPH_DRIVER”书写错误。\n\n\n1\n\n\n..\\USER\\stm32f4xx.h(102): error: #35: error directive: "Please select first the target STM32F4xx device used in your application (in stm32f4xx.h file)“\n\n答案：宏定义标识符“STM32F40_41xxx”书写错误。\n\n\n1\n\n\n..\\USER\\stm32f4xx_conf.h(34): error: #5: cannot open source input file "stm32f4xx_adc.h": No such file or directory\n\n头文件路径找不到。加入path的路径为inc子目录，不是src子目录。\n或者压根头文件路径inc就没有加入到工程的path中。\n\n\n1\n2\n\n\n\n# 固件包\n\n\n\n\n# 寄存器模板\n\n\n# 启动文件修改\n\nstartup_stm32f40_41xxx.s\n\n; Reset handler\nReset_Handler    PROC\n                 EXPORT  Reset_Handler             [WEAK]\n;IMPORT  SystemInit\t\n;寄存器代码,不需要在这里调用SystemInit函数,故屏蔽掉,库函数版本代码,可以留下\n;不过需要在外部实现SystemInit函数,否则会报错.\nIMPORT  __main\n    LDR     R0, =0xE000ED88    ; 使能浮点运算 CP10,CP11\n    LDR     R1,[R0]\n    ORR     R1,R1,#(0xF << 20)\n    STR     R1,[R0]\n\n    ;LDR     R0, =SystemInit\t;寄存器代码,未用到,屏蔽\n    ;BLX     R0\t\t\t\t;寄存器代码,未用到,屏蔽\n    LDR     R0, =__main\n    BX      R0\n    ENDP\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 建立工程\n\n以下以建立一个LED 工程为例讲解\n\n 1. 拷贝工程所需的基本文件\n    \n    1. 建立“LED 例程”文件夹\n       \n       \n    \n    2. 拷贝工程所需的基本文件到“LED 例程”文件夹\n       \n       \n\n 2. 建立工程文件\n    \n    1. 打开keil，这步需要安装完整完keil\n    \n    2. 建立工程文件\n       \n       \n    \n    3. 命名工程名字和保存工程文件 命名工程文件为“LED”，保存工程文件到刚才拷贝的基本文件中的“Project”文件夹中。\n       \n       \n    \n    4. 添加目标开发板的芯片\n       \n       \n       \n       \n       \n       建立完工程会在“Project”中出现如下图的工程文件\n       \n       \n    \n    5. 设置编译过程产生的文件存放位置“Output”存放在“OBJ”，点击“OK”成功\n       \n       \n       \n       “Listing”存放在“LIST”，点击“OK”成功\n       \n       \n    \n    6. 建立模块化文件夹\n       \n       用第一步拷贝的基本文件的名字，命名模块化文件夹\n       \n       \n    \n    7. 在对应的模块化文件夹中添加文件 把第一步拷贝的基本文件对应的添加到工程\n       \n       \n    \n    8. 添加完文件后如下图所示\n       \n       \n\n 3. 编写用户代码\n    \n    1. 在“USER”,建立“LED”文件夹\n    \n    2. 这步根据自己所需用到何种外设建立文件夹，这就是模块化编程\n       \n       建立用户代码 .c 和 .h 文件\n       \n       点击下图左上角第一个红色圈出来的，建立文件\n       \n       点击保存在USER 对应的文件夹中\n       \n       以下为.c 为例，.h 同理\n       \n       在建立的.c 中编写用户代码\n       \n       \n    \n    3. 用户文件添加到工程\n       \n       ',normalizedContent:'# 库函数和寄存器\n\n\n# 区别\n\n本质上是一样的。我们可以在库函数模板里面，直接操作寄存器，因为官方库相关头文件有寄存器定义。但是不能在寄存器模板调用库函数，因为没有引入库函数相关定义。 了解寄存器基本原理的目的是为了让我们对stm32相关知识有比较深入的理解，这样在开发过程中方可得心应手，游刃有余。底层代码配置出了问题需要调试的话，必须对寄存器有一定的了解才能找到问题，因为调试代码，底层只能查看寄存器相关配置。\n\n\n# 工程结构\n\n\n# 文件夹\n\nuser、core、fwlib、system、readme\n\n\n# 介绍\n\n 1. “user”:存放工程共用文件,延时函数、位操作\n\n 2. “core”：存放工程的主函数main.c\n\n 3. “fwlib”：存放stm32 库文件\n\n 4. “system”:存放stm32 的启动文件、核心文件和一些头文件\n\n 5. “readme”:存放stm32 外设的驱动文件，如：led、key、lcd、adc、dac、pwm ……\n    \n    \n\n\n# 固件库模板\n\n\n# 初始\n\n环境：mdk5\n\n固件库版本：v1.4(f4专用)\n\n重要的预编译全局宏定义标识符：\n\nstm32f40_41xxx,use_stdperiph_driver\n\n\n1\n\n\n启动文件：\n\nstartup_stm32f40_41xxx.s\n\n\n1\n\n\n\n# 常见错误\n\n"no source": error: command-line: #992: invalid macro definition: stm32f40_41xxx.use_stdperiph_driver\n\n答案：stm32f40_41xxx,use_stdperiph_driver \n    宏定义标识符错误。。。。输入要正确，逗号隔开\n\n\n1\n2\n\n\n..\\fwlib\\src\\stm32f4xx_usart.c(1038): warning: 223-d: function "assert_param" declared implicitly\n\n答案：宏定义标识符“use_stdperiph_driver”书写错误。\n\n\n1\n\n\n..\\user\\stm32f4xx.h(102): error: #35: error directive: "please select first the target stm32f4xx device used in your application (in stm32f4xx.h file)“\n\n答案：宏定义标识符“stm32f40_41xxx”书写错误。\n\n\n1\n\n\n..\\user\\stm32f4xx_conf.h(34): error: #5: cannot open source input file "stm32f4xx_adc.h": no such file or directory\n\n头文件路径找不到。加入path的路径为inc子目录，不是src子目录。\n或者压根头文件路径inc就没有加入到工程的path中。\n\n\n1\n2\n\n\n\n# 固件包\n\n\n\n\n# 寄存器模板\n\n\n# 启动文件修改\n\nstartup_stm32f40_41xxx.s\n\n; reset handler\nreset_handler    proc\n                 export  reset_handler             [weak]\n;import  systeminit\t\n;寄存器代码,不需要在这里调用systeminit函数,故屏蔽掉,库函数版本代码,可以留下\n;不过需要在外部实现systeminit函数,否则会报错.\nimport  __main\n    ldr     r0, =0xe000ed88    ; 使能浮点运算 cp10,cp11\n    ldr     r1,[r0]\n    orr     r1,r1,#(0xf << 20)\n    str     r1,[r0]\n\n    ;ldr     r0, =systeminit\t;寄存器代码,未用到,屏蔽\n    ;blx     r0\t\t\t\t;寄存器代码,未用到,屏蔽\n    ldr     r0, =__main\n    bx      r0\n    endp\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 建立工程\n\n以下以建立一个led 工程为例讲解\n\n 1. 拷贝工程所需的基本文件\n    \n    1. 建立“led 例程”文件夹\n       \n       \n    \n    2. 拷贝工程所需的基本文件到“led 例程”文件夹\n       \n       \n\n 2. 建立工程文件\n    \n    1. 打开keil，这步需要安装完整完keil\n    \n    2. 建立工程文件\n       \n       \n    \n    3. 命名工程名字和保存工程文件 命名工程文件为“led”，保存工程文件到刚才拷贝的基本文件中的“project”文件夹中。\n       \n       \n    \n    4. 添加目标开发板的芯片\n       \n       \n       \n       \n       \n       建立完工程会在“project”中出现如下图的工程文件\n       \n       \n    \n    5. 设置编译过程产生的文件存放位置“output”存放在“obj”，点击“ok”成功\n       \n       \n       \n       “listing”存放在“list”，点击“ok”成功\n       \n       \n    \n    6. 建立模块化文件夹\n       \n       用第一步拷贝的基本文件的名字，命名模块化文件夹\n       \n       \n    \n    7. 在对应的模块化文件夹中添加文件 把第一步拷贝的基本文件对应的添加到工程\n       \n       \n    \n    8. 添加完文件后如下图所示\n       \n       \n\n 3. 编写用户代码\n    \n    1. 在“user”,建立“led”文件夹\n    \n    2. 这步根据自己所需用到何种外设建立文件夹，这就是模块化编程\n       \n       建立用户代码 .c 和 .h 文件\n       \n       点击下图左上角第一个红色圈出来的，建立文件\n       \n       点击保存在user 对应的文件夹中\n       \n       以下为.c 为例，.h 同理\n       \n       在建立的.c 中编写用户代码\n       \n       \n    \n    3. 用户文件添加到工程\n       \n       ',charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"环境安装与下载方式",frontmatter:{title:"环境安装与下载方式",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/path/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/12.STM32/03.%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F.html",relativePath:"03.硬件知识/12.STM32/03.环境安装与下载方式.md",key:"v-16a4de85",path:"/hardware/stm32/path/",headers:[{level:2,title:"环境安装",slug:"环境安装",normalizedTitle:"环境安装",charIndex:2},{level:3,title:"MDK安装",slug:"mdk安装",normalizedTitle:"mdk安装",charIndex:11},{level:3,title:"驱动安装",slug:"驱动安装",normalizedTitle:"驱动安装",charIndex:21},{level:3,title:"工具使用",slug:"工具使用",normalizedTitle:"工具使用",charIndex:37},{level:2,title:"启动模式",slug:"启动模式",normalizedTitle:"启动模式",charIndex:71},{level:2,title:"ISP下载",slug:"isp下载",normalizedTitle:"isp下载",charIndex:114},{level:3,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:124},{level:3,title:"原理",slug:"原理",normalizedTitle:"原理",charIndex:244},{level:2,title:"JLINK下载",slug:"jlink下载",normalizedTitle:"jlink下载",charIndex:391},{level:3,title:"原理",slug:"原理-2",normalizedTitle:"原理",charIndex:244}],headersStr:"环境安装 MDK安装 驱动安装 工具使用 启动模式 ISP下载 方法 原理 JLINK下载 原理",content:"# 环境安装\n\n\n# MDK安装\n\n\n# 驱动安装\n\nCH340\n\n\n# 工具使用\n\n下载工具配置:mcuisp(FlyMcu)\n\n\n\n\n# 启动模式\n\nSTM32直接通过两个引脚Boot0和Boot1设置启动模式\n\n\n\n\n# ISP下载\n\n\n# 方法\n\n 1. Boot0接3.3，Boot1接GND\n 2. 按复位按键，实现下载\n 3. mcuisp/flymcu勾选“编程后执行”，发送命令直接从FLASH启动。\n 4. Boot0接GND，Boot1接任意，按一次复位。\n\n\n# 原理\n\n一键下载电路，利用串口的DTR和RTS信号，分别控制STM32的复位和B0，配合上位机软件（mcuisp），设置：DTR的低电平复位，RTS高电平进BootLoader，这样，B0和STM32的复位，完全可以由下载软件自动控制，从而实现一键下载。\n\n\n\n不使用一键下载电路\n\n\n\n\n# JLINK下载\n\n 1. 1. 连接好DAP 仿真器，并且给板子供上电；\n    \n    \n\n 2. 用KEIL 打开例程工程文件，在keil 中设置DAP 仿真器所需的使用条件；\n\n 3. 进入选择仿真器类型，点击“Debug”选择使用DAP；\n\n 4. 由于仿真器只支持SWD 模式，故只能选择SW 模式下载；\n    \n    \n\n 5. 选择STM32 芯片型号，1M 大小的FLASH；\n\n 6. 最后点击keil 左上LOAD就可以下载。\n    \n    \n    # 原理\n    \n    ",normalizedContent:"# 环境安装\n\n\n# mdk安装\n\n\n# 驱动安装\n\nch340\n\n\n# 工具使用\n\n下载工具配置:mcuisp(flymcu)\n\n\n\n\n# 启动模式\n\nstm32直接通过两个引脚boot0和boot1设置启动模式\n\n\n\n\n# isp下载\n\n\n# 方法\n\n 1. boot0接3.3，boot1接gnd\n 2. 按复位按键，实现下载\n 3. mcuisp/flymcu勾选“编程后执行”，发送命令直接从flash启动。\n 4. boot0接gnd，boot1接任意，按一次复位。\n\n\n# 原理\n\n一键下载电路，利用串口的dtr和rts信号，分别控制stm32的复位和b0，配合上位机软件（mcuisp），设置：dtr的低电平复位，rts高电平进bootloader，这样，b0和stm32的复位，完全可以由下载软件自动控制，从而实现一键下载。\n\n\n\n不使用一键下载电路\n\n\n\n\n# jlink下载\n\n 1. 1. 连接好dap 仿真器，并且给板子供上电；\n    \n    \n\n 2. 用keil 打开例程工程文件，在keil 中设置dap 仿真器所需的使用条件；\n\n 3. 进入选择仿真器类型，点击“debug”选择使用dap；\n\n 4. 由于仿真器只支持swd 模式，故只能选择sw 模式下载；\n    \n    \n\n 5. 选择stm32 芯片型号，1m 大小的flash；\n\n 6. 最后点击keil 左上load就可以下载。\n    \n    \n    # 原理\n    \n    ",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"GPIO工作原理",frontmatter:{title:"GPIO工作原理",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/gpio/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/12.STM32/05.GPIO%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.html",relativePath:"03.硬件知识/12.STM32/05.GPIO工作原理.md",key:"v-4f637454",path:"/hardware/stm32/gpio/",headers:[{level:2,title:"引脚说明",slug:"引脚说明",normalizedTitle:"引脚说明",charIndex:2},{level:2,title:"工作方式",slug:"工作方式",normalizedTitle:"工作方式",charIndex:114}],headersStr:"引脚说明 工作方式",content:"# 引脚说明\n\nSTM32F407ZGT6一共有7组IO口，每组IO口有16个IO，一共16X7=112个IO，外加2个PH0和PH1，一共114个IO口 GPIOA，GPIOB---GPIOG，PH0，PH1\n\n\n\n\n\n\n# 工作方式\n\n * 4种输入模式\n   \n   输入浮空，输入上拉，输入下拉，模拟输入\n\n * 4种输出模式\n   \n   开漏输出(带上拉或者下拉)，开漏复用功能(带上拉或者下拉)，推挽式输出(带上拉或者下拉)，推挽式复用功能(带上拉或者下拉)\n\n * 4种最大输出速度\n   \n   2MHZ，25MHz，50MHz，100MHz\n   \n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",normalizedContent:"# 引脚说明\n\nstm32f407zgt6一共有7组io口，每组io口有16个io，一共16x7=112个io，外加2个ph0和ph1，一共114个io口 gpioa，gpiob---gpiog，ph0，ph1\n\n\n\n\n\n\n# 工作方式\n\n * 4种输入模式\n   \n   输入浮空，输入上拉，输入下拉，模拟输入\n\n * 4种输出模式\n   \n   开漏输出(带上拉或者下拉)，开漏复用功能(带上拉或者下拉)，推挽式输出(带上拉或者下拉)，推挽式复用功能(带上拉或者下拉)\n\n * 4种最大输出速度\n   \n   2mhz，25mhz，50mhz，100mhz\n   \n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"跑马灯-寄存器",frontmatter:{title:"跑马灯-寄存器",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/led/bit/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/12.STM32/06.%E8%B7%91%E9%A9%AC%E7%81%AF-%E5%AF%84%E5%AD%98%E5%99%A8.html",relativePath:"03.硬件知识/12.STM32/06.跑马灯-寄存器.md",key:"v-c9d4805e",path:"/hardware/stm32/led/bit/",headers:[{level:2,title:"硬件连接",slug:"硬件连接",normalizedTitle:"硬件连接",charIndex:2},{level:2,title:"源码",slug:"源码",normalizedTitle:"源码",charIndex:17}],headersStr:"硬件连接 源码",content:'# 硬件连接\n\n\n\n\n\n\n\n\n# 源码\n\n新建led.c和led.h，并加入头文件\n\n//led.h\n#ifndef __LED_H\n\n#define __LED_H\n\n\nvoid LED_Init(void);\n\n#endif\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n//led.c\n#include "led.h"\n#include "sys.h"\n\nvoid LED_Init(void){\n\t//定义结构体\n\tGPIO_InitTypeDef GPIO_InitStruct;\n\t\n\t//使能时钟\n\tRCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOE|RCC_AHB1Periph_GPIOG,ENABLE);\n\t\n\tGPIO_InitStruct.GPIO_Pin=GPIO_Pin_3|GPIO_Pin_4;\n\tGPIO_InitStruct.GPIO_Mode=GPIO_Mode_OUT;\n\tGPIO_InitStruct.GPIO_OType=GPIO_OType_PP;\n\tGPIO_InitStruct.GPIO_PuPd=GPIO_PuPd_UP;\n\tGPIO_InitStruct.GPIO_Speed=GPIO_Speed_50MHz;\n\t//初始化结构体PE\n\tGPIO_Init(GPIOE,&GPIO_InitStruct);\n\tGPIO_SetBits(GPIOE,GPIO_Pin_3|GPIO_Pin_4);\n\t\n\tGPIO_InitStruct.GPIO_Pin=GPIO_Pin_9;\n\tGPIO_InitStruct.GPIO_Mode=GPIO_Mode_OUT;\n\tGPIO_InitStruct.GPIO_OType=GPIO_OType_PP;\n\tGPIO_InitStruct.GPIO_PuPd=GPIO_PuPd_UP;\n\tGPIO_InitStruct.GPIO_Speed=GPIO_Speed_50MHz;\n\t//初始化结构体PG\n\tGPIO_Init(GPIOG,&GPIO_InitStruct);\n\tGPIO_SetBits(GPIOG,GPIO_Pin_9);\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n//main.c\n#include "stm32f4xx.h"\n#include "led.h"\n#include "delay.h"\n\nint main(void){\n\tdelay_init(168);\n\t\n\tLED_Init();\n\t\n\twhile(1){\n\t\tGPIO_SetBits(GPIOE,GPIO_Pin_3|GPIO_Pin_4);\n\t\tGPIO_SetBits(GPIOG,GPIO_Pin_9);\n\t\tdelay_ms(500);\n\t\tGPIO_ResetBits(GPIOE,GPIO_Pin_3|GPIO_Pin_4);\n\t\tGPIO_ResetBits(GPIOG,GPIO_Pin_9);\n\t\tdelay_ms(500);\n\t}\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',normalizedContent:'# 硬件连接\n\n\n\n\n\n\n\n\n# 源码\n\n新建led.c和led.h，并加入头文件\n\n//led.h\n#ifndef __led_h\n\n#define __led_h\n\n\nvoid led_init(void);\n\n#endif\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n//led.c\n#include "led.h"\n#include "sys.h"\n\nvoid led_init(void){\n\t//定义结构体\n\tgpio_inittypedef gpio_initstruct;\n\t\n\t//使能时钟\n\trcc_ahb1periphclockcmd(rcc_ahb1periph_gpioe|rcc_ahb1periph_gpiog,enable);\n\t\n\tgpio_initstruct.gpio_pin=gpio_pin_3|gpio_pin_4;\n\tgpio_initstruct.gpio_mode=gpio_mode_out;\n\tgpio_initstruct.gpio_otype=gpio_otype_pp;\n\tgpio_initstruct.gpio_pupd=gpio_pupd_up;\n\tgpio_initstruct.gpio_speed=gpio_speed_50mhz;\n\t//初始化结构体pe\n\tgpio_init(gpioe,&gpio_initstruct);\n\tgpio_setbits(gpioe,gpio_pin_3|gpio_pin_4);\n\t\n\tgpio_initstruct.gpio_pin=gpio_pin_9;\n\tgpio_initstruct.gpio_mode=gpio_mode_out;\n\tgpio_initstruct.gpio_otype=gpio_otype_pp;\n\tgpio_initstruct.gpio_pupd=gpio_pupd_up;\n\tgpio_initstruct.gpio_speed=gpio_speed_50mhz;\n\t//初始化结构体pg\n\tgpio_init(gpiog,&gpio_initstruct);\n\tgpio_setbits(gpiog,gpio_pin_9);\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n//main.c\n#include "stm32f4xx.h"\n#include "led.h"\n#include "delay.h"\n\nint main(void){\n\tdelay_init(168);\n\t\n\tled_init();\n\t\n\twhile(1){\n\t\tgpio_setbits(gpioe,gpio_pin_3|gpio_pin_4);\n\t\tgpio_setbits(gpiog,gpio_pin_9);\n\t\tdelay_ms(500);\n\t\tgpio_resetbits(gpioe,gpio_pin_3|gpio_pin_4);\n\t\tgpio_resetbits(gpiog,gpio_pin_9);\n\t\tdelay_ms(500);\n\t}\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"跑马灯-寄存器",frontmatter:{title:"跑马灯-寄存器",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/led/fun/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/12.STM32/07.%E8%B7%91%E9%A9%AC%E7%81%AF-%E5%BA%93%E5%87%BD%E6%95%B0.html",relativePath:"03.硬件知识/12.STM32/07.跑马灯-库函数.md",key:"v-3dcf58ea",path:"/hardware/stm32/led/fun/",headers:[{level:2,title:"重要函数",slug:"重要函数",normalizedTitle:"重要函数",charIndex:2},{level:3,title:"初始化函数：",slug:"初始化函数",normalizedTitle:"初始化函数：",charIndex:11},{level:3,title:"读取输入电平函数：",slug:"读取输入电平函数",normalizedTitle:"读取输入电平函数：",charIndex:1097},{level:3,title:"读取输出电平函数：",slug:"读取输出电平函数",normalizedTitle:"读取输出电平函数：",charIndex:1449},{level:3,title:"设置输出电平函数：",slug:"设置输出电平函数",normalizedTitle:"设置输出电平函数：",charIndex:1803},{level:2,title:"源码",slug:"源码",normalizedTitle:"源码",charIndex:2192}],headersStr:"重要函数 初始化函数： 读取输入电平函数： 读取输出电平函数： 设置输出电平函数： 源码",content:'# 重要函数\n\n\n# 初始化函数：\n\nvoid GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct);\n\n作用：初始化一个或者多个IO口（同一组）的工作模式，输出类型，速度以及上下拉方式。也就是一组IO口的4个配置寄存器。\n（GPIOx->MODER, GPIOx->OSPEEDR,GPIOx->OTYPER,GPIOx->PUPDR）\n\n GPIOx: GPIOA~GPIOK(最多11组，也就是16X11=176个IO)\n \ntypedef struct\n{\n  uint32_t GPIO_Pin//指定要初始化的端口\n  GPIOMode_TypeDef GPIO_Mode;//端口模式\n  GPIOSpeed_TypeDef GPIO_Speed;//速度\n  GPIOOType_TypeDef GPIO_OType; //输出类型\n  GPIOPuPd_TypeDef GPIO_PuPd;//上拉或者下拉\n}GPIO_InitTypeDef;\n\n注意：外设（包括GPIO)在使用之前，几乎都要先使能对应的时钟。\n\nGPIO_InitTypeDef  GPIO_InitStructure;\n\nRCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOF, ENABLE);//使能GPIOF时钟\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n:::⚠️可以一次初始化一个IO组下的多个IO，前提是这些IO口的配置方式一样。:::\n\n//GPIOF9,F10初始化设置\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_9 | GPIO_Pin_10;//LED0和LED1对应IO口\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;//普通输出模式\nGPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;//100MHz\nGPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;//上拉\nGPIO_Init(GPIOF, &GPIO_InitStructure);//初始化GPIOF9,F10\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 读取输入电平函数：\n\nuint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);\n作用：读取某个GPIO的输入电平。实际操作的是GPIOx_IDR寄存器。\n例如：\n  GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_5);//读取GPIOA.5的输入电平\n\nuint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx);\n作用：读取某组GPIO的输入电平。实际操作的是GPIOx_IDR寄存器。\n例如：\n GPIO_ReadInputData(GPIOA);//读取GPIOA组中所有io口输入电平\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 读取输出电平函数：\n\nuint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);\n作用：读取某个GPIO的输出电平。实际操作的是GPIO_ODR寄存器。\n例如：\n  GPIO_ReadOutputDataBit(GPIOA, GPIO_Pin_5);//读取GPIOA.5的输出电平\n\nuint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx);\n作用：读取某组GPIO的输出电平。实际操作的是GPIO_ODR寄存器。\n例如：\n GPIO_ReadOutputData(GPIOA);//读取GPIOA组中所有io口输出电平\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 设置输出电平函数：\n\nvoid GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);\n作用：设置某个IO口输出为高电平（1）。实际操作BSRRL寄存器\n\nvoid GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin);\n作用：设置某个IO口输出为低电平（0）。实际操作的BSRRH寄存器。\n\nvoid GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal);\nvoid GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal);\n 这两个函数不常用，也是用来设置IO口输出电平。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 源码\n\n新建led.c和led.h，并加入头文件\n\n#ifndef __LED_H\n#define __LED_H\n#include "common.h"\n\n////////////////////////////////////////////////////////////////////////////////////\t\n\n//LED端口定义\n#define LED0 PEout(3)\t \n#define LED1 PEout(4)\t \n#define LED2 PGout(9)\t  \n\n//函数声明\nvoid LED_Init(void);//初始化\t\n\n#endif\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n#include "led.h" \n\nvoid LED_Init(void)\n{    \t \n  GPIO_InitTypeDef  GPIO_InitStructure;\n\n  RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA|RCC_AHB1Periph_GPIOE|RCC_AHB1Periph_GPIOG, ENABLE);//使能GPIOG时钟\n\n  //PG13、PG14和PG15初始化设置\n  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3 | GPIO_Pin_4;         //LED0、LED1和LED2对应IO口\n  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;                  //普通输出模式\n  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;                 //推挽输出\n  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;             //100MHz\n  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;                   //上拉\n  GPIO_Init(GPIOE, &GPIO_InitStructure);                         //初始化GPIO\n\t\n\tGPIO_SetBits(GPIOE, GPIO_Pin_3 | GPIO_Pin_4);   \n\t\n\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;\n\tGPIO_Init(GPIOG, &GPIO_InitStructure); \n  GPIO_SetBits(GPIOG, GPIO_Pin_9);\n\t\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n//main.c\n#include "stm32f4xx.h"\n#include "led.h"\n#include "delay.h"\n\nint main(void)\n{ \n  NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2); //设置系统中断优先级分组2\n\tdelay_init();\t\t  //初始化延时函数\n\tLED_Init();\t\t    //初始化LED端口\n\t\n\t\n\twhile(1)\n\t{\n\tGPIO_ResetBits(GPIOE,GPIO_Pin_3);   //亮  等同LED0=0;\n\tGPIO_SetBits(GPIOE,GPIO_Pin_4);     //灭  等同LED1=1;\n\tGPIO_SetBits(GPIOG,GPIO_Pin_9);     //灭  等同LED2=1;\n\tdelay_ms(500);  \t\t                //延时500ms\n\tGPIO_SetBits(GPIOE,GPIO_Pin_3);     //灭  等同LED0=1;\n\tGPIO_ResetBits(GPIOE,GPIO_Pin_4);   //亮  等同LED1=0;\n\tGPIO_SetBits(GPIOG,GPIO_Pin_9);     //灭  等同LED2=1;\n\tdelay_ms(500);                      //延时500ms\n\tGPIO_SetBits(GPIOE,GPIO_Pin_3);     //灭  等同LED0=1;\n\tGPIO_SetBits(GPIOE,GPIO_Pin_4);     //灭  等同LED1=1;\n\tGPIO_ResetBits(GPIOG,GPIO_Pin_9);   //亮  等同LED2=0;\n\tdelay_ms(500);\n\t}\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n',normalizedContent:'# 重要函数\n\n\n# 初始化函数：\n\nvoid gpio_init(gpio_typedef* gpiox, gpio_inittypedef* gpio_initstruct);\n\n作用：初始化一个或者多个io口（同一组）的工作模式，输出类型，速度以及上下拉方式。也就是一组io口的4个配置寄存器。\n（gpiox->moder, gpiox->ospeedr,gpiox->otyper,gpiox->pupdr）\n\n gpiox: gpioa~gpiok(最多11组，也就是16x11=176个io)\n \ntypedef struct\n{\n  uint32_t gpio_pin//指定要初始化的端口\n  gpiomode_typedef gpio_mode;//端口模式\n  gpiospeed_typedef gpio_speed;//速度\n  gpiootype_typedef gpio_otype; //输出类型\n  gpiopupd_typedef gpio_pupd;//上拉或者下拉\n}gpio_inittypedef;\n\n注意：外设（包括gpio)在使用之前，几乎都要先使能对应的时钟。\n\ngpio_inittypedef  gpio_initstructure;\n\nrcc_ahb1periphclockcmd(rcc_ahb1periph_gpiof, enable);//使能gpiof时钟\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n:::⚠️可以一次初始化一个io组下的多个io，前提是这些io口的配置方式一样。:::\n\n//gpiof9,f10初始化设置\ngpio_initstructure.gpio_pin = gpio_pin_9 | gpio_pin_10;//led0和led1对应io口\ngpio_initstructure.gpio_mode = gpio_mode_out;//普通输出模式\ngpio_initstructure.gpio_otype = gpio_otype_pp;//推挽输出\ngpio_initstructure.gpio_speed = gpio_speed_100mhz;//100mhz\ngpio_initstructure.gpio_pupd = gpio_pupd_up;//上拉\ngpio_init(gpiof, &gpio_initstructure);//初始化gpiof9,f10\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 读取输入电平函数：\n\nuint8_t gpio_readinputdatabit(gpio_typedef* gpiox, uint16_t gpio_pin);\n作用：读取某个gpio的输入电平。实际操作的是gpiox_idr寄存器。\n例如：\n  gpio_readinputdatabit(gpioa, gpio_pin_5);//读取gpioa.5的输入电平\n\nuint16_t gpio_readinputdata(gpio_typedef* gpiox);\n作用：读取某组gpio的输入电平。实际操作的是gpiox_idr寄存器。\n例如：\n gpio_readinputdata(gpioa);//读取gpioa组中所有io口输入电平\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 读取输出电平函数：\n\nuint8_t gpio_readoutputdatabit(gpio_typedef* gpiox, uint16_t gpio_pin);\n作用：读取某个gpio的输出电平。实际操作的是gpio_odr寄存器。\n例如：\n  gpio_readoutputdatabit(gpioa, gpio_pin_5);//读取gpioa.5的输出电平\n\nuint16_t gpio_readoutputdata(gpio_typedef* gpiox);\n作用：读取某组gpio的输出电平。实际操作的是gpio_odr寄存器。\n例如：\n gpio_readoutputdata(gpioa);//读取gpioa组中所有io口输出电平\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 设置输出电平函数：\n\nvoid gpio_setbits(gpio_typedef* gpiox, uint16_t gpio_pin);\n作用：设置某个io口输出为高电平（1）。实际操作bsrrl寄存器\n\nvoid gpio_resetbits(gpio_typedef* gpiox, uint16_t gpio_pin);\n作用：设置某个io口输出为低电平（0）。实际操作的bsrrh寄存器。\n\nvoid gpio_writebit(gpio_typedef* gpiox, uint16_t gpio_pin, bitaction bitval);\nvoid gpio_write(gpio_typedef* gpiox, uint16_t portval);\n 这两个函数不常用，也是用来设置io口输出电平。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 源码\n\n新建led.c和led.h，并加入头文件\n\n#ifndef __led_h\n#define __led_h\n#include "common.h"\n\n////////////////////////////////////////////////////////////////////////////////////\t\n\n//led端口定义\n#define led0 peout(3)\t \n#define led1 peout(4)\t \n#define led2 pgout(9)\t  \n\n//函数声明\nvoid led_init(void);//初始化\t\n\n#endif\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n#include "led.h" \n\nvoid led_init(void)\n{    \t \n  gpio_inittypedef  gpio_initstructure;\n\n  rcc_ahb1periphclockcmd(rcc_ahb1periph_gpioa|rcc_ahb1periph_gpioe|rcc_ahb1periph_gpiog, enable);//使能gpiog时钟\n\n  //pg13、pg14和pg15初始化设置\n  gpio_initstructure.gpio_pin = gpio_pin_3 | gpio_pin_4;         //led0、led1和led2对应io口\n  gpio_initstructure.gpio_mode = gpio_mode_out;                  //普通输出模式\n  gpio_initstructure.gpio_otype = gpio_otype_pp;                 //推挽输出\n  gpio_initstructure.gpio_speed = gpio_speed_100mhz;             //100mhz\n  gpio_initstructure.gpio_pupd = gpio_pupd_up;                   //上拉\n  gpio_init(gpioe, &gpio_initstructure);                         //初始化gpio\n\t\n\tgpio_setbits(gpioe, gpio_pin_3 | gpio_pin_4);   \n\t\n\tgpio_initstructure.gpio_pin = gpio_pin_9;\n\tgpio_init(gpiog, &gpio_initstructure); \n  gpio_setbits(gpiog, gpio_pin_9);\n\t\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n//main.c\n#include "stm32f4xx.h"\n#include "led.h"\n#include "delay.h"\n\nint main(void)\n{ \n  nvic_prioritygroupconfig(nvic_prioritygroup_2); //设置系统中断优先级分组2\n\tdelay_init();\t\t  //初始化延时函数\n\tled_init();\t\t    //初始化led端口\n\t\n\t\n\twhile(1)\n\t{\n\tgpio_resetbits(gpioe,gpio_pin_3);   //亮  等同led0=0;\n\tgpio_setbits(gpioe,gpio_pin_4);     //灭  等同led1=1;\n\tgpio_setbits(gpiog,gpio_pin_9);     //灭  等同led2=1;\n\tdelay_ms(500);  \t\t                //延时500ms\n\tgpio_setbits(gpioe,gpio_pin_3);     //灭  等同led0=1;\n\tgpio_resetbits(gpioe,gpio_pin_4);   //亮  等同led1=0;\n\tgpio_setbits(gpiog,gpio_pin_9);     //灭  等同led2=1;\n\tdelay_ms(500);                      //延时500ms\n\tgpio_setbits(gpioe,gpio_pin_3);     //灭  等同led0=1;\n\tgpio_setbits(gpioe,gpio_pin_4);     //灭  等同led1=1;\n\tgpio_resetbits(gpiog,gpio_pin_9);   //亮  等同led2=0;\n\tdelay_ms(500);\n\t}\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n',charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"蜂鸣器",frontmatter:{title:"蜂鸣器",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/beep/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/12.STM32/08.%E8%9C%82%E9%B8%A3%E5%99%A8.html",relativePath:"03.硬件知识/12.STM32/08.蜂鸣器.md",key:"v-5164c29a",path:"/hardware/stm32/beep/",headers:[{level:2,title:"硬件设计",slug:"硬件设计",normalizedTitle:"硬件设计",charIndex:2},{level:2,title:"软件设计",slug:"软件设计",normalizedTitle:"软件设计",charIndex:13},{level:2,title:"效果",slug:"效果",normalizedTitle:"效果",charIndex:1164}],headersStr:"硬件设计 软件设计 效果",content:'# 硬件设计\n\n\n\n\n# 软件设计\n\n//beep.h\n#ifndef __BEEP_H\n#define __BEEP_H\n#include "sys.h"\n#define BEEP PGout(7)\nvoid BEEP_Init(void);\n#endif\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n//beep.c\n#include "beep.h"\n\nvoid BEEP_Init(void) \n{ \n\tGPIO_InitTypeDef GPIO_InitStructure;\n\tRCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOG, ENABLE);\n\t\n\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;\n\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;\n\tGPIO_InitStructure.GPIO_OType = GPIO_OType_PP;\n\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;\n\tGPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;\n\tGPIO_Init(GPIOG, &GPIO_InitStructure);\n\tGPIO_ResetBits(GPIOG,GPIO_Pin_7);\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n//main.c\n#include "sys.h"\n#include "delay.h"\n#include "usart.h"\n#include "led.h"\n#include "beep.h"\n\nint main(void)\n{\n\tdelay_init(168);\n\tLED_Init();\n\tBEEP_Init();\n\t\n\twhile(1)\n\t{\n\t\tGPIO_ResetBits(GPIOE,GPIO_Pin_3);\n\t\tGPIO_SetBits(GPIOE,GPIO_Pin_4);\n\t\tGPIO_ResetBits(GPIOG,GPIO_Pin_7);\n\t\tdelay_ms(500);\n\t\tGPIO_SetBits(GPIOE,GPIO_Pin_3);\n\t\tGPIO_ResetBits(GPIOE,GPIO_Pin_4);\n\t\tGPIO_SetBits(GPIOG,GPIO_Pin_7);\n\t\tdelay_ms(500);\n\t}\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 效果\n\n流水灯和蜂鸣器同时工作',normalizedContent:'# 硬件设计\n\n\n\n\n# 软件设计\n\n//beep.h\n#ifndef __beep_h\n#define __beep_h\n#include "sys.h"\n#define beep pgout(7)\nvoid beep_init(void);\n#endif\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n//beep.c\n#include "beep.h"\n\nvoid beep_init(void) \n{ \n\tgpio_inittypedef gpio_initstructure;\n\trcc_ahb1periphclockcmd(rcc_ahb1periph_gpiog, enable);\n\t\n\tgpio_initstructure.gpio_pin = gpio_pin_7;\n\tgpio_initstructure.gpio_mode = gpio_mode_out;\n\tgpio_initstructure.gpio_otype = gpio_otype_pp;\n\tgpio_initstructure.gpio_speed = gpio_speed_100mhz;\n\tgpio_initstructure.gpio_pupd = gpio_pupd_down;\n\tgpio_init(gpiog, &gpio_initstructure);\n\tgpio_resetbits(gpiog,gpio_pin_7);\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n//main.c\n#include "sys.h"\n#include "delay.h"\n#include "usart.h"\n#include "led.h"\n#include "beep.h"\n\nint main(void)\n{\n\tdelay_init(168);\n\tled_init();\n\tbeep_init();\n\t\n\twhile(1)\n\t{\n\t\tgpio_resetbits(gpioe,gpio_pin_3);\n\t\tgpio_setbits(gpioe,gpio_pin_4);\n\t\tgpio_resetbits(gpiog,gpio_pin_7);\n\t\tdelay_ms(500);\n\t\tgpio_setbits(gpioe,gpio_pin_3);\n\t\tgpio_resetbits(gpioe,gpio_pin_4);\n\t\tgpio_setbits(gpiog,gpio_pin_7);\n\t\tdelay_ms(500);\n\t}\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 效果\n\n流水灯和蜂鸣器同时工作',charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"按键",frontmatter:{title:"按键",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/key/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/12.STM32/09.%E6%8C%89%E9%94%AE.html",relativePath:"03.硬件知识/12.STM32/09.按键.md",key:"v-19a59450",path:"/hardware/stm32/key/",headers:[{level:2,title:"硬件设计",slug:"硬件设计",normalizedTitle:"硬件设计",charIndex:2},{level:2,title:"软件设计",slug:"软件设计",normalizedTitle:"软件设计",charIndex:13},{level:2,title:"效果",slug:"效果",normalizedTitle:"效果",charIndex:1164}],headersStr:"硬件设计 软件设计 效果",content:'# 硬件设计\n\n\n\n\n# 软件设计\n\n//beep.h\n#ifndef __BEEP_H\n#define __BEEP_H\n#include "sys.h"\n#define BEEP PGout(7)\nvoid BEEP_Init(void);\n#endif\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n//beep.c\n#include "beep.h"\n\nvoid BEEP_Init(void) \n{ \n\tGPIO_InitTypeDef GPIO_InitStructure;\n\tRCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOG, ENABLE);\n\t\n\tGPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;\n\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;\n\tGPIO_InitStructure.GPIO_OType = GPIO_OType_PP;\n\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;\n\tGPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;\n\tGPIO_Init(GPIOG, &GPIO_InitStructure);\n\tGPIO_ResetBits(GPIOG,GPIO_Pin_7);\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n//main.c\n#include "sys.h"\n#include "delay.h"\n#include "usart.h"\n#include "led.h"\n#include "beep.h"\n\nint main(void)\n{\n\tdelay_init(168);\n\tLED_Init();\n\tBEEP_Init();\n\t\n\twhile(1)\n\t{\n\t\tGPIO_ResetBits(GPIOE,GPIO_Pin_3);\n\t\tGPIO_SetBits(GPIOE,GPIO_Pin_4);\n\t\tGPIO_ResetBits(GPIOG,GPIO_Pin_7);\n\t\tdelay_ms(500);\n\t\tGPIO_SetBits(GPIOE,GPIO_Pin_3);\n\t\tGPIO_ResetBits(GPIOE,GPIO_Pin_4);\n\t\tGPIO_SetBits(GPIOG,GPIO_Pin_7);\n\t\tdelay_ms(500);\n\t}\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 效果\n\n流水灯和蜂鸣器同时工作',normalizedContent:'# 硬件设计\n\n\n\n\n# 软件设计\n\n//beep.h\n#ifndef __beep_h\n#define __beep_h\n#include "sys.h"\n#define beep pgout(7)\nvoid beep_init(void);\n#endif\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n//beep.c\n#include "beep.h"\n\nvoid beep_init(void) \n{ \n\tgpio_inittypedef gpio_initstructure;\n\trcc_ahb1periphclockcmd(rcc_ahb1periph_gpiog, enable);\n\t\n\tgpio_initstructure.gpio_pin = gpio_pin_7;\n\tgpio_initstructure.gpio_mode = gpio_mode_out;\n\tgpio_initstructure.gpio_otype = gpio_otype_pp;\n\tgpio_initstructure.gpio_speed = gpio_speed_100mhz;\n\tgpio_initstructure.gpio_pupd = gpio_pupd_down;\n\tgpio_init(gpiog, &gpio_initstructure);\n\tgpio_resetbits(gpiog,gpio_pin_7);\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n//main.c\n#include "sys.h"\n#include "delay.h"\n#include "usart.h"\n#include "led.h"\n#include "beep.h"\n\nint main(void)\n{\n\tdelay_init(168);\n\tled_init();\n\tbeep_init();\n\t\n\twhile(1)\n\t{\n\t\tgpio_resetbits(gpioe,gpio_pin_3);\n\t\tgpio_setbits(gpioe,gpio_pin_4);\n\t\tgpio_resetbits(gpiog,gpio_pin_7);\n\t\tdelay_ms(500);\n\t\tgpio_setbits(gpioe,gpio_pin_3);\n\t\tgpio_resetbits(gpioe,gpio_pin_4);\n\t\tgpio_setbits(gpiog,gpio_pin_7);\n\t\tdelay_ms(500);\n\t}\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 效果\n\n流水灯和蜂鸣器同时工作',charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"Vivado与Matlab版本匹配",frontmatter:{title:"Vivado与Matlab版本匹配",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/vivado/ver/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/13.Vivado/01.Vivado%E4%B8%8EMatlab%E7%89%88%E6%9C%AC%E5%8C%B9%E9%85%8D.html",relativePath:"03.硬件知识/13.Vivado/01.Vivado与Matlab版本匹配.md",key:"v-2b788427",path:"/hardware/vivado/ver/",headersStr:null,content:"序号   VIVADO                        MATLAB\n1    2013.1/2013.2                 2011A,2011B,2012A,2012B\n2    2013.3                        2012A,2012B\n3    2013.4                        2013A,2013B\n4    2014.1                        2013A,2013B\n5    2014.2/2014.3/2014.4          2013A,2013B,2014A\n6    2015.1/2015.2                 2014A,2014B,2015A\n7    2015.3/2015.4                 2014A,2014B,2015A,2015B\n8    2016.1/2016.2/2016.3/2016.4   2015A,2015B\n9    2017.1/2017.2/2017.3          2016A,2016B,2017A\n10   2017.4                        2016A,2016B,2017A,2017B\n11   2018.1                        2017A,2017B\n12   2018.2/2018.3                 2017A,2017B,2018A\n13   2019.1                        \n14   2019.2                        \n15   2020.1                        \n16   2020.2                        2019A,2019B.2020A,2020B\n                                   ",normalizedContent:"序号   vivado                        matlab\n1    2013.1/2013.2                 2011a,2011b,2012a,2012b\n2    2013.3                        2012a,2012b\n3    2013.4                        2013a,2013b\n4    2014.1                        2013a,2013b\n5    2014.2/2014.3/2014.4          2013a,2013b,2014a\n6    2015.1/2015.2                 2014a,2014b,2015a\n7    2015.3/2015.4                 2014a,2014b,2015a,2015b\n8    2016.1/2016.2/2016.3/2016.4   2015a,2015b\n9    2017.1/2017.2/2017.3          2016a,2016b,2017a\n10   2017.4                        2016a,2016b,2017a,2017b\n11   2018.1                        2017a,2017b\n12   2018.2/2018.3                 2017a,2017b,2018a\n13   2019.1                        \n14   2019.2                        \n15   2020.1                        \n16   2020.2                        2019a,2019b.2020a,2020b\n                                   ",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"Vivado安装",frontmatter:{title:"Vivado安装",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/vivado/pindelay/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/13.Vivado/03.Vivado%E7%94%9F%E6%88%90Pin%20Delay.html",relativePath:"03.硬件知识/13.Vivado/03.Vivado生成Pin Delay.md",key:"v-4010dc95",path:"/hardware/vivado/pindelay/",headersStr:null,content:"打开Vivado,菜单Window->Tcl Console\n\n输入命令link_design -part xc7vx690tffg1761-2，再次输入write_csv xc7vx690tffg1761-2，生成excel，单位ps\n\n或者 在PIN IO中导出",normalizedContent:"打开vivado,菜单window->tcl console\n\n输入命令link_design -part xc7vx690tffg1761-2，再次输入write_csv xc7vx690tffg1761-2，生成excel，单位ps\n\n或者 在pin io中导出",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"Vivado安装",frontmatter:{title:"Vivado安装",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/vivado/install/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/13.Vivado/02.Vivado%E5%AE%89%E8%A3%85.html",relativePath:"03.硬件知识/13.Vivado/02.Vivado安装.md",key:"v-53eb987c",path:"/hardware/vivado/install/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"STM32的GPIO介绍",frontmatter:{title:"STM32的GPIO介绍",date:"2024-03-07T21:00:00.000Z",permalink:"/hardware/dl/gpio/info/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/14.%E5%B8%B8%E8%A7%81%E7%94%B5%E8%B7%AF/02.STM32%E7%9A%84GPIO%E4%BB%8B%E7%BB%8D.html",relativePath:"03.硬件知识/14.常见电路/02.STM32的GPIO介绍.md",key:"v-b1d955aa",path:"/hardware/dl/gpio/info/",headers:[{level:2,title:"STM 32 的 GPIO 介绍",slug:"stm-32-的-gpio-介绍",normalizedTitle:"stm 32 的 gpio 介绍",charIndex:2},{level:2,title:"GPIO 基本结构",slug:"gpio-基本结构",normalizedTitle:"gpio 基本结构",charIndex:309},{level:2,title:"电路图分析",slug:"电路图分析",normalizedTitle:"电路图分析",charIndex:362},{level:2,title:"STM 32 的 GPIO 工作方式",slug:"stm-32-的-gpio-工作方式",normalizedTitle:"stm 32 的 gpio 工作方式",charIndex:849},{level:2,title:"GPIO 的八种工作方式",slug:"gpio-的八种工作方式",normalizedTitle:"gpio 的八种工作方式",charIndex:1015},{level:2,title:"推挽结构和推挽电路",slug:"推挽结构和推挽电路",normalizedTitle:"推挽结构和推挽电路",charIndex:2170},{level:2,title:"开漏输出和推挽输出",slug:"开漏输出和推挽输出",normalizedTitle:"开漏输出和推挽输出",charIndex:2399},{level:2,title:"STM32中的 I/O 模式",slug:"stm32中的-i-o-模式",normalizedTitle:"stm32中的 i/o 模式",charIndex:2639}],headersStr:"STM 32 的 GPIO 介绍 GPIO 基本结构 电路图分析 STM 32 的 GPIO 工作方式 GPIO 的八种工作方式 推挽结构和推挽电路 开漏输出和推挽输出 STM32中的 I/O 模式",content:"# STM 32 的 GPIO 介绍\n\nGPIO 是通用输入/输出端口的简称，是 STM 32 可控制的引脚。GPIO 的引脚与外部硬件设备连接，可实现与外部通讯、控制外部硬件或者采集外部硬件数据的功能。\n\nSTM32F103ZET6芯片为144脚芯片，包括7个通用目的的输入/输出口（GPIO）组，分别为GPIOA、GPIOB、GPIOC、GPIOD、GPIOE、GPIOF、GPIOG，同时每组GPIO口组有16个GPIO口。通常简略称为PAx、PBx、PCx、PDx、PEx、PFx、PGx，其中x为0-15。\n\nSTM32的大部分引脚除了当 GPIO 使用之外，还可以复用为外设功能引脚（比如串口）。\n\n\n# GPIO 基本结构\n\n每个 GPIO 内部都有这样的一个电路结构，这个结构在本文下面会具体介绍。\n\n\n# 电路图分析\n\n保护二极管：IO 引脚上下两边两个二极管用于防止引脚外部过高、过低的电压输入。当引脚电压高于 VDD 时，上方的二极管导通；当引脚电压低于 VSS 时，下方的二极管导通，防止不正常电压引入芯片导致芯片烧毁。但是尽管如此，还是不能直接外接大功率器件，须加大功率及隔离电路驱动，防止烧坏芯片或者外接器件无法正常工作。\n\nP-MOS 管和 N-MOS 管：由 P-MOS 管和 N-MOS 管组成的单元电路使得 GPIO 具有“推挽输出”和“开漏输出”的模式。这里的电路会在下面很详细地分析到。\n\nTTL 肖特基触发器：信号经过触发器后，模拟信号转化为 0 和 1 的数字信号。但是，当 GPIO 引脚作为 ADC 采集电压的输入通道时，用其“模拟输入”功能，此时信号不再经过触发器进行 TTL 电平转换。ADC 外设要采集到的原始的模拟信号。\n    这里需要注意的是，在查看《STM32中文参考手册 V10》中的 GPIO 的表格时，会看到有“FT”一列，这代表着这个 GPIO 口时兼容3.3V 和5V 的；如果没有标注“FT”，就代表着不兼容5V。\n\n\n# STM 32 的 GPIO 工作方式\n\nGPIO 支持4种输入模式（浮空输入、上拉输入、下拉输入、模拟输入）和4种输出模式（开漏输出、开漏复用输出、推挽输出、推挽复用输出）。同时，GPIO 还支持三种最大翻转速度（2MHz、10MHz、50MHz）。每个 I/O 口可以自由编程，但 I/O 口寄存器必须按32位字被访问。\n\n\n# GPIO 的八种工作方式\n\n * 浮空输入模式（浮空输入模式下，I/O 端口的电平信号直接进入输入数据寄存器。也就是说，I/O 的电平状态是不确定的，完全由外部输入决定；如果在该引脚悬空（在无信号输入）的情况下，读取该端口的电平是不确定的。）\n * 上拉输入模式（上拉输入模式下，I/O端口的电平信号直接进入输入数据寄存器。但是在I/O端口悬空（在无信号输入）的情况下，输入端的电平可以保持在高电平；并且在I/O端口输入为低电平的时候，输入端的电平也还是低电平。）\n * 下拉输入模式（下拉输入模式下，I/O 端口的电平信号直接进入输入数据寄存器。但是在 I/O 端口悬空（在无信号输入）的情况下，输入端的电平可以保持在低电平；并且在 I/O 端口输入为高电平的时候，输入端的电平也还是高电平。）\n * 模拟输入模式（模拟输入模式下，I/O 端口的模拟信号（电压信号，而非电平信号）直接模拟输入到片上外设模块，比如 ADC 模块等等。）\n * 开漏输出模式（开漏输出模式下，通过设置位设置/清除寄存器或者输出数据寄存器的值，途经 N-MOS 管，最终输出到 I/O 端口。这里要注意 N-MOS 管，当设置输出的值为高电平的时候，N-MOS 管处于关闭状态，此时 I/O 端口的电平就不会由输出的高低电平决定，而是由 I/O 端口外部的上拉或者下拉决定；当设置输出的值为低电平的时候，N-MOS 管处于开启状态，此时 I/O 端口的电平就是低电平。同时，I/O 端口的电平也可以通过输入电路进行读取；注意，I/O 端口的电平不一定是输出的电平。）\n * 开漏复用输出模式（开漏复用输出模式，与开漏输出模式很是类似。只是输出的高低电平的来源，不是让 CPU 直接写输出数据寄存器，取而代之利用片上外设模块的复用功能输出来决定的。）\n * 推挽输出模式（推挽输出模式下，通过设置位设置/清除寄存器或者输出数据寄存器的值，途经 P-MOS 管和 N-MOS 管，最终输出到 I/O 端口。这里要注意 P-MOS 管和 N-MOS 管，当设置输出的值为高电平的时候，P-MOS 管处于开启状态，N-MOS 管处于关闭状态，此时 I/O 端口的电平就由 P-MOS 管决定：高电平；当设置输出的值为低电平的时候，P-MOS 管处于关闭状态，N-MOS 管处于开启状态，此时 I/O 端口的电平就由 N-MOS 管决定：低电平。同时，I/O 端口的电平也可以通过输入电路进行读取；注意，此时 I/O 端口的电平一定是输出的电平。）\n * 推挽复用输出模式（推挽复用输出模式，与推挽输出模式很是类似。只是输出的高低电平的来源，不是让 CPU 直接写输出数据寄存器，取而代之利用片上外设模块的复用功能输出来决定的。）\n\n\n# 推挽结构和推挽电路\n\n推挽结构一般是指两个参数相同的三极管或 MOS 管分别受两互补信号的控制，总是在一个三极管或 MOS 管导通的时候另一个截止。高低电平由输出电平决定。\n\n推挽电路是两个参数相同的三极管或 MOSFET，以推挽方式存在于电路中，各负责正负半周的波形放大任务。电路工作时，两只对称的功率开关管每次只有一个导通，所以导通损耗小、效率高。输出既可以向负载灌电流，也可以从负载抽取电流。推拉式输出级既提高电路的负载能力，又提高开关速度。\n\n\n# 开漏输出和推挽输出\n\n开漏输出：只可以输出强低电平，高电平得靠外部电阻拉高。输出端相当于三极管的集电极。适合于做电流型的驱动，其吸收电流的能力相对强(一般20ma 以内)；\n\n推挽输出:可以输出强高、低电平，连接数字器件。 该图中左边的便是推挽输出模式，其中比较器输出高电平时下面的 PNP 三极管截止，而上面 NPN 三极管导通，输出电平 VS+；当比较器输出低电平时则恰恰相反，PNP 三极管导通，输出和地相连，为低电平。右边的则可以理解为开漏输出形式，需要接上拉。\n\n\n# STM32中的 I/O 模式\n\n",normalizedContent:"# stm 32 的 gpio 介绍\n\ngpio 是通用输入/输出端口的简称，是 stm 32 可控制的引脚。gpio 的引脚与外部硬件设备连接，可实现与外部通讯、控制外部硬件或者采集外部硬件数据的功能。\n\nstm32f103zet6芯片为144脚芯片，包括7个通用目的的输入/输出口（gpio）组，分别为gpioa、gpiob、gpioc、gpiod、gpioe、gpiof、gpiog，同时每组gpio口组有16个gpio口。通常简略称为pax、pbx、pcx、pdx、pex、pfx、pgx，其中x为0-15。\n\nstm32的大部分引脚除了当 gpio 使用之外，还可以复用为外设功能引脚（比如串口）。\n\n\n# gpio 基本结构\n\n每个 gpio 内部都有这样的一个电路结构，这个结构在本文下面会具体介绍。\n\n\n# 电路图分析\n\n保护二极管：io 引脚上下两边两个二极管用于防止引脚外部过高、过低的电压输入。当引脚电压高于 vdd 时，上方的二极管导通；当引脚电压低于 vss 时，下方的二极管导通，防止不正常电压引入芯片导致芯片烧毁。但是尽管如此，还是不能直接外接大功率器件，须加大功率及隔离电路驱动，防止烧坏芯片或者外接器件无法正常工作。\n\np-mos 管和 n-mos 管：由 p-mos 管和 n-mos 管组成的单元电路使得 gpio 具有“推挽输出”和“开漏输出”的模式。这里的电路会在下面很详细地分析到。\n\nttl 肖特基触发器：信号经过触发器后，模拟信号转化为 0 和 1 的数字信号。但是，当 gpio 引脚作为 adc 采集电压的输入通道时，用其“模拟输入”功能，此时信号不再经过触发器进行 ttl 电平转换。adc 外设要采集到的原始的模拟信号。\n    这里需要注意的是，在查看《stm32中文参考手册 v10》中的 gpio 的表格时，会看到有“ft”一列，这代表着这个 gpio 口时兼容3.3v 和5v 的；如果没有标注“ft”，就代表着不兼容5v。\n\n\n# stm 32 的 gpio 工作方式\n\ngpio 支持4种输入模式（浮空输入、上拉输入、下拉输入、模拟输入）和4种输出模式（开漏输出、开漏复用输出、推挽输出、推挽复用输出）。同时，gpio 还支持三种最大翻转速度（2mhz、10mhz、50mhz）。每个 i/o 口可以自由编程，但 i/o 口寄存器必须按32位字被访问。\n\n\n# gpio 的八种工作方式\n\n * 浮空输入模式（浮空输入模式下，i/o 端口的电平信号直接进入输入数据寄存器。也就是说，i/o 的电平状态是不确定的，完全由外部输入决定；如果在该引脚悬空（在无信号输入）的情况下，读取该端口的电平是不确定的。）\n * 上拉输入模式（上拉输入模式下，i/o端口的电平信号直接进入输入数据寄存器。但是在i/o端口悬空（在无信号输入）的情况下，输入端的电平可以保持在高电平；并且在i/o端口输入为低电平的时候，输入端的电平也还是低电平。）\n * 下拉输入模式（下拉输入模式下，i/o 端口的电平信号直接进入输入数据寄存器。但是在 i/o 端口悬空（在无信号输入）的情况下，输入端的电平可以保持在低电平；并且在 i/o 端口输入为高电平的时候，输入端的电平也还是高电平。）\n * 模拟输入模式（模拟输入模式下，i/o 端口的模拟信号（电压信号，而非电平信号）直接模拟输入到片上外设模块，比如 adc 模块等等。）\n * 开漏输出模式（开漏输出模式下，通过设置位设置/清除寄存器或者输出数据寄存器的值，途经 n-mos 管，最终输出到 i/o 端口。这里要注意 n-mos 管，当设置输出的值为高电平的时候，n-mos 管处于关闭状态，此时 i/o 端口的电平就不会由输出的高低电平决定，而是由 i/o 端口外部的上拉或者下拉决定；当设置输出的值为低电平的时候，n-mos 管处于开启状态，此时 i/o 端口的电平就是低电平。同时，i/o 端口的电平也可以通过输入电路进行读取；注意，i/o 端口的电平不一定是输出的电平。）\n * 开漏复用输出模式（开漏复用输出模式，与开漏输出模式很是类似。只是输出的高低电平的来源，不是让 cpu 直接写输出数据寄存器，取而代之利用片上外设模块的复用功能输出来决定的。）\n * 推挽输出模式（推挽输出模式下，通过设置位设置/清除寄存器或者输出数据寄存器的值，途经 p-mos 管和 n-mos 管，最终输出到 i/o 端口。这里要注意 p-mos 管和 n-mos 管，当设置输出的值为高电平的时候，p-mos 管处于开启状态，n-mos 管处于关闭状态，此时 i/o 端口的电平就由 p-mos 管决定：高电平；当设置输出的值为低电平的时候，p-mos 管处于关闭状态，n-mos 管处于开启状态，此时 i/o 端口的电平就由 n-mos 管决定：低电平。同时，i/o 端口的电平也可以通过输入电路进行读取；注意，此时 i/o 端口的电平一定是输出的电平。）\n * 推挽复用输出模式（推挽复用输出模式，与推挽输出模式很是类似。只是输出的高低电平的来源，不是让 cpu 直接写输出数据寄存器，取而代之利用片上外设模块的复用功能输出来决定的。）\n\n\n# 推挽结构和推挽电路\n\n推挽结构一般是指两个参数相同的三极管或 mos 管分别受两互补信号的控制，总是在一个三极管或 mos 管导通的时候另一个截止。高低电平由输出电平决定。\n\n推挽电路是两个参数相同的三极管或 mosfet，以推挽方式存在于电路中，各负责正负半周的波形放大任务。电路工作时，两只对称的功率开关管每次只有一个导通，所以导通损耗小、效率高。输出既可以向负载灌电流，也可以从负载抽取电流。推拉式输出级既提高电路的负载能力，又提高开关速度。\n\n\n# 开漏输出和推挽输出\n\n开漏输出：只可以输出强低电平，高电平得靠外部电阻拉高。输出端相当于三极管的集电极。适合于做电流型的驱动，其吸收电流的能力相对强(一般20ma 以内)；\n\n推挽输出:可以输出强高、低电平，连接数字器件。 该图中左边的便是推挽输出模式，其中比较器输出高电平时下面的 pnp 三极管截止，而上面 npn 三极管导通，输出电平 vs+；当比较器输出低电平时则恰恰相反，pnp 三极管导通，输出和地相连，为低电平。右边的则可以理解为开漏输出形式，需要接上拉。\n\n\n# stm32中的 i/o 模式\n\n",charsets:{cjk:!0},lastUpdated:"2024/03/12, 09:50:09",lastUpdatedTimestamp:1710208209e3},{title:"GPIO的推挽输出和开漏输出",frontmatter:{title:"GPIO的推挽输出和开漏输出",date:"2024-03-07T21:00:00.000Z",permalink:"/hardware/dl/gpio/output/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/14.%E5%B8%B8%E8%A7%81%E7%94%B5%E8%B7%AF/03.GPIO%E7%9A%84%E6%8E%A8%E6%8C%BD%E8%BE%93%E5%87%BA%E5%92%8C%E5%BC%80%E6%BC%8F%E8%BE%93%E5%87%BA.html",relativePath:"03.硬件知识/14.常见电路/03.GPIO的推挽输出和开漏输出.md",key:"v-7bfcafde",path:"/hardware/dl/gpio/output/",headers:[{level:2,title:"推挽输出",slug:"推挽输出",normalizedTitle:"推挽输出",charIndex:2},{level:2,title:"开漏输出",slug:"开漏输出",normalizedTitle:"开漏输出",charIndex:108},{level:2,title:"推挽电路",slug:"推挽电路",normalizedTitle:"推挽电路",charIndex:302},{level:2,title:"开漏电路",slug:"开漏电路",normalizedTitle:"开漏电路",charIndex:558}],headersStr:"推挽输出 开漏输出 推挽电路 开漏电路",content:"# 推挽输出\n\n可以输出高，低电平，连接数字器件。\n\n * 输出 0 时，N-MOS 导通，P-MOS 高阻，输出0。\n\n * 输出 1 时，N-MOS 高阻，P-MOS 导通，输出1（不需要外部上拉电路）\n\n\n# 开漏输出\n\n输出端相当于三极管的集电极。要得到高电平状态需要上拉电阻才行。适合于做电流型的驱动,其吸收电流的能力相对强(一般20ma 以内)。\n\n * 输出 0 时，N-MOS 导通，P-MOS 不被激活，输出0。\n\n * 输出 1 时，N-MOS 高阻， P-MOS 不被激活，输出1（需要外部上拉电路）；可以读 IO 输入电平变化，此模式可以把端口作为双向 IO 使用。\n\n\n\n\n# 推挽电路\n\n上面的三极管是 N 型三极管，下面的三极管是 P 型三极管，请留意控制端、输入端和输出端。\n\n当 Vin 电压为 V+时，上面的 N 型三极管控制端有电流输入，Q 3 导通，于是电流从上往下通过，提供电流给负载。 经过上面的 N 型三极管提供电流给负载（Rload），这就叫「推」。\n\n当 Vin 电压为 V-时，下面的三极管有电流流出，Q 4 导通，有电流从上往下流过。\n\n经过下面的 P 型三极管提供电流给负载（Rload），这就叫「挽」。\n\n以上，就是推挽（push-pull）电路。\n\n\n# 开漏电路\n\n要理解开漏，可以先理解开集。 如图，开集的意思，就是集电极 C 一端什么都不接，直接作为输出端口。 如果要用这种电路带一个负载，比如一个 LED，必须接一个上拉电阻，就像这样。\n\n当 Vin 没有电流，Q5断开时，LED 亮。\n\n当Vin流入电流，Q5导通时，LED灭。\n\n开漏电路，就是把上图中的三极管换成场效应管（MOSFET）。\n\nN 型场效应管各个端口的名称：\n\n场效应管是电压控制型元器件，只要对栅极施加电压，DS 就会导通。\n\n结型场效应管有一个特性就是它的输入阻抗非常大，这意味着：没有电流从控制电路流出，也没有电流进入控制电路。没有电流流入或流出，就不会烧坏控制电路。\n\n而双极型晶体管不同，是电流控制性元器件，如果使用开集电路，可能会烧坏控制电路。\n\n这大概就是我们总是听到开漏电路而很少听到开集电路的原因吧？因为开集电路被淘汰了。\n\n有人说，开漏单刀单置，推挽单刀双置，这样理解也有一定的道理。",normalizedContent:"# 推挽输出\n\n可以输出高，低电平，连接数字器件。\n\n * 输出 0 时，n-mos 导通，p-mos 高阻，输出0。\n\n * 输出 1 时，n-mos 高阻，p-mos 导通，输出1（不需要外部上拉电路）\n\n\n# 开漏输出\n\n输出端相当于三极管的集电极。要得到高电平状态需要上拉电阻才行。适合于做电流型的驱动,其吸收电流的能力相对强(一般20ma 以内)。\n\n * 输出 0 时，n-mos 导通，p-mos 不被激活，输出0。\n\n * 输出 1 时，n-mos 高阻， p-mos 不被激活，输出1（需要外部上拉电路）；可以读 io 输入电平变化，此模式可以把端口作为双向 io 使用。\n\n\n\n\n# 推挽电路\n\n上面的三极管是 n 型三极管，下面的三极管是 p 型三极管，请留意控制端、输入端和输出端。\n\n当 vin 电压为 v+时，上面的 n 型三极管控制端有电流输入，q 3 导通，于是电流从上往下通过，提供电流给负载。 经过上面的 n 型三极管提供电流给负载（rload），这就叫「推」。\n\n当 vin 电压为 v-时，下面的三极管有电流流出，q 4 导通，有电流从上往下流过。\n\n经过下面的 p 型三极管提供电流给负载（rload），这就叫「挽」。\n\n以上，就是推挽（push-pull）电路。\n\n\n# 开漏电路\n\n要理解开漏，可以先理解开集。 如图，开集的意思，就是集电极 c 一端什么都不接，直接作为输出端口。 如果要用这种电路带一个负载，比如一个 led，必须接一个上拉电阻，就像这样。\n\n当 vin 没有电流，q5断开时，led 亮。\n\n当vin流入电流，q5导通时，led灭。\n\n开漏电路，就是把上图中的三极管换成场效应管（mosfet）。\n\nn 型场效应管各个端口的名称：\n\n场效应管是电压控制型元器件，只要对栅极施加电压，ds 就会导通。\n\n结型场效应管有一个特性就是它的输入阻抗非常大，这意味着：没有电流从控制电路流出，也没有电流进入控制电路。没有电流流入或流出，就不会烧坏控制电路。\n\n而双极型晶体管不同，是电流控制性元器件，如果使用开集电路，可能会烧坏控制电路。\n\n这大概就是我们总是听到开漏电路而很少听到开集电路的原因吧？因为开集电路被淘汰了。\n\n有人说，开漏单刀单置，推挽单刀双置，这样理解也有一定的道理。",charsets:{cjk:!0},lastUpdated:"2024/03/12, 09:50:09",lastUpdatedTimestamp:1710208209e3},{title:"滤波电路及原理",frontmatter:{title:"滤波电路及原理",date:"2024-03-07T21:00:00.000Z",permalink:"/hardware/dl/filter/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/14.%E5%B8%B8%E8%A7%81%E7%94%B5%E8%B7%AF/01.%E6%BB%A4%E6%B3%A2%E7%94%B5%E8%B7%AF%E5%8F%8A%E5%8E%9F%E7%90%86.html",relativePath:"03.硬件知识/14.常见电路/01.滤波电路及原理.md",key:"v-46cece01",path:"/hardware/dl/filter/",headers:[{level:2,title:"常见低通滤波电路",slug:"常见低通滤波电路",normalizedTitle:"常见低通滤波电路",charIndex:2},{level:2,title:"CLC π型滤波器",slug:"clc-π型滤波器",normalizedTitle:"clc π型滤波器",charIndex:23},{level:3,title:"工作原理",slug:"工作原理",normalizedTitle:"工作原理",charIndex:37},{level:3,title:"优点",slug:"优点",normalizedTitle:"优点",charIndex:464},{level:3,title:"弱点",slug:"弱点",normalizedTitle:"弱点",charIndex:519},{level:3,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:547},{level:2,title:"DLC 型滤波器",slug:"dlc-型滤波器",normalizedTitle:"dlc 型滤波器",charIndex:594},{level:3,title:"工作原理",slug:"工作原理-2",normalizedTitle:"工作原理",charIndex:37},{level:3,title:"使用",slug:"使用-2",normalizedTitle:"使用",charIndex:547},{level:2,title:"CRC π型滤波器",slug:"crc-π型滤波器",normalizedTitle:"crc π型滤波器",charIndex:999},{level:3,title:"工作原理",slug:"工作原理-3",normalizedTitle:"工作原理",charIndex:37}],headersStr:"常见低通滤波电路 CLC π型滤波器 工作原理 优点 弱点 使用 DLC 型滤波器 工作原理 使用 CRC π型滤波器 工作原理",content:"# 常见低通滤波电路\n\n\n\n\n\n\n\n\n\n\n# CLC π型滤波器\n\n\n# 工作原理\n\na.输入正脉冲时,先给 C1充电,充电电流为 ic1,迅速充到脉冲的峰值电压 Vi,同时电感器 L 中也有线性增长的电流,并在 L 中储存了磁能,随着电流的增长,储存的磁能越来越多,电容器 C2通过电感 L 也充上了电压,充电电流为 ic2,C2和 C1上的电压基本相等,负载 RL 中的电流 IRL 也是由输入脉冲供给。 b. 输入正脉冲消失,负载 RL 的电流由两路提供,一路是 C2放电提供的电流为-ic2,,另一路是由电感 L 储存的磁能转换成电能,并与 C1上的电压串联后提供-ic1。负载 RL 中的电流等于两个电容器放电电流的和，即 IL= -（ic2+ic1）\n\nc.对直流而言:CLC型滤波器中的C1和C2, 相当于开路,而电感L对直流分量的感抗等于零,相当于短路,所以直流分量能顺利的通过电感L。\n\nd.对交流而言:电容器的容量大,相当于将其短路,而电感对各种正弦波的感抗很大,所以交流分量过不去,或过去的很少。\n\n\n# 优点\n\n输出直流电压高,最高能达到矩形波的峰值电压,适用于负载电流较大，要求输出电压脉动较小的场合。\n\n\n# 弱点\n\n用在没有稳压电路的电源中,负载能力差。\n\n\n# 使用\n\nCLC П型滤波器常用在脉幅式开关稳压电源,电容和电感值越大,滤波效果越好.\n\n\n# DLC 型滤波器\n\n\n# 工作原理\n\na.当变压器次级绕组为上正下负时,由于变压器次级绕组输出的电压是正负交、变的矩形波,故加 D1整流去掉负半周,正半周通过 D1整流后,电流通过电感 L 储、存了磁能,这个电流一部分给 C1充电,另一部分给负载 RL 用,D2截止。 b.当输入正脉冲消失后,这时变压器次级绕组产生的自感电压为上负下正,所以整流管 D1截止,滤波器没有输入电压,负载 RL 的电流供给由两部分组成,一部分由电感中储存的磁能转换为电能,电流方向与原来的电流方向一致,并通过续流二极管 D2构成回路电流 iL,另一路是 C1放电提供的电流为-ic1。\n\n\n# 使用\n\nDLC型滤波器,输出的直流电压就是它输入的矩形波电压的平均值。\n\nDLC 型滤波器常用在脉宽式开关稳压电源,DLC 的输出端,对地需要并联一个电阻,习惯上叫做”释放电阻”,一般在释放电阻中有30-50mA 电流就可以。\n\n\n# CRC π型滤波器\n\n\n# 工作原理\n\na.经整流输出的电压,首先经过 C1电容器的滤波,将大部分交流成分滤除,经 C1后的电压,再加到由 RL 和 C2够成的 RC 滤波电路中,电容 C2进一步对交流成分进行滤波。\n\nb.C1小电容几乎不存在电感,它的容抗很小,这样高频干扰成分容易通过小电容C1滤波到地,对高频交流干扰滤波效果较好。\n\nc.而电容容量大(C2>C1),流过C2的是低频交流成分,对低频交流干扰滤波效果较好。\n\nd.电阻对交、直流均有压降和功率损耗，故CRC只适用于负载电流较小的场合。",normalizedContent:"# 常见低通滤波电路\n\n\n\n\n\n\n\n\n\n\n# clc π型滤波器\n\n\n# 工作原理\n\na.输入正脉冲时,先给 c1充电,充电电流为 ic1,迅速充到脉冲的峰值电压 vi,同时电感器 l 中也有线性增长的电流,并在 l 中储存了磁能,随着电流的增长,储存的磁能越来越多,电容器 c2通过电感 l 也充上了电压,充电电流为 ic2,c2和 c1上的电压基本相等,负载 rl 中的电流 irl 也是由输入脉冲供给。 b. 输入正脉冲消失,负载 rl 的电流由两路提供,一路是 c2放电提供的电流为-ic2,,另一路是由电感 l 储存的磁能转换成电能,并与 c1上的电压串联后提供-ic1。负载 rl 中的电流等于两个电容器放电电流的和，即 il= -（ic2+ic1）\n\nc.对直流而言:clc型滤波器中的c1和c2, 相当于开路,而电感l对直流分量的感抗等于零,相当于短路,所以直流分量能顺利的通过电感l。\n\nd.对交流而言:电容器的容量大,相当于将其短路,而电感对各种正弦波的感抗很大,所以交流分量过不去,或过去的很少。\n\n\n# 优点\n\n输出直流电压高,最高能达到矩形波的峰值电压,适用于负载电流较大，要求输出电压脉动较小的场合。\n\n\n# 弱点\n\n用在没有稳压电路的电源中,负载能力差。\n\n\n# 使用\n\nclc п型滤波器常用在脉幅式开关稳压电源,电容和电感值越大,滤波效果越好.\n\n\n# dlc 型滤波器\n\n\n# 工作原理\n\na.当变压器次级绕组为上正下负时,由于变压器次级绕组输出的电压是正负交、变的矩形波,故加 d1整流去掉负半周,正半周通过 d1整流后,电流通过电感 l 储、存了磁能,这个电流一部分给 c1充电,另一部分给负载 rl 用,d2截止。 b.当输入正脉冲消失后,这时变压器次级绕组产生的自感电压为上负下正,所以整流管 d1截止,滤波器没有输入电压,负载 rl 的电流供给由两部分组成,一部分由电感中储存的磁能转换为电能,电流方向与原来的电流方向一致,并通过续流二极管 d2构成回路电流 il,另一路是 c1放电提供的电流为-ic1。\n\n\n# 使用\n\ndlc型滤波器,输出的直流电压就是它输入的矩形波电压的平均值。\n\ndlc 型滤波器常用在脉宽式开关稳压电源,dlc 的输出端,对地需要并联一个电阻,习惯上叫做”释放电阻”,一般在释放电阻中有30-50ma 电流就可以。\n\n\n# crc π型滤波器\n\n\n# 工作原理\n\na.经整流输出的电压,首先经过 c1电容器的滤波,将大部分交流成分滤除,经 c1后的电压,再加到由 rl 和 c2够成的 rc 滤波电路中,电容 c2进一步对交流成分进行滤波。\n\nb.c1小电容几乎不存在电感,它的容抗很小,这样高频干扰成分容易通过小电容c1滤波到地,对高频交流干扰滤波效果较好。\n\nc.而电容容量大(c2>c1),流过c2的是低频交流成分,对低频交流干扰滤波效果较好。\n\nd.电阻对交、直流均有压降和功率损耗，故crc只适用于负载电流较小的场合。",charsets:{cyrillic:!0,cjk:!0},lastUpdated:"2024/03/12, 09:50:09",lastUpdatedTimestamp:1710208209e3},{title:"Vivado创建工程",frontmatter:{title:"Vivado创建工程",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/vivado/project/",private:!0,categories:["硬件知识"],tags:["硬件知识"],readingShow:"top"},regularPath:"/03.%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/13.Vivado/04.Vivado%E5%88%9B%E5%BB%BA%E5%B7%A5%E7%A8%8B.html",relativePath:"03.硬件知识/13.Vivado/04.Vivado创建工程.md",key:"v-56b76baa",path:"/hardware/vivado/project/",headers:[{level:2,title:"新建工程",slug:"新建工程",normalizedTitle:"新建工程",charIndex:2},{level:2,title:"实例",slug:"实例",normalizedTitle:"实例",charIndex:40},{level:3,title:"原理",slug:"原理",normalizedTitle:"原理",charIndex:47},{level:3,title:"源码",slug:"源码",normalizedTitle:"源码",charIndex:85},{level:3,title:"编译",slug:"编译",normalizedTitle:"编译",charIndex:143},{level:4,title:"管脚配置",slug:"管脚配置",normalizedTitle:"管脚配置",charIndex:173}],headersStr:"新建工程 实例 原理 源码 编译 管脚配置",content:"# 新建工程\n\n\n\n\n\n\n\n\n\n\n\n\n\n生成目录如下，工程名更改了\n\n\n\n\n# 实例\n\n\n# 原理\n\nX1和X2为按键，同时控制灯f，当按键按下表示为逻辑0\n\n\n\n\n# 源码\n\nFile->Text Editor->New File，输入light.v\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 编译\n\n分析代码->综合电路->生成目标芯片实现内容\n\n# 管脚配置\n\n\n\n\n\n\n\n分配管脚后保存\n\n\n\nProgram And Debug->Generate Bitstream\n\n\n\n编译成功，弹出\n\n",normalizedContent:"# 新建工程\n\n\n\n\n\n\n\n\n\n\n\n\n\n生成目录如下，工程名更改了\n\n\n\n\n# 实例\n\n\n# 原理\n\nx1和x2为按键，同时控制灯f，当按键按下表示为逻辑0\n\n\n\n\n# 源码\n\nfile->text editor->new file，输入light.v\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 编译\n\n分析代码->综合电路->生成目标芯片实现内容\n\n# 管脚配置\n\n\n\n\n\n\n\n分配管脚后保存\n\n\n\nprogram and debug->generate bitstream\n\n\n\n编译成功，弹出\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/30, 21:06:17",lastUpdatedTimestamp:1706619977e3},{title:"VuePress-reco主题安装配置",frontmatter:{title:"VuePress-reco主题安装配置",date:"2023-06-17T21:00:00.000Z",permalink:"/front/vuepress/reco/",private:!0,categories:["前端构建"],tags:["前端构建","VuePress"],readingShow:"top"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA/07.VuePress/02.VuePress-reco%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html",relativePath:"04.前端构建/07.VuePress/02.VuePress-reco主题安装配置.md",key:"v-14963d9a",path:"/front/vuepress/reco/",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:2},{level:2,title:"引用",slug:"引用",normalizedTitle:"引用",charIndex:47},{level:2,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:127},{level:2,title:"完整文件头",slug:"完整文件头",normalizedTitle:"完整文件头",charIndex:710},{level:2,title:"添加主页及时间轴",slug:"添加主页及时间轴",normalizedTitle:"添加主页及时间轴",charIndex:1295},{level:2,title:"评论",slug:"评论",normalizedTitle:"评论",charIndex:1695},{level:2,title:"加密",slug:"加密",normalizedTitle:"加密",charIndex:2078},{level:2,title:"Config.js 配置",slug:"config-js-配置",normalizedTitle:"config.js 配置",charIndex:2380},{level:3,title:"移动端优化",slug:"移动端优化",normalizedTitle:"移动端优化",charIndex:2397},{level:3,title:"备案信息和项目开始时间",slug:"备案信息和项目开始时间",normalizedTitle:"备案信息和项目开始时间",charIndex:2629},{level:3,title:"设置作者姓名",slug:"设置作者姓名",normalizedTitle:"设置作者姓名",charIndex:2919},{level:2,title:"Logo",slug:"logo",normalizedTitle:"logo",charIndex:3259},{level:2,title:"头像",slug:"头像",normalizedTitle:"头像",charIndex:3380},{level:2,title:"首页配置",slug:"首页配置",normalizedTitle:"首页配置",charIndex:3533},{level:3,title:"首页类型",slug:"首页类型",normalizedTitle:"首页类型",charIndex:3542},{level:3,title:"设置首页的背景图片",slug:"设置首页的背景图片",normalizedTitle:"设置首页的背景图片",charIndex:3671},{level:3,title:"友链",slug:"友链",normalizedTitle:"友链",charIndex:3898},{level:3,title:"自定义首页",slug:"自定义首页",normalizedTitle:"自定义首页",charIndex:4515},{level:2,title:"关闭404 腾讯公益",slug:"关闭404-腾讯公益",normalizedTitle:"关闭404 腾讯公益",charIndex:4854},{level:2,title:"暗色模式适配",slug:"暗色模式适配",normalizedTitle:"暗色模式适配",charIndex:4978},{level:2,title:"多款代码主题",slug:"多款代码主题",normalizedTitle:"多款代码主题",charIndex:5256},{level:2,title:"侧边栏",slug:"侧边栏",normalizedTitle:"侧边栏",charIndex:5567},{level:2,title:"定制样式与脚本",slug:"定制样式与脚本",normalizedTitle:"定制样式与脚本",charIndex:5712},{level:3,title:"修改主题颜色",slug:"修改主题颜色",normalizedTitle:"修改主题颜色",charIndex:5724},{level:3,title:"添加或修改主题样式",slug:"添加或修改主题样式",normalizedTitle:"添加或修改主题样式",charIndex:6075},{level:2,title:"在 Head 中引用脚本与样式",slug:"在-head-中引用脚本与样式",normalizedTitle:"在 head 中引用脚本与样式",charIndex:6210}],headersStr:"安装 引用 配置 完整文件头 添加主页及时间轴 评论 加密 Config.js 配置 移动端优化 备案信息和项目开始时间 设置作者姓名 Logo 头像 首页配置 首页类型 设置首页的背景图片 友链 自定义首页 关闭404 腾讯公益 暗色模式适配 多款代码主题 侧边栏 定制样式与脚本 修改主题颜色 添加或修改主题样式 在 Head 中引用脚本与样式",content:"# 安装\n\nyarn add -D vuepress-theme-reco\n\n\n1\n\n\n\n# 引用\n\n在.vuepress/config.js添加\n\nmodule.exports = {\n  theme: 'reco'\n}  \n\n\n1\n2\n3\n\n\n\n# 配置\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeConfig: {\n     // 博客配置\n    blogConfig: {\n      category: {\n        location: 2,     // 在导航栏菜单中所占的位置，默认2\n        text: '分类' // 默认文案 “分类”\n      },\n      tag: {\n        location: 3,     // 在导航栏菜单中所占的位置，默认3\n        text: '标签'      // 默认文案 “标签”\n      },\n      socialLinks: [     // 信息栏展示社交信息\n        { icon: 'reco-github', link: 'https://github.com/recoluan' },\n        { icon: 'reco-npm', link: 'https://www.npmjs.com/~reco_luan' }\n      ]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 完整文件头\n\n---\ntitle: 示例文档\ndate: 2021-08-13\nsidebar: 'auto'\ncategories:\n - 示例文档\ntags:\n - 示例文档\n# keys:\n#  - '123456'\npublish: true\nsticky： 1\n---\n添加摘要\n:::tip\n在markdown代码中，您将看到注释，注释前面的代码将显示在列表页面上的文章摘要中。\n:::\n\n::: warning\nThis is a warning\n:::\n\n::: danger\nThis is a dangerous warning\n:::\n\n::: theorem 牛顿第一定律\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n\n::: right\n来自 [维基百科](https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A1%BF%E8%BF%90%E5%8A%A8%E5%AE%9A%E5%BE%8B)\n:::\n\n::: details\n这是一个详情块，在 IE / Edge 中不生效\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# 添加主页及时间轴\n\n新增配置文件.vuepress/config/nav.js\n\n// .vuepress/config/nav.js\n\nmodule.exports = [\n    { \"text\": \"主页\", \"link\": \"/\", \"icon\": \"reco-home\" },\n    { \"text\": \"时间轴\", \"link\": \"/timeline/\", \"icon\": \"reco-date\" },\n]\n\n\n1\n2\n3\n4\n5\n6\n\n\n添加config.js的nav配置\n\n// .vuepress/config.js\n\nvar navConfig = require('./config/nav')\nmodule.exports = [\n    themeConfig: {\n    \tnav: navConfig\n    }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 评论\n\n主题内置评论插件 @vuepress-reco/vuepress-plugin-comments，可以根据自己的喜好选择 Valine 或者 Vssue；\n\n如果你想默认不加载评论，而只在某些页面显示评论功能，可以在 valineConfig 或 vssueConfig 中设置 showComment: false，并在需要展示评论的页面 设置 isShowComments: true。\n\n如果仅是某篇文章不想设置开启评论功能，可以在 front-matter 设置 isShowComments: false。\n\n浏览量\n\n 1. 浏览量 仅在使用 Valine 时显示；\n 2. 因为 浏览量 需要在页面加载时去调用相关接口，所以列表页的所有数据会一起加载下来，如果文章数量很多会影响加载速度，所以在 1.2.0 之后去掉文章列表的浏览量。\n\n\n# 加密\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeConfig: {\n    // 密钥\n    keyPage: {\n      keys: ['5d33475c5126e4d0c4958cb5d3f17b97'], // 1.3.0 版本后需要设置为密文\n      color: '#42b983', // 登录页动画球的颜色\n      lineColor: '#42b983' // 登录页动画线的颜色\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# Config.js 配置\n\n\n# 移动端优化\n\n在移动端，搜索框在获得焦点时会放大，并且在失去焦点后可以左右滚动，这可以通过设置元来优化。\n\n// .vuepress/config.js\nmodule.exports = {\n  head: [\n    ['meta', { name: 'viewport', content: 'width=device-width,initial-scale=1,user-scalable=no' }]\n  ]\n}  \n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 备案信息和项目开始时间\n\n// .vuepress/config.js\nmodule.exports = {\n  themeConfig: {\n    // 备案\n    record: 'ICP 备案文案',\n    recordLink: 'ICP 备案指向链接',\n    cyberSecurityRecord: '公安部备案文案',\n    cyberSecurityLink: '公安部备案指向链接',\n    // 项目开始时间，只填写年份\n    startYear: '2017'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 设置作者姓名\n\n * 全局\n   \n   // .vuepress/config.js\n   module.exports = {\n     themeConfig: {\n       // author\n       author: 'i采薇'\n     }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 单篇\n   \n   ---\n   title: 你还没真的努力过，就轻易输给了懒惰\n   date: 2015-04-23\n   categories: article\n   author: i采薇\n   ---\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n\n# Logo\n\n// .vuepress/config.js\nmodule.exports = {\n  themeConfig: {\n    logo: '/images/avatar.png'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 头像\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeConfig: {\n    authorAvatar: '/images/avatar.png'\n  }  \n}  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 首页配置\n\n\n# 首页类型\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeConfig: {\n    type: 'blog'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 设置首页的背景图片\n\n# 这是你的主页\n\n---\nhome: true\nheroText: i采薇\ntagline: 昔我往矣，杨柳依依。今我来思，雨雪霏霏。 \nheroTextStyle: {\n  color: '#fff'\n}\nbgImage: '/images/xiaoyu1.jpg'\nbgImageStyle: {\n  height: '350px'\n}\n---\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 友链\n\nmodule.exports = {\n  theme: 'reco',\n  themeConfig: {\n    type: 'blog',\n    friendLink: [\n      {\n        title: 'vuepress-theme-reco',\n        desc: 'A simple and beautiful vuepress Blog & Doc theme.',\n        logo: \"https://vuepress-theme-reco.recoluan.com/icon_vuepress_reco.png\",\n        link: 'https://vuepress-theme-reco.recoluan.com'\n      },\n      {\n        title: '午后南杂',\n        desc: 'Enjoy when you can, and endure when you must.',\n        email: 'recoluan@qq.com',\n        link: 'https://www.recoluan.com'\n      },\n      // ...\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 自定义首页\n\n首页会自动添加 header 和 footer，自定义部分无需考虑添加头部和脚部内容。\n\n将你希望首页样式封装成 vue 组件，封装成插件或者 @vuepress/plugin-register-components 插件全局注册，然后配置 type：\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeConfig: {\n    type: 'your vue component name'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n如果你的首页风格并不希望显示 navbar，你可以在首页文件里设置 front-matter，navbar: false\n\n\n# 关闭404 腾讯公益\n\nmodule.exports = {\n  theme: 'reco',\n  themeConfig: {\n    noFoundPageByTencent: false\n  }  \n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 暗色模式适配\n\n暗色模式默认开启，为 auto 模式，显示模式调节按钮，你也可以自定义初始化配置\n\n// .vuepress/config.js\nmodule.exports = {\n  theme: 'reco',\n  themeConfig: {\n    mode: 'dark', // 默认 auto，auto 跟随系统，dark 暗色模式，light 亮色模式\n    // modePicker: false // 默认 true，false 不显示模式调节按钮，true 则显示\n  }\n}  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 多款代码主题\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeConfig: {\n    /**\n     * support for\n     * 'default'\n     * 'funky'\n     * 'okaidia'\n     * 'solarizedlight'\n     * 'tomorrow'\n     */\n    codeTheme: 'tomorrow' // default 'tomorrow'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 侧边栏\n\n// .vuepress/config.js\nmodule.exports = {\n  themeConfig: {\n    subSidebar: 'auto'//在所有页面中启用自动生成子侧边栏，原 sidebar 仍然兼容\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 定制样式与脚本\n\n\n# 修改主题颜色\n\n通过配置 .vuepress/styles/palette.styl 来快速修改主题的一些颜色属性。\n\n// 默认值\n$accentColor = #3eaf7c                      // 主题颜色\n$textColor = #2c3e50                        // 文本颜色\n$borderColor = #eaecef                      // 边框线颜色\n$codeBgColor = #282c34                      // 代码块背景色\n$backgroundColor = #ffffff                  // 悬浮块背景色\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 添加或修改主题样式\n\n可以创建一个 .vuepress/styles/index.styl 文件以方便地添加额外样式。这是一个 Stylus 文件，也可以使用正常的 CSS 语法。\n\n.content {\n  font-size 30px\n}\n\n\n1\n2\n3\n\n\n\n# 在 Head 中引用脚本与样式\n\n通过配置 .vuepress/config.js 中的 head 来引入脚本与样式，它将会被编译为 <head> 中的一项。\n\n修改标题图标，增加鼠标单击特效与看板娘\n\n\\\\.vuepress/config/head.js\n\nmodule.exports =  [\n  ['link', { rel: 'icon', type: \"image/x-icon\", href: '/images/favicon.ico' }],\n  [\"meta\", { \"name\": \"viewport\", \"content\": \"width=device-width,initial-scale=1,user-scalable=no\" }],\n  [\"script\", { src: \"/js/bodyClick.js\" }],\n  // 看板娘\n  [\"script\", { src: \"/js/autoload.js\" }]\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n引入head.js\n\n// .vuepress/config.js\nvar headConfig = require('./config/head')\n\nmodule.exports = {\n  \"head\": headConfig\n}\n\n\n1\n2\n3\n4\n5\n6\n",normalizedContent:"# 安装\n\nyarn add -d vuepress-theme-reco\n\n\n1\n\n\n\n# 引用\n\n在.vuepress/config.js添加\n\nmodule.exports = {\n  theme: 'reco'\n}  \n\n\n1\n2\n3\n\n\n\n# 配置\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeconfig: {\n     // 博客配置\n    blogconfig: {\n      category: {\n        location: 2,     // 在导航栏菜单中所占的位置，默认2\n        text: '分类' // 默认文案 “分类”\n      },\n      tag: {\n        location: 3,     // 在导航栏菜单中所占的位置，默认3\n        text: '标签'      // 默认文案 “标签”\n      },\n      sociallinks: [     // 信息栏展示社交信息\n        { icon: 'reco-github', link: 'https://github.com/recoluan' },\n        { icon: 'reco-npm', link: 'https://www.npmjs.com/~reco_luan' }\n      ]\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 完整文件头\n\n---\ntitle: 示例文档\ndate: 2021-08-13\nsidebar: 'auto'\ncategories:\n - 示例文档\ntags:\n - 示例文档\n# keys:\n#  - '123456'\npublish: true\nsticky： 1\n---\n添加摘要\n:::tip\n在markdown代码中，您将看到注释，注释前面的代码将显示在列表页面上的文章摘要中。\n:::\n\n::: warning\nthis is a warning\n:::\n\n::: danger\nthis is a dangerous warning\n:::\n\n::: theorem 牛顿第一定律\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n\n::: right\n来自 [维基百科](https://zh.wikipedia.org/wiki/%e7%89%9b%e9%a1%bf%e8%bf%90%e5%8a%a8%e5%ae%9a%e5%be%8b)\n:::\n\n::: details\n这是一个详情块，在 ie / edge 中不生效\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# 添加主页及时间轴\n\n新增配置文件.vuepress/config/nav.js\n\n// .vuepress/config/nav.js\n\nmodule.exports = [\n    { \"text\": \"主页\", \"link\": \"/\", \"icon\": \"reco-home\" },\n    { \"text\": \"时间轴\", \"link\": \"/timeline/\", \"icon\": \"reco-date\" },\n]\n\n\n1\n2\n3\n4\n5\n6\n\n\n添加config.js的nav配置\n\n// .vuepress/config.js\n\nvar navconfig = require('./config/nav')\nmodule.exports = [\n    themeconfig: {\n    \tnav: navconfig\n    }\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 评论\n\n主题内置评论插件 @vuepress-reco/vuepress-plugin-comments，可以根据自己的喜好选择 valine 或者 vssue；\n\n如果你想默认不加载评论，而只在某些页面显示评论功能，可以在 valineconfig 或 vssueconfig 中设置 showcomment: false，并在需要展示评论的页面 设置 isshowcomments: true。\n\n如果仅是某篇文章不想设置开启评论功能，可以在 front-matter 设置 isshowcomments: false。\n\n浏览量\n\n 1. 浏览量 仅在使用 valine 时显示；\n 2. 因为 浏览量 需要在页面加载时去调用相关接口，所以列表页的所有数据会一起加载下来，如果文章数量很多会影响加载速度，所以在 1.2.0 之后去掉文章列表的浏览量。\n\n\n# 加密\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeconfig: {\n    // 密钥\n    keypage: {\n      keys: ['5d33475c5126e4d0c4958cb5d3f17b97'], // 1.3.0 版本后需要设置为密文\n      color: '#42b983', // 登录页动画球的颜色\n      linecolor: '#42b983' // 登录页动画线的颜色\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# config.js 配置\n\n\n# 移动端优化\n\n在移动端，搜索框在获得焦点时会放大，并且在失去焦点后可以左右滚动，这可以通过设置元来优化。\n\n// .vuepress/config.js\nmodule.exports = {\n  head: [\n    ['meta', { name: 'viewport', content: 'width=device-width,initial-scale=1,user-scalable=no' }]\n  ]\n}  \n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 备案信息和项目开始时间\n\n// .vuepress/config.js\nmodule.exports = {\n  themeconfig: {\n    // 备案\n    record: 'icp 备案文案',\n    recordlink: 'icp 备案指向链接',\n    cybersecurityrecord: '公安部备案文案',\n    cybersecuritylink: '公安部备案指向链接',\n    // 项目开始时间，只填写年份\n    startyear: '2017'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 设置作者姓名\n\n * 全局\n   \n   // .vuepress/config.js\n   module.exports = {\n     themeconfig: {\n       // author\n       author: 'i采薇'\n     }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 单篇\n   \n   ---\n   title: 你还没真的努力过，就轻易输给了懒惰\n   date: 2015-04-23\n   categories: article\n   author: i采薇\n   ---\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n\n# logo\n\n// .vuepress/config.js\nmodule.exports = {\n  themeconfig: {\n    logo: '/images/avatar.png'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 头像\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeconfig: {\n    authoravatar: '/images/avatar.png'\n  }  \n}  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 首页配置\n\n\n# 首页类型\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeconfig: {\n    type: 'blog'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 设置首页的背景图片\n\n# 这是你的主页\n\n---\nhome: true\nherotext: i采薇\ntagline: 昔我往矣，杨柳依依。今我来思，雨雪霏霏。 \nherotextstyle: {\n  color: '#fff'\n}\nbgimage: '/images/xiaoyu1.jpg'\nbgimagestyle: {\n  height: '350px'\n}\n---\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 友链\n\nmodule.exports = {\n  theme: 'reco',\n  themeconfig: {\n    type: 'blog',\n    friendlink: [\n      {\n        title: 'vuepress-theme-reco',\n        desc: 'a simple and beautiful vuepress blog & doc theme.',\n        logo: \"https://vuepress-theme-reco.recoluan.com/icon_vuepress_reco.png\",\n        link: 'https://vuepress-theme-reco.recoluan.com'\n      },\n      {\n        title: '午后南杂',\n        desc: 'enjoy when you can, and endure when you must.',\n        email: 'recoluan@qq.com',\n        link: 'https://www.recoluan.com'\n      },\n      // ...\n    ]\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 自定义首页\n\n首页会自动添加 header 和 footer，自定义部分无需考虑添加头部和脚部内容。\n\n将你希望首页样式封装成 vue 组件，封装成插件或者 @vuepress/plugin-register-components 插件全局注册，然后配置 type：\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeconfig: {\n    type: 'your vue component name'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n如果你的首页风格并不希望显示 navbar，你可以在首页文件里设置 front-matter，navbar: false\n\n\n# 关闭404 腾讯公益\n\nmodule.exports = {\n  theme: 'reco',\n  themeconfig: {\n    nofoundpagebytencent: false\n  }  \n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 暗色模式适配\n\n暗色模式默认开启，为 auto 模式，显示模式调节按钮，你也可以自定义初始化配置\n\n// .vuepress/config.js\nmodule.exports = {\n  theme: 'reco',\n  themeconfig: {\n    mode: 'dark', // 默认 auto，auto 跟随系统，dark 暗色模式，light 亮色模式\n    // modepicker: false // 默认 true，false 不显示模式调节按钮，true 则显示\n  }\n}  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 多款代码主题\n\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco',\n  themeconfig: {\n    /**\n     * support for\n     * 'default'\n     * 'funky'\n     * 'okaidia'\n     * 'solarizedlight'\n     * 'tomorrow'\n     */\n    codetheme: 'tomorrow' // default 'tomorrow'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 侧边栏\n\n// .vuepress/config.js\nmodule.exports = {\n  themeconfig: {\n    subsidebar: 'auto'//在所有页面中启用自动生成子侧边栏，原 sidebar 仍然兼容\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 定制样式与脚本\n\n\n# 修改主题颜色\n\n通过配置 .vuepress/styles/palette.styl 来快速修改主题的一些颜色属性。\n\n// 默认值\n$accentcolor = #3eaf7c                      // 主题颜色\n$textcolor = #2c3e50                        // 文本颜色\n$bordercolor = #eaecef                      // 边框线颜色\n$codebgcolor = #282c34                      // 代码块背景色\n$backgroundcolor = #ffffff                  // 悬浮块背景色\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 添加或修改主题样式\n\n可以创建一个 .vuepress/styles/index.styl 文件以方便地添加额外样式。这是一个 stylus 文件，也可以使用正常的 css 语法。\n\n.content {\n  font-size 30px\n}\n\n\n1\n2\n3\n\n\n\n# 在 head 中引用脚本与样式\n\n通过配置 .vuepress/config.js 中的 head 来引入脚本与样式，它将会被编译为 <head> 中的一项。\n\n修改标题图标，增加鼠标单击特效与看板娘\n\n\\\\.vuepress/config/head.js\n\nmodule.exports =  [\n  ['link', { rel: 'icon', type: \"image/x-icon\", href: '/images/favicon.ico' }],\n  [\"meta\", { \"name\": \"viewport\", \"content\": \"width=device-width,initial-scale=1,user-scalable=no\" }],\n  [\"script\", { src: \"/js/bodyclick.js\" }],\n  // 看板娘\n  [\"script\", { src: \"/js/autoload.js\" }]\n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n引入head.js\n\n// .vuepress/config.js\nvar headconfig = require('./config/head')\n\nmodule.exports = {\n  \"head\": headconfig\n}\n\n\n1\n2\n3\n4\n5\n6\n",charsets:{cjk:!0},lastUpdated:"2023/06/18, 23:24:16",lastUpdatedTimestamp:1687101856e3},{title:"VuePress安装配置",frontmatter:{title:"VuePress安装配置",date:"2023-06-17T21:00:00.000Z",permalink:"/front/vuepress/install/",private:!0,categories:["前端构建"],tags:["前端构建","VuePress"],readingShow:"top"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA/07.VuePress/01.VuePress%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html",relativePath:"04.前端构建/07.VuePress/01.VuePress安装配置.md",key:"v-fa66493c",path:"/front/vuepress/install/",headers:[{level:2,title:"安装vuepress",slug:"安装vuepress",normalizedTitle:"安装vuepress",charIndex:2},{level:2,title:"创建第一篇文章",slug:"创建第一篇文章",normalizedTitle:"创建第一篇文章",charIndex:78},{level:2,title:"添加scripts",slug:"添加scripts",normalizedTitle:"添加scripts",charIndex:151},{level:2,title:"启动",slug:"启动",normalizedTitle:"启动",charIndex:271},{level:2,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:305},{level:3,title:"markdown显示行号",slug:"markdown显示行号",normalizedTitle:"markdown显示行号",charIndex:312},{level:3,title:"基本配置",slug:"基本配置",normalizedTitle:"基本配置",charIndex:429},{level:4,title:"base站点基础路径",slug:"base站点基础路径",normalizedTitle:"base站点基础路径",charIndex:437}],headersStr:"安装vuepress 创建第一篇文章 添加scripts 启动 配置 markdown显示行号 基本配置 base站点基础路径",content:"# 安装vuepress\n\nmkdir vuepress-blog\nyarn init\nyarn add -D vuepress\n\n\n1\n2\n3\n\n\n\n# 创建第一篇文章\n\nmkdir docs && echo '# Hello VuePress' > docs/README.md\n\n\n1\n\n\n\n# 添加scripts\n\n{\n  \"scripts\": {\n    \"dev\": \"vuepress dev docs\",\n    \"build\": \"vuepress build docs\"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 启动\n\nhttp://localhost:8080看到文章\n\n\n# 配置\n\n\n# markdown显示行号\n\n// .vuepress/config.js\nmodule.exports = {\n  markdown: {\n    lineNumbers: true\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 基本配置\n\n# base站点基础路径\n\n// .vuepress/config.js\nmodule.exports = {\n    base: '/blog/',\n    title: 'i采薇笔记',\n    description: 'i采薇笔记',\n    host: 'localhost',\n    port: 9000\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n",normalizedContent:"# 安装vuepress\n\nmkdir vuepress-blog\nyarn init\nyarn add -d vuepress\n\n\n1\n2\n3\n\n\n\n# 创建第一篇文章\n\nmkdir docs && echo '# hello vuepress' > docs/readme.md\n\n\n1\n\n\n\n# 添加scripts\n\n{\n  \"scripts\": {\n    \"dev\": \"vuepress dev docs\",\n    \"build\": \"vuepress build docs\"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 启动\n\nhttp://localhost:8080看到文章\n\n\n# 配置\n\n\n# markdown显示行号\n\n// .vuepress/config.js\nmodule.exports = {\n  markdown: {\n    linenumbers: true\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 基本配置\n\n# base站点基础路径\n\n// .vuepress/config.js\nmodule.exports = {\n    base: '/blog/',\n    title: 'i采薇笔记',\n    description: 'i采薇笔记',\n    host: 'localhost',\n    port: 9000\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n",charsets:{cjk:!0},lastUpdated:"2023/06/18, 23:24:16",lastUpdatedTimestamp:1687101856e3},{title:"插件的使用",frontmatter:{title:"插件的使用",date:"2023-06-17T21:00:00.000Z",permalink:"/front/vuepress/plugin/",private:!0,categories:["前端构建"],tags:["前端构建","VuePress"],readingShow:"top"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA/07.VuePress/05.%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8.html",relativePath:"04.前端构建/07.VuePress/05.插件的使用.md",key:"v-3db965cd",path:"/front/vuepress/plugin/",headers:[{level:2,title:"vuepress-plugin-zooming",slug:"vuepress-plugin-zooming",normalizedTitle:"vuepress-plugin-zooming",charIndex:2},{level:2,title:"vuepress-plugin-permalink-pinyin",slug:"vuepress-plugin-permalink-pinyin",normalizedTitle:"vuepress-plugin-permalink-pinyin",charIndex:429},{level:2,title:"boboidream/vuepress-plugin-rpurl",slug:"boboidream-vuepress-plugin-rpurl",normalizedTitle:"boboidream/vuepress-plugin-rpurl",charIndex:668},{level:2,title:"vuepress-plugin-sakura",slug:"vuepress-plugin-sakura",normalizedTitle:"vuepress-plugin-sakura",charIndex:814},{level:2,title:"vuepress-plugin-auto-sidebar",slug:"vuepress-plugin-auto-sidebar",normalizedTitle:"vuepress-plugin-auto-sidebar",charIndex:1137},{level:2,title:"vuepress-plugin-meting",slug:"vuepress-plugin-meting",normalizedTitle:"vuepress-plugin-meting",charIndex:1269},{level:2,title:"vuepress-plugin-dynamic-title",slug:"vuepress-plugin-dynamic-title",normalizedTitle:"vuepress-plugin-dynamic-title",charIndex:1956},{level:2,title:"vuepress-plugin-nuggets-style-copy",slug:"vuepress-plugin-nuggets-style-copy",normalizedTitle:"vuepress-plugin-nuggets-style-copy",charIndex:2293}],headersStr:"vuepress-plugin-zooming vuepress-plugin-permalink-pinyin boboidream/vuepress-plugin-rpurl vuepress-plugin-sakura vuepress-plugin-auto-sidebar vuepress-plugin-meting vuepress-plugin-dynamic-title vuepress-plugin-nuggets-style-copy",content:'# vuepress-plugin-zooming\n\n图片点击缩放\n\nyarn add -D vuepress-plugin-zooming\n\n\n1\n\n\n// .vuepress/config.js\nmodule.exports = {\n  plugins: [\n    [\n      \'vuepress-plugin-medium-zoom\',\n      {\n        selector: \'.my-wrapper .my-img\',\n        delay: 1000,\n        options: {\n          margin: 24,\n          background: \'#BADA55\',\n          scrollOffset: 0,\n        },\n      },\n    ],\n  ],\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# vuepress-plugin-permalink-pinyin\n\n中文转拼音路径(vdoing不用这个插件)\n\nplugins: {\n  \'permalink-pinyin\': {\n    lowercase: true, // Converted into lowercase, default: true\n    separator: \'-\' // Separator of the slug, default: \'-\'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# boboidream/vuepress-plugin-rpurl\n\n路径优化\n\nyarn add -D boboidream/vuepress-plugin-rpurl\n\n\n1\n\n\nmodule.exports = {\n  plugins: [\'rpurl\']\n}\n\n\n1\n2\n3\n\n\n\n# vuepress-plugin-sakura\n\n樱花插件\n\nyarn add -D vuepress-plugin-sakura\n\n\n1\n\n\n// 樱花\n["sakura", {\n    num: 20,  // 默认数量\n    show: true, //  是否显示\n    zIndex: 2,   // 层级\n    img: {\n        replace: false,  // false 默认图 true 换图 需要填写httpUrl地址\n        httpUrl: \'/images/sakura.png\'     // 绝对路径\n    }     \n}]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# vuepress-plugin-auto-sidebar\n\n自动侧边栏\n\nyarn add -D  vuepress-plugin-auto-sidebar\n\n\n1\n\n\n["vuepress-plugin-auto-sidebar", {}],\n\n\n1\n\n\n\n# vuepress-plugin-meting\n\n网易云音乐\n\nyarn add -D  vuepress-plugin-meting\n\n\n1\n\n\n// 网易云音乐\n[\n    //yarn add vuepress-plugin-meting -D\n    "meting", {\n        meting: {\n            // 当前服务为netease -> 网易\n            server: "netease",\n            // 类型为歌单\n            type: "playlist",\n            // 歌单id\n            mid: "6915488295",\n        },\n        aplayer: {\n            // 歌单为随机\n            order: \'random\',\n            // 0为不显示歌词\n            lrcType: 0,\n            // 音量\n            volume: 0.2,\n            // 开启迷你模式\n            mini: true,\n            // 自动播放\n            autoplay: true,\n        },\n    },\n],\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# vuepress-plugin-dynamic-title\n\n动态标题\n\nyarn add -D  vuepress-plugin-dynamic-title\n\n\n1\n\n\n[\n    "dynamic-title",\n    {\n      showIcon: "/assets/img/favicon.ico",\n      showText: "（๑￫‿ฺ￩๑）咦~回来啦~",\n      hideIcon: "/assets/img/favicon.ico",\n      hideText: "(,,•́ . •̀,,)服务器崩溃~",\n      recoverTime: 2000\n    }\n  ],\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# vuepress-plugin-nuggets-style-copy\n\n代码复制\n\nyarn add -D  vuepress-plugin-nuggets-style-copy\n\n\n1\n\n\n["vuepress-plugin-nuggets-style-copy", {\n    copyText: "复制代码",  \n    tip: {\n      content: "复制成功!"\n    }\n  }],\n\n\n1\n2\n3\n4\n5\n6\n',normalizedContent:'# vuepress-plugin-zooming\n\n图片点击缩放\n\nyarn add -d vuepress-plugin-zooming\n\n\n1\n\n\n// .vuepress/config.js\nmodule.exports = {\n  plugins: [\n    [\n      \'vuepress-plugin-medium-zoom\',\n      {\n        selector: \'.my-wrapper .my-img\',\n        delay: 1000,\n        options: {\n          margin: 24,\n          background: \'#bada55\',\n          scrolloffset: 0,\n        },\n      },\n    ],\n  ],\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# vuepress-plugin-permalink-pinyin\n\n中文转拼音路径(vdoing不用这个插件)\n\nplugins: {\n  \'permalink-pinyin\': {\n    lowercase: true, // converted into lowercase, default: true\n    separator: \'-\' // separator of the slug, default: \'-\'\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# boboidream/vuepress-plugin-rpurl\n\n路径优化\n\nyarn add -d boboidream/vuepress-plugin-rpurl\n\n\n1\n\n\nmodule.exports = {\n  plugins: [\'rpurl\']\n}\n\n\n1\n2\n3\n\n\n\n# vuepress-plugin-sakura\n\n樱花插件\n\nyarn add -d vuepress-plugin-sakura\n\n\n1\n\n\n// 樱花\n["sakura", {\n    num: 20,  // 默认数量\n    show: true, //  是否显示\n    zindex: 2,   // 层级\n    img: {\n        replace: false,  // false 默认图 true 换图 需要填写httpurl地址\n        httpurl: \'/images/sakura.png\'     // 绝对路径\n    }     \n}]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# vuepress-plugin-auto-sidebar\n\n自动侧边栏\n\nyarn add -d  vuepress-plugin-auto-sidebar\n\n\n1\n\n\n["vuepress-plugin-auto-sidebar", {}],\n\n\n1\n\n\n\n# vuepress-plugin-meting\n\n网易云音乐\n\nyarn add -d  vuepress-plugin-meting\n\n\n1\n\n\n// 网易云音乐\n[\n    //yarn add vuepress-plugin-meting -d\n    "meting", {\n        meting: {\n            // 当前服务为netease -> 网易\n            server: "netease",\n            // 类型为歌单\n            type: "playlist",\n            // 歌单id\n            mid: "6915488295",\n        },\n        aplayer: {\n            // 歌单为随机\n            order: \'random\',\n            // 0为不显示歌词\n            lrctype: 0,\n            // 音量\n            volume: 0.2,\n            // 开启迷你模式\n            mini: true,\n            // 自动播放\n            autoplay: true,\n        },\n    },\n],\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# vuepress-plugin-dynamic-title\n\n动态标题\n\nyarn add -d  vuepress-plugin-dynamic-title\n\n\n1\n\n\n[\n    "dynamic-title",\n    {\n      showicon: "/assets/img/favicon.ico",\n      showtext: "（๑￫‿ฺ￩๑）咦~回来啦~",\n      hideicon: "/assets/img/favicon.ico",\n      hidetext: "(,,• . •,,)服务器崩溃~",\n      recovertime: 2000\n    }\n  ],\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# vuepress-plugin-nuggets-style-copy\n\n代码复制\n\nyarn add -d  vuepress-plugin-nuggets-style-copy\n\n\n1\n\n\n["vuepress-plugin-nuggets-style-copy", {\n    copytext: "复制代码",  \n    tip: {\n      content: "复制成功!"\n    }\n  }],\n\n\n1\n2\n3\n4\n5\n6\n',charsets:{cjk:!0},lastUpdated:"2023/06/18, 23:24:16",lastUpdatedTimestamp:1687101856e3},{title:"部署",frontmatter:{title:"部署",date:"2023-06-17T21:00:00.000Z",permalink:"/front/vuepress/deploy/",private:!0,categories:["前端构建"],tags:["前端构建","VuePress"],readingShow:"top"},regularPath:"/04.%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA/07.VuePress/06.%E9%83%A8%E7%BD%B2.html",relativePath:"04.前端构建/07.VuePress/06.部署.md",key:"v-2c524c7e",path:"/front/vuepress/deploy/",headers:[{level:2,title:"新建脚本",slug:"新建脚本",normalizedTitle:"新建脚本",charIndex:2},{level:2,title:"添加script",slug:"添加script",normalizedTitle:"添加script",charIndex:582}],headersStr:"新建脚本 添加script",content:"# 新建脚本\n\n根目录下新建文件deploy.sh\n\n#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# 如果是发布到自定义域名\n# echo 'www.example.com' > CNAME\n\ngit init\ngit add -A\ngit commit -m 'deploy'\n\n# 如果发布到 https://<USERNAME>.github.io\n# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master\n\n# 如果发布到 https://<USERNAME>.github.io/<REPO>\n# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages\ngit push -f git@github.com:icaiwei/blog.git master:gh-pages\n\ncd -\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 添加script\n\n\"deploy\": \"bash deploy.sh\"\n\n\n1\n",normalizedContent:"# 新建脚本\n\n根目录下新建文件deploy.sh\n\n#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# 如果是发布到自定义域名\n# echo 'www.example.com' > cname\n\ngit init\ngit add -a\ngit commit -m 'deploy'\n\n# 如果发布到 https://<username>.github.io\n# git push -f git@github.com:<username>/<username>.github.io.git master\n\n# 如果发布到 https://<username>.github.io/<repo>\n# git push -f git@github.com:<username>/<repo>.git master:gh-pages\ngit push -f git@github.com:icaiwei/blog.git master:gh-pages\n\ncd -\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 添加script\n\n\"deploy\": \"bash deploy.sh\"\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2023/06/18, 23:24:16",lastUpdatedTimestamp:1687101856e3},{title:"log使用",frontmatter:{title:"log使用",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/log",private:!0,categories:["软件开发"],tags:["软件开发"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/01.Springboot%E4%BD%BF%E7%94%A8/03.log%E4%BD%BF%E7%94%A8.html",relativePath:"06.软件开发/01.Springboot使用/03.log使用.md",key:"v-ca704d54",path:"/soft/springboot/use/log/",headers:[{level:2,title:"配置 logback",slug:"配置-logback",normalizedTitle:"配置 logback",charIndex:18},{level:2,title:"配置 slf4j",slug:"配置-slf4j",normalizedTitle:"配置 slf4j",charIndex:9697}],headersStr:"配置 logback 配置 slf4j",content:'启动后 log 控制台显示\n\n\n# 配置 logback\n\n在 resources 中新建 logback-spring.xml\n\n<?xml version="1.0" encoding="UTF-8"?>  \n<configuration>  \n    <property name="log.path" value="./logs"/>  \n    <property name="console.log.pattern"  \n              value="%red(%d{yyyy-MM-dd HH:mm:ss}) %green([%thread]) %highlight(%-5level) %boldMagenta(%logger{36}%n) - %msg%n"/>  \n    <property name="log.pattern" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"/>  \n  \n    \x3c!-- 控制台输出 --\x3e  \n    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">  \n        <encoder>  \n            <pattern>${console.log.pattern}</pattern>  \n            <charset>utf-8</charset>  \n        </encoder>  \n    </appender>  \n  \n    \x3c!-- 控制台输出 --\x3e  \n    <appender name="file_console" class="ch.qos.logback.core.rolling.RollingFileAppender">  \n        <file>${log.path}/sys-console.log</file>  \n        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">  \n            \x3c!-- 基于时间和大小的轮转策略中fileNamePattern位置很重要，他决定了生成文件的名称及轮转时机,以及是否压缩 --\x3e  \n            \x3c!-- %d决定以什么时间维度轮转(但实际轮转时机取决于日志事件的到达时间)，比如%d{yyyy/MM}:每个月开始的时候轮转,%d默认为 yyyy-MM-dd：按天轮转 --\x3e  \n            \x3c!-- %i为文件按照maxFileSize大小规定轮转后的序号 --\x3e  \n            \x3c!-- 后缀以".zip"或".gz"结尾，则开启日志文件压缩 --\x3e  \n            <fileNamePattern>${log.path}/sys-console.%d{yyyy-MM-dd}.%i.gz</fileNamePattern>  \n            \x3c!-- 单个日志文件最大大小，当文件达到该大小则触发截断（以及压缩）--\x3e  \n            <maxFileSize>10KB</maxFileSize>  \n            \x3c!-- 日志最大 1天 --\x3e  \n            <maxHistory>1</maxHistory>  \n            \x3c!-- 日志文件保留的总的最大大小--\x3e  \n            <totalSizeCap>20GB</totalSizeCap>  \n        </rollingPolicy>  \n        <encoder>  \n            <pattern>${log.pattern}</pattern>  \n            <charset>utf-8</charset>  \n        </encoder>  \n        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">  \n            \x3c!-- 过滤的级别 --\x3e  \n            <level>INFO</level>  \n        </filter>  \n    </appender>  \n  \n    \x3c!-- 系统日志输出 --\x3e  \n    <appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">  \n        <file>${log.path}/sys-info.log</file>  \n        \x3c!-- 循环政策：基于时间创建日志文件 --\x3e  \n        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">  \n            \x3c!-- 基于时间和大小的轮转策略中fileNamePattern位置很重要，他决定了生成文件的名称及轮转时机,以及是否压缩 --\x3e  \n            \x3c!-- %d决定以什么时间维度轮转(但实际轮转时机取决于日志事件的到达时间)，比如%d{yyyy/MM}:每个月开始的时候轮转,%d默认为 yyyy-MM-dd：按天轮转 --\x3e  \n            \x3c!-- %i为文件按照maxFileSize大小规定轮转后的序号 --\x3e  \n            \x3c!-- 后缀以".zip"或".gz"结尾，则开启日志文件压缩 --\x3e  \n            <fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.%i.gz</fileNamePattern>  \n            \x3c!-- 单个日志文件最大大小，当文件达到该大小则触发截断（以及压缩）--\x3e  \n            <maxFileSize>10KB</maxFileSize>  \n            \x3c!-- 日志最大 1天 --\x3e  \n            <maxHistory>1</maxHistory>  \n            \x3c!-- 日志文件保留的总的最大大小--\x3e  \n            <totalSizeCap>20GB</totalSizeCap>  \n        </rollingPolicy>  \n        <encoder>  \n            <pattern>${log.pattern}</pattern>  \n        </encoder>  \n        <filter class="ch.qos.logback.classic.filter.LevelFilter">  \n            \x3c!-- 过滤的级别 --\x3e  \n            <level>INFO</level>  \n            \x3c!-- 匹配时的操作：接收（记录） --\x3e  \n            <onMatch>ACCEPT</onMatch>  \n            \x3c!-- 不匹配时的操作：拒绝（不记录） --\x3e  \n            <onMismatch>DENY</onMismatch>  \n        </filter>  \n    </appender>  \n  \n    <appender name="file_warn" class="ch.qos.logback.core.rolling.RollingFileAppender">  \n        <file>${log.path}/sys-debug.log</file>  \n        \x3c!-- 基于时间和大小的轮转策略中fileNamePattern位置很重要，他决定了生成文件的名称及轮转时机,以及是否压缩 --\x3e  \n        \x3c!-- %d决定以什么时间维度轮转(但实际轮转时机取决于日志事件的到达时间)，比如%d{yyyy/MM}:每个月开始的时候轮转,%d默认为 yyyy-MM-dd：按天轮转 --\x3e  \n        \x3c!-- %i为文件按照maxFileSize大小规定轮转后的序号 --\x3e  \n        \x3c!-- 后缀以".zip"或".gz"结尾，则开启日志文件压缩 --\x3e  \n        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">  \n            \x3c!-- 日志文件名格式 --\x3e  \n            <fileNamePattern>${log.path}/sys-warn.%d{yyyy-MM-dd}.%i.gz</fileNamePattern>  \n            <maxFileSize>10KB</maxFileSize>  \n            \x3c!-- 单个日志文件最大大小，当文件达到该大小则触发截断（以及压缩）--\x3e  \n            <maxFileSize>10KB</maxFileSize>  \n            \x3c!-- 日志最大 1天 --\x3e  \n            <maxHistory>60</maxHistory>  \n            \x3c!-- 日志文件保留的总的最大大小--\x3e  \n            <totalSizeCap>20GB</totalSizeCap>  \n        </rollingPolicy>  \n        <encoder>  \n            <pattern>${log.pattern}</pattern>  \n        </encoder>  \n        <filter class="ch.qos.logback.classic.filter.LevelFilter">  \n            \x3c!-- 过滤的级别 --\x3e  \n            <level>WARN</level>  \n            \x3c!-- 匹配时的操作：接收（记录） --\x3e  \n            <onMatch>ACCEPT</onMatch>  \n            \x3c!-- 不匹配时的操作：拒绝（不记录） --\x3e  \n            <onMismatch>DENY</onMismatch>  \n        </filter>  \n    </appender>  \n  \n    <appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">  \n        <file>${log.path}/sys-error.log</file>  \n        \x3c!-- 基于时间和大小的轮转策略中fileNamePattern位置很重要，他决定了生成文件的名称及轮转时机,以及是否压缩 --\x3e  \n        \x3c!-- %d决定以什么时间维度轮转(但实际轮转时机取决于日志事件的到达时间)，比如%d{yyyy/MM}:每个月开始的时候轮转,%d默认为 yyyy-MM-dd：按天轮转 --\x3e  \n        \x3c!-- %i为文件按照maxFileSize大小规定轮转后的序号 --\x3e  \n        \x3c!-- 后缀以".zip"或".gz"结尾，则开启日志文件压缩 --\x3e  \n        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">  \n            \x3c!-- 日志文件名格式 --\x3e  \n            <fileNamePattern>${log.path}/sys-error.%d{yyyy-MM-dd}.%i.gz</fileNamePattern>  \n            <maxFileSize>10KB</maxFileSize>  \n            \x3c!-- 单个日志文件最大大小，当文件达到该大小则触发截断（以及压缩）--\x3e  \n            <maxFileSize>10KB</maxFileSize>  \n            \x3c!-- 日志最大 60天 --\x3e  \n            <maxHistory>60</maxHistory>  \n            \x3c!-- 日志文件保留的总的最大大小--\x3e  \n            <totalSizeCap>20GB</totalSizeCap>  \n        </rollingPolicy>  \n        <encoder>  \n            <pattern>${log.pattern}</pattern>  \n        </encoder>  \n        <filter class="ch.qos.logback.classic.filter.LevelFilter">  \n            \x3c!-- 过滤的级别 --\x3e  \n            <level>ERROR</level>  \n            \x3c!-- 匹配时的操作：接收（记录） --\x3e  \n            <onMatch>ACCEPT</onMatch>  \n            \x3c!-- 不匹配时的操作：拒绝（不记录） --\x3e  \n            <onMismatch>DENY</onMismatch>  \n        </filter>  \n    </appender>  \n  \n    \x3c!-- info异步输出 --\x3e  \n    <appender name="async_info" class="ch.qos.logback.classic.AsyncAppender">  \n        \x3c!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 --\x3e  \n        <discardingThreshold>0</discardingThreshold>  \n        \x3c!-- 更改默认的队列的深度,该值会影响性能.默认值为256 --\x3e  \n        <queueSize>512</queueSize>  \n        \x3c!-- 添加附加的appender,最多只能添加一个 --\x3e  \n        <appender-ref ref="file_info"/>  \n    </appender>  \n  \n    \x3c!-- error异步输出 --\x3e  \n    <appender name="async_error" class="ch.qos.logback.classic.AsyncAppender">  \n        \x3c!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 --\x3e  \n        <discardingThreshold>0</discardingThreshold>  \n        \x3c!-- 更改默认的队列的深度,该值会影响性能.默认值为256 --\x3e  \n        <queueSize>512</queueSize>  \n        \x3c!-- 添加附加的appender,最多只能添加一个 --\x3e  \n        <appender-ref ref="file_error"/>  \n    </appender>  \n  \n    \x3c!-- 整合 skywalking 控制台输出 tid --\x3e    \x3c!--    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">--\x3e    \x3c!--        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">--\x3e    \x3c!--            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">--\x3e    \x3c!--                <pattern>[%tid] ${console.log.pattern}</pattern>--\x3e    \x3c!--            </layout>--\x3e    \x3c!--            <charset>utf-8</charset>--\x3e    \x3c!--        </encoder>--\x3e    \x3c!--    </appender>--\x3e  \n    \x3c!-- 整合 skywalking 推送采集日志 --\x3e  \n    \x3c!--    <appender name="sky_log" class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.GRPCLogClientAppender">--\x3e    \x3c!--        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">--\x3e    \x3c!--            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">--\x3e    \x3c!--                <pattern>[%tid] ${console.log.pattern}</pattern>--\x3e    \x3c!--            </layout>--\x3e    \x3c!--            <charset>utf-8</charset>--\x3e    \x3c!--        </encoder>--\x3e    \x3c!--    </appender>--\x3e  \n    \x3c!--系统操作日志--\x3e  \n    \x3c!--    <root level="info">--\x3e    \x3c!--        <appender-ref ref="console" />--\x3e    \x3c!--        <appender-ref ref="async_info" />--\x3e    \x3c!--        <appender-ref ref="async_error" />--\x3e    \x3c!--        <appender-ref ref="file_console" />--\x3e    \x3c!--        &lt;!&ndash;        <appender-ref ref="sky_log"/>&ndash;&gt;--\x3e    \x3c!--    </root>--\x3e  \n    \x3c!-- 开发环境 --\x3e  \n    <springProfile name="dev">  \n        <root level="INFO">  \n            <appender-ref ref="console"/>  \n            <appender-ref ref="async_info"/>  \x3c!-- 本地环境下，如果不想打印日志，可以注释掉本行 --\x3e  \n            <appender-ref ref="async_error"/>  \x3c!-- 本地环境下，如果不想打印日志，可以注释掉本行 --\x3e  \n            <appender-ref ref="file_console"/>  \x3c!-- 本地环境下，如果不想打印日志，可以注释掉本行 --\x3e  \n        </root>  \n    </springProfile>  \n    \x3c!-- 其它环境 --\x3e  \n    <springProfile name="test,stage,prod,default">  \n        <root level="ERROR">  \n            <appender-ref ref="console"/>  \n            <appender-ref ref="async_error"/>  \n            <appender-ref ref="file_console"/>  \n        </root>  \n    </springProfile>  \n  \n</configuration>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n\n\n\n\n\n# 配置 slf4j\n\nslf4j 需要引入 lombok 依赖 修改 application.java\n\n@Slf4j  \n@SpringBootApplication  \npublic class Springboot03LogApplication {  \n  \n    public static void main(String[] args) {  \n        SpringApplication.run(Springboot03LogApplication.class, args);  \n        log.info("==============================信息==============================");  \n        log.warn("==============================警告==============================");  \n        log.error("==============================错误==============================");  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n根据 logback 配置，当日志超出 10 KB 时，压缩日志，实际生产设为 10 MB',normalizedContent:'启动后 log 控制台显示\n\n\n# 配置 logback\n\n在 resources 中新建 logback-spring.xml\n\n<?xml version="1.0" encoding="utf-8"?>  \n<configuration>  \n    <property name="log.path" value="./logs"/>  \n    <property name="console.log.pattern"  \n              value="%red(%d{yyyy-mm-dd hh:mm:ss}) %green([%thread]) %highlight(%-5level) %boldmagenta(%logger{36}%n) - %msg%n"/>  \n    <property name="log.pattern" value="%d{yyyy-mm-dd hh:mm:ss} [%thread] %-5level %logger{36} - %msg%n"/>  \n  \n    \x3c!-- 控制台输出 --\x3e  \n    <appender name="console" class="ch.qos.logback.core.consoleappender">  \n        <encoder>  \n            <pattern>${console.log.pattern}</pattern>  \n            <charset>utf-8</charset>  \n        </encoder>  \n    </appender>  \n  \n    \x3c!-- 控制台输出 --\x3e  \n    <appender name="file_console" class="ch.qos.logback.core.rolling.rollingfileappender">  \n        <file>${log.path}/sys-console.log</file>  \n        <rollingpolicy class="ch.qos.logback.core.rolling.sizeandtimebasedrollingpolicy">  \n            \x3c!-- 基于时间和大小的轮转策略中filenamepattern位置很重要，他决定了生成文件的名称及轮转时机,以及是否压缩 --\x3e  \n            \x3c!-- %d决定以什么时间维度轮转(但实际轮转时机取决于日志事件的到达时间)，比如%d{yyyy/mm}:每个月开始的时候轮转,%d默认为 yyyy-mm-dd：按天轮转 --\x3e  \n            \x3c!-- %i为文件按照maxfilesize大小规定轮转后的序号 --\x3e  \n            \x3c!-- 后缀以".zip"或".gz"结尾，则开启日志文件压缩 --\x3e  \n            <filenamepattern>${log.path}/sys-console.%d{yyyy-mm-dd}.%i.gz</filenamepattern>  \n            \x3c!-- 单个日志文件最大大小，当文件达到该大小则触发截断（以及压缩）--\x3e  \n            <maxfilesize>10kb</maxfilesize>  \n            \x3c!-- 日志最大 1天 --\x3e  \n            <maxhistory>1</maxhistory>  \n            \x3c!-- 日志文件保留的总的最大大小--\x3e  \n            <totalsizecap>20gb</totalsizecap>  \n        </rollingpolicy>  \n        <encoder>  \n            <pattern>${log.pattern}</pattern>  \n            <charset>utf-8</charset>  \n        </encoder>  \n        <filter class="ch.qos.logback.classic.filter.thresholdfilter">  \n            \x3c!-- 过滤的级别 --\x3e  \n            <level>info</level>  \n        </filter>  \n    </appender>  \n  \n    \x3c!-- 系统日志输出 --\x3e  \n    <appender name="file_info" class="ch.qos.logback.core.rolling.rollingfileappender">  \n        <file>${log.path}/sys-info.log</file>  \n        \x3c!-- 循环政策：基于时间创建日志文件 --\x3e  \n        <rollingpolicy class="ch.qos.logback.core.rolling.sizeandtimebasedrollingpolicy">  \n            \x3c!-- 基于时间和大小的轮转策略中filenamepattern位置很重要，他决定了生成文件的名称及轮转时机,以及是否压缩 --\x3e  \n            \x3c!-- %d决定以什么时间维度轮转(但实际轮转时机取决于日志事件的到达时间)，比如%d{yyyy/mm}:每个月开始的时候轮转,%d默认为 yyyy-mm-dd：按天轮转 --\x3e  \n            \x3c!-- %i为文件按照maxfilesize大小规定轮转后的序号 --\x3e  \n            \x3c!-- 后缀以".zip"或".gz"结尾，则开启日志文件压缩 --\x3e  \n            <filenamepattern>${log.path}/sys-info.%d{yyyy-mm-dd}.%i.gz</filenamepattern>  \n            \x3c!-- 单个日志文件最大大小，当文件达到该大小则触发截断（以及压缩）--\x3e  \n            <maxfilesize>10kb</maxfilesize>  \n            \x3c!-- 日志最大 1天 --\x3e  \n            <maxhistory>1</maxhistory>  \n            \x3c!-- 日志文件保留的总的最大大小--\x3e  \n            <totalsizecap>20gb</totalsizecap>  \n        </rollingpolicy>  \n        <encoder>  \n            <pattern>${log.pattern}</pattern>  \n        </encoder>  \n        <filter class="ch.qos.logback.classic.filter.levelfilter">  \n            \x3c!-- 过滤的级别 --\x3e  \n            <level>info</level>  \n            \x3c!-- 匹配时的操作：接收（记录） --\x3e  \n            <onmatch>accept</onmatch>  \n            \x3c!-- 不匹配时的操作：拒绝（不记录） --\x3e  \n            <onmismatch>deny</onmismatch>  \n        </filter>  \n    </appender>  \n  \n    <appender name="file_warn" class="ch.qos.logback.core.rolling.rollingfileappender">  \n        <file>${log.path}/sys-debug.log</file>  \n        \x3c!-- 基于时间和大小的轮转策略中filenamepattern位置很重要，他决定了生成文件的名称及轮转时机,以及是否压缩 --\x3e  \n        \x3c!-- %d决定以什么时间维度轮转(但实际轮转时机取决于日志事件的到达时间)，比如%d{yyyy/mm}:每个月开始的时候轮转,%d默认为 yyyy-mm-dd：按天轮转 --\x3e  \n        \x3c!-- %i为文件按照maxfilesize大小规定轮转后的序号 --\x3e  \n        \x3c!-- 后缀以".zip"或".gz"结尾，则开启日志文件压缩 --\x3e  \n        <rollingpolicy class="ch.qos.logback.core.rolling.sizeandtimebasedrollingpolicy">  \n            \x3c!-- 日志文件名格式 --\x3e  \n            <filenamepattern>${log.path}/sys-warn.%d{yyyy-mm-dd}.%i.gz</filenamepattern>  \n            <maxfilesize>10kb</maxfilesize>  \n            \x3c!-- 单个日志文件最大大小，当文件达到该大小则触发截断（以及压缩）--\x3e  \n            <maxfilesize>10kb</maxfilesize>  \n            \x3c!-- 日志最大 1天 --\x3e  \n            <maxhistory>60</maxhistory>  \n            \x3c!-- 日志文件保留的总的最大大小--\x3e  \n            <totalsizecap>20gb</totalsizecap>  \n        </rollingpolicy>  \n        <encoder>  \n            <pattern>${log.pattern}</pattern>  \n        </encoder>  \n        <filter class="ch.qos.logback.classic.filter.levelfilter">  \n            \x3c!-- 过滤的级别 --\x3e  \n            <level>warn</level>  \n            \x3c!-- 匹配时的操作：接收（记录） --\x3e  \n            <onmatch>accept</onmatch>  \n            \x3c!-- 不匹配时的操作：拒绝（不记录） --\x3e  \n            <onmismatch>deny</onmismatch>  \n        </filter>  \n    </appender>  \n  \n    <appender name="file_error" class="ch.qos.logback.core.rolling.rollingfileappender">  \n        <file>${log.path}/sys-error.log</file>  \n        \x3c!-- 基于时间和大小的轮转策略中filenamepattern位置很重要，他决定了生成文件的名称及轮转时机,以及是否压缩 --\x3e  \n        \x3c!-- %d决定以什么时间维度轮转(但实际轮转时机取决于日志事件的到达时间)，比如%d{yyyy/mm}:每个月开始的时候轮转,%d默认为 yyyy-mm-dd：按天轮转 --\x3e  \n        \x3c!-- %i为文件按照maxfilesize大小规定轮转后的序号 --\x3e  \n        \x3c!-- 后缀以".zip"或".gz"结尾，则开启日志文件压缩 --\x3e  \n        <rollingpolicy class="ch.qos.logback.core.rolling.sizeandtimebasedrollingpolicy">  \n            \x3c!-- 日志文件名格式 --\x3e  \n            <filenamepattern>${log.path}/sys-error.%d{yyyy-mm-dd}.%i.gz</filenamepattern>  \n            <maxfilesize>10kb</maxfilesize>  \n            \x3c!-- 单个日志文件最大大小，当文件达到该大小则触发截断（以及压缩）--\x3e  \n            <maxfilesize>10kb</maxfilesize>  \n            \x3c!-- 日志最大 60天 --\x3e  \n            <maxhistory>60</maxhistory>  \n            \x3c!-- 日志文件保留的总的最大大小--\x3e  \n            <totalsizecap>20gb</totalsizecap>  \n        </rollingpolicy>  \n        <encoder>  \n            <pattern>${log.pattern}</pattern>  \n        </encoder>  \n        <filter class="ch.qos.logback.classic.filter.levelfilter">  \n            \x3c!-- 过滤的级别 --\x3e  \n            <level>error</level>  \n            \x3c!-- 匹配时的操作：接收（记录） --\x3e  \n            <onmatch>accept</onmatch>  \n            \x3c!-- 不匹配时的操作：拒绝（不记录） --\x3e  \n            <onmismatch>deny</onmismatch>  \n        </filter>  \n    </appender>  \n  \n    \x3c!-- info异步输出 --\x3e  \n    <appender name="async_info" class="ch.qos.logback.classic.asyncappender">  \n        \x3c!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃tract、debug、info级别的日志 --\x3e  \n        <discardingthreshold>0</discardingthreshold>  \n        \x3c!-- 更改默认的队列的深度,该值会影响性能.默认值为256 --\x3e  \n        <queuesize>512</queuesize>  \n        \x3c!-- 添加附加的appender,最多只能添加一个 --\x3e  \n        <appender-ref ref="file_info"/>  \n    </appender>  \n  \n    \x3c!-- error异步输出 --\x3e  \n    <appender name="async_error" class="ch.qos.logback.classic.asyncappender">  \n        \x3c!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃tract、debug、info级别的日志 --\x3e  \n        <discardingthreshold>0</discardingthreshold>  \n        \x3c!-- 更改默认的队列的深度,该值会影响性能.默认值为256 --\x3e  \n        <queuesize>512</queuesize>  \n        \x3c!-- 添加附加的appender,最多只能添加一个 --\x3e  \n        <appender-ref ref="file_error"/>  \n    </appender>  \n  \n    \x3c!-- 整合 skywalking 控制台输出 tid --\x3e    \x3c!--    <appender name="console" class="ch.qos.logback.core.consoleappender">--\x3e    \x3c!--        <encoder class="ch.qos.logback.core.encoder.layoutwrappingencoder">--\x3e    \x3c!--            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.traceidpatternlogbacklayout">--\x3e    \x3c!--                <pattern>[%tid] ${console.log.pattern}</pattern>--\x3e    \x3c!--            </layout>--\x3e    \x3c!--            <charset>utf-8</charset>--\x3e    \x3c!--        </encoder>--\x3e    \x3c!--    </appender>--\x3e  \n    \x3c!-- 整合 skywalking 推送采集日志 --\x3e  \n    \x3c!--    <appender name="sky_log" class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.grpclogclientappender">--\x3e    \x3c!--        <encoder class="ch.qos.logback.core.encoder.layoutwrappingencoder">--\x3e    \x3c!--            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.traceidpatternlogbacklayout">--\x3e    \x3c!--                <pattern>[%tid] ${console.log.pattern}</pattern>--\x3e    \x3c!--            </layout>--\x3e    \x3c!--            <charset>utf-8</charset>--\x3e    \x3c!--        </encoder>--\x3e    \x3c!--    </appender>--\x3e  \n    \x3c!--系统操作日志--\x3e  \n    \x3c!--    <root level="info">--\x3e    \x3c!--        <appender-ref ref="console" />--\x3e    \x3c!--        <appender-ref ref="async_info" />--\x3e    \x3c!--        <appender-ref ref="async_error" />--\x3e    \x3c!--        <appender-ref ref="file_console" />--\x3e    \x3c!--        &lt;!&ndash;        <appender-ref ref="sky_log"/>&ndash;&gt;--\x3e    \x3c!--    </root>--\x3e  \n    \x3c!-- 开发环境 --\x3e  \n    <springprofile name="dev">  \n        <root level="info">  \n            <appender-ref ref="console"/>  \n            <appender-ref ref="async_info"/>  \x3c!-- 本地环境下，如果不想打印日志，可以注释掉本行 --\x3e  \n            <appender-ref ref="async_error"/>  \x3c!-- 本地环境下，如果不想打印日志，可以注释掉本行 --\x3e  \n            <appender-ref ref="file_console"/>  \x3c!-- 本地环境下，如果不想打印日志，可以注释掉本行 --\x3e  \n        </root>  \n    </springprofile>  \n    \x3c!-- 其它环境 --\x3e  \n    <springprofile name="test,stage,prod,default">  \n        <root level="error">  \n            <appender-ref ref="console"/>  \n            <appender-ref ref="async_error"/>  \n            <appender-ref ref="file_console"/>  \n        </root>  \n    </springprofile>  \n  \n</configuration>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n\n\n\n\n\n# 配置 slf4j\n\nslf4j 需要引入 lombok 依赖 修改 application.java\n\n@slf4j  \n@springbootapplication  \npublic class springboot03logapplication {  \n  \n    public static void main(string[] args) {  \n        springapplication.run(springboot03logapplication.class, args);  \n        log.info("==============================信息==============================");  \n        log.warn("==============================警告==============================");  \n        log.error("==============================错误==============================");  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n根据 logback 配置，当日志超出 10 kb 时，压缩日志，实际生产设为 10 mb',charsets:{cjk:!0},lastUpdated:"2024/03/20, 16:53:34",lastUpdatedTimestamp:1710924814e3},{title:"多模块项目",frontmatter:{title:"多模块项目",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/multi",private:!0,categories:["软件开发"],tags:["软件开发"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/01.Springboot%E4%BD%BF%E7%94%A8/01.%E5%A4%9A%E6%A8%A1%E5%9D%97%E9%A1%B9%E7%9B%AE.html",relativePath:"06.软件开发/01.Springboot使用/01.多模块项目.md",key:"v-1547526e",path:"/soft/springboot/use/multi/",headers:[{level:2,title:"新建项目",slug:"新建项目",normalizedTitle:"新建项目",charIndex:2},{level:2,title:"新建 server 模块",slug:"新建-server-模块",normalizedTitle:"新建 server 模块",charIndex:2023}],headersStr:"新建项目 新建 server 模块",content:'# 新建项目\n\n删除多余的 src 文件夹作为父模块 pom 中添加 springboot 依赖\n\n<?xml version="1.0" encoding="UTF-8"?>  \n<project xmlns="http://maven.apache.org/POM/4.0.0"  \n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  \n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  \n    <modelVersion>4.0.0</modelVersion>  \n  \n    <groupId>com.cc</groupId>  \n    <artifactId>springboot01-multi</artifactId>  \n    <version>1.0-SNAPSHOT</version>  \n  \n    <properties>  \n        <java.version>17</java.version>  \n        <maven.compiler.source>17</maven.compiler.source>  \n        <maven.compiler.target>17</maven.compiler.target>  \n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>  \n  \n        \x3c!-- 依赖版本 --\x3e  \n        <spring-boot.version>3.2.3</spring-boot.version>  \n    </properties>  \n  \n    <dependencyManagement>  \n        <dependencies>  \n            \x3c!-- SpringBoot的依赖配置--\x3e  \n            <dependency>  \n                <groupId>org.springframework.boot</groupId>  \n                <artifactId>spring-boot-dependencies</artifactId>  \n                <version>${spring-boot.version}</version>  \n                <type>pom</type>  \n                <scope>import</scope>  \n            </dependency>  \n        </dependencies>  \n    </dependencyManagement>  \n  \n    <build>  \n        <plugins>  \n            <plugin>  \n                <groupId>org.apache.maven.plugins</groupId>  \n                <artifactId>maven-compiler-plugin</artifactId>  \n                <version>3.1</version>  \n                <configuration>  \n                    <source>${java.version}</source>  \n                    <target>${java.version}</target>  \n                    <encoding>${project.build.sourceEncoding}</encoding>  \n                </configuration>  \n            </plugin>  \n        </plugins>  \n    </build>  \n  \n</project>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n\n\n\n# 新建 server 模块\n\n此时在父 pom 中添加了 modules\n\n<modules>  \n    <module>multi-server</module>  \n</modules>\n\n\n1\n2\n3\n\n\n在 server-pom 中添加依赖\n\n<?xml version="1.0" encoding="UTF-8"?>  \n<project xmlns="http://maven.apache.org/POM/4.0.0"  \n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  \n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  \n    <modelVersion>4.0.0</modelVersion>  \n    <parent>  \n        <groupId>com.cc</groupId>  \n        <artifactId>springboot01-multi</artifactId>  \n        <version>1.0-SNAPSHOT</version>  \n    </parent>  \n  \n    <packaging>jar</packaging>  \n    <artifactId>multi-server</artifactId>  \n  \n    <dependencies>  \n        \x3c!-- SpringBoot Web容器 --\x3e  \n        <dependency>  \n            <groupId>org.springframework.boot</groupId>  \n            <artifactId>spring-boot-starter-web</artifactId>  \n        </dependency>  \n        \x3c!-- web 容器使用 undertow 性能更强 --\x3e  \n        <dependency>  \n            <groupId>org.springframework.boot</groupId>  \n            <artifactId>spring-boot-starter-undertow</artifactId>  \n        </dependency>  \n    </dependencies>  \n  \n    <build>  \n        <plugins>  \n            <plugin>  \n                <groupId>org.springframework.boot</groupId>  \n                <artifactId>spring-boot-maven-plugin</artifactId>  \n            </plugin>  \n        </plugins>  \n    </build>  \n  \n</project>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n添加启动方法\n\n@SpringBootApplication  \npublic class MultiServerApplication {  \n    public static void main(String[] args) {  \n        SpringApplication.run(MultiServerApplication.class, args);  \n        System.out.println("启动成功!");  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n',normalizedContent:'# 新建项目\n\n删除多余的 src 文件夹作为父模块 pom 中添加 springboot 依赖\n\n<?xml version="1.0" encoding="utf-8"?>  \n<project xmlns="http://maven.apache.org/pom/4.0.0"  \n         xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"  \n         xsi:schemalocation="http://maven.apache.org/pom/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  \n    <modelversion>4.0.0</modelversion>  \n  \n    <groupid>com.cc</groupid>  \n    <artifactid>springboot01-multi</artifactid>  \n    <version>1.0-snapshot</version>  \n  \n    <properties>  \n        <java.version>17</java.version>  \n        <maven.compiler.source>17</maven.compiler.source>  \n        <maven.compiler.target>17</maven.compiler.target>  \n        <project.build.sourceencoding>utf-8</project.build.sourceencoding>  \n  \n        \x3c!-- 依赖版本 --\x3e  \n        <spring-boot.version>3.2.3</spring-boot.version>  \n    </properties>  \n  \n    <dependencymanagement>  \n        <dependencies>  \n            \x3c!-- springboot的依赖配置--\x3e  \n            <dependency>  \n                <groupid>org.springframework.boot</groupid>  \n                <artifactid>spring-boot-dependencies</artifactid>  \n                <version>${spring-boot.version}</version>  \n                <type>pom</type>  \n                <scope>import</scope>  \n            </dependency>  \n        </dependencies>  \n    </dependencymanagement>  \n  \n    <build>  \n        <plugins>  \n            <plugin>  \n                <groupid>org.apache.maven.plugins</groupid>  \n                <artifactid>maven-compiler-plugin</artifactid>  \n                <version>3.1</version>  \n                <configuration>  \n                    <source>${java.version}</source>  \n                    <target>${java.version}</target>  \n                    <encoding>${project.build.sourceencoding}</encoding>  \n                </configuration>  \n            </plugin>  \n        </plugins>  \n    </build>  \n  \n</project>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n\n\n\n# 新建 server 模块\n\n此时在父 pom 中添加了 modules\n\n<modules>  \n    <module>multi-server</module>  \n</modules>\n\n\n1\n2\n3\n\n\n在 server-pom 中添加依赖\n\n<?xml version="1.0" encoding="utf-8"?>  \n<project xmlns="http://maven.apache.org/pom/4.0.0"  \n         xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"  \n         xsi:schemalocation="http://maven.apache.org/pom/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  \n    <modelversion>4.0.0</modelversion>  \n    <parent>  \n        <groupid>com.cc</groupid>  \n        <artifactid>springboot01-multi</artifactid>  \n        <version>1.0-snapshot</version>  \n    </parent>  \n  \n    <packaging>jar</packaging>  \n    <artifactid>multi-server</artifactid>  \n  \n    <dependencies>  \n        \x3c!-- springboot web容器 --\x3e  \n        <dependency>  \n            <groupid>org.springframework.boot</groupid>  \n            <artifactid>spring-boot-starter-web</artifactid>  \n        </dependency>  \n        \x3c!-- web 容器使用 undertow 性能更强 --\x3e  \n        <dependency>  \n            <groupid>org.springframework.boot</groupid>  \n            <artifactid>spring-boot-starter-undertow</artifactid>  \n        </dependency>  \n    </dependencies>  \n  \n    <build>  \n        <plugins>  \n            <plugin>  \n                <groupid>org.springframework.boot</groupid>  \n                <artifactid>spring-boot-maven-plugin</artifactid>  \n            </plugin>  \n        </plugins>  \n    </build>  \n  \n</project>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n添加启动方法\n\n@springbootapplication  \npublic class multiserverapplication {  \n    public static void main(string[] args) {  \n        springapplication.run(multiserverapplication.class, args);  \n        system.out.println("启动成功!");  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n',charsets:{cjk:!0},lastUpdated:"2024/03/20, 16:53:34",lastUpdatedTimestamp:1710924814e3},{title:"banner使用",frontmatter:{title:"banner使用",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/banner",private:!0,categories:["软件开发"],tags:["软件开发"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/01.Springboot%E4%BD%BF%E7%94%A8/02.banner%E4%BD%BF%E7%94%A8.html",relativePath:"06.软件开发/01.Springboot使用/02.banner使用.md",key:"v-0c579bc8",path:"/soft/springboot/use/banner/",headers:[{level:2,title:"新建项目",slug:"新建项目",normalizedTitle:"新建项目",charIndex:2},{level:2,title:"新建 banner",slug:"新建-banner",normalizedTitle:"新建 banner",charIndex:13}],headersStr:"新建项目 新建 banner",content:"# 新建项目\n\n\n\n\n# 新建 banner\n\n在 resources 中新建 banner.txt\n\n${AnsiColor.BRIGHT_RED}  \nApplication Version: 0.0.1-SNAPSHOT  \nSpring Boot Version: ${spring-boot.version}  \n ######  \n##    ##  ######  \n#  ##  # ##    #  \n#  ##### #  ####  \n#  ##### #  #  \n#  ##  # #  ####  \n##    ## ##    #  \n ######   ######\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n",normalizedContent:"# 新建项目\n\n\n\n\n# 新建 banner\n\n在 resources 中新建 banner.txt\n\n${ansicolor.bright_red}  \napplication version: 0.0.1-snapshot  \nspring boot version: ${spring-boot.version}  \n ######  \n##    ##  ######  \n#  ##  # ##    #  \n#  ##### #  ####  \n#  ##### #  #  \n#  ##  # #  ####  \n##    ## ##    #  \n ######   ######\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/03/20, 16:53:34",lastUpdatedTimestamp:1710924814e3},{title:"springdoc",frontmatter:{title:"springdoc",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/springdoc",private:!0,categories:["软件开发"],tags:["软件开发"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/01.Springboot%E4%BD%BF%E7%94%A8/04.springdoc.html",relativePath:"06.软件开发/01.Springboot使用/04.springdoc.md",key:"v-e342d128",path:"/soft/springboot/use/springdoc/",headers:[{level:2,title:"新建工程",slug:"新建工程",normalizedTitle:"新建工程",charIndex:2},{level:2,title:"配置文件",slug:"配置文件",normalizedTitle:"配置文件",charIndex:253},{level:2,title:"新建 Model",slug:"新建-model",normalizedTitle:"新建 model",charIndex:1177},{level:2,title:"新建控制器",slug:"新建控制器",normalizedTitle:"新建控制器",charIndex:1484}],headersStr:"新建工程 配置文件 新建 Model 新建控制器",content:'# 新建工程\n\n引入依赖 springdoc\n\n<dependency>  \n    <groupId>org.springdoc</groupId>  \n    <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>  \n    <version>2.0.4</version>  \n</dependency>\n\n\n1\n2\n3\n4\n5\n\n\n启动项目后可以直接看到界面 localhost:8080/swagger-ui.html\n\n\n# 配置文件\n\n@Configuration  \npublic class SpringDocConfig {  \n    @Bean  \n    public OpenAPI myOpenAPI() {  \n        return new OpenAPI()  \n                .info(new Info()  \n                        .title("SpringDoc Api")  \n                        .description("SpringDoc 接口")  \n                        .version("v1.0.0")  \n                        .license(new License()  \n                                .name("许可协议")  \n                                .url("https://gitee.com/icaiwei/springboot-test"))  \n                        .contact(new Contact()  \n                                .name("icaiwei")  \n                                .email("icaiwei@163.com")))  \n                .externalDocs(new ExternalDocumentation()  \n                        .description("icaiwei知识库")  \n                        .url("https://gitee.com/icaiwei/springboot-test"));  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n\n\n# 新建 Model\n\n@Data  \n@Schema(description = "系统用户")  \npublic class SysUser {  \n    @Schema(description = "ID", example = "1")  \n    private Integer id;  \n  \n    @Schema(description = "用户名", example = "张三", requiredMode = Schema.RequiredMode.REQUIRED)  \n    private String username;  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 新建控制器\n\n@RestController  \n@RequestMapping("/sys/user")  \n@Tag(name = "用户控制器", description = "用户增删改查")  \npublic class SysUserController {  \n    @Operation(summary = "根据用户ID查询用户",description = "查询用户")  \n    @GetMapping("/get")  \n    public SysUser get(){  \n        SysUser user = new SysUser();  \n        user.setId(1);  \n        user.setUsername("张三");  \n        return user;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n运行程序后，查看 springdoc',normalizedContent:'# 新建工程\n\n引入依赖 springdoc\n\n<dependency>  \n    <groupid>org.springdoc</groupid>  \n    <artifactid>springdoc-openapi-starter-webmvc-ui</artifactid>  \n    <version>2.0.4</version>  \n</dependency>\n\n\n1\n2\n3\n4\n5\n\n\n启动项目后可以直接看到界面 localhost:8080/swagger-ui.html\n\n\n# 配置文件\n\n@configuration  \npublic class springdocconfig {  \n    @bean  \n    public openapi myopenapi() {  \n        return new openapi()  \n                .info(new info()  \n                        .title("springdoc api")  \n                        .description("springdoc 接口")  \n                        .version("v1.0.0")  \n                        .license(new license()  \n                                .name("许可协议")  \n                                .url("https://gitee.com/icaiwei/springboot-test"))  \n                        .contact(new contact()  \n                                .name("icaiwei")  \n                                .email("icaiwei@163.com")))  \n                .externaldocs(new externaldocumentation()  \n                        .description("icaiwei知识库")  \n                        .url("https://gitee.com/icaiwei/springboot-test"));  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n\n\n# 新建 model\n\n@data  \n@schema(description = "系统用户")  \npublic class sysuser {  \n    @schema(description = "id", example = "1")  \n    private integer id;  \n  \n    @schema(description = "用户名", example = "张三", requiredmode = schema.requiredmode.required)  \n    private string username;  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 新建控制器\n\n@restcontroller  \n@requestmapping("/sys/user")  \n@tag(name = "用户控制器", description = "用户增删改查")  \npublic class sysusercontroller {  \n    @operation(summary = "根据用户id查询用户",description = "查询用户")  \n    @getmapping("/get")  \n    public sysuser get(){  \n        sysuser user = new sysuser();  \n        user.setid(1);  \n        user.setusername("张三");  \n        return user;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n运行程序后，查看 springdoc',charsets:{cjk:!0},lastUpdated:"2024/03/20, 16:53:34",lastUpdatedTimestamp:1710924814e3},{title:"全局异常",frontmatter:{title:"全局异常",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/exception",private:!0,categories:["软件开发"],tags:["软件开发"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/01.Springboot%E4%BD%BF%E7%94%A8/05.%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8.html",relativePath:"06.软件开发/01.Springboot使用/05.全局异常.md",key:"v-c34a4f98",path:"/soft/springboot/use/exception/",headers:[{level:2,title:"新建项目",slug:"新建项目",normalizedTitle:"新建项目",charIndex:2},{level:2,title:"新建异常处理类",slug:"新建异常处理类",normalizedTitle:"新建异常处理类",charIndex:13},{level:3,title:"ErrorCode",slug:"errorcode",normalizedTitle:"errorcode",charIndex:25},{level:3,title:"GlobalErrorCodeConstants",slug:"globalerrorcodeconstants",normalizedTitle:"globalerrorcodeconstants",charIndex:376},{level:3,title:"ServiceErrorCodeRange",slug:"serviceerrorcoderange",normalizedTitle:"serviceerrorcoderange",charIndex:1546},{level:3,title:"ServiceException",slug:"serviceexception",normalizedTitle:"serviceexception",charIndex:1675},{level:3,title:"ServiceExceptionUtil",slug:"serviceexceptionutil",normalizedTitle:"serviceexceptionutil",charIndex:2910},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:6757}],headersStr:"新建项目 新建异常处理类 ErrorCode GlobalErrorCodeConstants ServiceErrorCodeRange ServiceException ServiceExceptionUtil 测试",content:'# 新建项目\n\n\n\n\n# 新建异常处理类\n\n\n# ErrorCode\n\n@Data  \npublic class ErrorCode {  \n    /**  \n     * 错误码  \n     */  \n    private final Integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private final String msg;  \n  \n    public ErrorCode(Integer code, String message) {  \n        this.code = code;  \n        this.msg = message;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# GlobalErrorCodeConstants\n\npublic interface GlobalErrorCodeConstants {  \n  \n    ErrorCode SUCCESS = new ErrorCode(200, "成功");  \n  \n    // ========== 客户端错误段 ==========  \n    ErrorCode BAD_REQUEST = new ErrorCode(400, "请求参数不正确");  \n    ErrorCode UNAUTHORIZED = new ErrorCode(401, "账号未登录");  \n    ErrorCode FORBIDDEN = new ErrorCode(403, "没有该操作权限");  \n    ErrorCode NOT_FOUND = new ErrorCode(404, "请求未找到");  \n    ErrorCode METHOD_NOT_ALLOWED = new ErrorCode(405, "请求方法不正确");  \n    ErrorCode LOCKED = new ErrorCode(423, "请求失败，请稍后重试"); // 并发请求，不允许  \n    ErrorCode TOO_MANY_REQUESTS = new ErrorCode(429, "请求过于频繁，请稍后重试");  \n  \n    // ========== 服务端错误段 ==========  \n    ErrorCode INTERNAL_SERVER_ERROR = new ErrorCode(500, "系统异常");  \n    ErrorCode NOT_IMPLEMENTED = new ErrorCode(501, "功能未实现/未开启");  \n    ErrorCode ERROR_CONFIGURATION = new ErrorCode(502, "错误的配置项");  \n  \n    // ========== 自定义错误段 ==========    ErrorCode REPEATED_REQUESTS = new ErrorCode(900, "重复请求，请稍后重试"); // 重复请求  \n    ErrorCode DEMO_DENY = new ErrorCode(901, "演示模式，禁止写操作");  \n  \n    ErrorCode UNKNOWN = new ErrorCode(999, "未知错误");  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# ServiceErrorCodeRange\n\npublic class ServiceErrorCodeRange {  \n    // 模块 system 错误码区间 [1-001-000-000 ~ 1-003-000-000)}\n\n\n1\n2\n\n\n\n# ServiceException\n\n@Data  \n@EqualsAndHashCode(callSuper = true)  \npublic final class ServiceException extends RuntimeException {  \n  \n    /**  \n     * 业务错误码  \n     *  \n     * @see ServiceErrorCodeRange  \n     */  \n    private Integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private String message;  \n  \n    /**  \n     * 空构造方法，避免反序列化问题  \n     */  \n    public ServiceException() {  \n    }  \n  \n    public ServiceException(ErrorCode errorCode) {  \n        this.code = errorCode.getCode();  \n        this.message = errorCode.getMsg();  \n    }  \n  \n    public ServiceException(Integer code, String message) {  \n        this.code = code;  \n        this.message = message;  \n    }  \n  \n    public Integer getCode() {  \n        return code;  \n    }  \n  \n    public ServiceException setCode(Integer code) {  \n        this.code = code;  \n        return this;  \n    }  \n  \n    @Override  \n    public String getMessage() {  \n        return message;  \n    }  \n  \n    public ServiceException setMessage(String message) {  \n        this.message = message;  \n        return this;  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n\n\n\n# ServiceExceptionUtil\n\n@Slf4j  \npublic class ServiceExceptionUtil {  \n    /**  \n     * 错误码提示模板  \n     */  \n    private static final ConcurrentMap<Integer, String> MESSAGES = new ConcurrentHashMap<>();  \n  \n    public static void putAll(Map<Integer, String> messages) {  \n        ServiceExceptionUtil.MESSAGES.putAll(messages);  \n    }  \n  \n    public static void put(Integer code, String message) {  \n        ServiceExceptionUtil.MESSAGES.put(code, message);  \n    }  \n  \n    public static void delete(Integer code, String message) {  \n        ServiceExceptionUtil.MESSAGES.remove(code, message);  \n    }  \n  \n    // ========== 和 ServiceException 的集成 ==========  \n    public static ServiceException exception(ErrorCode errorCode) {  \n        String messagePattern = MESSAGES.getOrDefault(errorCode.getCode(), errorCode.getMsg());  \n        return exception0(errorCode.getCode(), messagePattern);  \n    }  \n  \n    public static ServiceException exception(ErrorCode errorCode, Object... params) {  \n        String messagePattern = MESSAGES.getOrDefault(errorCode.getCode(), errorCode.getMsg());  \n        return exception0(errorCode.getCode(), messagePattern, params);  \n    }  \n  \n    /**  \n     * 创建指定编号的 ServiceException 的异常  \n     *  \n     * @param code 编号  \n     * @return 异常  \n     */  \n    public static ServiceException exception(Integer code) {  \n        return exception0(code, MESSAGES.get(code));  \n    }  \n  \n    /**  \n     * 创建指定编号的 ServiceException 的异常  \n     *  \n     * @param code 编号  \n     * @param params 消息提示的占位符对应的参数  \n     * @return 异常  \n     */  \n    public static ServiceException exception(Integer code, Object... params) {  \n        return exception0(code, MESSAGES.get(code), params);  \n    }  \n  \n    public static ServiceException exception0(Integer code, String messagePattern, Object... params) {  \n        String message = doFormat(code, messagePattern, params);  \n        return new ServiceException(code, message);  \n    }  \n  \n    public static ServiceException invalidParamException(String messagePattern, Object... params) {  \n        return exception0(GlobalErrorCodeConstants.BAD_REQUEST.getCode(), messagePattern, params);  \n    }  \n  \n    // ========== 格式化方法 ==========  \n    /**  \n     * 将错误编号对应的消息使用 params 进行格式化。  \n     *  \n     * @param code           错误编号  \n     * @param messagePattern 消息模版  \n     * @param params         参数  \n     * @return 格式化后的提示  \n     */  \n    @VisibleForTesting  \n    public static String doFormat(int code, String messagePattern, Object... params) {  \n        StringBuilder sbuf = new StringBuilder(messagePattern.length() + 50);  \n        int i = 0;  \n        int j;  \n        int l;  \n        for (l = 0; l < params.length; l++) {  \n            j = messagePattern.indexOf("{}", i);  \n            if (j == -1) {  \n                log.error("[doFormat][参数过多：错误码({})|错误内容({})|参数({})", code, messagePattern, params);  \n                if (i == 0) {  \n                    return messagePattern;  \n                } else {  \n                    sbuf.append(messagePattern.substring(i));  \n                    return sbuf.toString();  \n                }  \n            } else {  \n                sbuf.append(messagePattern, i, j);  \n                sbuf.append(params[l]);  \n                i = j + 2;  \n            }  \n        }  \n        if (messagePattern.indexOf("{}", i) != -1) {  \n            log.error("[doFormat][参数过少：错误码({})|错误内容({})|参数({})", code, messagePattern, params);  \n        }  \n        sbuf.append(messagePattern.substring(i));  \n        return sbuf.toString();  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n\n\n\n# 测试\n\n@SpringBootApplication  \npublic class Springboot05GlobalexceptionApplication {  \n  \n    public static void main(String[] args) {  \n        SpringApplication.run(Springboot05GlobalexceptionApplication.class, args);  \n        System.out.println("启动成功");  \n        throw exception(new ErrorCode(110110,"测试业务逻辑异常"));  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n',normalizedContent:'# 新建项目\n\n\n\n\n# 新建异常处理类\n\n\n# errorcode\n\n@data  \npublic class errorcode {  \n    /**  \n     * 错误码  \n     */  \n    private final integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private final string msg;  \n  \n    public errorcode(integer code, string message) {  \n        this.code = code;  \n        this.msg = message;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# globalerrorcodeconstants\n\npublic interface globalerrorcodeconstants {  \n  \n    errorcode success = new errorcode(200, "成功");  \n  \n    // ========== 客户端错误段 ==========  \n    errorcode bad_request = new errorcode(400, "请求参数不正确");  \n    errorcode unauthorized = new errorcode(401, "账号未登录");  \n    errorcode forbidden = new errorcode(403, "没有该操作权限");  \n    errorcode not_found = new errorcode(404, "请求未找到");  \n    errorcode method_not_allowed = new errorcode(405, "请求方法不正确");  \n    errorcode locked = new errorcode(423, "请求失败，请稍后重试"); // 并发请求，不允许  \n    errorcode too_many_requests = new errorcode(429, "请求过于频繁，请稍后重试");  \n  \n    // ========== 服务端错误段 ==========  \n    errorcode internal_server_error = new errorcode(500, "系统异常");  \n    errorcode not_implemented = new errorcode(501, "功能未实现/未开启");  \n    errorcode error_configuration = new errorcode(502, "错误的配置项");  \n  \n    // ========== 自定义错误段 ==========    errorcode repeated_requests = new errorcode(900, "重复请求，请稍后重试"); // 重复请求  \n    errorcode demo_deny = new errorcode(901, "演示模式，禁止写操作");  \n  \n    errorcode unknown = new errorcode(999, "未知错误");  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# serviceerrorcoderange\n\npublic class serviceerrorcoderange {  \n    // 模块 system 错误码区间 [1-001-000-000 ~ 1-003-000-000)}\n\n\n1\n2\n\n\n\n# serviceexception\n\n@data  \n@equalsandhashcode(callsuper = true)  \npublic final class serviceexception extends runtimeexception {  \n  \n    /**  \n     * 业务错误码  \n     *  \n     * @see serviceerrorcoderange  \n     */  \n    private integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private string message;  \n  \n    /**  \n     * 空构造方法，避免反序列化问题  \n     */  \n    public serviceexception() {  \n    }  \n  \n    public serviceexception(errorcode errorcode) {  \n        this.code = errorcode.getcode();  \n        this.message = errorcode.getmsg();  \n    }  \n  \n    public serviceexception(integer code, string message) {  \n        this.code = code;  \n        this.message = message;  \n    }  \n  \n    public integer getcode() {  \n        return code;  \n    }  \n  \n    public serviceexception setcode(integer code) {  \n        this.code = code;  \n        return this;  \n    }  \n  \n    @override  \n    public string getmessage() {  \n        return message;  \n    }  \n  \n    public serviceexception setmessage(string message) {  \n        this.message = message;  \n        return this;  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n\n\n\n# serviceexceptionutil\n\n@slf4j  \npublic class serviceexceptionutil {  \n    /**  \n     * 错误码提示模板  \n     */  \n    private static final concurrentmap<integer, string> messages = new concurrenthashmap<>();  \n  \n    public static void putall(map<integer, string> messages) {  \n        serviceexceptionutil.messages.putall(messages);  \n    }  \n  \n    public static void put(integer code, string message) {  \n        serviceexceptionutil.messages.put(code, message);  \n    }  \n  \n    public static void delete(integer code, string message) {  \n        serviceexceptionutil.messages.remove(code, message);  \n    }  \n  \n    // ========== 和 serviceexception 的集成 ==========  \n    public static serviceexception exception(errorcode errorcode) {  \n        string messagepattern = messages.getordefault(errorcode.getcode(), errorcode.getmsg());  \n        return exception0(errorcode.getcode(), messagepattern);  \n    }  \n  \n    public static serviceexception exception(errorcode errorcode, object... params) {  \n        string messagepattern = messages.getordefault(errorcode.getcode(), errorcode.getmsg());  \n        return exception0(errorcode.getcode(), messagepattern, params);  \n    }  \n  \n    /**  \n     * 创建指定编号的 serviceexception 的异常  \n     *  \n     * @param code 编号  \n     * @return 异常  \n     */  \n    public static serviceexception exception(integer code) {  \n        return exception0(code, messages.get(code));  \n    }  \n  \n    /**  \n     * 创建指定编号的 serviceexception 的异常  \n     *  \n     * @param code 编号  \n     * @param params 消息提示的占位符对应的参数  \n     * @return 异常  \n     */  \n    public static serviceexception exception(integer code, object... params) {  \n        return exception0(code, messages.get(code), params);  \n    }  \n  \n    public static serviceexception exception0(integer code, string messagepattern, object... params) {  \n        string message = doformat(code, messagepattern, params);  \n        return new serviceexception(code, message);  \n    }  \n  \n    public static serviceexception invalidparamexception(string messagepattern, object... params) {  \n        return exception0(globalerrorcodeconstants.bad_request.getcode(), messagepattern, params);  \n    }  \n  \n    // ========== 格式化方法 ==========  \n    /**  \n     * 将错误编号对应的消息使用 params 进行格式化。  \n     *  \n     * @param code           错误编号  \n     * @param messagepattern 消息模版  \n     * @param params         参数  \n     * @return 格式化后的提示  \n     */  \n    @visiblefortesting  \n    public static string doformat(int code, string messagepattern, object... params) {  \n        stringbuilder sbuf = new stringbuilder(messagepattern.length() + 50);  \n        int i = 0;  \n        int j;  \n        int l;  \n        for (l = 0; l < params.length; l++) {  \n            j = messagepattern.indexof("{}", i);  \n            if (j == -1) {  \n                log.error("[doformat][参数过多：错误码({})|错误内容({})|参数({})", code, messagepattern, params);  \n                if (i == 0) {  \n                    return messagepattern;  \n                } else {  \n                    sbuf.append(messagepattern.substring(i));  \n                    return sbuf.tostring();  \n                }  \n            } else {  \n                sbuf.append(messagepattern, i, j);  \n                sbuf.append(params[l]);  \n                i = j + 2;  \n            }  \n        }  \n        if (messagepattern.indexof("{}", i) != -1) {  \n            log.error("[doformat][参数过少：错误码({})|错误内容({})|参数({})", code, messagepattern, params);  \n        }  \n        sbuf.append(messagepattern.substring(i));  \n        return sbuf.tostring();  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n\n\n\n# 测试\n\n@springbootapplication  \npublic class springboot05globalexceptionapplication {  \n  \n    public static void main(string[] args) {  \n        springapplication.run(springboot05globalexceptionapplication.class, args);  \n        system.out.println("启动成功");  \n        throw exception(new errorcode(110110,"测试业务逻辑异常"));  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n',charsets:{cjk:!0},lastUpdated:"2024/03/20, 16:53:34",lastUpdatedTimestamp:1710924814e3},{title:"统一返回结果",frontmatter:{title:"统一返回结果",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/result",private:!0,categories:["软件开发"],tags:["软件开发"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/01.Springboot%E4%BD%BF%E7%94%A8/06.%E7%BB%9F%E4%B8%80%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C.html",relativePath:"06.软件开发/01.Springboot使用/06.统一返回结果.md",key:"v-1adacf72",path:"/soft/springboot/use/result/",headers:[{level:2,title:"创建工程",slug:"创建工程",normalizedTitle:"创建工程",charIndex:2},{level:2,title:"创建统一返回数据",slug:"创建统一返回数据",normalizedTitle:"创建统一返回数据",charIndex:13},{level:3,title:"ErrorCode",slug:"errorcode",normalizedTitle:"errorcode",charIndex:26},{level:3,title:"GlobalErrorCodeConstants",slug:"globalerrorcodeconstants",normalizedTitle:"globalerrorcodeconstants",charIndex:377},{level:3,title:"ServiceErrorCodeRange",slug:"serviceerrorcoderange",normalizedTitle:"serviceerrorcoderange",charIndex:1786},{level:3,title:"ServiceException",slug:"serviceexception",normalizedTitle:"serviceexception",charIndex:2557},{level:3,title:"CommonResult",slug:"commonresult",normalizedTitle:"commonresult",charIndex:3774},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:6631},{level:3,title:"SysUser",slug:"sysuser",normalizedTitle:"sysuser",charIndex:6638},{level:3,title:"SysUserController",slug:"sysusercontroller",normalizedTitle:"sysusercontroller",charIndex:6789},{level:3,title:"运行",slug:"运行",normalizedTitle:"运行",charIndex:7504}],headersStr:"创建工程 创建统一返回数据 ErrorCode GlobalErrorCodeConstants ServiceErrorCodeRange ServiceException CommonResult 测试 SysUser SysUserController 运行",content:'# 创建工程\n\n\n\n\n# 创建统一返回数据\n\n\n# ErrorCode\n\n@Data  \npublic class ErrorCode {  \n    /**  \n     * 错误码  \n     */  \n    private final Integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private final String msg;  \n  \n    public ErrorCode(Integer code, String message) {  \n        this.code = code;  \n        this.msg = message;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# GlobalErrorCodeConstants\n\n/**  \n * 全局错误码枚举  \n * 0-999 系统异常编码保留  \n *  \n * 一般情况下，使用 HTTP 响应状态码 https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status  \n * 虽然说，HTTP 响应状态码作为业务使用表达能力偏弱，但是使用在系统层面还是非常不错的  \n * @Author: icaiwei  \n * @Date: 2024/3/19 0019  \n */public interface GlobalErrorCodeConstants {  \n    ErrorCode SUCCESS = new ErrorCode(200, "成功");  \n  \n    // ========== 客户端错误段 ==========  \n    ErrorCode BAD_REQUEST = new ErrorCode(400, "请求参数不正确");  \n    ErrorCode UNAUTHORIZED = new ErrorCode(401, "账号未登录");  \n    ErrorCode FORBIDDEN = new ErrorCode(403, "没有该操作权限");  \n    ErrorCode NOT_FOUND = new ErrorCode(404, "请求未找到");  \n    ErrorCode METHOD_NOT_ALLOWED = new ErrorCode(405, "请求方法不正确");  \n    ErrorCode LOCKED = new ErrorCode(423, "请求失败，请稍后重试"); // 并发请求，不允许  \n    ErrorCode TOO_MANY_REQUESTS = new ErrorCode(429, "请求过于频繁，请稍后重试");  \n  \n    // ========== 服务端错误段 ==========  \n    ErrorCode INTERNAL_SERVER_ERROR = new ErrorCode(500, "系统异常");  \n    ErrorCode NOT_IMPLEMENTED = new ErrorCode(501, "功能未实现/未开启");  \n    ErrorCode ERROR_CONFIGURATION = new ErrorCode(502, "错误的配置项");  \n  \n    // ========== 自定义错误段 ==========    ErrorCode REPEATED_REQUESTS = new ErrorCode(900, "重复请求，请稍后重试"); // 重复请求  \n    ErrorCode DEMO_DENY = new ErrorCode(901, "演示模式，禁止写操作");  \n  \n    ErrorCode UNKNOWN = new ErrorCode(999, "未知错误");  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# ServiceErrorCodeRange\n\n/**  \n * 业务异常的错误码区间，解决：解决各模块错误码定义，避免重复，在此只声明不做实际使用  \n *  \n * 一共 10 位，分成四段  \n *  \n * 第一段，1 位，类型  \n *      1 - 业务级别异常  \n *      x - 预留  \n * 第二段，3 位，系统类型  \n *      001 - 用户系统  \n *      002 - 商品系统  \n *      003 - 订单系统  \n *      004 - 支付系统  \n *      005 - 优惠劵系统  \n *      ... - ...  \n * 第三段，3 位，模块  \n *      不限制规则。  \n *      一般建议，每个系统里面，可能有多个模块，可以再去做分段。以用户系统为例子：  \n *          001 - OAuth2 模块  \n *          002 - User 模块  \n *          003 - MobileCode 模块  \n * 第四段，3 位，错误码  \n *       不限制规则。  \n *       一般建议，每个模块自增。  \n *  \n * @Author: icaiwei  \n * @Date: 2024/3/19 0019  \n */public class ServiceErrorCodeRange {  \n    // 模块 system 错误码区间 [1-001-000-000 ~ 1-003-000-000)}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# ServiceException\n\n@Data  \n@EqualsAndHashCode(callSuper = true)  \npublic class ServiceException extends RuntimeException {  \n    /**  \n     * 业务错误码  \n     *  \n     * @see ServiceErrorCodeRange  \n     */  \n    private Integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private String message;  \n  \n    /**  \n     * 空构造方法，避免反序列化问题  \n     */  \n    public ServiceException() {  \n    }  \n  \n    public ServiceException(ErrorCode errorCode) {  \n        this.code = errorCode.getCode();  \n        this.message = errorCode.getMsg();  \n    }  \n  \n    public ServiceException(Integer code, String message) {  \n        this.code = code;  \n        this.message = message;  \n    }  \n  \n    public Integer getCode() {  \n        return code;  \n    }  \n  \n    public ServiceException setCode(Integer code) {  \n        this.code = code;  \n        return this;  \n    }  \n  \n    @Override  \n    public String getMessage() {  \n        return message;  \n    }  \n  \n    public ServiceException setMessage(String message) {  \n        this.message = message;  \n        return this;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n\n\n\n# CommonResult\n\n@Data  \npublic class CommonResult<T> implements Serializable {  \n    /**  \n     * 错误码  \n     *  \n     * @see ErrorCode#getCode()  \n     */    private Integer code;  \n    /**  \n     * 返回数据  \n     */  \n    private T data;  \n    /**  \n     * 错误提示，用户可阅读  \n     *  \n     * @see ErrorCode#getMsg() ()  \n     */    private String msg;  \n  \n    /**  \n     * 将传入的 result 对象，转换成另外一个泛型结果的对象  \n     *  \n     * 因为 A 方法返回的 CommonResult 对象，不满足调用其的 B 方法的返回，所以需要进行转换。  \n     *  \n     * @param result 传入的 result 对象  \n     * @param <T>    返回的泛型  \n     * @return 新的 CommonResult 对象  \n     */  \n    public static <T> CommonResult<T> error(CommonResult<?> result) {  \n        return error(result.getCode(), result.getMsg());  \n    }  \n  \n    public static <T> CommonResult<T> error(Integer code, String message) {  \n        Assert.isTrue(!GlobalErrorCodeConstants.SUCCESS.getCode().equals(code), "code 必须是错误的！");  \n        CommonResult<T> result = new CommonResult<>();  \n        result.code = code;  \n        result.msg = message;  \n        return result;  \n    }  \n  \n    public static <T> CommonResult<T> error(ErrorCode errorCode) {  \n        return error(errorCode.getCode(), errorCode.getMsg());  \n    }  \n  \n    public static <T> CommonResult<T> success(T data) {  \n        CommonResult<T> result = new CommonResult<>();  \n        result.code = GlobalErrorCodeConstants.SUCCESS.getCode();  \n        result.data = data;  \n        result.msg = "";  \n        return result;  \n    }  \n  \n    public static boolean isSuccess(Integer code) {  \n        return Objects.equals(code, GlobalErrorCodeConstants.SUCCESS.getCode());  \n    }  \n  \n    @JsonIgnore // 避免 jackson 序列化  \n    public boolean isSuccess() {  \n        return isSuccess(code);  \n    }  \n  \n    @JsonIgnore // 避免 jackson 序列化  \n    public boolean isError() {  \n        return !isSuccess();  \n    }  \n  \n    // ========= 和 Exception 异常体系集成 =========  \n    /**  \n     * 判断是否有异常。如果有，则抛出 {@link ServiceException} 异常  \n     */  \n    public void checkError() throws ServiceException {  \n        if (isSuccess()) {  \n            return;  \n        }  \n        // 业务异常  \n        throw new ServiceException(code, msg);  \n    }  \n  \n    /**  \n     * 判断是否有异常。如果有，则抛出 {@link ServiceException} 异常  \n     * 如果没有，则返回 {@link #data} 数据  \n     */  \n    @JsonIgnore // 避免 jackson 序列化  \n    public T getCheckedData() {  \n        checkError();  \n        return data;  \n    }  \n  \n    public static <T> CommonResult<T> error(ServiceException serviceException) {  \n        return error(serviceException.getCode(), serviceException.getMessage());  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n\n\n\n# 测试\n\n\n# SysUser\n\n@Data  \npublic class SysUser {  \n    private Integer id;  \n    private String username;  \n    private String password;  \n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# SysUserController\n\n@RestController  \n@RequestMapping("/sys/user")  \npublic class SysUserController {  \n  \n    @GetMapping(value = "/list")  \n    public CommonResult<List<SysUser>> getList(){  \n        SysUser user1 = new SysUser();  \n        user1.setId(1);  \n        user1.setUsername("张三");  \n        user1.setPassword("张三密码");  \n  \n        SysUser user2 = new SysUser();  \n        user2.setId(1);  \n        user2.setUsername("李四");  \n        user2.setPassword("李四密码");  \n  \n        List<SysUser> userList = new ArrayList<>();  \n        userList.add(user1);  \n        userList.add(user2);  \n  \n        return success(userList);  \n  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 运行\n\n',normalizedContent:'# 创建工程\n\n\n\n\n# 创建统一返回数据\n\n\n# errorcode\n\n@data  \npublic class errorcode {  \n    /**  \n     * 错误码  \n     */  \n    private final integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private final string msg;  \n  \n    public errorcode(integer code, string message) {  \n        this.code = code;  \n        this.msg = message;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# globalerrorcodeconstants\n\n/**  \n * 全局错误码枚举  \n * 0-999 系统异常编码保留  \n *  \n * 一般情况下，使用 http 响应状态码 https://developer.mozilla.org/zh-cn/docs/web/http/status  \n * 虽然说，http 响应状态码作为业务使用表达能力偏弱，但是使用在系统层面还是非常不错的  \n * @author: icaiwei  \n * @date: 2024/3/19 0019  \n */public interface globalerrorcodeconstants {  \n    errorcode success = new errorcode(200, "成功");  \n  \n    // ========== 客户端错误段 ==========  \n    errorcode bad_request = new errorcode(400, "请求参数不正确");  \n    errorcode unauthorized = new errorcode(401, "账号未登录");  \n    errorcode forbidden = new errorcode(403, "没有该操作权限");  \n    errorcode not_found = new errorcode(404, "请求未找到");  \n    errorcode method_not_allowed = new errorcode(405, "请求方法不正确");  \n    errorcode locked = new errorcode(423, "请求失败，请稍后重试"); // 并发请求，不允许  \n    errorcode too_many_requests = new errorcode(429, "请求过于频繁，请稍后重试");  \n  \n    // ========== 服务端错误段 ==========  \n    errorcode internal_server_error = new errorcode(500, "系统异常");  \n    errorcode not_implemented = new errorcode(501, "功能未实现/未开启");  \n    errorcode error_configuration = new errorcode(502, "错误的配置项");  \n  \n    // ========== 自定义错误段 ==========    errorcode repeated_requests = new errorcode(900, "重复请求，请稍后重试"); // 重复请求  \n    errorcode demo_deny = new errorcode(901, "演示模式，禁止写操作");  \n  \n    errorcode unknown = new errorcode(999, "未知错误");  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# serviceerrorcoderange\n\n/**  \n * 业务异常的错误码区间，解决：解决各模块错误码定义，避免重复，在此只声明不做实际使用  \n *  \n * 一共 10 位，分成四段  \n *  \n * 第一段，1 位，类型  \n *      1 - 业务级别异常  \n *      x - 预留  \n * 第二段，3 位，系统类型  \n *      001 - 用户系统  \n *      002 - 商品系统  \n *      003 - 订单系统  \n *      004 - 支付系统  \n *      005 - 优惠劵系统  \n *      ... - ...  \n * 第三段，3 位，模块  \n *      不限制规则。  \n *      一般建议，每个系统里面，可能有多个模块，可以再去做分段。以用户系统为例子：  \n *          001 - oauth2 模块  \n *          002 - user 模块  \n *          003 - mobilecode 模块  \n * 第四段，3 位，错误码  \n *       不限制规则。  \n *       一般建议，每个模块自增。  \n *  \n * @author: icaiwei  \n * @date: 2024/3/19 0019  \n */public class serviceerrorcoderange {  \n    // 模块 system 错误码区间 [1-001-000-000 ~ 1-003-000-000)}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# serviceexception\n\n@data  \n@equalsandhashcode(callsuper = true)  \npublic class serviceexception extends runtimeexception {  \n    /**  \n     * 业务错误码  \n     *  \n     * @see serviceerrorcoderange  \n     */  \n    private integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private string message;  \n  \n    /**  \n     * 空构造方法，避免反序列化问题  \n     */  \n    public serviceexception() {  \n    }  \n  \n    public serviceexception(errorcode errorcode) {  \n        this.code = errorcode.getcode();  \n        this.message = errorcode.getmsg();  \n    }  \n  \n    public serviceexception(integer code, string message) {  \n        this.code = code;  \n        this.message = message;  \n    }  \n  \n    public integer getcode() {  \n        return code;  \n    }  \n  \n    public serviceexception setcode(integer code) {  \n        this.code = code;  \n        return this;  \n    }  \n  \n    @override  \n    public string getmessage() {  \n        return message;  \n    }  \n  \n    public serviceexception setmessage(string message) {  \n        this.message = message;  \n        return this;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n\n\n\n# commonresult\n\n@data  \npublic class commonresult<t> implements serializable {  \n    /**  \n     * 错误码  \n     *  \n     * @see errorcode#getcode()  \n     */    private integer code;  \n    /**  \n     * 返回数据  \n     */  \n    private t data;  \n    /**  \n     * 错误提示，用户可阅读  \n     *  \n     * @see errorcode#getmsg() ()  \n     */    private string msg;  \n  \n    /**  \n     * 将传入的 result 对象，转换成另外一个泛型结果的对象  \n     *  \n     * 因为 a 方法返回的 commonresult 对象，不满足调用其的 b 方法的返回，所以需要进行转换。  \n     *  \n     * @param result 传入的 result 对象  \n     * @param <t>    返回的泛型  \n     * @return 新的 commonresult 对象  \n     */  \n    public static <t> commonresult<t> error(commonresult<?> result) {  \n        return error(result.getcode(), result.getmsg());  \n    }  \n  \n    public static <t> commonresult<t> error(integer code, string message) {  \n        assert.istrue(!globalerrorcodeconstants.success.getcode().equals(code), "code 必须是错误的！");  \n        commonresult<t> result = new commonresult<>();  \n        result.code = code;  \n        result.msg = message;  \n        return result;  \n    }  \n  \n    public static <t> commonresult<t> error(errorcode errorcode) {  \n        return error(errorcode.getcode(), errorcode.getmsg());  \n    }  \n  \n    public static <t> commonresult<t> success(t data) {  \n        commonresult<t> result = new commonresult<>();  \n        result.code = globalerrorcodeconstants.success.getcode();  \n        result.data = data;  \n        result.msg = "";  \n        return result;  \n    }  \n  \n    public static boolean issuccess(integer code) {  \n        return objects.equals(code, globalerrorcodeconstants.success.getcode());  \n    }  \n  \n    @jsonignore // 避免 jackson 序列化  \n    public boolean issuccess() {  \n        return issuccess(code);  \n    }  \n  \n    @jsonignore // 避免 jackson 序列化  \n    public boolean iserror() {  \n        return !issuccess();  \n    }  \n  \n    // ========= 和 exception 异常体系集成 =========  \n    /**  \n     * 判断是否有异常。如果有，则抛出 {@link serviceexception} 异常  \n     */  \n    public void checkerror() throws serviceexception {  \n        if (issuccess()) {  \n            return;  \n        }  \n        // 业务异常  \n        throw new serviceexception(code, msg);  \n    }  \n  \n    /**  \n     * 判断是否有异常。如果有，则抛出 {@link serviceexception} 异常  \n     * 如果没有，则返回 {@link #data} 数据  \n     */  \n    @jsonignore // 避免 jackson 序列化  \n    public t getcheckeddata() {  \n        checkerror();  \n        return data;  \n    }  \n  \n    public static <t> commonresult<t> error(serviceexception serviceexception) {  \n        return error(serviceexception.getcode(), serviceexception.getmessage());  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n\n\n\n# 测试\n\n\n# sysuser\n\n@data  \npublic class sysuser {  \n    private integer id;  \n    private string username;  \n    private string password;  \n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# sysusercontroller\n\n@restcontroller  \n@requestmapping("/sys/user")  \npublic class sysusercontroller {  \n  \n    @getmapping(value = "/list")  \n    public commonresult<list<sysuser>> getlist(){  \n        sysuser user1 = new sysuser();  \n        user1.setid(1);  \n        user1.setusername("张三");  \n        user1.setpassword("张三密码");  \n  \n        sysuser user2 = new sysuser();  \n        user2.setid(1);  \n        user2.setusername("李四");  \n        user2.setpassword("李四密码");  \n  \n        list<sysuser> userlist = new arraylist<>();  \n        userlist.add(user1);  \n        userlist.add(user2);  \n  \n        return success(userlist);  \n  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 运行\n\n',charsets:{cjk:!0},lastUpdated:"2024/03/20, 16:53:34",lastUpdatedTimestamp:1710924814e3},{title:"mysql-druid-mybatisplus",frontmatter:{title:"mysql-druid-mybatisplus",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/mysql",private:!0,categories:["软件开发"],tags:["软件开发"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/01.Springboot%E4%BD%BF%E7%94%A8/07.mysql-druid-mybatisplus.html",relativePath:"06.软件开发/01.Springboot使用/07.mysql-druid-mybatisplus.md",key:"v-306ba20e",path:"/soft/springboot/use/mysql/",headers:[{level:2,title:"新建工程",slug:"新建工程",normalizedTitle:"新建工程",charIndex:2},{level:2,title:"添加依赖",slug:"添加依赖",normalizedTitle:"添加依赖",charIndex:13},{level:2,title:"新建数据库",slug:"新建数据库",normalizedTitle:"新建数据库",charIndex:2195},{level:3,title:"添加测试表",slug:"添加测试表",normalizedTitle:"添加测试表",charIndex:2207},{level:2,title:"添加配置",slug:"添加配置",normalizedTitle:"添加配置",charIndex:5822},{level:3,title:"查看 SQL 监控",slug:"查看-sql-监控",normalizedTitle:"查看 sql 监控",charIndex:9663},{level:3,title:"去除底部广告",slug:"去除底部广告",normalizedTitle:"去除底部广告",charIndex:9715},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:2209},{level:3,title:"SysUser",slug:"sysuser",normalizedTitle:"sysuser",charIndex:11975},{level:3,title:"SysUserMapper",slug:"sysusermapper",normalizedTitle:"sysusermapper",charIndex:12568},{level:3,title:"SysUserService",slug:"sysuserservice",normalizedTitle:"sysuserservice",charIndex:12671},{level:3,title:"SysUserServiceImpl",slug:"sysuserserviceimpl",normalizedTitle:"sysuserserviceimpl",charIndex:12769},{level:3,title:"SysUserController",slug:"sysusercontroller",normalizedTitle:"sysusercontroller",charIndex:13059}],headersStr:"新建工程 添加依赖 新建数据库 添加测试表 添加配置 查看 SQL 监控 去除底部广告 测试 SysUser SysUserMapper SysUserService SysUserServiceImpl SysUserController",content:"# 新建工程\n\n\n\n\n# 添加依赖\n\n<dependencies>  \n    <dependency>  \n        <groupId>org.springframework.boot</groupId>  \n        <artifactId>spring-boot-starter-web</artifactId>  \n    </dependency>  \n  \n    <dependency>  \n        <groupId>org.projectlombok</groupId>  \n        <artifactId>lombok</artifactId>  \n        <optional>true</optional>  \n    </dependency>  \n    <dependency>  \n        <groupId>org.springframework.boot</groupId>  \n        <artifactId>spring-boot-starter-test</artifactId>  \n        <scope>test</scope>  \n    </dependency>  \n  \n    <dependency>  \n        <groupId>org.springdoc</groupId>  \n        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>  \n        <version>2.0.4</version>  \n    </dependency>  \n  \n    <dependency>  \n        <groupId>mysql</groupId>  \n        <artifactId>mysql-connector-java</artifactId>  \n        <version>8.0.33</version>  \n    </dependency>  \n    \x3c!-- SpringBoot3 要使用druid-3，否则无法查看监控页面 --\x3e  \n    <dependency>  \n        <groupId>com.alibaba</groupId>  \n        <artifactId>druid-spring-boot-3-starter</artifactId>  \n        <version>1.2.20</version>  \n    </dependency>  \n    \x3c!-- 多数据源 --\x3e  \n    <dependency>  \n        <groupId>com.baomidou</groupId>  \n        <artifactId>dynamic-datasource-spring-boot3-starter</artifactId>  \n        <version>4.3.0</version>  \n    </dependency>  \n  \n  \n    <dependency>  \n        <groupId>org.mybatis</groupId>  \n        <artifactId>mybatis-spring</artifactId>  \n        <version>3.0.3</version>  \n    </dependency>  \n  \n    \x3c!-- mybatis plus3.5.5搭配mybatis-spring是2.0版本，与springboot3.0版本不符，需要去除，重新引入3.0版本mybatis-spring --\x3e  \n    <dependency>  \n        <groupId>com.baomidou</groupId>  \n        <artifactId>mybatis-plus-boot-starter</artifactId>  \n        <version>3.5.5</version>  \n        <exclusions>  \n            <exclusion>  \n                <groupId>org.mybatis</groupId>  \n                <artifactId>mybatis-spring</artifactId>  \n            </exclusion>  \n        </exclusions>  \n    </dependency>  \n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n\n\n\n# 新建数据库\n\n\n\n\n# 添加测试表\n\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ----------------------------\n-- Table structure for sys_role\n-- ----------------------------\nDROP TABLE IF EXISTS `sys_role`;\nCREATE TABLE `sys_role`  (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `role_name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of sys_role\n-- ----------------------------\nINSERT INTO `sys_role` VALUES (1, '超级管理员');\nINSERT INTO `sys_role` VALUES (2, '管理员');\nINSERT INTO `sys_role` VALUES (3, '普通用户');\n\nSET FOREIGN_KEY_CHECKS = 1;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ----------------------------\n-- Table structure for sys_user\n-- ----------------------------\nDROP TABLE IF EXISTS `sys_user`;\nCREATE TABLE `sys_user`  (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `username` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n  `role_id` int NOT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of sys_user\n-- ----------------------------\nINSERT INTO `sys_user` VALUES (1, 'superadmin', 'superadmin', 1);\nINSERT INTO `sys_user` VALUES (2, 'admin', 'admin', 2);\nINSERT INTO `sys_user` VALUES (3, 'admin1', 'admin1', 2);\nINSERT INTO `sys_user` VALUES (4, 'admin2', 'admin2', 2);\nINSERT INTO `sys_user` VALUES (5, 'admin3', 'admin3', 2);\nINSERT INTO `sys_user` VALUES (6, 'admin4', 'admin4', 2);\nINSERT INTO `sys_user` VALUES (7, 'admin5', 'admin5', 2);\nINSERT INTO `sys_user` VALUES (8, 'admin6', 'admin6', 2);\nINSERT INTO `sys_user` VALUES (9, 'admin7', 'admin7', 2);\nINSERT INTO `sys_user` VALUES (10, 'admin8', 'admin8', 2);\nINSERT INTO `sys_user` VALUES (11, 'admin9', 'admin9', 2);\nINSERT INTO `sys_user` VALUES (12, 'admin10', 'admin10', 2);\nINSERT INTO `sys_user` VALUES (13, 'admin11', 'admin11', 2);\nINSERT INTO `sys_user` VALUES (14, 'admin12', 'admin12', 2);\nINSERT INTO `sys_user` VALUES (15, 'admin13', 'admin13', 2);\nINSERT INTO `sys_user` VALUES (16, 'admin14', 'admin14', 2);\nINSERT INTO `sys_user` VALUES (17, 'admin15', 'admin15', 2);\nINSERT INTO `sys_user` VALUES (18, 'admin16', 'admin16', 2);\nINSERT INTO `sys_user` VALUES (19, 'a1', 'a1', 3);\nINSERT INTO `sys_user` VALUES (20, 'a2', 'a2', 3);\nINSERT INTO `sys_user` VALUES (21, 'a3', 'a3', 3);\nINSERT INTO `sys_user` VALUES (22, 'a4', 'a4', 3);\nINSERT INTO `sys_user` VALUES (23, 'a5', 'a5', 3);\nINSERT INTO `sys_user` VALUES (24, 'a6', 'a6', 3);\nINSERT INTO `sys_user` VALUES (25, 'a7', 'a7', 3);\nINSERT INTO `sys_user` VALUES (26, 'a8', 'a8', 3);\nINSERT INTO `sys_user` VALUES (27, 'a9', 'a9', 3);\nINSERT INTO `sys_user` VALUES (28, 'a10', 'a10', 3);\nINSERT INTO `sys_user` VALUES (29, 'a11', 'a11', 3);\nINSERT INTO `sys_user` VALUES (30, 'a12', 'a12', 3);\nINSERT INTO `sys_user` VALUES (31, 'a13', 'a13', 3);\nINSERT INTO `sys_user` VALUES (32, 'a14', 'a14', 3);\nINSERT INTO `sys_user` VALUES (33, 'a15', 'a15', 3);\nINSERT INTO `sys_user` VALUES (34, 'a16', 'a16', 3);\nINSERT INTO `sys_user` VALUES (35, 'a17', 'a17', 3);\nINSERT INTO `sys_user` VALUES (36, 'a18', 'a18', 3);\n\nSET FOREIGN_KEY_CHECKS = 1;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n\n# 添加配置\n\n新建 application.yaml\n\nserver:  \n  port: 19527  \n#################### 数据库相关配置 ####################spring:  \n  # 数据源配置项  \n  autoconfigure:  \n    exclude:  \n      - com.alibaba.druid.spring.boot3.autoconfigure.DruidDataSourceAutoConfigure # 排除 Druid 的自动配置，使用 dynamic-datasource-spring-boot-starter 配置多数据源  \n      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration  \n  datasource:  \n    druid: # Druid 【监控】相关的全局配置  \n      web-stat-filter:  \n        enabled: true  \n      stat-view-servlet:  \n        enabled: true # 启动durid sql监控（默认时关闭的，访问会404，开启后即可访问）  \n        allow: # 设置白名单，不填则允许所有访问  \n        url-pattern: /druid/*  \n        login-username: # 控制台管理用户名和密码  \n        login-password:  \n      filter:  \n        stat:  \n          enabled: true  \n          log-slow-sql: true # 慢 SQL 记录  \n          slow-sql-millis: 100  \n          merge-sql: true  \n        wall:  \n          config:  \n            multi-statement-allow: true  \n    dynamic: # 多数据源配置  \n      druid: # Druid 【连接池】相关的全局配置  \n        initial-size: 1 # 初始连接数  \n        min-idle: 1 # 最小连接池数量  \n        max-active: 20 # 最大连接池数量  \n        max-wait: 600000 # 配置获取连接等待超时的时间，单位：毫秒  \n        time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位：毫秒  \n        min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位：毫秒  \n        max-evictable-idle-time-millis: 900000 # 配置一个连接在池中最大生存的时间，单位：毫秒  \n        validation-query: SELECT 1 FROM DUAL # 配置检测连接是否有效  \n        test-while-idle: true  \n        test-on-borrow: false  \n        test-on-return: false  \n      primary: master  \n      datasource:  \n        master:  \n          name: test  \n          driver-class-name: com.mysql.cj.jdbc.Driver  \n          url: jdbc:mysql://127.0.0.1:3306/${spring.datasource.dynamic.datasource.master.name}?useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true # MySQL Connector/J 8.X 连接的示例  \n          username: root  \n          password: 123456  \n        slave: # 模拟从库，可根据自己需要修改  \n          name: test  \n          lazy: true # 开启懒加载，保证启动速度  \n          driver-class-name: com.mysql.cj.jdbc.Driver  \n          url: jdbc:mysql://127.0.0.1:3306/${spring.datasource.dynamic.datasource.slave.name}?useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true # MySQL Connector/J 8.X 连接的示例  \n          username: root  \n          password: 123456  \n  \n# MyBatis Plus 的配置项  \nmybatis-plus:  \n  configuration:  \n    map-underscore-to-camel-case: true # 虽然默认为 true ，但是还是显示去指定下。  \n  global-config:  \n    db-config:  \n      id-type: NONE # “智能”模式，基于 IdTypeEnvironmentPostProcessor + 数据源的类型，自动适配成 AUTO、INPUT 模式。  \n      #      id-type: AUTO # 自增 ID，适合 MySQL 等直接自增的数据库  \n      #      id-type: INPUT # 用户输入 ID，适合 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库  \n      #      id-type: ASSIGN_ID # 分配 ID，默认使用雪花算法。注意，Oracle、PostgreSQL、Kingbase、DB2、H2 数据库时，需要去除实体类上的 @KeySequence 注解  \n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)    banner: false # 关闭控制台的 Banner 打印  \n  type-aliases-package: com.cc.*.model  \n  encryptor:  \n    password: Az6zIFjeHCkkQSNF # 加解密的秘钥，可使用 https://www.imaegoo.com/2020/aes-key-generator/ 网站生成  \n  \nmybatis-plus-join:  \n  banner: false # 关闭控制台的 Banner 打印\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n\n\n注意\n\n404 报错 首先要确保 pom.xml 引用的是 druid-spring-boot-3-starter 和 dynamic-datasource-spring-boot3-starter 通过源码分析，druid-spring-boot-3-starter 目前最新版本是 1.2.20，虽然适配了 SpringBoot 3，但缺少自动装配的配置文件 解决：resources 目录下创建 META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports 内容 com.alibaba.druid.spring.boot3.autoconfigure.DruidDataSourceAutoConfigure\n\n\n# 查看 SQL 监控\n\n启动项目可查看 SQL 监控 localhost:19527/druid\n\n\n# 去除底部广告\n\n\n\n正常监控页面会有广告，添加配置去除\n\n**  \n * Druid 底部广告过滤器  \n * @Author: icaiwei  \n * @Date: 2024/3/19 0019  \n */\npublic class DruidAdRemoveFilter extends OncePerRequestFilter {  \n  \n    /**  \n     * common.js 的路径  \n     */  \n    private static final String COMMON_JS_ILE_PATH = \"support/http/resources/js/common.js\";  \n  \n    @Override  \n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain)  \n            throws ServletException, IOException {  \n        chain.doFilter(request, response);  \n        // 重置缓冲区，响应头不会被重置  \n        response.resetBuffer();  \n        // 获取 common.js        String text = Utils.readFromResource(COMMON_JS_ILE_PATH);  \n        // 正则替换 banner, 除去底部的广告信息  \n        text = text.replaceAll(\"<a.*?banner\\\"></a><br/>\", \"\");  \n        text = text.replaceAll(\"powered.*?shrek.wang</a>\", \"\");  \n        response.getWriter().write(text);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n/**  \n * @Author: icaiwei  \n * @Date: 2024/3/19 0019  \n */\n@Configuration  \n@EnableTransactionManagement(proxyTargetClass = true) // 启动事务管理  \n@EnableConfigurationProperties(DruidStatProperties.class)  \npublic class DruidConfig {  \n    /**  \n     * 创建 DruidAdRemoveFilter 过滤器，过滤 common.js 的广告  \n     */  \n    @Bean  \n    @ConditionalOnProperty(name = \"spring.datasource.druid.web-stat-filter.enabled\", havingValue = \"true\")  \n    public FilterRegistrationBean<DruidAdRemoveFilter> druidAdRemoveFilterFilter(DruidStatProperties properties) {  \n        // 获取 druid web 监控页面的参数  \n        DruidStatProperties.StatViewServlet config = properties.getStatViewServlet();  \n        // 提取 common.js 的配置路径  \n        String pattern = config.getUrlPattern() != null ? config.getUrlPattern() : \"/druid/*\";  \n        String commonJsPattern = pattern.replaceAll(\"\\\\*\", \"js/common.js\");  \n        // 创建 DruidAdRemoveFilter Bean        FilterRegistrationBean<DruidAdRemoveFilter> registrationBean = new FilterRegistrationBean<>();  \n        registrationBean.setFilter(new DruidAdRemoveFilter());  \n        registrationBean.addUrlPatterns(commonJsPattern);  \n        return registrationBean;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n\n\n# 测试\n\n\n# SysUser\n\n@Data  \n@TableName(\"sys_user\")  \n@Schema(description = \"用户\")  \npublic class SysUser {  \n    @Schema(description = \"ID\", example = \"1\")  \n    @TableId  \n    private Integer id;  \n  \n    @Schema(description = \"用户名\", requiredMode = Schema.RequiredMode.REQUIRED, example = \"张三\")  \n    private String username;  \n  \n    @Schema(description = \"密码\", requiredMode = Schema.RequiredMode.REQUIRED, example = \"password\")  \n    private String password;  \n  \n    @Schema(description = \"角色ID\", example = \"1\")  \n    private Integer roleId;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# SysUserMapper\n\n@Mapper  \npublic interface SysUserMapper extends BaseMapper<SysUser> {  \n}\n\n\n1\n2\n3\n\n\n\n# SysUserService\n\npublic interface SysUserService {  \n    List<SysUser> getList();  \n}\n\n\n1\n2\n3\n\n\n\n# SysUserServiceImpl\n\n@Service  \npublic class SysUserServiceImpl implements SysUserService{  \n    @Resource  \n    private SysUserMapper userMapper;  \n  \n    @Override  \n    public List<SysUser> getList() {  \n        return userMapper.selectList(null);  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# SysUserController\n\n@RestController  \n@RequestMapping(\"/sys/user\")  \npublic class SysUserController {  \n    @Resource  \n    private SysUserService userService;  \n  \n    @GetMapping(\"/list\")  \n    public List<SysUser> list(){  \n        return userService.getList();  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n",normalizedContent:"# 新建工程\n\n\n\n\n# 添加依赖\n\n<dependencies>  \n    <dependency>  \n        <groupid>org.springframework.boot</groupid>  \n        <artifactid>spring-boot-starter-web</artifactid>  \n    </dependency>  \n  \n    <dependency>  \n        <groupid>org.projectlombok</groupid>  \n        <artifactid>lombok</artifactid>  \n        <optional>true</optional>  \n    </dependency>  \n    <dependency>  \n        <groupid>org.springframework.boot</groupid>  \n        <artifactid>spring-boot-starter-test</artifactid>  \n        <scope>test</scope>  \n    </dependency>  \n  \n    <dependency>  \n        <groupid>org.springdoc</groupid>  \n        <artifactid>springdoc-openapi-starter-webmvc-ui</artifactid>  \n        <version>2.0.4</version>  \n    </dependency>  \n  \n    <dependency>  \n        <groupid>mysql</groupid>  \n        <artifactid>mysql-connector-java</artifactid>  \n        <version>8.0.33</version>  \n    </dependency>  \n    \x3c!-- springboot3 要使用druid-3，否则无法查看监控页面 --\x3e  \n    <dependency>  \n        <groupid>com.alibaba</groupid>  \n        <artifactid>druid-spring-boot-3-starter</artifactid>  \n        <version>1.2.20</version>  \n    </dependency>  \n    \x3c!-- 多数据源 --\x3e  \n    <dependency>  \n        <groupid>com.baomidou</groupid>  \n        <artifactid>dynamic-datasource-spring-boot3-starter</artifactid>  \n        <version>4.3.0</version>  \n    </dependency>  \n  \n  \n    <dependency>  \n        <groupid>org.mybatis</groupid>  \n        <artifactid>mybatis-spring</artifactid>  \n        <version>3.0.3</version>  \n    </dependency>  \n  \n    \x3c!-- mybatis plus3.5.5搭配mybatis-spring是2.0版本，与springboot3.0版本不符，需要去除，重新引入3.0版本mybatis-spring --\x3e  \n    <dependency>  \n        <groupid>com.baomidou</groupid>  \n        <artifactid>mybatis-plus-boot-starter</artifactid>  \n        <version>3.5.5</version>  \n        <exclusions>  \n            <exclusion>  \n                <groupid>org.mybatis</groupid>  \n                <artifactid>mybatis-spring</artifactid>  \n            </exclusion>  \n        </exclusions>  \n    </dependency>  \n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n\n\n\n# 新建数据库\n\n\n\n\n# 添加测试表\n\nset names utf8mb4;\nset foreign_key_checks = 0;\n\n-- ----------------------------\n-- table structure for sys_role\n-- ----------------------------\ndrop table if exists `sys_role`;\ncreate table `sys_role`  (\n  `id` int not null auto_increment,\n  `role_name` varchar(20) character set utf8mb4 collate utf8mb4_unicode_ci not null,\n  primary key (`id`) using btree\n) engine = innodb character set = utf8mb4 collate = utf8mb4_unicode_ci row_format = dynamic;\n\n-- ----------------------------\n-- records of sys_role\n-- ----------------------------\ninsert into `sys_role` values (1, '超级管理员');\ninsert into `sys_role` values (2, '管理员');\ninsert into `sys_role` values (3, '普通用户');\n\nset foreign_key_checks = 1;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\nset names utf8mb4;\nset foreign_key_checks = 0;\n\n-- ----------------------------\n-- table structure for sys_user\n-- ----------------------------\ndrop table if exists `sys_user`;\ncreate table `sys_user`  (\n  `id` int not null auto_increment,\n  `username` varchar(20) character set utf8mb4 collate utf8mb4_unicode_ci not null,\n  `password` varchar(255) character set utf8mb4 collate utf8mb4_unicode_ci not null,\n  `role_id` int not null,\n  primary key (`id`) using btree\n) engine = innodb character set = utf8mb4 collate = utf8mb4_unicode_ci row_format = dynamic;\n\n-- ----------------------------\n-- records of sys_user\n-- ----------------------------\ninsert into `sys_user` values (1, 'superadmin', 'superadmin', 1);\ninsert into `sys_user` values (2, 'admin', 'admin', 2);\ninsert into `sys_user` values (3, 'admin1', 'admin1', 2);\ninsert into `sys_user` values (4, 'admin2', 'admin2', 2);\ninsert into `sys_user` values (5, 'admin3', 'admin3', 2);\ninsert into `sys_user` values (6, 'admin4', 'admin4', 2);\ninsert into `sys_user` values (7, 'admin5', 'admin5', 2);\ninsert into `sys_user` values (8, 'admin6', 'admin6', 2);\ninsert into `sys_user` values (9, 'admin7', 'admin7', 2);\ninsert into `sys_user` values (10, 'admin8', 'admin8', 2);\ninsert into `sys_user` values (11, 'admin9', 'admin9', 2);\ninsert into `sys_user` values (12, 'admin10', 'admin10', 2);\ninsert into `sys_user` values (13, 'admin11', 'admin11', 2);\ninsert into `sys_user` values (14, 'admin12', 'admin12', 2);\ninsert into `sys_user` values (15, 'admin13', 'admin13', 2);\ninsert into `sys_user` values (16, 'admin14', 'admin14', 2);\ninsert into `sys_user` values (17, 'admin15', 'admin15', 2);\ninsert into `sys_user` values (18, 'admin16', 'admin16', 2);\ninsert into `sys_user` values (19, 'a1', 'a1', 3);\ninsert into `sys_user` values (20, 'a2', 'a2', 3);\ninsert into `sys_user` values (21, 'a3', 'a3', 3);\ninsert into `sys_user` values (22, 'a4', 'a4', 3);\ninsert into `sys_user` values (23, 'a5', 'a5', 3);\ninsert into `sys_user` values (24, 'a6', 'a6', 3);\ninsert into `sys_user` values (25, 'a7', 'a7', 3);\ninsert into `sys_user` values (26, 'a8', 'a8', 3);\ninsert into `sys_user` values (27, 'a9', 'a9', 3);\ninsert into `sys_user` values (28, 'a10', 'a10', 3);\ninsert into `sys_user` values (29, 'a11', 'a11', 3);\ninsert into `sys_user` values (30, 'a12', 'a12', 3);\ninsert into `sys_user` values (31, 'a13', 'a13', 3);\ninsert into `sys_user` values (32, 'a14', 'a14', 3);\ninsert into `sys_user` values (33, 'a15', 'a15', 3);\ninsert into `sys_user` values (34, 'a16', 'a16', 3);\ninsert into `sys_user` values (35, 'a17', 'a17', 3);\ninsert into `sys_user` values (36, 'a18', 'a18', 3);\n\nset foreign_key_checks = 1;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n\n# 添加配置\n\n新建 application.yaml\n\nserver:  \n  port: 19527  \n#################### 数据库相关配置 ####################spring:  \n  # 数据源配置项  \n  autoconfigure:  \n    exclude:  \n      - com.alibaba.druid.spring.boot3.autoconfigure.druiddatasourceautoconfigure # 排除 druid 的自动配置，使用 dynamic-datasource-spring-boot-starter 配置多数据源  \n      - org.springframework.boot.autoconfigure.jdbc.datasourceautoconfiguration  \n  datasource:  \n    druid: # druid 【监控】相关的全局配置  \n      web-stat-filter:  \n        enabled: true  \n      stat-view-servlet:  \n        enabled: true # 启动durid sql监控（默认时关闭的，访问会404，开启后即可访问）  \n        allow: # 设置白名单，不填则允许所有访问  \n        url-pattern: /druid/*  \n        login-username: # 控制台管理用户名和密码  \n        login-password:  \n      filter:  \n        stat:  \n          enabled: true  \n          log-slow-sql: true # 慢 sql 记录  \n          slow-sql-millis: 100  \n          merge-sql: true  \n        wall:  \n          config:  \n            multi-statement-allow: true  \n    dynamic: # 多数据源配置  \n      druid: # druid 【连接池】相关的全局配置  \n        initial-size: 1 # 初始连接数  \n        min-idle: 1 # 最小连接池数量  \n        max-active: 20 # 最大连接池数量  \n        max-wait: 600000 # 配置获取连接等待超时的时间，单位：毫秒  \n        time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位：毫秒  \n        min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位：毫秒  \n        max-evictable-idle-time-millis: 900000 # 配置一个连接在池中最大生存的时间，单位：毫秒  \n        validation-query: select 1 from dual # 配置检测连接是否有效  \n        test-while-idle: true  \n        test-on-borrow: false  \n        test-on-return: false  \n      primary: master  \n      datasource:  \n        master:  \n          name: test  \n          driver-class-name: com.mysql.cj.jdbc.driver  \n          url: jdbc:mysql://127.0.0.1:3306/${spring.datasource.dynamic.datasource.master.name}?usessl=false&servertimezone=asia/shanghai&allowpublickeyretrieval=true&nullcatalogmeanscurrent=true # mysql connector/j 8.x 连接的示例  \n          username: root  \n          password: 123456  \n        slave: # 模拟从库，可根据自己需要修改  \n          name: test  \n          lazy: true # 开启懒加载，保证启动速度  \n          driver-class-name: com.mysql.cj.jdbc.driver  \n          url: jdbc:mysql://127.0.0.1:3306/${spring.datasource.dynamic.datasource.slave.name}?usessl=false&servertimezone=asia/shanghai&allowpublickeyretrieval=true&nullcatalogmeanscurrent=true # mysql connector/j 8.x 连接的示例  \n          username: root  \n          password: 123456  \n  \n# mybatis plus 的配置项  \nmybatis-plus:  \n  configuration:  \n    map-underscore-to-camel-case: true # 虽然默认为 true ，但是还是显示去指定下。  \n  global-config:  \n    db-config:  \n      id-type: none # “智能”模式，基于 idtypeenvironmentpostprocessor + 数据源的类型，自动适配成 auto、input 模式。  \n      #      id-type: auto # 自增 id，适合 mysql 等直接自增的数据库  \n      #      id-type: input # 用户输入 id，适合 oracle、postgresql、kingbase、db2、h2 数据库  \n      #      id-type: assign_id # 分配 id，默认使用雪花算法。注意，oracle、postgresql、kingbase、db2、h2 数据库时，需要去除实体类上的 @keysequence 注解  \n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)    banner: false # 关闭控制台的 banner 打印  \n  type-aliases-package: com.cc.*.model  \n  encryptor:  \n    password: az6zifjehckkqsnf # 加解密的秘钥，可使用 https://www.imaegoo.com/2020/aes-key-generator/ 网站生成  \n  \nmybatis-plus-join:  \n  banner: false # 关闭控制台的 banner 打印\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n\n\n注意\n\n404 报错 首先要确保 pom.xml 引用的是 druid-spring-boot-3-starter 和 dynamic-datasource-spring-boot3-starter 通过源码分析，druid-spring-boot-3-starter 目前最新版本是 1.2.20，虽然适配了 springboot 3，但缺少自动装配的配置文件 解决：resources 目录下创建 meta-inf/spring/org.springframework.boot.autoconfigure.autoconfiguration.imports 内容 com.alibaba.druid.spring.boot3.autoconfigure.druiddatasourceautoconfigure\n\n\n# 查看 sql 监控\n\n启动项目可查看 sql 监控 localhost:19527/druid\n\n\n# 去除底部广告\n\n\n\n正常监控页面会有广告，添加配置去除\n\n**  \n * druid 底部广告过滤器  \n * @author: icaiwei  \n * @date: 2024/3/19 0019  \n */\npublic class druidadremovefilter extends onceperrequestfilter {  \n  \n    /**  \n     * common.js 的路径  \n     */  \n    private static final string common_js_ile_path = \"support/http/resources/js/common.js\";  \n  \n    @override  \n    protected void dofilterinternal(httpservletrequest request, httpservletresponse response, filterchain chain)  \n            throws servletexception, ioexception {  \n        chain.dofilter(request, response);  \n        // 重置缓冲区，响应头不会被重置  \n        response.resetbuffer();  \n        // 获取 common.js        string text = utils.readfromresource(common_js_ile_path);  \n        // 正则替换 banner, 除去底部的广告信息  \n        text = text.replaceall(\"<a.*?banner\\\"></a><br/>\", \"\");  \n        text = text.replaceall(\"powered.*?shrek.wang</a>\", \"\");  \n        response.getwriter().write(text);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n/**  \n * @author: icaiwei  \n * @date: 2024/3/19 0019  \n */\n@configuration  \n@enabletransactionmanagement(proxytargetclass = true) // 启动事务管理  \n@enableconfigurationproperties(druidstatproperties.class)  \npublic class druidconfig {  \n    /**  \n     * 创建 druidadremovefilter 过滤器，过滤 common.js 的广告  \n     */  \n    @bean  \n    @conditionalonproperty(name = \"spring.datasource.druid.web-stat-filter.enabled\", havingvalue = \"true\")  \n    public filterregistrationbean<druidadremovefilter> druidadremovefilterfilter(druidstatproperties properties) {  \n        // 获取 druid web 监控页面的参数  \n        druidstatproperties.statviewservlet config = properties.getstatviewservlet();  \n        // 提取 common.js 的配置路径  \n        string pattern = config.geturlpattern() != null ? config.geturlpattern() : \"/druid/*\";  \n        string commonjspattern = pattern.replaceall(\"\\\\*\", \"js/common.js\");  \n        // 创建 druidadremovefilter bean        filterregistrationbean<druidadremovefilter> registrationbean = new filterregistrationbean<>();  \n        registrationbean.setfilter(new druidadremovefilter());  \n        registrationbean.addurlpatterns(commonjspattern);  \n        return registrationbean;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n\n\n# 测试\n\n\n# sysuser\n\n@data  \n@tablename(\"sys_user\")  \n@schema(description = \"用户\")  \npublic class sysuser {  \n    @schema(description = \"id\", example = \"1\")  \n    @tableid  \n    private integer id;  \n  \n    @schema(description = \"用户名\", requiredmode = schema.requiredmode.required, example = \"张三\")  \n    private string username;  \n  \n    @schema(description = \"密码\", requiredmode = schema.requiredmode.required, example = \"password\")  \n    private string password;  \n  \n    @schema(description = \"角色id\", example = \"1\")  \n    private integer roleid;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# sysusermapper\n\n@mapper  \npublic interface sysusermapper extends basemapper<sysuser> {  \n}\n\n\n1\n2\n3\n\n\n\n# sysuserservice\n\npublic interface sysuserservice {  \n    list<sysuser> getlist();  \n}\n\n\n1\n2\n3\n\n\n\n# sysuserserviceimpl\n\n@service  \npublic class sysuserserviceimpl implements sysuserservice{  \n    @resource  \n    private sysusermapper usermapper;  \n  \n    @override  \n    public list<sysuser> getlist() {  \n        return usermapper.selectlist(null);  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# sysusercontroller\n\n@restcontroller  \n@requestmapping(\"/sys/user\")  \npublic class sysusercontroller {  \n    @resource  \n    private sysuserservice userservice;  \n  \n    @getmapping(\"/list\")  \n    public list<sysuser> list(){  \n        return userservice.getlist();  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/03/20, 16:53:34",lastUpdatedTimestamp:1710924814e3},{title:"mybatis-plus多表关联查询",frontmatter:{title:"mybatis-plus多表关联查询",date:"2024-03-15T22:05:00.000Z",permalink:"/soft/springboot/use/join",private:!0,categories:["软件开发"],tags:["软件开发"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/01.Springboot%E4%BD%BF%E7%94%A8/08.mybatis-plus%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2.html",relativePath:"06.软件开发/01.Springboot使用/08.mybatis-plus多表关联查询.md",key:"v-0e33fd3b",path:"/soft/springboot/use/join/",headers:[{level:2,title:"添加依赖",slug:"添加依赖",normalizedTitle:"添加依赖",charIndex:2},{level:2,title:"添加代码",slug:"添加代码",normalizedTitle:"添加代码",charIndex:194},{level:3,title:"SysUser",slug:"sysuser",normalizedTitle:"sysuser",charIndex:203},{level:3,title:"SysRole",slug:"sysrole",normalizedTitle:"sysrole",charIndex:796},{level:3,title:"SysUserVO",slug:"sysuservo",normalizedTitle:"sysuservo",charIndex:1140},{level:3,title:"SysUserMapper",slug:"sysusermapper",normalizedTitle:"sysusermapper",charIndex:1282},{level:3,title:"SysUserService",slug:"sysuserservice",normalizedTitle:"sysuserservice",charIndex:1931},{level:3,title:"SysUserServiceImpl",slug:"sysuserserviceimpl",normalizedTitle:"sysuserserviceimpl",charIndex:2010},{level:3,title:"SysUserController",slug:"sysusercontroller",normalizedTitle:"sysusercontroller",charIndex:2177},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:2363}],headersStr:"添加依赖 添加代码 SysUser SysRole SysUserVO SysUserMapper SysUserService SysUserServiceImpl SysUserController 测试",content:'# 添加依赖\n\n<dependency>  \n    <groupId>com.github.yulichang</groupId>  \n    <artifactId>mybatis-plus-join-boot-starter</artifactId>  \n    <version>1.4.11</version>  \n</dependency>\n\n\n1\n2\n3\n4\n5\n\n\n\n# 添加代码\n\n\n# SysUser\n\n@Data  \n@TableName("sys_user")  \n@Schema(description = "用户")  \npublic class SysUser {  \n    @Schema(description = "ID", example = "1")  \n    @TableId  \n    private Integer id;  \n  \n    @Schema(description = "用户名", requiredMode = Schema.RequiredMode.REQUIRED, example = "张三")  \n    private String username;  \n  \n    @Schema(description = "密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "password")  \n    private String password;  \n  \n    @Schema(description = "角色ID", example = "1")  \n    private Integer roleId;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# SysRole\n\n@Data  \n@TableName("sys_role")  \n@Schema(description = "角色")  \npublic class SysRole {  \n    @Schema(description = "ID", example = "1")  \n    @TableId  \n    private Integer id;  \n    @Schema(description = "角色名", requiredMode = Schema.RequiredMode.REQUIRED, example = "张三")  \n    private String roleName;  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# SysUserVO\n\n@EqualsAndHashCode(callSuper = true)  \n@Data  \npublic class SysUserVO extends SysUser{  \n    String roleName;  \n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# SysUserMapper\n\n@Mapper  \npublic interface SysUserMapper extends MPJBaseMapper<SysUser> {  \n    // 查询用户及其角色名  \n    default List<SysUserVO> selectUserJoinToList(SysUserVO userVO){  \n        MPJLambdaWrapper<SysUser> wrapper = new MPJLambdaWrapper<SysUser>()  \n                .likeIfExists("username",userVO.getUsername())  \n                .select(SysUser::getId, SysUser::getUsername)  \n                .selectAs(SysRole::getRoleName, SysUserVO::getRoleName)  \n                .leftJoin(SysRole.class, SysRole::getId, SysUser::getRoleId);  \n        return selectJoinList(SysUserVO.class,wrapper);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# SysUserService\n\nList<SysUserVO> selectUserRoleList(SysUserVO userVO);\n\n\n1\n\n\n\n# SysUserServiceImpl\n\n@Override  \npublic List<SysUserVO> selectUserRoleList(SysUserVO userVO) {  \n    return userMapper.selectUserJoinToList(userVO);  \n}\n\n\n1\n2\n3\n4\n\n\n\n# SysUserController\n\n@GetMapping("/list-by-roleid")  \npublic List<SysUserVO> listByRoleId(@Valid SysUserVO userVO){  \n    return userService.selectUserRoleList(userVO);  \n}\n\n\n1\n2\n3\n4\n\n\n\n# 测试\n\n',normalizedContent:'# 添加依赖\n\n<dependency>  \n    <groupid>com.github.yulichang</groupid>  \n    <artifactid>mybatis-plus-join-boot-starter</artifactid>  \n    <version>1.4.11</version>  \n</dependency>\n\n\n1\n2\n3\n4\n5\n\n\n\n# 添加代码\n\n\n# sysuser\n\n@data  \n@tablename("sys_user")  \n@schema(description = "用户")  \npublic class sysuser {  \n    @schema(description = "id", example = "1")  \n    @tableid  \n    private integer id;  \n  \n    @schema(description = "用户名", requiredmode = schema.requiredmode.required, example = "张三")  \n    private string username;  \n  \n    @schema(description = "密码", requiredmode = schema.requiredmode.required, example = "password")  \n    private string password;  \n  \n    @schema(description = "角色id", example = "1")  \n    private integer roleid;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# sysrole\n\n@data  \n@tablename("sys_role")  \n@schema(description = "角色")  \npublic class sysrole {  \n    @schema(description = "id", example = "1")  \n    @tableid  \n    private integer id;  \n    @schema(description = "角色名", requiredmode = schema.requiredmode.required, example = "张三")  \n    private string rolename;  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# sysuservo\n\n@equalsandhashcode(callsuper = true)  \n@data  \npublic class sysuservo extends sysuser{  \n    string rolename;  \n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# sysusermapper\n\n@mapper  \npublic interface sysusermapper extends mpjbasemapper<sysuser> {  \n    // 查询用户及其角色名  \n    default list<sysuservo> selectuserjointolist(sysuservo uservo){  \n        mpjlambdawrapper<sysuser> wrapper = new mpjlambdawrapper<sysuser>()  \n                .likeifexists("username",uservo.getusername())  \n                .select(sysuser::getid, sysuser::getusername)  \n                .selectas(sysrole::getrolename, sysuservo::getrolename)  \n                .leftjoin(sysrole.class, sysrole::getid, sysuser::getroleid);  \n        return selectjoinlist(sysuservo.class,wrapper);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# sysuserservice\n\nlist<sysuservo> selectuserrolelist(sysuservo uservo);\n\n\n1\n\n\n\n# sysuserserviceimpl\n\n@override  \npublic list<sysuservo> selectuserrolelist(sysuservo uservo) {  \n    return usermapper.selectuserjointolist(uservo);  \n}\n\n\n1\n2\n3\n4\n\n\n\n# sysusercontroller\n\n@getmapping("/list-by-roleid")  \npublic list<sysuservo> listbyroleid(@valid sysuservo uservo){  \n    return userservice.selectuserrolelist(uservo);  \n}\n\n\n1\n2\n3\n4\n\n\n\n# 测试\n\n',charsets:{cjk:!0},lastUpdated:"2024/03/22, 14:54:39",lastUpdatedTimestamp:1711090479e3},{title:"分页查询",frontmatter:{title:"分页查询",date:"2024-03-15T22:05:00.000Z",permalink:"/soft/springboot/use/page",private:!0,categories:["软件开发"],tags:["软件开发"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/01.Springboot%E4%BD%BF%E7%94%A8/09.%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2.html",relativePath:"06.软件开发/01.Springboot使用/09.分页查询.md",key:"v-1bcb0090",path:"/soft/springboot/use/page/",headers:[{level:2,title:"工具类",slug:"工具类",normalizedTitle:"工具类",charIndex:2},{level:3,title:"连接池 druid",slug:"连接池-druid",normalizedTitle:"连接池 druid",charIndex:10},{level:4,title:"DruidAdRemoveFilter",slug:"druidadremovefilter",normalizedTitle:"druidadremovefilter",charIndex:23},{level:4,title:"DruidConfig",slug:"druidconfig",normalizedTitle:"druidconfig",charIndex:1013},{level:3,title:"全局异常 exception",slug:"全局异常-exception",normalizedTitle:"全局异常 exception",charIndex:2212},{level:4,title:"ErrorCode",slug:"errorcode",normalizedTitle:"errorcode",charIndex:2230},{level:4,title:"GlobalErrorCodeConstants",slug:"globalerrorcodeconstants",normalizedTitle:"globalerrorcodeconstants",charIndex:2592},{level:4,title:"ServiceErrorCodeRange",slug:"serviceerrorcoderange",normalizedTitle:"serviceerrorcoderange",charIndex:3749},{level:4,title:"ServiceException",slug:"serviceexception",normalizedTitle:"serviceexception",charIndex:3877},{level:3,title:"mybatis plus 扩展",slug:"mybatis-plus-扩展",normalizedTitle:"mybatis plus 扩展",charIndex:5112},{level:4,title:"BaseMapperX",slug:"basemapperx",normalizedTitle:"basemapperx",charIndex:5131},{level:4,title:"LambdaQueryWrapperX",slug:"lambdaquerywrapperx",normalizedTitle:"lambdaquerywrapperx",charIndex:12061},{level:4,title:"MybatisConfiguration",slug:"mybatisconfiguration",normalizedTitle:"mybatisconfiguration",charIndex:16585},{level:4,title:"MyBatisUtils",slug:"mybatisutils",normalizedTitle:"mybatisutils",charIndex:6204},{level:3,title:"分页 page",slug:"分页-page",normalizedTitle:"分页 page",charIndex:19452},{level:4,title:"PageParam",slug:"pageparam",normalizedTitle:"pageparam",charIndex:5444},{level:4,title:"PageResult",slug:"pageresult",normalizedTitle:"pageresult",charIndex:5411},{level:4,title:"SortablePageParam",slug:"sortablepageparam",normalizedTitle:"sortablepageparam",charIndex:5436},{level:4,title:"SortingField",slug:"sortingfield",normalizedTitle:"sortingfield",charIndex:5557},{level:3,title:"统一返回结果 CommonResult",slug:"统一返回结果-commonresult",normalizedTitle:"统一返回结果 commonresult",charIndex:22140},{level:4,title:"CommonResult",slug:"commonresult",normalizedTitle:"commonresult",charIndex:22147},{level:3,title:"工具",slug:"工具",normalizedTitle:"工具",charIndex:2},{level:4,title:"BeanUtils",slug:"beanutils",normalizedTitle:"beanutils",charIndex:25038},{level:4,title:"CollectionUtils",slug:"collectionutils",normalizedTitle:"collectionutils",charIndex:25639},{level:2,title:"模型与控制器",slug:"模型与控制器",normalizedTitle:"模型与控制器",charIndex:40578},{level:3,title:"SysUser",slug:"sysuser",normalizedTitle:"sysuser",charIndex:40589},{level:3,title:"SysUserVO",slug:"sysuservo",normalizedTitle:"sysuservo",charIndex:41182},{level:3,title:"SysUserMapper",slug:"sysusermapper",normalizedTitle:"sysusermapper",charIndex:41324},{level:3,title:"SysUserService",slug:"sysuserservice",normalizedTitle:"sysuserservice",charIndex:42301},{level:3,title:"SysUserServiceImpl",slug:"sysuserserviceimpl",normalizedTitle:"sysuserserviceimpl",charIndex:42494},{level:3,title:"SysUserController",slug:"sysusercontroller",normalizedTitle:"sysusercontroller",charIndex:42985},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:43755}],headersStr:"工具类 连接池 druid DruidAdRemoveFilter DruidConfig 全局异常 exception ErrorCode GlobalErrorCodeConstants ServiceErrorCodeRange ServiceException mybatis plus 扩展 BaseMapperX LambdaQueryWrapperX MybatisConfiguration MyBatisUtils 分页 page PageParam PageResult SortablePageParam SortingField 统一返回结果 CommonResult CommonResult 工具 BeanUtils CollectionUtils 模型与控制器 SysUser SysUserVO SysUserMapper SysUserService SysUserServiceImpl SysUserController 测试",content:'# 工具类\n\n\n# 连接池 druid\n\n# DruidAdRemoveFilter\n\n/**  \n * Druid 底部广告过滤器  \n * @Author: icaiwei  \n * @Date: 2024/3/19 0019  \n */\n public class DruidAdRemoveFilter extends OncePerRequestFilter {  \n  \n    /**  \n     * common.js 的路径  \n     */  \n    private static final String COMMON_JS_ILE_PATH = "support/http/resources/js/common.js";  \n  \n    @Override  \n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain)  \n            throws ServletException, IOException {  \n        chain.doFilter(request, response);  \n        // 重置缓冲区，响应头不会被重置  \n        response.resetBuffer();  \n        // 获取 common.js        String text = Utils.readFromResource(COMMON_JS_ILE_PATH);  \n        // 正则替换 banner, 除去底部的广告信息  \n        text = text.replaceAll("<a.*?banner\\"></a><br/>", "");  \n        text = text.replaceAll("powered.*?shrek.wang</a>", "");  \n        response.getWriter().write(text);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n# DruidConfig\n\n@Configuration  \n@EnableTransactionManagement(proxyTargetClass = true) // 启动事务管理  \n@EnableConfigurationProperties(DruidStatProperties.class)  \npublic class DruidConfig {  \n    /**  \n     * 创建 DruidAdRemoveFilter 过滤器，过滤 common.js 的广告  \n     */  \n    @Bean  \n    @ConditionalOnProperty(name = "spring.datasource.druid.web-stat-filter.enabled", havingValue = "true")  \n    public FilterRegistrationBean<DruidAdRemoveFilter> druidAdRemoveFilterFilter(DruidStatProperties properties) {  \n        // 获取 druid web 监控页面的参数  \n        DruidStatProperties.StatViewServlet config = properties.getStatViewServlet();  \n        // 提取 common.js 的配置路径  \n        String pattern = config.getUrlPattern() != null ? config.getUrlPattern() : "/druid/*";  \n        String commonJsPattern = pattern.replaceAll("\\\\*", "js/common.js");  \n        // 创建 DruidAdRemoveFilter Bean        FilterRegistrationBean<DruidAdRemoveFilter> registrationBean = new FilterRegistrationBean<>();  \n        registrationBean.setFilter(new DruidAdRemoveFilter());  \n        registrationBean.addUrlPatterns(commonJsPattern);  \n        return registrationBean;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 全局异常 exception\n\n# ErrorCode\n\n@Data  \npublic class ErrorCode {  \n  \n    /**  \n     * 错误码  \n     */  \n    private final Integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private final String msg;  \n  \n    public ErrorCode(Integer code, String message) {  \n        this.code = code;  \n        this.msg = message;  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# GlobalErrorCodeConstants\n\npublic interface GlobalErrorCodeConstants {  \n    ErrorCode SUCCESS = new ErrorCode(200, "成功");  \n  \n    // ========== 客户端错误段 ==========  \n    ErrorCode BAD_REQUEST = new ErrorCode(400, "请求参数不正确");  \n    ErrorCode UNAUTHORIZED = new ErrorCode(401, "账号未登录");  \n    ErrorCode FORBIDDEN = new ErrorCode(403, "没有该操作权限");  \n    ErrorCode NOT_FOUND = new ErrorCode(404, "请求未找到");  \n    ErrorCode METHOD_NOT_ALLOWED = new ErrorCode(405, "请求方法不正确");  \n    ErrorCode LOCKED = new ErrorCode(423, "请求失败，请稍后重试"); // 并发请求，不允许  \n    ErrorCode TOO_MANY_REQUESTS = new ErrorCode(429, "请求过于频繁，请稍后重试");  \n  \n    // ========== 服务端错误段 ==========  \n    ErrorCode INTERNAL_SERVER_ERROR = new ErrorCode(500, "系统异常");  \n    ErrorCode NOT_IMPLEMENTED = new ErrorCode(501, "功能未实现/未开启");  \n    ErrorCode ERROR_CONFIGURATION = new ErrorCode(502, "错误的配置项");  \n  \n    // ========== 自定义错误段 ==========    ErrorCode REPEATED_REQUESTS = new ErrorCode(900, "重复请求，请稍后重试"); // 重复请求  \n    ErrorCode DEMO_DENY = new ErrorCode(901, "演示模式，禁止写操作");  \n  \n    ErrorCode UNKNOWN = new ErrorCode(999, "未知错误");  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n# ServiceErrorCodeRange\n\npublic class ServiceErrorCodeRange {  \n    // 模块 system 错误码区间 [1-002-000-000 ~ 1-003-000-000)}\n\n\n1\n2\n\n\n# ServiceException\n\n@Data  \n@EqualsAndHashCode(callSuper = true)  \npublic final class ServiceException extends RuntimeException {  \n  \n    /**  \n     * 业务错误码  \n     *  \n     * @see ServiceErrorCodeRange  \n     */  \n    private Integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private String message;  \n  \n    /**  \n     * 空构造方法，避免反序列化问题  \n     */  \n    public ServiceException() {  \n    }  \n  \n    public ServiceException(ErrorCode errorCode) {  \n        this.code = errorCode.getCode();  \n        this.message = errorCode.getMsg();  \n    }  \n  \n    public ServiceException(Integer code, String message) {  \n        this.code = code;  \n        this.message = message;  \n    }  \n  \n    public Integer getCode() {  \n        return code;  \n    }  \n  \n    public ServiceException setCode(Integer code) {  \n        this.code = code;  \n        return this;  \n    }  \n  \n    @Override  \n    public String getMessage() {  \n        return message;  \n    }  \n  \n    public ServiceException setMessage(String message) {  \n        this.message = message;  \n        return this;  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n\n\n\n# mybatis plus 扩展\n\n# BaseMapperX\n\n/**  \n * 1. {@link BaseMapper} 为 MyBatis Plus 的基础接口，提供基础的 CRUD 能力  \n * 2. {@link MPJBaseMapper} 为 MyBatis Plus Join 的基础接口，提供连表 Join 能力  \n * @Author: icaiwei  \n * @Date: 2024/3/20 0020  \n */\n public interface BaseMapperX<T> extends MPJBaseMapper<T> {  \n  \n    default PageResult<T> selectPage(SortablePageParam pageParam, @Param("ew") Wrapper<T> queryWrapper) {  \n        return selectPage(pageParam, pageParam.getSortingFields(), queryWrapper);  \n    }  \n  \n    default PageResult<T> selectPage(PageParam pageParam, @Param("ew") Wrapper<T> queryWrapper) {  \n        return selectPage(pageParam, null, queryWrapper);  \n    }  \n  \n    default PageResult<T> selectPage(PageParam pageParam, Collection<SortingField> sortingFields, @Param("ew") Wrapper<T> queryWrapper) {  \n        // 特殊：不分页，直接查询全部  \n        if (PageParam.PAGE_SIZE_NONE.equals(pageParam.getPageSize())) {  \n            List<T> list = selectList(queryWrapper);  \n            return new PageResult<>(list, (long) list.size());  \n        }  \n  \n        // MyBatis Plus 查询  \n        IPage<T> mpPage = MyBatisUtils.buildPage(pageParam, sortingFields);  \n        selectPage(mpPage, queryWrapper);  \n        // 转换返回  \n        return new PageResult<>(mpPage.getRecords(), mpPage.getTotal());  \n    }  \n  \n    default <D> PageResult<D> selectJoinPage(PageParam pageParam, Class<D> clazz, MPJLambdaWrapper<T> lambdaWrapper) {  \n        // 特殊：不分页，直接查询全部  \n        if (PageParam.PAGE_SIZE_NONE.equals(pageParam.getPageNo())) {  \n            List<D> list = selectJoinList(clazz, lambdaWrapper);  \n            return new PageResult<>(list, (long) list.size());  \n        }  \n  \n        // MyBatis Plus Join 查询  \n        IPage<D> mpPage = MyBatisUtils.buildPage(pageParam);  \n        mpPage = selectJoinPage(mpPage, clazz, lambdaWrapper);  \n        // 转换返回  \n        return new PageResult<>(mpPage.getRecords(), mpPage.getTotal());  \n    }  \n  \n    default <DTO> PageResult<DTO> selectJoinPage(PageParam pageParam, Class<DTO> resultTypeClass, MPJBaseJoin<T> joinQueryWrapper) {  \n        IPage<DTO> mpPage = MyBatisUtils.buildPage(pageParam);  \n        selectJoinPage(mpPage, resultTypeClass, joinQueryWrapper);  \n        // 转换返回  \n        return new PageResult<>(mpPage.getRecords(), mpPage.getTotal());  \n    }  \n  \n    default T selectOne(String field, Object value) {  \n        return selectOne(new QueryWrapper<T>().eq(field, value));  \n    }  \n  \n    default T selectOne(SFunction<T, ?> field, Object value) {  \n        return selectOne(new LambdaQueryWrapper<T>().eq(field, value));  \n    }  \n  \n    default T selectOne(String field1, Object value1, String field2, Object value2) {  \n        return selectOne(new QueryWrapper<T>().eq(field1, value1).eq(field2, value2));  \n    }  \n  \n    default T selectOne(SFunction<T, ?> field1, Object value1, SFunction<T, ?> field2, Object value2) {  \n        return selectOne(new LambdaQueryWrapper<T>().eq(field1, value1).eq(field2, value2));  \n    }  \n  \n    default T selectOne(SFunction<T, ?> field1, Object value1, SFunction<T, ?> field2, Object value2,  \n                        SFunction<T, ?> field3, Object value3) {  \n        return selectOne(new LambdaQueryWrapper<T>().eq(field1, value1).eq(field2, value2)  \n                .eq(field3, value3));  \n    }  \n  \n    default Long selectCount() {  \n        return selectCount(new QueryWrapper<>());  \n    }  \n  \n    default Long selectCount(String field, Object value) {  \n        return selectCount(new QueryWrapper<T>().eq(field, value));  \n    }  \n  \n    default Long selectCount(SFunction<T, ?> field, Object value) {  \n        return selectCount(new LambdaQueryWrapper<T>().eq(field, value));  \n    }  \n  \n    default List<T> selectList() {  \n        return selectList(new QueryWrapper<>());  \n    }  \n  \n    default List<T> selectList(String field, Object value) {  \n        return selectList(new QueryWrapper<T>().eq(field, value));  \n    }  \n  \n    default List<T> selectList(SFunction<T, ?> field, Object value) {  \n        return selectList(new LambdaQueryWrapper<T>().eq(field, value));  \n    }  \n  \n    default List<T> selectList(String field, Collection<?> values) {  \n        if (CollUtil.isEmpty(values)) {  \n            return CollUtil.newArrayList();  \n        }  \n        return selectList(new QueryWrapper<T>().in(field, values));  \n    }  \n  \n    default List<T> selectList(SFunction<T, ?> field, Collection<?> values) {  \n        if (CollUtil.isEmpty(values)) {  \n            return CollUtil.newArrayList();  \n        }  \n        return selectList(new LambdaQueryWrapper<T>().in(field, values));  \n    }  \n  \n    @Deprecated  \n    default List<T> selectList(SFunction<T, ?> leField, SFunction<T, ?> geField, Object value) {  \n        return selectList(new LambdaQueryWrapper<T>().le(leField, value).ge(geField, value));  \n    }  \n  \n    default List<T> selectList(SFunction<T, ?> field1, Object value1, SFunction<T, ?> field2, Object value2) {  \n        return selectList(new LambdaQueryWrapper<T>().eq(field1, value1).eq(field2, value2));  \n    }  \n  \n    /**  \n     * 批量插入，适合大量数据插入  \n     *  \n     * @param entities 实体们  \n     */  \n    default Boolean insertBatch(Collection<T> entities) {  \n        return Db.saveBatch(entities);  \n    }  \n  \n    /**  \n     * 批量插入，适合大量数据插入  \n     *  \n     * @param entities 实体们  \n     * @param size     插入数量 Db.saveBatch 默认为 1000  \n     */    default Boolean insertBatch(Collection<T> entities, int size) {  \n        return Db.saveBatch(entities, size);  \n    }  \n  \n    default int updateBatch(T update) {  \n        return update(update, new QueryWrapper<>());  \n    }  \n  \n    default Boolean updateBatch(Collection<T> entities) {  \n        return Db.updateBatchById(entities);  \n    }  \n  \n    default Boolean updateBatch(Collection<T> entities, int size) {  \n        return Db.updateBatchById(entities, size);  \n    }  \n  \n    default Boolean insertOrUpdate(T entity) {  \n        return  Db.saveOrUpdate(entity);  \n    }  \n  \n    default Boolean insertOrUpdateBatch(Collection<T> collection) {  \n        return Db.saveOrUpdateBatch(collection);  \n    }  \n  \n    default int delete(String field, String value) {  \n        return delete(new QueryWrapper<T>().eq(field, value));  \n    }  \n  \n    default int delete(SFunction<T, ?> field, Object value) {  \n        return delete(new LambdaQueryWrapper<T>().eq(field, value));  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n\n\n# LambdaQueryWrapperX\n\n/**  \n * 拓展 MyBatis Plus QueryWrapper 类，主要增加如下功能：  \n * <p>  \n * 1. 拼接条件的方法，增加 xxxIfPresent 方法，用于判断值不存在的时候，不要拼接到条件中。  \n * @Author: icaiwei  \n * @Date: 2024/3/20 0020  \n */\n public class LambdaQueryWrapperX<T> extends LambdaQueryWrapper<T> {  \n  \n    public LambdaQueryWrapperX<T> likeIfPresent(SFunction<T, ?> column, String val) {  \n        if (StringUtils.hasText(val)) {  \n            return (LambdaQueryWrapperX<T>) super.like(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public LambdaQueryWrapperX<T> inIfPresent(SFunction<T, ?> column, Collection<?> values) {  \n        if (ObjectUtil.isAllNotEmpty(values) && !ArrayUtil.isEmpty(values)) {  \n            return (LambdaQueryWrapperX<T>) super.in(column, values);  \n        }  \n        return this;  \n    }  \n  \n    public LambdaQueryWrapperX<T> inIfPresent(SFunction<T, ?> column, Object... values) {  \n        if (ObjectUtil.isAllNotEmpty(values) && !ArrayUtil.isEmpty(values)) {  \n            return (LambdaQueryWrapperX<T>) super.in(column, values);  \n        }  \n        return this;  \n    }  \n  \n    public LambdaQueryWrapperX<T> eqIfPresent(SFunction<T, ?> column, Object val) {  \n        if (ObjectUtil.isNotEmpty(val)) {  \n            return (LambdaQueryWrapperX<T>) super.eq(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public LambdaQueryWrapperX<T> neIfPresent(SFunction<T, ?> column, Object val) {  \n        if (ObjectUtil.isNotEmpty(val)) {  \n            return (LambdaQueryWrapperX<T>) super.ne(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public LambdaQueryWrapperX<T> gtIfPresent(SFunction<T, ?> column, Object val) {  \n        if (val != null) {  \n            return (LambdaQueryWrapperX<T>) super.gt(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public LambdaQueryWrapperX<T> geIfPresent(SFunction<T, ?> column, Object val) {  \n        if (val != null) {  \n            return (LambdaQueryWrapperX<T>) super.ge(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public LambdaQueryWrapperX<T> ltIfPresent(SFunction<T, ?> column, Object val) {  \n        if (val != null) {  \n            return (LambdaQueryWrapperX<T>) super.lt(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public LambdaQueryWrapperX<T> leIfPresent(SFunction<T, ?> column, Object val) {  \n        if (val != null) {  \n            return (LambdaQueryWrapperX<T>) super.le(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public LambdaQueryWrapperX<T> betweenIfPresent(SFunction<T, ?> column, Object val1, Object val2) {  \n        if (val1 != null && val2 != null) {  \n            return (LambdaQueryWrapperX<T>) super.between(column, val1, val2);  \n        }  \n        if (val1 != null) {  \n            return (LambdaQueryWrapperX<T>) ge(column, val1);  \n        }  \n        if (val2 != null) {  \n            return (LambdaQueryWrapperX<T>) le(column, val2);  \n        }  \n        return this;  \n    }  \n  \n    public LambdaQueryWrapperX<T> betweenIfPresent(SFunction<T, ?> column, Object[] values) {  \n        Object val1 = ArrayUtils.get(values, 0);  \n        Object val2 = ArrayUtils.get(values, 1);  \n        return betweenIfPresent(column, val1, val2);  \n    }  \n  \n    // ========== 重写父类方法，方便链式调用 ==========  \n    @Override  \n    public LambdaQueryWrapperX<T> eq(boolean condition, SFunction<T, ?> column, Object val) {  \n        super.eq(condition, column, val);  \n        return this;  \n    }  \n  \n    @Override  \n    public LambdaQueryWrapperX<T> eq(SFunction<T, ?> column, Object val) {  \n        super.eq(column, val);  \n        return this;  \n    }  \n  \n    @Override  \n    public LambdaQueryWrapperX<T> orderByDesc(SFunction<T, ?> column) {  \n        super.orderByDesc(true, column);  \n        return this;  \n    }  \n  \n    @Override  \n    public LambdaQueryWrapperX<T> last(String lastSql) {  \n        super.last(lastSql);  \n        return this;  \n    }  \n  \n    @Override  \n    public LambdaQueryWrapperX<T> in(SFunction<T, ?> column, Collection<?> coll) {  \n        super.in(column, coll);  \n        return this;  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n\n\n# MybatisConfiguration\n\n@Configuration  \npublic class MybatisConfiguration {  \n    @Bean  \n    public MybatisPlusInterceptor mybatisPlusInterceptor() {  \n        MybatisPlusInterceptor mybatisPlusInterceptor = new MybatisPlusInterceptor();  \n        mybatisPlusInterceptor.addInnerInterceptor(new PaginationInnerInterceptor()); // 分页插件  \n        return mybatisPlusInterceptor;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# MyBatisUtils\n\npublic class MyBatisUtils {  \n  \n    private static final String MYSQL_ESCAPE_CHARACTER = "`";  \n  \n    public static <T> Page<T> buildPage(PageParam pageParam) {  \n        return buildPage(pageParam, null);  \n    }  \n  \n    public static <T> Page<T> buildPage(PageParam pageParam, Collection<SortingField> sortingFields) {  \n        // 页码 + 数量  \n        Page<T> page = new Page<>(pageParam.getPageNo(), pageParam.getPageSize());  \n        // 排序字段  \n        if (!CollectionUtil.isEmpty(sortingFields)) {  \n            page.addOrder(sortingFields.stream().map(sortingField -> SortingField.ORDER_ASC.equals(sortingField.getOrder()) ?  \n                            OrderItem.asc(sortingField.getField()) : OrderItem.desc(sortingField.getField()))  \n                    .collect(Collectors.toList()));  \n        }  \n        return page;  \n    }  \n  \n    /**  \n     * 将拦截器添加到链中  \n     * 由于 MybatisPlusInterceptor 不支持添加拦截器，所以只能全量设置  \n     *  \n     * @param interceptor 链  \n     * @param inner       拦截器  \n     * @param index       位置  \n     */  \n    public static void addInterceptor(MybatisPlusInterceptor interceptor, InnerInterceptor inner, int index) {  \n        List<InnerInterceptor> inners = new ArrayList<>(interceptor.getInterceptors());  \n        inners.add(index, inner);  \n        interceptor.setInterceptors(inners);  \n    }  \n  \n    /**  \n     * 获得 Table 对应的表名  \n     *  \n     * 兼容 MySQL 转义表名 `t_xxx`  \n     *     * @param table 表  \n     * @return 去除转移字符后的表名  \n     */  \n    public static String getTableName(Table table) {  \n        String tableName = table.getName();  \n        if (tableName.startsWith(MYSQL_ESCAPE_CHARACTER) && tableName.endsWith(MYSQL_ESCAPE_CHARACTER)) {  \n            tableName = tableName.substring(1, tableName.length() - 1);  \n        }  \n        return tableName;  \n    }  \n  \n    /**  \n     * 构建 Column 对象  \n     *  \n     * @param tableName  表名  \n     * @param tableAlias 别名  \n     * @param column     字段名  \n     * @return Column 对象  \n     */  \n    public static Column buildColumn(String tableName, Alias tableAlias, String column) {  \n        if (tableAlias != null) {  \n            tableName = tableAlias.getName();  \n        }  \n        return new Column(tableName + StringPool.DOT + column);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n\n# 分页 page\n\n# PageParam\n\n@Schema(description="分页参数")  \n@Data  \npublic class PageParam implements Serializable {  \n  \n    private static final Integer PAGE_NO = 1;  \n    private static final Integer PAGE_SIZE = 10;  \n  \n    /**  \n     * 每页条数 - 不分页  \n     *  \n     * 例如说，导出接口，可以设置 {@link #pageSize} 为 -1 不分页，查询所有数据。  \n     */  \n    public static final Integer PAGE_SIZE_NONE = -1;  \n  \n    @Schema(description = "页码，从 1 开始", requiredMode = Schema.RequiredMode.REQUIRED,example = "1")  \n    @NotNull(message = "页码不能为空")  \n    @Min(value = 1, message = "页码最小值为 1")  \n    private Integer pageNo = PAGE_NO;  \n  \n    @Schema(description = "每页条数，最大值为 100", requiredMode = Schema.RequiredMode.REQUIRED, example = "10")  \n    @NotNull(message = "每页条数不能为空")  \n    @Min(value = 1, message = "每页条数最小值为 1")  \n    @Max(value = 100, message = "每页条数最大值为 100")  \n    private Integer pageSize = PAGE_SIZE;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n# PageResult\n\n@Schema(description = "分页结果")  \n@Data  \npublic final class PageResult<T> implements Serializable {  \n  \n    @Schema(description = "数据", requiredMode = Schema.RequiredMode.REQUIRED)  \n    private List<T> list;  \n  \n    @Schema(description = "总量", requiredMode = Schema.RequiredMode.REQUIRED)  \n    private Long total;  \n  \n    public PageResult() {  \n    }  \n  \n    public PageResult(List<T> list, Long total) {  \n        this.list = list;  \n        this.total = total;  \n    }  \n  \n    public PageResult(Long total) {  \n        this.list = new ArrayList<>();  \n        this.total = total;  \n    }  \n  \n    public static <T> PageResult<T> empty() {  \n        return new PageResult<>(0L);  \n    }  \n  \n    public static <T> PageResult<T> empty(Long total) {  \n        return new PageResult<>(total);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n# SortablePageParam\n\n@Schema(description = "可排序的分页参数")  \n@Data  \n@EqualsAndHashCode(callSuper = true)  \n@ToString(callSuper = true)  \npublic class SortablePageParam extends PageParam {  \n  \n    @Schema(description = "排序字段")  \n    private List<SortingField> sortingFields;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# SortingField\n\n@Data  \n@NoArgsConstructor  \n@AllArgsConstructor  \npublic class SortingField implements Serializable {  \n  \n    /**  \n     * 顺序 - 升序  \n     */  \n    public static final String ORDER_ASC = "asc";  \n    /**  \n     * 顺序 - 降序  \n     */  \n    public static final String ORDER_DESC = "desc";  \n  \n    /**  \n     * 字段  \n     */  \n    private String field;  \n    /**  \n     * 顺序  \n     */  \n    private String order;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 统一返回结果 CommonResult\n\n# CommonResult\n\n@Data  \npublic class CommonResult<T> implements Serializable {  \n  \n    /**  \n     * 错误码  \n     *  \n     * @see ErrorCode#getCode()  \n     */    private Integer code;  \n    /**  \n     * 返回数据  \n     */  \n    private T data;  \n    /**  \n     * 错误提示，用户可阅读  \n     *  \n     * @see ErrorCode#getMsg() ()  \n     */    private String msg;  \n  \n    /**  \n     * 将传入的 result 对象，转换成另外一个泛型结果的对象  \n     *  \n     * 因为 A 方法返回的 CommonResult 对象，不满足调用其的 B 方法的返回，所以需要进行转换。  \n     *  \n     * @param result 传入的 result 对象  \n     * @param <T>    返回的泛型  \n     * @return 新的 CommonResult 对象  \n     */  \n    public static <T> CommonResult<T> error(CommonResult<?> result) {  \n        return error(result.getCode(), result.getMsg());  \n    }  \n  \n    public static <T> CommonResult<T> error(Integer code, String message) {  \n        Assert.isTrue(!GlobalErrorCodeConstants.SUCCESS.getCode().equals(code), "code 必须是错误的！");  \n        CommonResult<T> result = new CommonResult<>();  \n        result.code = code;  \n        result.msg = message;  \n        return result;  \n    }  \n  \n    public static <T> CommonResult<T> error(ErrorCode errorCode) {  \n        return error(errorCode.getCode(), errorCode.getMsg());  \n    }  \n  \n    public static <T> CommonResult<T> success(T data) {  \n        CommonResult<T> result = new CommonResult<>();  \n        result.code = GlobalErrorCodeConstants.SUCCESS.getCode();  \n        result.data = data;  \n        result.msg = "";  \n        return result;  \n    }  \n  \n    public static boolean isSuccess(Integer code) {  \n        return Objects.equals(code, GlobalErrorCodeConstants.SUCCESS.getCode());  \n    }  \n  \n    @JsonIgnore // 避免 jackson 序列化  \n    public boolean isSuccess() {  \n        return isSuccess(code);  \n    }  \n  \n    @JsonIgnore // 避免 jackson 序列化  \n    public boolean isError() {  \n        return !isSuccess();  \n    }  \n  \n    // ========= 和 Exception 异常体系集成 =========  \n    /**  \n     * 判断是否有异常。如果有，则抛出 {@link ServiceException} 异常  \n     */  \n    public void checkError() throws ServiceException {  \n        if (isSuccess()) {  \n            return;  \n        }  \n        // 业务异常  \n        throw new ServiceException(code, msg);  \n    }  \n  \n    /**  \n     * 判断是否有异常。如果有，则抛出 {@link ServiceException} 异常  \n     * 如果没有，则返回 {@link #data} 数据  \n     */  \n    @JsonIgnore // 避免 jackson 序列化  \n    public T getCheckedData() {  \n        checkError();  \n        return data;  \n    }  \n  \n    public static <T> CommonResult<T> error(ServiceException serviceException) {  \n        return error(serviceException.getCode(), serviceException.getMessage());  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n\n\n\n# 工具\n\n# BeanUtils\n\npublic class BeanUtils {  \n  \n    public static <T> T toBean(Object source, Class<T> targetClass) {  \n        return BeanUtil.toBean(source, targetClass);  \n    }  \n  \n    public static <T> T toBean(Object source, Class<T> targetClass, Consumer<T> peek) {  \n        T target = toBean(source, targetClass);  \n        if (target != null) {  \n            peek.accept(target);  \n        }  \n        return target;  \n    }  \n  \n    public static <S, T> List<T> toBean(List<S> source, Class<T> targetType) {  \n        if (source == null) {  \n            return null;  \n        }  \n        return CollectionUtils.convertList(source, s -> toBean(s, targetType));  \n    }  \n  \n    public static <S, T> List<T> toBean(List<S> source, Class<T> targetType, Consumer<T> peek) {  \n        List<T> list = toBean(source, targetType);  \n        if (list != null) {  \n            list.forEach(peek);  \n        }  \n        return list;  \n    }  \n  \n    public static <S, T> PageResult<T> toBean(PageResult<S> source, Class<T> targetType) {  \n        return toBean(source, targetType, null);  \n    }  \n  \n    public static <S, T> PageResult<T> toBean(PageResult<S> source, Class<T> targetType, Consumer<T> peek) {  \n        if (source == null) {  \n            return null;  \n        }  \n        List<T> list = toBean(source.getList(), targetType);  \n        if (peek != null) {  \n            list.forEach(peek);  \n        }  \n        return new PageResult<>(list, source.getTotal());  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n\n\n# CollectionUtils\n\npublic class CollectionUtils {  \n  \n    public static boolean containsAny(Object source, Object... targets) {  \n        return asList(targets).contains(source);  \n    }  \n  \n    public static boolean isAnyEmpty(Collection<?>... collections) {  \n        return Arrays.stream(collections).anyMatch(CollectionUtil::isEmpty);  \n    }  \n  \n    public static <T> boolean anyMatch(Collection<T> from, Predicate<T> predicate) {  \n        return from.stream().anyMatch(predicate);  \n    }  \n  \n    public static <T> List<T> filterList(Collection<T> from, Predicate<T> predicate) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new ArrayList<>();  \n        }  \n        return from.stream().filter(predicate).collect(Collectors.toList());  \n    }  \n  \n    public static <T, R> List<T> distinct(Collection<T> from, Function<T, R> keyMapper) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new ArrayList<>();  \n        }  \n        return distinct(from, keyMapper, (t1, t2) -> t1);  \n    }  \n  \n    public static <T, R> List<T> distinct(Collection<T> from, Function<T, R> keyMapper, BinaryOperator<T> cover) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new ArrayList<>();  \n        }  \n        return new ArrayList<>(convertMap(from, keyMapper, Function.identity(), cover).values());  \n    }  \n  \n    public static <T, U> List<U> convertList(T[] from, Function<T, U> func) {  \n        if (ArrayUtil.isEmpty(from)) {  \n            return new ArrayList<>();  \n        }  \n        return convertList(Arrays.asList(from), func);  \n    }  \n  \n    public static <T, U> List<U> convertList(Collection<T> from, Function<T, U> func) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new ArrayList<>();  \n        }  \n        return from.stream().map(func).filter(Objects::nonNull).collect(Collectors.toList());  \n    }  \n  \n    public static <T, U> List<U> convertList(Collection<T> from, Function<T, U> func, Predicate<T> filter) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new ArrayList<>();  \n        }  \n        return from.stream().filter(filter).map(func).filter(Objects::nonNull).collect(Collectors.toList());  \n    }  \n  \n    public static <T, U> List<U> convertListByFlatMap(Collection<T> from,  \n                                                      Function<T, ? extends Stream<? extends U>> func) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new ArrayList<>();  \n        }  \n        return from.stream().flatMap(func).filter(Objects::nonNull).collect(Collectors.toList());  \n    }  \n  \n    public static <T, U, R> List<R> convertListByFlatMap(Collection<T> from,  \n                                                         Function<? super T, ? extends U> mapper,  \n                                                         Function<U, ? extends Stream<? extends R>> func) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new ArrayList<>();  \n        }  \n        return from.stream().map(mapper).flatMap(func).filter(Objects::nonNull).collect(Collectors.toList());  \n    }  \n  \n    public static <K, V> List<V> mergeValuesFromMap(Map<K, List<V>> map) {  \n        return map.values()  \n                .stream()  \n                .flatMap(List::stream)  \n                .collect(Collectors.toList());  \n    }  \n  \n    public static <T, U> Set<U> convertSet(Collection<T> from, Function<T, U> func) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashSet<>();  \n        }  \n        return from.stream().map(func).filter(Objects::nonNull).collect(Collectors.toSet());  \n    }  \n  \n    public static <T, U> Set<U> convertSet(Collection<T> from, Function<T, U> func, Predicate<T> filter) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashSet<>();  \n        }  \n        return from.stream().filter(filter).map(func).filter(Objects::nonNull).collect(Collectors.toSet());  \n    }  \n  \n    public static <T, K> Map<K, T> convertMapByFilter(Collection<T> from, Predicate<T> filter, Function<T, K> keyFunc) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashMap<>();  \n        }  \n        return from.stream().filter(filter).collect(Collectors.toMap(keyFunc, v -> v));  \n    }  \n  \n    public static <T, U> Set<U> convertSetByFlatMap(Collection<T> from,  \n                                                    Function<T, ? extends Stream<? extends U>> func) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashSet<>();  \n        }  \n        return from.stream().flatMap(func).filter(Objects::nonNull).collect(Collectors.toSet());  \n    }  \n  \n    public static <T, U, R> Set<R> convertSetByFlatMap(Collection<T> from,  \n                                                       Function<? super T, ? extends U> mapper,  \n                                                       Function<U, ? extends Stream<? extends R>> func) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashSet<>();  \n        }  \n        return from.stream().map(mapper).flatMap(func).filter(Objects::nonNull).collect(Collectors.toSet());  \n    }  \n  \n    public static <T, K> Map<K, T> convertMap(Collection<T> from, Function<T, K> keyFunc) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashMap<>();  \n        }  \n        return convertMap(from, keyFunc, Function.identity());  \n    }  \n  \n    public static <T, K> Map<K, T> convertMap(Collection<T> from, Function<T, K> keyFunc, Supplier<? extends Map<K, T>> supplier) {  \n        if (CollUtil.isEmpty(from)) {  \n            return supplier.get();  \n        }  \n        return convertMap(from, keyFunc, Function.identity(), supplier);  \n    }  \n  \n    public static <T, K, V> Map<K, V> convertMap(Collection<T> from, Function<T, K> keyFunc, Function<T, V> valueFunc) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashMap<>();  \n        }  \n        return convertMap(from, keyFunc, valueFunc, (v1, v2) -> v1);  \n    }  \n  \n    public static <T, K, V> Map<K, V> convertMap(Collection<T> from, Function<T, K> keyFunc, Function<T, V> valueFunc, BinaryOperator<V> mergeFunction) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashMap<>();  \n        }  \n        return convertMap(from, keyFunc, valueFunc, mergeFunction, HashMap::new);  \n    }  \n  \n    public static <T, K, V> Map<K, V> convertMap(Collection<T> from, Function<T, K> keyFunc, Function<T, V> valueFunc, Supplier<? extends Map<K, V>> supplier) {  \n        if (CollUtil.isEmpty(from)) {  \n            return supplier.get();  \n        }  \n        return convertMap(from, keyFunc, valueFunc, (v1, v2) -> v1, supplier);  \n    }  \n  \n    public static <T, K, V> Map<K, V> convertMap(Collection<T> from, Function<T, K> keyFunc, Function<T, V> valueFunc, BinaryOperator<V> mergeFunction, Supplier<? extends Map<K, V>> supplier) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashMap<>();  \n        }  \n        return from.stream().collect(Collectors.toMap(keyFunc, valueFunc, mergeFunction, supplier));  \n    }  \n  \n    public static <T, K> Map<K, List<T>> convertMultiMap(Collection<T> from, Function<T, K> keyFunc) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashMap<>();  \n        }  \n        return from.stream().collect(Collectors.groupingBy(keyFunc, Collectors.mapping(t -> t, Collectors.toList())));  \n    }  \n  \n    public static <T, K, V> Map<K, List<V>> convertMultiMap(Collection<T> from, Function<T, K> keyFunc, Function<T, V> valueFunc) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashMap<>();  \n        }  \n        return from.stream()  \n                .collect(Collectors.groupingBy(keyFunc, Collectors.mapping(valueFunc, Collectors.toList())));  \n    }  \n  \n    // 暂时没想好名字，先以 2 结尾噶  \n    public static <T, K, V> Map<K, Set<V>> convertMultiMap2(Collection<T> from, Function<T, K> keyFunc, Function<T, V> valueFunc) {  \n        if (CollUtil.isEmpty(from)) {  \n            return new HashMap<>();  \n        }  \n        return from.stream().collect(Collectors.groupingBy(keyFunc, Collectors.mapping(valueFunc, Collectors.toSet())));  \n    }  \n  \n    public static <T, K> Map<K, T> convertImmutableMap(Collection<T> from, Function<T, K> keyFunc) {  \n        if (CollUtil.isEmpty(from)) {  \n            return Collections.emptyMap();  \n        }  \n        ImmutableMap.Builder<K, T> builder = ImmutableMap.builder();  \n        from.forEach(item -> builder.put(keyFunc.apply(item), item));  \n        return builder.build();  \n    }  \n  \n    /**  \n     * 对比老、新两个列表，找出新增、修改、删除的数据  \n     *  \n     * @param oldList  老列表  \n     * @param newList  新列表  \n     * @param sameFunc 对比函数，返回 true 表示相同，返回 false 表示不同  \n     *                 注意，same 是通过每个元素的“标识”，判断它们是不是同一个数据  \n     * @return [新增列表、修改列表、删除列表]  \n     */    public static <T> List<List<T>> diffList(Collection<T> oldList, Collection<T> newList,  \n                                             BiFunction<T, T, Boolean> sameFunc) {  \n        List<T> createList = new LinkedList<>(newList); // 默认都认为是新增的，后续会进行移除  \n        List<T> updateList = new ArrayList<>();  \n        List<T> deleteList = new ArrayList<>();  \n  \n        // 通过以 oldList 为主遍历，找出 updateList 和 deleteList        for (T oldObj : oldList) {  \n            // 1. 寻找是否有匹配的  \n            T foundObj = null;  \n            for (Iterator<T> iterator = createList.iterator(); iterator.hasNext(); ) {  \n                T newObj = iterator.next();  \n                // 1.1 不匹配，则直接跳过  \n                if (!sameFunc.apply(oldObj, newObj)) {  \n                    continue;  \n                }  \n                // 1.2 匹配，则移除，并结束寻找  \n                iterator.remove();  \n                foundObj = newObj;  \n                break;  \n            }  \n            // 2. 匹配添加到 updateList；不匹配则添加到 deleteList 中  \n            if (foundObj != null) {  \n                updateList.add(foundObj);  \n            } else {  \n                deleteList.add(oldObj);  \n            }  \n        }  \n        return asList(createList, updateList, deleteList);  \n    }  \n  \n    public static boolean containsAny(Collection<?> source, Collection<?> candidates) {  \n        return org.springframework.util.CollectionUtils.containsAny(source, candidates);  \n    }  \n  \n    public static <T> T getFirst(List<T> from) {  \n        return !CollectionUtil.isEmpty(from) ? from.get(0) : null;  \n    }  \n  \n    public static <T> T findFirst(Collection<T> from, Predicate<T> predicate) {  \n        return findFirst(from, predicate, Function.identity());  \n    }  \n  \n    public static <T, U> U findFirst(Collection<T> from, Predicate<T> predicate, Function<T, U> func) {  \n        if (CollUtil.isEmpty(from)) {  \n            return null;  \n        }  \n        return from.stream().filter(predicate).findFirst().map(func).orElse(null);  \n    }  \n  \n    public static <T, V extends Comparable<? super V>> V getMaxValue(Collection<T> from, Function<T, V> valueFunc) {  \n        if (CollUtil.isEmpty(from)) {  \n            return null;  \n        }  \n        assert !from.isEmpty(); // 断言，避免告警  \n        T t = from.stream().max(Comparator.comparing(valueFunc)).get();  \n        return valueFunc.apply(t);  \n    }  \n  \n    public static <T, V extends Comparable<? super V>> V getMinValue(List<T> from, Function<T, V> valueFunc) {  \n        if (CollUtil.isEmpty(from)) {  \n            return null;  \n        }  \n        assert from.size() > 0; // 断言，避免告警  \n        T t = from.stream().min(Comparator.comparing(valueFunc)).get();  \n        return valueFunc.apply(t);  \n    }  \n  \n    public static <T, V extends Comparable<? super V>> V getSumValue(List<T> from, Function<T, V> valueFunc,  \n                                                                     BinaryOperator<V> accumulator) {  \n        return getSumValue(from, valueFunc, accumulator, null);  \n    }  \n  \n    public static <T, V extends Comparable<? super V>> V getSumValue(Collection<T> from, Function<T, V> valueFunc,  \n                                                                     BinaryOperator<V> accumulator, V defaultValue) {  \n        if (CollUtil.isEmpty(from)) {  \n            return defaultValue;  \n        }  \n        assert !from.isEmpty(); // 断言，避免告警  \n        return from.stream().map(valueFunc).filter(Objects::nonNull).reduce(accumulator).orElse(defaultValue);  \n    }  \n  \n    public static <T> void addIfNotNull(Collection<T> coll, T item) {  \n        if (item == null) {  \n            return;  \n        }  \n        coll.add(item);  \n    }  \n  \n    public static <T> Collection<T> singleton(T obj) {  \n        return obj == null ? Collections.emptyList() : Collections.singleton(obj);  \n    }  \n  \n    public static <T> List<T> newArrayList(List<List<T>> list) {  \n        return list.stream().flatMap(Collection::stream).collect(Collectors.toList());  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n\n\n\n# 模型与控制器\n\n\n# SysUser\n\n@Data  \n@TableName("sys_user")  \n@Schema(description = "用户")  \npublic class SysUser {  \n    @Schema(description = "ID", example = "1")  \n    @TableId  \n    private Integer id;  \n  \n    @Schema(description = "用户名", requiredMode = Schema.RequiredMode.REQUIRED, example = "张三")  \n    private String username;  \n  \n    @Schema(description = "密码", requiredMode = Schema.RequiredMode.REQUIRED, example = "password")  \n    private String password;  \n  \n    @Schema(description = "角色ID", example = "1")  \n    private Integer roleId;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# SysUserVO\n\n@EqualsAndHashCode(callSuper = true)  \n@Data  \npublic class SysUserVO extends SysUser{  \n    String roleName;  \n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# SysUserMapper\n\n@Mapper  \npublic interface SysUserMapper extends BaseMapperX<SysUser> {  \n    // 分页查询用户  \n    default PageResult<SysUser> selectPage(SysUserPageReqVO reqVO){  \n        return selectPage(reqVO, new LambdaQueryWrapperX<SysUser>()  \n                .likeIfPresent(SysUser::getUsername, reqVO.getUsername())  \n                .orderByDesc(SysUser::getId));  \n    }  \n  \n    // 分页关联角色查询用户  \n    default PageResult<SysUserVO> selectJoinPage(SysUserPageReqVO reqVO){  \n        MPJLambdaWrapper<SysUser> wrapper = new MPJLambdaWrapper<SysUser>()  \n                .likeIfExists(SysUser::getUsername,reqVO.getUsername())  \n                .select(SysUser::getId, SysUser::getUsername)  \n                .selectAs(SysRole::getRoleName, SysUserVO::getRoleName)  \n                .leftJoin(SysRole.class, SysRole::getId, SysUser::getRoleId);  \n        return selectJoinPage(reqVO,SysUserVO.class, wrapper);  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# SysUserService\n\npublic interface SysUserService {  \n    PageResult<SysUser> getPage(SysUserPageReqVO reqVO);  \n    PageResult<SysUserVO> getJoinPage(SysUserPageReqVO reqVO);  \n}\n\n\n1\n2\n3\n4\n\n\n\n# SysUserServiceImpl\n\n@Service  \npublic class SysUserServiceImpl implements SysUserService{  \n    @Resource  \n    private SysUserMapper userMapper;  \n  \n  \n    @Override  \n    public PageResult<SysUser> getPage(SysUserPageReqVO reqVO) {  \n        return userMapper.selectPage(reqVO);  \n    }  \n  \n    @Override  \n    public PageResult<SysUserVO> getJoinPage(SysUserPageReqVO reqVO) {  \n        return userMapper.selectJoinPage(reqVO);  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# SysUserController\n\n@RestController  \n@RequestMapping("/sys/user")  \npublic class SysUserController {  \n    @Resource  \n    private SysUserService userService;  \n  \n    @GetMapping("/page")  \n    public CommonResult<PageResult<SysUser>> page(@Validated SysUserPageReqVO reqVO){  \n        PageResult<SysUser> pageResult = userService.getPage(reqVO);  \n        return success(BeanUtils.toBean(pageResult, SysUser.class));  \n    }  \n    @GetMapping("/page-join")  \n    public CommonResult<PageResult<SysUserVO>> pageJoin(@Validated SysUserPageReqVO reqVO){  \n        PageResult<SysUserVO> pageResult = userService.getJoinPage(reqVO);  \n        return success(BeanUtils.toBean(pageResult, SysUserVO.class));  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 测试\n\n',normalizedContent:'# 工具类\n\n\n# 连接池 druid\n\n# druidadremovefilter\n\n/**  \n * druid 底部广告过滤器  \n * @author: icaiwei  \n * @date: 2024/3/19 0019  \n */\n public class druidadremovefilter extends onceperrequestfilter {  \n  \n    /**  \n     * common.js 的路径  \n     */  \n    private static final string common_js_ile_path = "support/http/resources/js/common.js";  \n  \n    @override  \n    protected void dofilterinternal(httpservletrequest request, httpservletresponse response, filterchain chain)  \n            throws servletexception, ioexception {  \n        chain.dofilter(request, response);  \n        // 重置缓冲区，响应头不会被重置  \n        response.resetbuffer();  \n        // 获取 common.js        string text = utils.readfromresource(common_js_ile_path);  \n        // 正则替换 banner, 除去底部的广告信息  \n        text = text.replaceall("<a.*?banner\\"></a><br/>", "");  \n        text = text.replaceall("powered.*?shrek.wang</a>", "");  \n        response.getwriter().write(text);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n# druidconfig\n\n@configuration  \n@enabletransactionmanagement(proxytargetclass = true) // 启动事务管理  \n@enableconfigurationproperties(druidstatproperties.class)  \npublic class druidconfig {  \n    /**  \n     * 创建 druidadremovefilter 过滤器，过滤 common.js 的广告  \n     */  \n    @bean  \n    @conditionalonproperty(name = "spring.datasource.druid.web-stat-filter.enabled", havingvalue = "true")  \n    public filterregistrationbean<druidadremovefilter> druidadremovefilterfilter(druidstatproperties properties) {  \n        // 获取 druid web 监控页面的参数  \n        druidstatproperties.statviewservlet config = properties.getstatviewservlet();  \n        // 提取 common.js 的配置路径  \n        string pattern = config.geturlpattern() != null ? config.geturlpattern() : "/druid/*";  \n        string commonjspattern = pattern.replaceall("\\\\*", "js/common.js");  \n        // 创建 druidadremovefilter bean        filterregistrationbean<druidadremovefilter> registrationbean = new filterregistrationbean<>();  \n        registrationbean.setfilter(new druidadremovefilter());  \n        registrationbean.addurlpatterns(commonjspattern);  \n        return registrationbean;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 全局异常 exception\n\n# errorcode\n\n@data  \npublic class errorcode {  \n  \n    /**  \n     * 错误码  \n     */  \n    private final integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private final string msg;  \n  \n    public errorcode(integer code, string message) {  \n        this.code = code;  \n        this.msg = message;  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# globalerrorcodeconstants\n\npublic interface globalerrorcodeconstants {  \n    errorcode success = new errorcode(200, "成功");  \n  \n    // ========== 客户端错误段 ==========  \n    errorcode bad_request = new errorcode(400, "请求参数不正确");  \n    errorcode unauthorized = new errorcode(401, "账号未登录");  \n    errorcode forbidden = new errorcode(403, "没有该操作权限");  \n    errorcode not_found = new errorcode(404, "请求未找到");  \n    errorcode method_not_allowed = new errorcode(405, "请求方法不正确");  \n    errorcode locked = new errorcode(423, "请求失败，请稍后重试"); // 并发请求，不允许  \n    errorcode too_many_requests = new errorcode(429, "请求过于频繁，请稍后重试");  \n  \n    // ========== 服务端错误段 ==========  \n    errorcode internal_server_error = new errorcode(500, "系统异常");  \n    errorcode not_implemented = new errorcode(501, "功能未实现/未开启");  \n    errorcode error_configuration = new errorcode(502, "错误的配置项");  \n  \n    // ========== 自定义错误段 ==========    errorcode repeated_requests = new errorcode(900, "重复请求，请稍后重试"); // 重复请求  \n    errorcode demo_deny = new errorcode(901, "演示模式，禁止写操作");  \n  \n    errorcode unknown = new errorcode(999, "未知错误");  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n# serviceerrorcoderange\n\npublic class serviceerrorcoderange {  \n    // 模块 system 错误码区间 [1-002-000-000 ~ 1-003-000-000)}\n\n\n1\n2\n\n\n# serviceexception\n\n@data  \n@equalsandhashcode(callsuper = true)  \npublic final class serviceexception extends runtimeexception {  \n  \n    /**  \n     * 业务错误码  \n     *  \n     * @see serviceerrorcoderange  \n     */  \n    private integer code;  \n    /**  \n     * 错误提示  \n     */  \n    private string message;  \n  \n    /**  \n     * 空构造方法，避免反序列化问题  \n     */  \n    public serviceexception() {  \n    }  \n  \n    public serviceexception(errorcode errorcode) {  \n        this.code = errorcode.getcode();  \n        this.message = errorcode.getmsg();  \n    }  \n  \n    public serviceexception(integer code, string message) {  \n        this.code = code;  \n        this.message = message;  \n    }  \n  \n    public integer getcode() {  \n        return code;  \n    }  \n  \n    public serviceexception setcode(integer code) {  \n        this.code = code;  \n        return this;  \n    }  \n  \n    @override  \n    public string getmessage() {  \n        return message;  \n    }  \n  \n    public serviceexception setmessage(string message) {  \n        this.message = message;  \n        return this;  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n\n\n\n# mybatis plus 扩展\n\n# basemapperx\n\n/**  \n * 1. {@link basemapper} 为 mybatis plus 的基础接口，提供基础的 crud 能力  \n * 2. {@link mpjbasemapper} 为 mybatis plus join 的基础接口，提供连表 join 能力  \n * @author: icaiwei  \n * @date: 2024/3/20 0020  \n */\n public interface basemapperx<t> extends mpjbasemapper<t> {  \n  \n    default pageresult<t> selectpage(sortablepageparam pageparam, @param("ew") wrapper<t> querywrapper) {  \n        return selectpage(pageparam, pageparam.getsortingfields(), querywrapper);  \n    }  \n  \n    default pageresult<t> selectpage(pageparam pageparam, @param("ew") wrapper<t> querywrapper) {  \n        return selectpage(pageparam, null, querywrapper);  \n    }  \n  \n    default pageresult<t> selectpage(pageparam pageparam, collection<sortingfield> sortingfields, @param("ew") wrapper<t> querywrapper) {  \n        // 特殊：不分页，直接查询全部  \n        if (pageparam.page_size_none.equals(pageparam.getpagesize())) {  \n            list<t> list = selectlist(querywrapper);  \n            return new pageresult<>(list, (long) list.size());  \n        }  \n  \n        // mybatis plus 查询  \n        ipage<t> mppage = mybatisutils.buildpage(pageparam, sortingfields);  \n        selectpage(mppage, querywrapper);  \n        // 转换返回  \n        return new pageresult<>(mppage.getrecords(), mppage.gettotal());  \n    }  \n  \n    default <d> pageresult<d> selectjoinpage(pageparam pageparam, class<d> clazz, mpjlambdawrapper<t> lambdawrapper) {  \n        // 特殊：不分页，直接查询全部  \n        if (pageparam.page_size_none.equals(pageparam.getpageno())) {  \n            list<d> list = selectjoinlist(clazz, lambdawrapper);  \n            return new pageresult<>(list, (long) list.size());  \n        }  \n  \n        // mybatis plus join 查询  \n        ipage<d> mppage = mybatisutils.buildpage(pageparam);  \n        mppage = selectjoinpage(mppage, clazz, lambdawrapper);  \n        // 转换返回  \n        return new pageresult<>(mppage.getrecords(), mppage.gettotal());  \n    }  \n  \n    default <dto> pageresult<dto> selectjoinpage(pageparam pageparam, class<dto> resulttypeclass, mpjbasejoin<t> joinquerywrapper) {  \n        ipage<dto> mppage = mybatisutils.buildpage(pageparam);  \n        selectjoinpage(mppage, resulttypeclass, joinquerywrapper);  \n        // 转换返回  \n        return new pageresult<>(mppage.getrecords(), mppage.gettotal());  \n    }  \n  \n    default t selectone(string field, object value) {  \n        return selectone(new querywrapper<t>().eq(field, value));  \n    }  \n  \n    default t selectone(sfunction<t, ?> field, object value) {  \n        return selectone(new lambdaquerywrapper<t>().eq(field, value));  \n    }  \n  \n    default t selectone(string field1, object value1, string field2, object value2) {  \n        return selectone(new querywrapper<t>().eq(field1, value1).eq(field2, value2));  \n    }  \n  \n    default t selectone(sfunction<t, ?> field1, object value1, sfunction<t, ?> field2, object value2) {  \n        return selectone(new lambdaquerywrapper<t>().eq(field1, value1).eq(field2, value2));  \n    }  \n  \n    default t selectone(sfunction<t, ?> field1, object value1, sfunction<t, ?> field2, object value2,  \n                        sfunction<t, ?> field3, object value3) {  \n        return selectone(new lambdaquerywrapper<t>().eq(field1, value1).eq(field2, value2)  \n                .eq(field3, value3));  \n    }  \n  \n    default long selectcount() {  \n        return selectcount(new querywrapper<>());  \n    }  \n  \n    default long selectcount(string field, object value) {  \n        return selectcount(new querywrapper<t>().eq(field, value));  \n    }  \n  \n    default long selectcount(sfunction<t, ?> field, object value) {  \n        return selectcount(new lambdaquerywrapper<t>().eq(field, value));  \n    }  \n  \n    default list<t> selectlist() {  \n        return selectlist(new querywrapper<>());  \n    }  \n  \n    default list<t> selectlist(string field, object value) {  \n        return selectlist(new querywrapper<t>().eq(field, value));  \n    }  \n  \n    default list<t> selectlist(sfunction<t, ?> field, object value) {  \n        return selectlist(new lambdaquerywrapper<t>().eq(field, value));  \n    }  \n  \n    default list<t> selectlist(string field, collection<?> values) {  \n        if (collutil.isempty(values)) {  \n            return collutil.newarraylist();  \n        }  \n        return selectlist(new querywrapper<t>().in(field, values));  \n    }  \n  \n    default list<t> selectlist(sfunction<t, ?> field, collection<?> values) {  \n        if (collutil.isempty(values)) {  \n            return collutil.newarraylist();  \n        }  \n        return selectlist(new lambdaquerywrapper<t>().in(field, values));  \n    }  \n  \n    @deprecated  \n    default list<t> selectlist(sfunction<t, ?> lefield, sfunction<t, ?> gefield, object value) {  \n        return selectlist(new lambdaquerywrapper<t>().le(lefield, value).ge(gefield, value));  \n    }  \n  \n    default list<t> selectlist(sfunction<t, ?> field1, object value1, sfunction<t, ?> field2, object value2) {  \n        return selectlist(new lambdaquerywrapper<t>().eq(field1, value1).eq(field2, value2));  \n    }  \n  \n    /**  \n     * 批量插入，适合大量数据插入  \n     *  \n     * @param entities 实体们  \n     */  \n    default boolean insertbatch(collection<t> entities) {  \n        return db.savebatch(entities);  \n    }  \n  \n    /**  \n     * 批量插入，适合大量数据插入  \n     *  \n     * @param entities 实体们  \n     * @param size     插入数量 db.savebatch 默认为 1000  \n     */    default boolean insertbatch(collection<t> entities, int size) {  \n        return db.savebatch(entities, size);  \n    }  \n  \n    default int updatebatch(t update) {  \n        return update(update, new querywrapper<>());  \n    }  \n  \n    default boolean updatebatch(collection<t> entities) {  \n        return db.updatebatchbyid(entities);  \n    }  \n  \n    default boolean updatebatch(collection<t> entities, int size) {  \n        return db.updatebatchbyid(entities, size);  \n    }  \n  \n    default boolean insertorupdate(t entity) {  \n        return  db.saveorupdate(entity);  \n    }  \n  \n    default boolean insertorupdatebatch(collection<t> collection) {  \n        return db.saveorupdatebatch(collection);  \n    }  \n  \n    default int delete(string field, string value) {  \n        return delete(new querywrapper<t>().eq(field, value));  \n    }  \n  \n    default int delete(sfunction<t, ?> field, object value) {  \n        return delete(new lambdaquerywrapper<t>().eq(field, value));  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n\n\n# lambdaquerywrapperx\n\n/**  \n * 拓展 mybatis plus querywrapper 类，主要增加如下功能：  \n * <p>  \n * 1. 拼接条件的方法，增加 xxxifpresent 方法，用于判断值不存在的时候，不要拼接到条件中。  \n * @author: icaiwei  \n * @date: 2024/3/20 0020  \n */\n public class lambdaquerywrapperx<t> extends lambdaquerywrapper<t> {  \n  \n    public lambdaquerywrapperx<t> likeifpresent(sfunction<t, ?> column, string val) {  \n        if (stringutils.hastext(val)) {  \n            return (lambdaquerywrapperx<t>) super.like(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public lambdaquerywrapperx<t> inifpresent(sfunction<t, ?> column, collection<?> values) {  \n        if (objectutil.isallnotempty(values) && !arrayutil.isempty(values)) {  \n            return (lambdaquerywrapperx<t>) super.in(column, values);  \n        }  \n        return this;  \n    }  \n  \n    public lambdaquerywrapperx<t> inifpresent(sfunction<t, ?> column, object... values) {  \n        if (objectutil.isallnotempty(values) && !arrayutil.isempty(values)) {  \n            return (lambdaquerywrapperx<t>) super.in(column, values);  \n        }  \n        return this;  \n    }  \n  \n    public lambdaquerywrapperx<t> eqifpresent(sfunction<t, ?> column, object val) {  \n        if (objectutil.isnotempty(val)) {  \n            return (lambdaquerywrapperx<t>) super.eq(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public lambdaquerywrapperx<t> neifpresent(sfunction<t, ?> column, object val) {  \n        if (objectutil.isnotempty(val)) {  \n            return (lambdaquerywrapperx<t>) super.ne(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public lambdaquerywrapperx<t> gtifpresent(sfunction<t, ?> column, object val) {  \n        if (val != null) {  \n            return (lambdaquerywrapperx<t>) super.gt(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public lambdaquerywrapperx<t> geifpresent(sfunction<t, ?> column, object val) {  \n        if (val != null) {  \n            return (lambdaquerywrapperx<t>) super.ge(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public lambdaquerywrapperx<t> ltifpresent(sfunction<t, ?> column, object val) {  \n        if (val != null) {  \n            return (lambdaquerywrapperx<t>) super.lt(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public lambdaquerywrapperx<t> leifpresent(sfunction<t, ?> column, object val) {  \n        if (val != null) {  \n            return (lambdaquerywrapperx<t>) super.le(column, val);  \n        }  \n        return this;  \n    }  \n  \n    public lambdaquerywrapperx<t> betweenifpresent(sfunction<t, ?> column, object val1, object val2) {  \n        if (val1 != null && val2 != null) {  \n            return (lambdaquerywrapperx<t>) super.between(column, val1, val2);  \n        }  \n        if (val1 != null) {  \n            return (lambdaquerywrapperx<t>) ge(column, val1);  \n        }  \n        if (val2 != null) {  \n            return (lambdaquerywrapperx<t>) le(column, val2);  \n        }  \n        return this;  \n    }  \n  \n    public lambdaquerywrapperx<t> betweenifpresent(sfunction<t, ?> column, object[] values) {  \n        object val1 = arrayutils.get(values, 0);  \n        object val2 = arrayutils.get(values, 1);  \n        return betweenifpresent(column, val1, val2);  \n    }  \n  \n    // ========== 重写父类方法，方便链式调用 ==========  \n    @override  \n    public lambdaquerywrapperx<t> eq(boolean condition, sfunction<t, ?> column, object val) {  \n        super.eq(condition, column, val);  \n        return this;  \n    }  \n  \n    @override  \n    public lambdaquerywrapperx<t> eq(sfunction<t, ?> column, object val) {  \n        super.eq(column, val);  \n        return this;  \n    }  \n  \n    @override  \n    public lambdaquerywrapperx<t> orderbydesc(sfunction<t, ?> column) {  \n        super.orderbydesc(true, column);  \n        return this;  \n    }  \n  \n    @override  \n    public lambdaquerywrapperx<t> last(string lastsql) {  \n        super.last(lastsql);  \n        return this;  \n    }  \n  \n    @override  \n    public lambdaquerywrapperx<t> in(sfunction<t, ?> column, collection<?> coll) {  \n        super.in(column, coll);  \n        return this;  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n\n\n# mybatisconfiguration\n\n@configuration  \npublic class mybatisconfiguration {  \n    @bean  \n    public mybatisplusinterceptor mybatisplusinterceptor() {  \n        mybatisplusinterceptor mybatisplusinterceptor = new mybatisplusinterceptor();  \n        mybatisplusinterceptor.addinnerinterceptor(new paginationinnerinterceptor()); // 分页插件  \n        return mybatisplusinterceptor;  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# mybatisutils\n\npublic class mybatisutils {  \n  \n    private static final string mysql_escape_character = "`";  \n  \n    public static <t> page<t> buildpage(pageparam pageparam) {  \n        return buildpage(pageparam, null);  \n    }  \n  \n    public static <t> page<t> buildpage(pageparam pageparam, collection<sortingfield> sortingfields) {  \n        // 页码 + 数量  \n        page<t> page = new page<>(pageparam.getpageno(), pageparam.getpagesize());  \n        // 排序字段  \n        if (!collectionutil.isempty(sortingfields)) {  \n            page.addorder(sortingfields.stream().map(sortingfield -> sortingfield.order_asc.equals(sortingfield.getorder()) ?  \n                            orderitem.asc(sortingfield.getfield()) : orderitem.desc(sortingfield.getfield()))  \n                    .collect(collectors.tolist()));  \n        }  \n        return page;  \n    }  \n  \n    /**  \n     * 将拦截器添加到链中  \n     * 由于 mybatisplusinterceptor 不支持添加拦截器，所以只能全量设置  \n     *  \n     * @param interceptor 链  \n     * @param inner       拦截器  \n     * @param index       位置  \n     */  \n    public static void addinterceptor(mybatisplusinterceptor interceptor, innerinterceptor inner, int index) {  \n        list<innerinterceptor> inners = new arraylist<>(interceptor.getinterceptors());  \n        inners.add(index, inner);  \n        interceptor.setinterceptors(inners);  \n    }  \n  \n    /**  \n     * 获得 table 对应的表名  \n     *  \n     * 兼容 mysql 转义表名 `t_xxx`  \n     *     * @param table 表  \n     * @return 去除转移字符后的表名  \n     */  \n    public static string gettablename(table table) {  \n        string tablename = table.getname();  \n        if (tablename.startswith(mysql_escape_character) && tablename.endswith(mysql_escape_character)) {  \n            tablename = tablename.substring(1, tablename.length() - 1);  \n        }  \n        return tablename;  \n    }  \n  \n    /**  \n     * 构建 column 对象  \n     *  \n     * @param tablename  表名  \n     * @param tablealias 别名  \n     * @param column     字段名  \n     * @return column 对象  \n     */  \n    public static column buildcolumn(string tablename, alias tablealias, string column) {  \n        if (tablealias != null) {  \n            tablename = tablealias.getname();  \n        }  \n        return new column(tablename + stringpool.dot + column);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n\n# 分页 page\n\n# pageparam\n\n@schema(description="分页参数")  \n@data  \npublic class pageparam implements serializable {  \n  \n    private static final integer page_no = 1;  \n    private static final integer page_size = 10;  \n  \n    /**  \n     * 每页条数 - 不分页  \n     *  \n     * 例如说，导出接口，可以设置 {@link #pagesize} 为 -1 不分页，查询所有数据。  \n     */  \n    public static final integer page_size_none = -1;  \n  \n    @schema(description = "页码，从 1 开始", requiredmode = schema.requiredmode.required,example = "1")  \n    @notnull(message = "页码不能为空")  \n    @min(value = 1, message = "页码最小值为 1")  \n    private integer pageno = page_no;  \n  \n    @schema(description = "每页条数，最大值为 100", requiredmode = schema.requiredmode.required, example = "10")  \n    @notnull(message = "每页条数不能为空")  \n    @min(value = 1, message = "每页条数最小值为 1")  \n    @max(value = 100, message = "每页条数最大值为 100")  \n    private integer pagesize = page_size;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n# pageresult\n\n@schema(description = "分页结果")  \n@data  \npublic final class pageresult<t> implements serializable {  \n  \n    @schema(description = "数据", requiredmode = schema.requiredmode.required)  \n    private list<t> list;  \n  \n    @schema(description = "总量", requiredmode = schema.requiredmode.required)  \n    private long total;  \n  \n    public pageresult() {  \n    }  \n  \n    public pageresult(list<t> list, long total) {  \n        this.list = list;  \n        this.total = total;  \n    }  \n  \n    public pageresult(long total) {  \n        this.list = new arraylist<>();  \n        this.total = total;  \n    }  \n  \n    public static <t> pageresult<t> empty() {  \n        return new pageresult<>(0l);  \n    }  \n  \n    public static <t> pageresult<t> empty(long total) {  \n        return new pageresult<>(total);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n# sortablepageparam\n\n@schema(description = "可排序的分页参数")  \n@data  \n@equalsandhashcode(callsuper = true)  \n@tostring(callsuper = true)  \npublic class sortablepageparam extends pageparam {  \n  \n    @schema(description = "排序字段")  \n    private list<sortingfield> sortingfields;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# sortingfield\n\n@data  \n@noargsconstructor  \n@allargsconstructor  \npublic class sortingfield implements serializable {  \n  \n    /**  \n     * 顺序 - 升序  \n     */  \n    public static final string order_asc = "asc";  \n    /**  \n     * 顺序 - 降序  \n     */  \n    public static final string order_desc = "desc";  \n  \n    /**  \n     * 字段  \n     */  \n    private string field;  \n    /**  \n     * 顺序  \n     */  \n    private string order;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 统一返回结果 commonresult\n\n# commonresult\n\n@data  \npublic class commonresult<t> implements serializable {  \n  \n    /**  \n     * 错误码  \n     *  \n     * @see errorcode#getcode()  \n     */    private integer code;  \n    /**  \n     * 返回数据  \n     */  \n    private t data;  \n    /**  \n     * 错误提示，用户可阅读  \n     *  \n     * @see errorcode#getmsg() ()  \n     */    private string msg;  \n  \n    /**  \n     * 将传入的 result 对象，转换成另外一个泛型结果的对象  \n     *  \n     * 因为 a 方法返回的 commonresult 对象，不满足调用其的 b 方法的返回，所以需要进行转换。  \n     *  \n     * @param result 传入的 result 对象  \n     * @param <t>    返回的泛型  \n     * @return 新的 commonresult 对象  \n     */  \n    public static <t> commonresult<t> error(commonresult<?> result) {  \n        return error(result.getcode(), result.getmsg());  \n    }  \n  \n    public static <t> commonresult<t> error(integer code, string message) {  \n        assert.istrue(!globalerrorcodeconstants.success.getcode().equals(code), "code 必须是错误的！");  \n        commonresult<t> result = new commonresult<>();  \n        result.code = code;  \n        result.msg = message;  \n        return result;  \n    }  \n  \n    public static <t> commonresult<t> error(errorcode errorcode) {  \n        return error(errorcode.getcode(), errorcode.getmsg());  \n    }  \n  \n    public static <t> commonresult<t> success(t data) {  \n        commonresult<t> result = new commonresult<>();  \n        result.code = globalerrorcodeconstants.success.getcode();  \n        result.data = data;  \n        result.msg = "";  \n        return result;  \n    }  \n  \n    public static boolean issuccess(integer code) {  \n        return objects.equals(code, globalerrorcodeconstants.success.getcode());  \n    }  \n  \n    @jsonignore // 避免 jackson 序列化  \n    public boolean issuccess() {  \n        return issuccess(code);  \n    }  \n  \n    @jsonignore // 避免 jackson 序列化  \n    public boolean iserror() {  \n        return !issuccess();  \n    }  \n  \n    // ========= 和 exception 异常体系集成 =========  \n    /**  \n     * 判断是否有异常。如果有，则抛出 {@link serviceexception} 异常  \n     */  \n    public void checkerror() throws serviceexception {  \n        if (issuccess()) {  \n            return;  \n        }  \n        // 业务异常  \n        throw new serviceexception(code, msg);  \n    }  \n  \n    /**  \n     * 判断是否有异常。如果有，则抛出 {@link serviceexception} 异常  \n     * 如果没有，则返回 {@link #data} 数据  \n     */  \n    @jsonignore // 避免 jackson 序列化  \n    public t getcheckeddata() {  \n        checkerror();  \n        return data;  \n    }  \n  \n    public static <t> commonresult<t> error(serviceexception serviceexception) {  \n        return error(serviceexception.getcode(), serviceexception.getmessage());  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n\n\n\n# 工具\n\n# beanutils\n\npublic class beanutils {  \n  \n    public static <t> t tobean(object source, class<t> targetclass) {  \n        return beanutil.tobean(source, targetclass);  \n    }  \n  \n    public static <t> t tobean(object source, class<t> targetclass, consumer<t> peek) {  \n        t target = tobean(source, targetclass);  \n        if (target != null) {  \n            peek.accept(target);  \n        }  \n        return target;  \n    }  \n  \n    public static <s, t> list<t> tobean(list<s> source, class<t> targettype) {  \n        if (source == null) {  \n            return null;  \n        }  \n        return collectionutils.convertlist(source, s -> tobean(s, targettype));  \n    }  \n  \n    public static <s, t> list<t> tobean(list<s> source, class<t> targettype, consumer<t> peek) {  \n        list<t> list = tobean(source, targettype);  \n        if (list != null) {  \n            list.foreach(peek);  \n        }  \n        return list;  \n    }  \n  \n    public static <s, t> pageresult<t> tobean(pageresult<s> source, class<t> targettype) {  \n        return tobean(source, targettype, null);  \n    }  \n  \n    public static <s, t> pageresult<t> tobean(pageresult<s> source, class<t> targettype, consumer<t> peek) {  \n        if (source == null) {  \n            return null;  \n        }  \n        list<t> list = tobean(source.getlist(), targettype);  \n        if (peek != null) {  \n            list.foreach(peek);  \n        }  \n        return new pageresult<>(list, source.gettotal());  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n\n\n# collectionutils\n\npublic class collectionutils {  \n  \n    public static boolean containsany(object source, object... targets) {  \n        return aslist(targets).contains(source);  \n    }  \n  \n    public static boolean isanyempty(collection<?>... collections) {  \n        return arrays.stream(collections).anymatch(collectionutil::isempty);  \n    }  \n  \n    public static <t> boolean anymatch(collection<t> from, predicate<t> predicate) {  \n        return from.stream().anymatch(predicate);  \n    }  \n  \n    public static <t> list<t> filterlist(collection<t> from, predicate<t> predicate) {  \n        if (collutil.isempty(from)) {  \n            return new arraylist<>();  \n        }  \n        return from.stream().filter(predicate).collect(collectors.tolist());  \n    }  \n  \n    public static <t, r> list<t> distinct(collection<t> from, function<t, r> keymapper) {  \n        if (collutil.isempty(from)) {  \n            return new arraylist<>();  \n        }  \n        return distinct(from, keymapper, (t1, t2) -> t1);  \n    }  \n  \n    public static <t, r> list<t> distinct(collection<t> from, function<t, r> keymapper, binaryoperator<t> cover) {  \n        if (collutil.isempty(from)) {  \n            return new arraylist<>();  \n        }  \n        return new arraylist<>(convertmap(from, keymapper, function.identity(), cover).values());  \n    }  \n  \n    public static <t, u> list<u> convertlist(t[] from, function<t, u> func) {  \n        if (arrayutil.isempty(from)) {  \n            return new arraylist<>();  \n        }  \n        return convertlist(arrays.aslist(from), func);  \n    }  \n  \n    public static <t, u> list<u> convertlist(collection<t> from, function<t, u> func) {  \n        if (collutil.isempty(from)) {  \n            return new arraylist<>();  \n        }  \n        return from.stream().map(func).filter(objects::nonnull).collect(collectors.tolist());  \n    }  \n  \n    public static <t, u> list<u> convertlist(collection<t> from, function<t, u> func, predicate<t> filter) {  \n        if (collutil.isempty(from)) {  \n            return new arraylist<>();  \n        }  \n        return from.stream().filter(filter).map(func).filter(objects::nonnull).collect(collectors.tolist());  \n    }  \n  \n    public static <t, u> list<u> convertlistbyflatmap(collection<t> from,  \n                                                      function<t, ? extends stream<? extends u>> func) {  \n        if (collutil.isempty(from)) {  \n            return new arraylist<>();  \n        }  \n        return from.stream().flatmap(func).filter(objects::nonnull).collect(collectors.tolist());  \n    }  \n  \n    public static <t, u, r> list<r> convertlistbyflatmap(collection<t> from,  \n                                                         function<? super t, ? extends u> mapper,  \n                                                         function<u, ? extends stream<? extends r>> func) {  \n        if (collutil.isempty(from)) {  \n            return new arraylist<>();  \n        }  \n        return from.stream().map(mapper).flatmap(func).filter(objects::nonnull).collect(collectors.tolist());  \n    }  \n  \n    public static <k, v> list<v> mergevaluesfrommap(map<k, list<v>> map) {  \n        return map.values()  \n                .stream()  \n                .flatmap(list::stream)  \n                .collect(collectors.tolist());  \n    }  \n  \n    public static <t, u> set<u> convertset(collection<t> from, function<t, u> func) {  \n        if (collutil.isempty(from)) {  \n            return new hashset<>();  \n        }  \n        return from.stream().map(func).filter(objects::nonnull).collect(collectors.toset());  \n    }  \n  \n    public static <t, u> set<u> convertset(collection<t> from, function<t, u> func, predicate<t> filter) {  \n        if (collutil.isempty(from)) {  \n            return new hashset<>();  \n        }  \n        return from.stream().filter(filter).map(func).filter(objects::nonnull).collect(collectors.toset());  \n    }  \n  \n    public static <t, k> map<k, t> convertmapbyfilter(collection<t> from, predicate<t> filter, function<t, k> keyfunc) {  \n        if (collutil.isempty(from)) {  \n            return new hashmap<>();  \n        }  \n        return from.stream().filter(filter).collect(collectors.tomap(keyfunc, v -> v));  \n    }  \n  \n    public static <t, u> set<u> convertsetbyflatmap(collection<t> from,  \n                                                    function<t, ? extends stream<? extends u>> func) {  \n        if (collutil.isempty(from)) {  \n            return new hashset<>();  \n        }  \n        return from.stream().flatmap(func).filter(objects::nonnull).collect(collectors.toset());  \n    }  \n  \n    public static <t, u, r> set<r> convertsetbyflatmap(collection<t> from,  \n                                                       function<? super t, ? extends u> mapper,  \n                                                       function<u, ? extends stream<? extends r>> func) {  \n        if (collutil.isempty(from)) {  \n            return new hashset<>();  \n        }  \n        return from.stream().map(mapper).flatmap(func).filter(objects::nonnull).collect(collectors.toset());  \n    }  \n  \n    public static <t, k> map<k, t> convertmap(collection<t> from, function<t, k> keyfunc) {  \n        if (collutil.isempty(from)) {  \n            return new hashmap<>();  \n        }  \n        return convertmap(from, keyfunc, function.identity());  \n    }  \n  \n    public static <t, k> map<k, t> convertmap(collection<t> from, function<t, k> keyfunc, supplier<? extends map<k, t>> supplier) {  \n        if (collutil.isempty(from)) {  \n            return supplier.get();  \n        }  \n        return convertmap(from, keyfunc, function.identity(), supplier);  \n    }  \n  \n    public static <t, k, v> map<k, v> convertmap(collection<t> from, function<t, k> keyfunc, function<t, v> valuefunc) {  \n        if (collutil.isempty(from)) {  \n            return new hashmap<>();  \n        }  \n        return convertmap(from, keyfunc, valuefunc, (v1, v2) -> v1);  \n    }  \n  \n    public static <t, k, v> map<k, v> convertmap(collection<t> from, function<t, k> keyfunc, function<t, v> valuefunc, binaryoperator<v> mergefunction) {  \n        if (collutil.isempty(from)) {  \n            return new hashmap<>();  \n        }  \n        return convertmap(from, keyfunc, valuefunc, mergefunction, hashmap::new);  \n    }  \n  \n    public static <t, k, v> map<k, v> convertmap(collection<t> from, function<t, k> keyfunc, function<t, v> valuefunc, supplier<? extends map<k, v>> supplier) {  \n        if (collutil.isempty(from)) {  \n            return supplier.get();  \n        }  \n        return convertmap(from, keyfunc, valuefunc, (v1, v2) -> v1, supplier);  \n    }  \n  \n    public static <t, k, v> map<k, v> convertmap(collection<t> from, function<t, k> keyfunc, function<t, v> valuefunc, binaryoperator<v> mergefunction, supplier<? extends map<k, v>> supplier) {  \n        if (collutil.isempty(from)) {  \n            return new hashmap<>();  \n        }  \n        return from.stream().collect(collectors.tomap(keyfunc, valuefunc, mergefunction, supplier));  \n    }  \n  \n    public static <t, k> map<k, list<t>> convertmultimap(collection<t> from, function<t, k> keyfunc) {  \n        if (collutil.isempty(from)) {  \n            return new hashmap<>();  \n        }  \n        return from.stream().collect(collectors.groupingby(keyfunc, collectors.mapping(t -> t, collectors.tolist())));  \n    }  \n  \n    public static <t, k, v> map<k, list<v>> convertmultimap(collection<t> from, function<t, k> keyfunc, function<t, v> valuefunc) {  \n        if (collutil.isempty(from)) {  \n            return new hashmap<>();  \n        }  \n        return from.stream()  \n                .collect(collectors.groupingby(keyfunc, collectors.mapping(valuefunc, collectors.tolist())));  \n    }  \n  \n    // 暂时没想好名字，先以 2 结尾噶  \n    public static <t, k, v> map<k, set<v>> convertmultimap2(collection<t> from, function<t, k> keyfunc, function<t, v> valuefunc) {  \n        if (collutil.isempty(from)) {  \n            return new hashmap<>();  \n        }  \n        return from.stream().collect(collectors.groupingby(keyfunc, collectors.mapping(valuefunc, collectors.toset())));  \n    }  \n  \n    public static <t, k> map<k, t> convertimmutablemap(collection<t> from, function<t, k> keyfunc) {  \n        if (collutil.isempty(from)) {  \n            return collections.emptymap();  \n        }  \n        immutablemap.builder<k, t> builder = immutablemap.builder();  \n        from.foreach(item -> builder.put(keyfunc.apply(item), item));  \n        return builder.build();  \n    }  \n  \n    /**  \n     * 对比老、新两个列表，找出新增、修改、删除的数据  \n     *  \n     * @param oldlist  老列表  \n     * @param newlist  新列表  \n     * @param samefunc 对比函数，返回 true 表示相同，返回 false 表示不同  \n     *                 注意，same 是通过每个元素的“标识”，判断它们是不是同一个数据  \n     * @return [新增列表、修改列表、删除列表]  \n     */    public static <t> list<list<t>> difflist(collection<t> oldlist, collection<t> newlist,  \n                                             bifunction<t, t, boolean> samefunc) {  \n        list<t> createlist = new linkedlist<>(newlist); // 默认都认为是新增的，后续会进行移除  \n        list<t> updatelist = new arraylist<>();  \n        list<t> deletelist = new arraylist<>();  \n  \n        // 通过以 oldlist 为主遍历，找出 updatelist 和 deletelist        for (t oldobj : oldlist) {  \n            // 1. 寻找是否有匹配的  \n            t foundobj = null;  \n            for (iterator<t> iterator = createlist.iterator(); iterator.hasnext(); ) {  \n                t newobj = iterator.next();  \n                // 1.1 不匹配，则直接跳过  \n                if (!samefunc.apply(oldobj, newobj)) {  \n                    continue;  \n                }  \n                // 1.2 匹配，则移除，并结束寻找  \n                iterator.remove();  \n                foundobj = newobj;  \n                break;  \n            }  \n            // 2. 匹配添加到 updatelist；不匹配则添加到 deletelist 中  \n            if (foundobj != null) {  \n                updatelist.add(foundobj);  \n            } else {  \n                deletelist.add(oldobj);  \n            }  \n        }  \n        return aslist(createlist, updatelist, deletelist);  \n    }  \n  \n    public static boolean containsany(collection<?> source, collection<?> candidates) {  \n        return org.springframework.util.collectionutils.containsany(source, candidates);  \n    }  \n  \n    public static <t> t getfirst(list<t> from) {  \n        return !collectionutil.isempty(from) ? from.get(0) : null;  \n    }  \n  \n    public static <t> t findfirst(collection<t> from, predicate<t> predicate) {  \n        return findfirst(from, predicate, function.identity());  \n    }  \n  \n    public static <t, u> u findfirst(collection<t> from, predicate<t> predicate, function<t, u> func) {  \n        if (collutil.isempty(from)) {  \n            return null;  \n        }  \n        return from.stream().filter(predicate).findfirst().map(func).orelse(null);  \n    }  \n  \n    public static <t, v extends comparable<? super v>> v getmaxvalue(collection<t> from, function<t, v> valuefunc) {  \n        if (collutil.isempty(from)) {  \n            return null;  \n        }  \n        assert !from.isempty(); // 断言，避免告警  \n        t t = from.stream().max(comparator.comparing(valuefunc)).get();  \n        return valuefunc.apply(t);  \n    }  \n  \n    public static <t, v extends comparable<? super v>> v getminvalue(list<t> from, function<t, v> valuefunc) {  \n        if (collutil.isempty(from)) {  \n            return null;  \n        }  \n        assert from.size() > 0; // 断言，避免告警  \n        t t = from.stream().min(comparator.comparing(valuefunc)).get();  \n        return valuefunc.apply(t);  \n    }  \n  \n    public static <t, v extends comparable<? super v>> v getsumvalue(list<t> from, function<t, v> valuefunc,  \n                                                                     binaryoperator<v> accumulator) {  \n        return getsumvalue(from, valuefunc, accumulator, null);  \n    }  \n  \n    public static <t, v extends comparable<? super v>> v getsumvalue(collection<t> from, function<t, v> valuefunc,  \n                                                                     binaryoperator<v> accumulator, v defaultvalue) {  \n        if (collutil.isempty(from)) {  \n            return defaultvalue;  \n        }  \n        assert !from.isempty(); // 断言，避免告警  \n        return from.stream().map(valuefunc).filter(objects::nonnull).reduce(accumulator).orelse(defaultvalue);  \n    }  \n  \n    public static <t> void addifnotnull(collection<t> coll, t item) {  \n        if (item == null) {  \n            return;  \n        }  \n        coll.add(item);  \n    }  \n  \n    public static <t> collection<t> singleton(t obj) {  \n        return obj == null ? collections.emptylist() : collections.singleton(obj);  \n    }  \n  \n    public static <t> list<t> newarraylist(list<list<t>> list) {  \n        return list.stream().flatmap(collection::stream).collect(collectors.tolist());  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n\n\n\n# 模型与控制器\n\n\n# sysuser\n\n@data  \n@tablename("sys_user")  \n@schema(description = "用户")  \npublic class sysuser {  \n    @schema(description = "id", example = "1")  \n    @tableid  \n    private integer id;  \n  \n    @schema(description = "用户名", requiredmode = schema.requiredmode.required, example = "张三")  \n    private string username;  \n  \n    @schema(description = "密码", requiredmode = schema.requiredmode.required, example = "password")  \n    private string password;  \n  \n    @schema(description = "角色id", example = "1")  \n    private integer roleid;  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# sysuservo\n\n@equalsandhashcode(callsuper = true)  \n@data  \npublic class sysuservo extends sysuser{  \n    string rolename;  \n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# sysusermapper\n\n@mapper  \npublic interface sysusermapper extends basemapperx<sysuser> {  \n    // 分页查询用户  \n    default pageresult<sysuser> selectpage(sysuserpagereqvo reqvo){  \n        return selectpage(reqvo, new lambdaquerywrapperx<sysuser>()  \n                .likeifpresent(sysuser::getusername, reqvo.getusername())  \n                .orderbydesc(sysuser::getid));  \n    }  \n  \n    // 分页关联角色查询用户  \n    default pageresult<sysuservo> selectjoinpage(sysuserpagereqvo reqvo){  \n        mpjlambdawrapper<sysuser> wrapper = new mpjlambdawrapper<sysuser>()  \n                .likeifexists(sysuser::getusername,reqvo.getusername())  \n                .select(sysuser::getid, sysuser::getusername)  \n                .selectas(sysrole::getrolename, sysuservo::getrolename)  \n                .leftjoin(sysrole.class, sysrole::getid, sysuser::getroleid);  \n        return selectjoinpage(reqvo,sysuservo.class, wrapper);  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# sysuserservice\n\npublic interface sysuserservice {  \n    pageresult<sysuser> getpage(sysuserpagereqvo reqvo);  \n    pageresult<sysuservo> getjoinpage(sysuserpagereqvo reqvo);  \n}\n\n\n1\n2\n3\n4\n\n\n\n# sysuserserviceimpl\n\n@service  \npublic class sysuserserviceimpl implements sysuserservice{  \n    @resource  \n    private sysusermapper usermapper;  \n  \n  \n    @override  \n    public pageresult<sysuser> getpage(sysuserpagereqvo reqvo) {  \n        return usermapper.selectpage(reqvo);  \n    }  \n  \n    @override  \n    public pageresult<sysuservo> getjoinpage(sysuserpagereqvo reqvo) {  \n        return usermapper.selectjoinpage(reqvo);  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# sysusercontroller\n\n@restcontroller  \n@requestmapping("/sys/user")  \npublic class sysusercontroller {  \n    @resource  \n    private sysuserservice userservice;  \n  \n    @getmapping("/page")  \n    public commonresult<pageresult<sysuser>> page(@validated sysuserpagereqvo reqvo){  \n        pageresult<sysuser> pageresult = userservice.getpage(reqvo);  \n        return success(beanutils.tobean(pageresult, sysuser.class));  \n    }  \n    @getmapping("/page-join")  \n    public commonresult<pageresult<sysuservo>> pagejoin(@validated sysuserpagereqvo reqvo){  \n        pageresult<sysuservo> pageresult = userservice.getjoinpage(reqvo);  \n        return success(beanutils.tobean(pageresult, sysuservo.class));  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 测试\n\n',charsets:{cjk:!0},lastUpdated:"2024/03/22, 15:23:17",lastUpdatedTimestamp:1711092197e3},{title:"表CRUD",frontmatter:{title:"表CRUD",date:"2024-03-22T22:05:00.000Z",permalink:"/soft/springboot/use/crud",private:!0,categories:["软件开发"],tags:["软件开发"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/01.Springboot%E4%BD%BF%E7%94%A8/10.%E8%A1%A8CRUD.html",relativePath:"06.软件开发/01.Springboot使用/10.表CRUD.md",key:"v-6bf4862e",path:"/soft/springboot/use/crud/",headers:[{level:2,title:"接口与控制器",slug:"接口与控制器",normalizedTitle:"接口与控制器",charIndex:2},{level:3,title:"SysUserMapper",slug:"sysusermapper",normalizedTitle:"sysusermapper",charIndex:13},{level:3,title:"SysUserService",slug:"sysuserservice",normalizedTitle:"sysuserservice",charIndex:663},{level:3,title:"SysUserServiceImpl",slug:"sysuserserviceimpl",normalizedTitle:"sysuserserviceimpl",charIndex:1035},{level:3,title:"SysUserController",slug:"sysusercontroller",normalizedTitle:"sysusercontroller",charIndex:2161},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:4248},{level:3,title:"创建",slug:"创建",normalizedTitle:"创建",charIndex:4255},{level:3,title:"更新",slug:"更新",normalizedTitle:"更新",charIndex:4264},{level:3,title:"获取信息",slug:"获取信息",normalizedTitle:"获取信息",charIndex:4273},{level:3,title:"删除",slug:"删除",normalizedTitle:"删除",charIndex:4284}],headersStr:"接口与控制器 SysUserMapper SysUserService SysUserServiceImpl SysUserController 测试 创建 更新 获取信息 删除",content:'# 接口与控制器\n\n\n# SysUserMapper\n\ndefault SysUser selectByUsername(String username){  \n    return selectOne(new LambdaQueryWrapperX<SysUser>()  \n            .likeIfPresent(SysUser::getUsername, username));  \n}  \n  \ndefault SysUserVO selectById(Integer id){  \n    MPJLambdaWrapper<SysUser> wrapper = new MPJLambdaWrapper<SysUser>()  \n            .eq(SysUser::getId,id)  \n            .select(SysUser::getId, SysUser::getUsername)  \n            .selectAs(SysRole::getRoleName, SysUserVO::getRoleName)  \n            .leftJoin(SysRole.class, SysRole::getId, SysUser::getRoleId);  \n    return selectJoinOne(SysUserVO.class, wrapper);  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# SysUserService\n\npublic interface SysUserService {  \n    PageResult<SysUser> getPage(SysUserPageReqVO reqVO);  \n    PageResult<SysUserVO> getJoinPage(SysUserPageReqVO reqVO);  \n    Integer create(SysUser user);  \n    void update(SysUser user);  \n    void delete(Integer id);  \n    SysUser get(String username);  \n    SysUserVO get(Integer id);  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# SysUserServiceImpl\n\n@Service  \npublic class SysUserServiceImpl implements SysUserService{  \n    @Resource  \n    private SysUserMapper userMapper;  \n      \n    @Override  \n    public PageResult<SysUser> getPage(SysUserPageReqVO reqVO) {  \n        return userMapper.selectPage(reqVO);  \n    }  \n  \n    @Override  \n    public PageResult<SysUserVO> getJoinPage(SysUserPageReqVO reqVO) {  \n        return userMapper.selectJoinPage(reqVO);  \n    }  \n  \n    @Override  \n    public Integer create(SysUser user) {  \n        return userMapper.insert(user);  \n    }  \n  \n    @Override  \n    public void update(SysUser user) {  \n        userMapper.updateById(user);  \n    }  \n  \n    @Override  \n    public void delete(Integer id) {  \n        userMapper.deleteById(id);  \n    }  \n  \n    @Override  \n    public SysUser get(String username) {  \n        return userMapper.selectByUsername(username);  \n    }  \n  \n    @Override  \n    public SysUserVO get(Integer id) {  \n        return userMapper.selectById(id);  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n\n# SysUserController\n\n@RestController  \n@RequestMapping("/sys/user")  \npublic class SysUserController {  \n    @Resource  \n    private SysUserService userService;  \n  \n    @GetMapping("/page")  \n    public CommonResult<PageResult<SysUser>> page(@Validated SysUserPageReqVO reqVO){  \n        PageResult<SysUser> pageResult = userService.getPage(reqVO);  \n        return success(BeanUtils.toBean(pageResult, SysUser.class));  \n    }  \n  \n    @GetMapping("/page-join")  \n    public CommonResult<PageResult<SysUserVO>> pageJoin(@Validated SysUserPageReqVO reqVO){  \n        PageResult<SysUserVO> pageResult = userService.getJoinPage(reqVO);  \n        return success(BeanUtils.toBean(pageResult, SysUserVO.class));  \n    }  \n  \n    @GetMapping("/get")  \n    @Parameter(name = "id", description = "ID", required = true, example = "1024")  \n    public CommonResult<SysUserVO> get(@RequestParam("id") Integer id){  \n        SysUser user = userService.get(id);  \n        return success(BeanUtils.toBean(user,SysUserVO.class));  \n    }  \n  \n    @GetMapping("/get/username")  \n    @Parameter(name = "username", description = "用户名", required = true, example = "admin")  \n    public CommonResult<SysUser> get(@RequestParam("username") String username){  \n        SysUser user = userService.get(username);  \n        return success(BeanUtils.toBean(user,SysUser.class));  \n    }  \n  \n    @PostMapping("/create")  \n    public CommonResult<Integer> create(@Valid @RequestBody SysUser user) {  \n        Integer id = userService.create(user);  \n        return success(id);  \n    }  \n  \n    @PutMapping("/update")  \n    public CommonResult<Boolean> update(@Valid @RequestBody SysUser user) {  \n        userService.update(user);  \n        return success(true);  \n    }  \n  \n    @DeleteMapping("/delete")  \n    public CommonResult<Boolean> delete(@RequestParam("id") Integer id) {  \n        userService.delete(id);  \n        return success(true);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n\n\n\n# 测试\n\n\n# 创建\n\n\n\n\n# 更新\n\n\n\n\n# 获取信息\n\n\n\n\n# 删除\n\n',normalizedContent:'# 接口与控制器\n\n\n# sysusermapper\n\ndefault sysuser selectbyusername(string username){  \n    return selectone(new lambdaquerywrapperx<sysuser>()  \n            .likeifpresent(sysuser::getusername, username));  \n}  \n  \ndefault sysuservo selectbyid(integer id){  \n    mpjlambdawrapper<sysuser> wrapper = new mpjlambdawrapper<sysuser>()  \n            .eq(sysuser::getid,id)  \n            .select(sysuser::getid, sysuser::getusername)  \n            .selectas(sysrole::getrolename, sysuservo::getrolename)  \n            .leftjoin(sysrole.class, sysrole::getid, sysuser::getroleid);  \n    return selectjoinone(sysuservo.class, wrapper);  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# sysuserservice\n\npublic interface sysuserservice {  \n    pageresult<sysuser> getpage(sysuserpagereqvo reqvo);  \n    pageresult<sysuservo> getjoinpage(sysuserpagereqvo reqvo);  \n    integer create(sysuser user);  \n    void update(sysuser user);  \n    void delete(integer id);  \n    sysuser get(string username);  \n    sysuservo get(integer id);  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# sysuserserviceimpl\n\n@service  \npublic class sysuserserviceimpl implements sysuserservice{  \n    @resource  \n    private sysusermapper usermapper;  \n      \n    @override  \n    public pageresult<sysuser> getpage(sysuserpagereqvo reqvo) {  \n        return usermapper.selectpage(reqvo);  \n    }  \n  \n    @override  \n    public pageresult<sysuservo> getjoinpage(sysuserpagereqvo reqvo) {  \n        return usermapper.selectjoinpage(reqvo);  \n    }  \n  \n    @override  \n    public integer create(sysuser user) {  \n        return usermapper.insert(user);  \n    }  \n  \n    @override  \n    public void update(sysuser user) {  \n        usermapper.updatebyid(user);  \n    }  \n  \n    @override  \n    public void delete(integer id) {  \n        usermapper.deletebyid(id);  \n    }  \n  \n    @override  \n    public sysuser get(string username) {  \n        return usermapper.selectbyusername(username);  \n    }  \n  \n    @override  \n    public sysuservo get(integer id) {  \n        return usermapper.selectbyid(id);  \n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n\n# sysusercontroller\n\n@restcontroller  \n@requestmapping("/sys/user")  \npublic class sysusercontroller {  \n    @resource  \n    private sysuserservice userservice;  \n  \n    @getmapping("/page")  \n    public commonresult<pageresult<sysuser>> page(@validated sysuserpagereqvo reqvo){  \n        pageresult<sysuser> pageresult = userservice.getpage(reqvo);  \n        return success(beanutils.tobean(pageresult, sysuser.class));  \n    }  \n  \n    @getmapping("/page-join")  \n    public commonresult<pageresult<sysuservo>> pagejoin(@validated sysuserpagereqvo reqvo){  \n        pageresult<sysuservo> pageresult = userservice.getjoinpage(reqvo);  \n        return success(beanutils.tobean(pageresult, sysuservo.class));  \n    }  \n  \n    @getmapping("/get")  \n    @parameter(name = "id", description = "id", required = true, example = "1024")  \n    public commonresult<sysuservo> get(@requestparam("id") integer id){  \n        sysuser user = userservice.get(id);  \n        return success(beanutils.tobean(user,sysuservo.class));  \n    }  \n  \n    @getmapping("/get/username")  \n    @parameter(name = "username", description = "用户名", required = true, example = "admin")  \n    public commonresult<sysuser> get(@requestparam("username") string username){  \n        sysuser user = userservice.get(username);  \n        return success(beanutils.tobean(user,sysuser.class));  \n    }  \n  \n    @postmapping("/create")  \n    public commonresult<integer> create(@valid @requestbody sysuser user) {  \n        integer id = userservice.create(user);  \n        return success(id);  \n    }  \n  \n    @putmapping("/update")  \n    public commonresult<boolean> update(@valid @requestbody sysuser user) {  \n        userservice.update(user);  \n        return success(true);  \n    }  \n  \n    @deletemapping("/delete")  \n    public commonresult<boolean> delete(@requestparam("id") integer id) {  \n        userservice.delete(id);  \n        return success(true);  \n    }  \n  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n\n\n\n# 测试\n\n\n# 创建\n\n\n\n\n# 更新\n\n\n\n\n# 获取信息\n\n\n\n\n# 删除\n\n',charsets:{cjk:!0},lastUpdated:"2024/03/22, 14:54:39",lastUpdatedTimestamp:1711090479e3},{title:"WebApi增删改查01-说明",frontmatter:{title:"WebApi增删改查01-说明",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/info/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/01.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A501-%E8%AF%B4%E6%98%8E.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/01.WebApi增删改查01-说明.md",key:"v-485dcc14",path:"/soft/webapi/info/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:3,title:"实现功能",slug:"实现功能",normalizedTitle:"实现功能",charIndex:9},{level:3,title:"软件框架",slug:"软件框架",normalizedTitle:"软件框架",charIndex:65},{level:2,title:"目录",slug:"目录",normalizedTitle:"目录",charIndex:149}],headersStr:"说明 实现功能 软件框架 目录",content:"# 说明\n\n\n# 实现功能\n\n * WebAPI实现接口\n * WPF作为前端调用WebAPI接口实现登录和数据增删改查\n\n\n# 软件框架\n\n * VS2022，.Net6\n * Navicat，MySql，SqlSugar\n * Redis，JWT，Log4Net，AutoMapper\n\n\n# 目录\n\nWebApi增删改查01-说明\n\nWebApi增删改查02-新建工程\n\nWebApi增删改查03-Swagger配置\n\nWebApi增删改查04-SqlSugar配置\n\nWebApi增删改查05-Log4Net配置\n\nWebApi增删改查06-AutoMapper配置\n\nWebApi增删改查07-用户增删改查\n\nWebApi增删改查08-JWT配置实现\n\nWebApi增删改查09-登录\n\nWebApi增删改查10-Redis配置\n\nWebApi增删改查11-跨域CORS解决\n\nWebApi增删改查12-Docker发布",normalizedContent:"# 说明\n\n\n# 实现功能\n\n * webapi实现接口\n * wpf作为前端调用webapi接口实现登录和数据增删改查\n\n\n# 软件框架\n\n * vs2022，.net6\n * navicat，mysql，sqlsugar\n * redis，jwt，log4net，automapper\n\n\n# 目录\n\nwebapi增删改查01-说明\n\nwebapi增删改查02-新建工程\n\nwebapi增删改查03-swagger配置\n\nwebapi增删改查04-sqlsugar配置\n\nwebapi增删改查05-log4net配置\n\nwebapi增删改查06-automapper配置\n\nwebapi增删改查07-用户增删改查\n\nwebapi增删改查08-jwt配置实现\n\nwebapi增删改查09-登录\n\nwebapi增删改查10-redis配置\n\nwebapi增删改查11-跨域cors解决\n\nwebapi增删改查12-docker发布",charsets:{cjk:!0},lastUpdated:"2023/10/18, 19:38:19",lastUpdatedTimestamp:1697629099e3},{title:"WebApi增删改查02-新建工程",frontmatter:{title:"WebApi增删改查02-新建工程",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/newproject/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/02.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A502-%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/02.WebApi增删改查02-新建工程.md",key:"v-1bc17c74",path:"/soft/webapi/newproject/",headers:[{level:2,title:"新建空白解决方案",slug:"新建空白解决方案",normalizedTitle:"新建空白解决方案",charIndex:2},{level:2,title:"新建WebAPI",slug:"新建webapi",normalizedTitle:"新建webapi",charIndex:30},{level:2,title:"新建共享项目",slug:"新建共享项目",normalizedTitle:"新建共享项目",charIndex:81},{level:2,title:"WebAPI引用类库",slug:"webapi引用类库",normalizedTitle:"webapi引用类库",charIndex:129},{level:2,title:"运行WebAPI",slug:"运行webapi",normalizedTitle:"运行webapi",charIndex:167}],headersStr:"新建空白解决方案 新建WebAPI 新建共享项目 WebAPI引用类库 运行WebAPI",content:"# 新建空白解决方案\n\n\n\n\n\n创建完成后如图\n\n\n\n\n# 新建WebAPI\n\n右键解决方案，添加新建项目，选择C#的Web API\n\n\n\n\n\n\n\n\n\n\n\n\n# 新建共享项目\n\n共享项目用于与前端共用，右键解决方案，添加，新建项目，类库\n\n\n\n\n\n\n\n\n# WebAPI引用类库\n\n右键WebAPI的依赖项，添加引用\n\n\n\n\n\n\n# 运行WebAPI\n\n\n\n",normalizedContent:"# 新建空白解决方案\n\n\n\n\n\n创建完成后如图\n\n\n\n\n# 新建webapi\n\n右键解决方案，添加新建项目，选择c#的web api\n\n\n\n\n\n\n\n\n\n\n\n\n# 新建共享项目\n\n共享项目用于与前端共用，右键解决方案，添加，新建项目，类库\n\n\n\n\n\n\n\n\n# webapi引用类库\n\n右键webapi的依赖项，添加引用\n\n\n\n\n\n\n# 运行webapi\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WebApi增删改查03-Swagger配置",frontmatter:{title:"WebApi增删改查03-Swagger配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/swagger/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/03.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A503-Swagger%E9%85%8D%E7%BD%AE.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/03.WebApi增删改查03-Swagger配置.md",key:"v-a1cd5756",path:"/soft/webapi/swagger/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"ApiVersions类",slug:"apiversions类",normalizedTitle:"apiversions类",charIndex:50},{level:2,title:"SwaggerConfig类",slug:"swaggerconfig类",normalizedTitle:"swaggerconfig类",charIndex:341},{level:2,title:"FileUploadFilter类",slug:"fileuploadfilter类",normalizedTitle:"fileuploadfilter类",charIndex:3012},{level:2,title:"注册配置",slug:"注册配置",normalizedTitle:"注册配置",charIndex:5030},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:985}],headersStr:"说明 ApiVersions类 SwaggerConfig类 FileUploadFilter类 注册配置 测试",content:'# 说明\n\n对Swagger美化，带有说明及版本\n\n新建文件夹Config/Swagger\n\n\n# ApiVersions类\n\n在文件夹下新建ApiVersions类，作为版本控制\n\npublic enum ApiVersions\n{\n    /// <summary>\n    /// 版本一\n    /// </summary>\n    V1,\n\n    /// <summary>\n    /// 版本二\n    /// </summary>\n    V2,\n\n    /// <summary>\n    /// 版本三\n    /// </summary>\n    V3\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# SwaggerConfig类\n\n添加安全定义和文件上传按钮，为后续服务使用\n\n提示\n\n需要打开Test.Api的xml文档生成\n\n\n\n/// <summary>\n/// Swagger配置类\n/// </summary>\npublic static class SwaggerConfig\n{\n    public static void AddSwaggerConfig(this WebApplicationBuilder builder)\n    {\n        // Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\n        builder.Services.AddEndpointsApiExplorer();\n        builder.Services.AddSwaggerGen(option =>\n        {\n            typeof(ApiVersions).GetEnumNames().ToList().ForEach(version =>\n            {\n                option.SwaggerDoc(version, new OpenApiInfo()\n                {\n                    Title = $"{version}测试API文档",\n                    Version = version,\n                    Description = $"通用版本的CoreApi版本{version}"\n                });\n            });\n            // xml文档绝对路径\n            var file = Path.Combine(AppContext.BaseDirectory, "Test.Api.xml");\n            // true: 显示控制器层注释\n            option.IncludeXmlComments(file, true);\n            // 对Action名称排序\n            option.OrderActionsBy(o => o.RelativePath);\n\n            // 添加安全定义\n            option.AddSecurityDefinition("Bearer", new OpenApiSecurityScheme\n            {\n                Description = "请输入token,格式为 Bearer xxxxxx (注意中间必须有空格)",\n                Name = "Authorization",\n                In = ParameterLocation.Header,\n                Type = SecuritySchemeType.ApiKey,\n                BearerFormat = "JWT",\n                Scheme = "Bearer"\n            });\n            // 添加安全要求\n            option.AddSecurityRequirement(new OpenApiSecurityRequirement\n            {\n                {\n                    new OpenApiSecurityScheme\n                    {\n                        Reference = new OpenApiReference()\n                        {\n                            Type = ReferenceType.SecurityScheme,\n                            Id = "Bearer"\n                        }\n                    },\n                    new string[] { }\n                }\n            });\n\n            // 文件上传按钮\n            option.OperationFilter<FileUploadFilter>();\n        });\n    }\n\n    public static void UseSwaggerConfig(this WebApplication app)\n    {\n\n        app.UseSwagger();\n        app.UseSwaggerUI(option =>\n        {\n            foreach (string version in typeof(ApiVersions).GetEnumNames())\n            {\n                option.SwaggerEndpoint($"/swagger/{version}/swagger.json",\n                    $"测试第【{version}】版本");\n            }\n        });\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n\n\n\n# FileUploadFilter类\n\n文件上传按钮过滤文件类\n\npublic class FileUploadFilter : IOperationFilter\n{\n    /// <summary>\n    /// 文件上传筛选\n    /// </summary>\n    /// <param name="operation"></param>\n    /// <param name="context"></param>\n    public void Apply(OpenApiOperation operation, OperationFilterContext context)\n    {\n        const string FileUploadContentType = "multipart/form-data";\n        if (operation.RequestBody == null ||\n            !operation.RequestBody.Content.Any(x =>\n            x.Key.Equals(FileUploadContentType,\n            StringComparison.InvariantCultureIgnoreCase)))\n        {\n            return;\n        }\n\n        if (context.ApiDescription.ParameterDescriptions[0].Type == typeof(IFormCollection))\n        {\n            operation.RequestBody = new OpenApiRequestBody\n            {\n                Description = "文件上传",\n                Content = new Dictionary<string, OpenApiMediaType>\n                {\n                    {\n                        FileUploadContentType, new OpenApiMediaType\n                        {\n                            Schema = new OpenApiSchema\n                            {\n                                Type = "object",\n                                Required = new HashSet<string>{ "file" },\n                                Properties = new Dictionary<string, OpenApiSchema>\n                                {\n                                    {\n                                        "file", new OpenApiSchema()\n                                        {\n                                            Type = "string",\n                                            Format = "binary"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n\n\n\n# 注册配置\n\n在Program.cs类中注册SwaggerConfig\n\n// Swagger配置\nbuilder.AddSwaggerConfig();\n\nvar app = builder.Build();\n\n// Configure the HTTP request pipeline.\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwaggerConfig();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 测试\n\n在Controller方法中添加注释\n\n/// <summary>\n/// 获取天气\n/// </summary>\n/// <returns></returns>\n[HttpGet(Name = "GetWeatherForecast")]\npublic IEnumerable<WeatherForecast> Get()\n{\n    return Enumerable.Range(1, 5).Select(index => new WeatherForecast\n    {\n        Date = DateTime.Now.AddDays(index),\n        TemperatureC = Random.Shared.Next(-20, 55),\n        Summary = Summaries[Random.Shared.Next(Summaries.Length)]\n    })\n    .ToArray();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\n上传文件测试\n\n/// <summary>\n/// 上传文件\n/// </summary>\n[Route("api/[controller]/[action]")]\n[ApiController]\npublic class FileController : ControllerBase\n{\n    /// <summary>\n    /// 构造函数\n    /// </summary>\n    public FileController()\n    {\n    }\n\n    /// <summary>\n    /// 上传文件测试\n    /// </summary>\n    /// <param name="form"></param>\n    /// <returns></returns>\n    [HttpPost(Name = "File")]\n    public IActionResult UploadFile(IFormCollection form)\n    {\n        var filename = form.Files.FirstOrDefault()?.FileName;\n        return Ok(filename);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n',normalizedContent:'# 说明\n\n对swagger美化，带有说明及版本\n\n新建文件夹config/swagger\n\n\n# apiversions类\n\n在文件夹下新建apiversions类，作为版本控制\n\npublic enum apiversions\n{\n    /// <summary>\n    /// 版本一\n    /// </summary>\n    v1,\n\n    /// <summary>\n    /// 版本二\n    /// </summary>\n    v2,\n\n    /// <summary>\n    /// 版本三\n    /// </summary>\n    v3\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# swaggerconfig类\n\n添加安全定义和文件上传按钮，为后续服务使用\n\n提示\n\n需要打开test.api的xml文档生成\n\n\n\n/// <summary>\n/// swagger配置类\n/// </summary>\npublic static class swaggerconfig\n{\n    public static void addswaggerconfig(this webapplicationbuilder builder)\n    {\n        // learn more about configuring swagger/openapi at https://aka.ms/aspnetcore/swashbuckle\n        builder.services.addendpointsapiexplorer();\n        builder.services.addswaggergen(option =>\n        {\n            typeof(apiversions).getenumnames().tolist().foreach(version =>\n            {\n                option.swaggerdoc(version, new openapiinfo()\n                {\n                    title = $"{version}测试api文档",\n                    version = version,\n                    description = $"通用版本的coreapi版本{version}"\n                });\n            });\n            // xml文档绝对路径\n            var file = path.combine(appcontext.basedirectory, "test.api.xml");\n            // true: 显示控制器层注释\n            option.includexmlcomments(file, true);\n            // 对action名称排序\n            option.orderactionsby(o => o.relativepath);\n\n            // 添加安全定义\n            option.addsecuritydefinition("bearer", new openapisecurityscheme\n            {\n                description = "请输入token,格式为 bearer xxxxxx (注意中间必须有空格)",\n                name = "authorization",\n                in = parameterlocation.header,\n                type = securityschemetype.apikey,\n                bearerformat = "jwt",\n                scheme = "bearer"\n            });\n            // 添加安全要求\n            option.addsecurityrequirement(new openapisecurityrequirement\n            {\n                {\n                    new openapisecurityscheme\n                    {\n                        reference = new openapireference()\n                        {\n                            type = referencetype.securityscheme,\n                            id = "bearer"\n                        }\n                    },\n                    new string[] { }\n                }\n            });\n\n            // 文件上传按钮\n            option.operationfilter<fileuploadfilter>();\n        });\n    }\n\n    public static void useswaggerconfig(this webapplication app)\n    {\n\n        app.useswagger();\n        app.useswaggerui(option =>\n        {\n            foreach (string version in typeof(apiversions).getenumnames())\n            {\n                option.swaggerendpoint($"/swagger/{version}/swagger.json",\n                    $"测试第【{version}】版本");\n            }\n        });\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n\n\n\n# fileuploadfilter类\n\n文件上传按钮过滤文件类\n\npublic class fileuploadfilter : ioperationfilter\n{\n    /// <summary>\n    /// 文件上传筛选\n    /// </summary>\n    /// <param name="operation"></param>\n    /// <param name="context"></param>\n    public void apply(openapioperation operation, operationfiltercontext context)\n    {\n        const string fileuploadcontenttype = "multipart/form-data";\n        if (operation.requestbody == null ||\n            !operation.requestbody.content.any(x =>\n            x.key.equals(fileuploadcontenttype,\n            stringcomparison.invariantcultureignorecase)))\n        {\n            return;\n        }\n\n        if (context.apidescription.parameterdescriptions[0].type == typeof(iformcollection))\n        {\n            operation.requestbody = new openapirequestbody\n            {\n                description = "文件上传",\n                content = new dictionary<string, openapimediatype>\n                {\n                    {\n                        fileuploadcontenttype, new openapimediatype\n                        {\n                            schema = new openapischema\n                            {\n                                type = "object",\n                                required = new hashset<string>{ "file" },\n                                properties = new dictionary<string, openapischema>\n                                {\n                                    {\n                                        "file", new openapischema()\n                                        {\n                                            type = "string",\n                                            format = "binary"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n\n\n\n# 注册配置\n\n在program.cs类中注册swaggerconfig\n\n// swagger配置\nbuilder.addswaggerconfig();\n\nvar app = builder.build();\n\n// configure the http request pipeline.\nif (app.environment.isdevelopment())\n{\n    app.useswaggerconfig();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 测试\n\n在controller方法中添加注释\n\n/// <summary>\n/// 获取天气\n/// </summary>\n/// <returns></returns>\n[httpget(name = "getweatherforecast")]\npublic ienumerable<weatherforecast> get()\n{\n    return enumerable.range(1, 5).select(index => new weatherforecast\n    {\n        date = datetime.now.adddays(index),\n        temperaturec = random.shared.next(-20, 55),\n        summary = summaries[random.shared.next(summaries.length)]\n    })\n    .toarray();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\n上传文件测试\n\n/// <summary>\n/// 上传文件\n/// </summary>\n[route("api/[controller]/[action]")]\n[apicontroller]\npublic class filecontroller : controllerbase\n{\n    /// <summary>\n    /// 构造函数\n    /// </summary>\n    public filecontroller()\n    {\n    }\n\n    /// <summary>\n    /// 上传文件测试\n    /// </summary>\n    /// <param name="form"></param>\n    /// <returns></returns>\n    [httppost(name = "file")]\n    public iactionresult uploadfile(iformcollection form)\n    {\n        var filename = form.files.firstordefault()?.filename;\n        return ok(filename);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WebApi增删改查04-SqlSugar配置",frontmatter:{title:"WebApi增删改查04-SqlSugar配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/sqlsugar/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/04.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A504-SqlSugar%E9%85%8D%E7%BD%AE.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/04.WebApi增删改查04-SqlSugar配置.md",key:"v-c16619ee",path:"/soft/webapi/sqlsugar/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:3,title:"开箱即用",slug:"开箱即用",normalizedTitle:"开箱即用",charIndex:71},{level:2,title:"安装依赖包",slug:"安装依赖包",normalizedTitle:"安装依赖包",charIndex:624},{level:2,title:"配置数据库",slug:"配置数据库",normalizedTitle:"配置数据库",charIndex:638},{level:2,title:"配置SqlSugar",slug:"配置sqlsugar",normalizedTitle:"配置sqlsugar",charIndex:768},{level:2,title:"注册配置",slug:"注册配置",normalizedTitle:"注册配置",charIndex:1790}],headersStr:"说明 开箱即用 安装依赖包 配置数据库 配置SqlSugar 注册配置",content:'# 说明\n\nSqlSugar 是一款 老牌 .NET 开源多库架构ORM框架（EF Core单库架构），由果糖大数据科技团队\n\n维护和更新 ，开箱即用最易上手的.NET ORM框架 。生态圈丰富，目前开源生态仅次于EF Core，但是在需要\n\n多库兼容的项目或产品中更加偏爱SqlSugar 【开源生态】 【视频教程】\n\nGithub源码\n\nGitee源码\n\nSqlSugar .Net ORM 5.X 官网 、文档、教程 - SqlSugar 5x - .NET果糖网 (donet5.com)\n\n\n# 开箱即用\n\n 1. 真正可以实现零Sql的ORM,拥有超强查询体系：导航查询、联表查询、并集查询、子查询 、 报表查询 等\n\n 2. 支持 .NET 百万级【大数据】写入和更新、分表和几十亿查询和统计等 拥有成熟方案\n\n 3. 支持 SAAS 完整应用 跨库查询 、租户分库 、租户分表 和 租户数据隔离\n\n 4. 支持【低代码】+工作流 （动态建类 、动态建表、无实体多库兼容CRUD 、 JSON TO SQL 、自定义XML等）\n\n 5. 语法最爽的.NET ORM、优美的表达式、仓储、UnitOfWork、DbContext、AOP\n\n 6. 支持 DbFirst、CodeFirst和【WebFirst】 3种模式开发\n\n 7. 简单易用、功能齐全、高性能、轻量级、服务齐全、官网教程文档、有专业技术支持一天18小时服务\n\n\n# 安装依赖包\n\n\n\n\n\n\n# 配置数据库\n\n在appsettings.json中添加\n\n"MySQLConnection": "server=192.168.1.5;port=3306;uid=root;pwd=123456;database=caiwei-tool",\n\n\n1\n\n\n\n# 配置SqlSugar\n\n在Config中添加SqlSugarConfig.cs\n\n/// <summary>\n/// SqlSugar配置\n/// </summary>\npublic static class SqlSugarConfig\n{\n    /// <summary>\n    /// SqlSugar配置\n    /// </summary>\n    public static void AddSqlsugarConfig(this IServiceCollection services, IConfiguration configuration)\n    {\n        SqlSugarScope sqlSugar = new SqlSugarScope(new ConnectionConfig()\n        {\n            DbType = DbType.MySql,\n            ConnectionString = configuration["MySQLConnection"],\n            IsAutoCloseConnection = true,\n        },\n            db =>\n            {\n                //单例参数配置，所有上下文生效       \n                db.Aop.OnLogExecuting = (sql, pars) =>\n                {\n                    Console.WriteLine(sql);//输出sql\n                };\n\n                //技巧：拿到非ORM注入对象\n                //services.GetService<注入对象>();\n            });\n        services.AddSingleton<ISqlSugarClient>(sqlSugar);//这边是SqlSugarScope用AddSingleton\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 注册配置\n\n在program.cs中添加\n\n// SqlSugar\nbuilder.Services.AddSqlsugarConfig(builder.Configuration);\n\n\n1\n2\n',normalizedContent:'# 说明\n\nsqlsugar 是一款 老牌 .net 开源多库架构orm框架（ef core单库架构），由果糖大数据科技团队\n\n维护和更新 ，开箱即用最易上手的.net orm框架 。生态圈丰富，目前开源生态仅次于ef core，但是在需要\n\n多库兼容的项目或产品中更加偏爱sqlsugar 【开源生态】 【视频教程】\n\ngithub源码\n\ngitee源码\n\nsqlsugar .net orm 5.x 官网 、文档、教程 - sqlsugar 5x - .net果糖网 (donet5.com)\n\n\n# 开箱即用\n\n 1. 真正可以实现零sql的orm,拥有超强查询体系：导航查询、联表查询、并集查询、子查询 、 报表查询 等\n\n 2. 支持 .net 百万级【大数据】写入和更新、分表和几十亿查询和统计等 拥有成熟方案\n\n 3. 支持 saas 完整应用 跨库查询 、租户分库 、租户分表 和 租户数据隔离\n\n 4. 支持【低代码】+工作流 （动态建类 、动态建表、无实体多库兼容crud 、 json to sql 、自定义xml等）\n\n 5. 语法最爽的.net orm、优美的表达式、仓储、unitofwork、dbcontext、aop\n\n 6. 支持 dbfirst、codefirst和【webfirst】 3种模式开发\n\n 7. 简单易用、功能齐全、高性能、轻量级、服务齐全、官网教程文档、有专业技术支持一天18小时服务\n\n\n# 安装依赖包\n\n\n\n\n\n\n# 配置数据库\n\n在appsettings.json中添加\n\n"mysqlconnection": "server=192.168.1.5;port=3306;uid=root;pwd=123456;database=caiwei-tool",\n\n\n1\n\n\n\n# 配置sqlsugar\n\n在config中添加sqlsugarconfig.cs\n\n/// <summary>\n/// sqlsugar配置\n/// </summary>\npublic static class sqlsugarconfig\n{\n    /// <summary>\n    /// sqlsugar配置\n    /// </summary>\n    public static void addsqlsugarconfig(this iservicecollection services, iconfiguration configuration)\n    {\n        sqlsugarscope sqlsugar = new sqlsugarscope(new connectionconfig()\n        {\n            dbtype = dbtype.mysql,\n            connectionstring = configuration["mysqlconnection"],\n            isautocloseconnection = true,\n        },\n            db =>\n            {\n                //单例参数配置，所有上下文生效       \n                db.aop.onlogexecuting = (sql, pars) =>\n                {\n                    console.writeline(sql);//输出sql\n                };\n\n                //技巧：拿到非orm注入对象\n                //services.getservice<注入对象>();\n            });\n        services.addsingleton<isqlsugarclient>(sqlsugar);//这边是sqlsugarscope用addsingleton\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 注册配置\n\n在program.cs中添加\n\n// sqlsugar\nbuilder.services.addsqlsugarconfig(builder.configuration);\n\n\n1\n2\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WebApi增删改查05-Log4Net配置",frontmatter:{title:"WebApi增删改查05-Log4Net配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/log4net/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/05.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A505-Log4Net%E9%85%8D%E7%BD%AE.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/05.WebApi增删改查05-Log4Net配置.md",key:"v-70147bcf",path:"/soft/webapi/log4net/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"安装依赖包",slug:"安装依赖包",normalizedTitle:"安装依赖包",charIndex:234},{level:2,title:"新建配置",slug:"新建配置",normalizedTitle:"新建配置",charIndex:246},{level:2,title:"新建数据表",slug:"新建数据表",normalizedTitle:"新建数据表",charIndex:9115},{level:2,title:"日志帮助类",slug:"日志帮助类",normalizedTitle:"日志帮助类",charIndex:10023},{level:2,title:"全局异常类",slug:"全局异常类",normalizedTitle:"全局异常类",charIndex:10570},{level:2,title:"注册服务",slug:"注册服务",normalizedTitle:"注册服务",charIndex:13009},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:3500}],headersStr:"说明 安装依赖包 新建配置 新建数据表 日志帮助类 全局异常类 注册服务 使用",content:'# 说明\n\nlog4net 是从 java 下的 log4j 移植过来的，是一个能够将日志信息输出到各种 不同目标的.net 类库， 主要作用是将程序调试和运行时的各种日志信息进行记录。 log4net主要几个方法： 控制级别，由低到高: ALL ，DEBUG ，INFO， WARN ，ERROR，FATAL，OFF，标签下配置写入级别，写入配置级别以上日志。\n\n参考.Net6 Core Web API 配置 log4net + MySQL-CSDN博客\n\n\n# 安装依赖包\n\n\n\n\n# 新建配置\n\n在Config下新建配置文件Log4net/log4net.Config，文件为始终复制\n\n\n\n<?xml version="1.0" encoding="utf-8"?>\n<configuration>\n\t<configSections>\n\t\t\x3c!-- 读取<log4not>节点 --\x3e\n\t\t<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />\n\t</configSections>\n\n\t<log4net>\n\t\t\x3c!--正常日志：：：记录正常日志--\x3e\n\t\t\x3c!-- appender 定义日志输出方式   将日志以回滚文件的形式写到MySQL数据库中。--\x3e\n\t\t<appender name="ADONetAppender" type="log4net.Appender.ADONetAppender">\n\t\t\t\x3c!-- 代表缓存大小,在没达到缓存大小时,暂时不会存到数据库中, --\x3e\n\t\t\t\x3c!-- 当程序关闭之后,会将未插入的信息加入到数据库中 --\x3e\n\t\t\t<bufferSize value="1" />\n\n\t\t\t\x3c!--引入《MySql.Data》包--\x3e\n\t\t\t<param name="ConnectionType" value="MySql.Data.MySqlClient.MySqlConnection, MySql.Data" />\n\t\t\t\x3c!--配置连接数据库的字符串--\x3e\n\t\t\t<param name="ConnectionString" value="server=192.168.1.5;port=3306;uid=root;pwd=123456;database=caiwei-tool;"/>\n\t\t\t\x3c!--配置MySQL的插入语句--\x3e\n\t\t\t<param name="CommandText" value="insert into log4net(log_datetime, log_thread, log_level, log_logger, log_message) values(@log_datetime, @log_thread , @log_level, @log_logger, @log_message)" />\n\n\t\t\t<param name="Parameter">\n\t\t\t\t<param name="ParameterName" value="@log_datetime" />\n\t\t\t\t<param name="DbType" value="DateTime" />\n\t\t\t\t<param name="Layout" type="log4net.Layout.PatternLayout">\n\t\t\t\t\t<param name="ConversionPattern" value="%d{yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss}" />\n\t\t\t\t</param>\n\t\t\t</param>\n\n\t\t\t<param name="Parameter">\n\t\t\t\t<param name="ParameterName" value="@log_thread" />\n\t\t\t\t<param name="DbType" value="String" />\n\t\t\t\t<param name="Size" value="255" />\n\t\t\t\t<param name="Layout" type="log4net.Layout.PatternLayout">\n\t\t\t\t\t<param name="ConversionPattern" value="%t" />\n\t\t\t\t</param>\n\t\t\t</param>\n\n\t\t\t<param name="Parameter">\n\t\t\t\t<param name="ParameterName" value="@log_level" />\n\t\t\t\t<param name="DbType" value="String" />\n\t\t\t\t<param name="Size" value="255" />\n\t\t\t\t<param name="Layout" type="log4net.Layout.PatternLayout">\n\t\t\t\t\t<param name="ConversionPattern" value="%p" />\n\t\t\t\t</param>\n\t\t\t</param>\n\n\t\t\t<param name="Parameter">\n\t\t\t\t<param name="ParameterName" value="@log_logger" />\n\t\t\t\t<param name="DbType" value="String" />\n\t\t\t\t<param name="Size" value="255" />\n\t\t\t\t<param name="Layout" type="log4net.Layout.PatternLayout">\n\t\t\t\t\t<param name="ConversionPattern" value="%c" />\n\t\t\t\t</param>\n\t\t\t</param>\n\n\t\t\t<param name="Parameter">\n\t\t\t\t<param name="ParameterName" value="@log_message" />\n\t\t\t\t<param name="DbType" value="String" />\n\t\t\t\t<param name="Size" value="4000" />\n\t\t\t\t<param name="Layout" type="log4net.Layout.PatternLayout">\n\t\t\t\t\t<param name="ConversionPattern" value="%m" />\n\t\t\t\t</param>\n\t\t\t</param>\n\n\t\t</appender>\n\n\t\t\x3c!--正常日志：：：记录正常日志--\x3e\n\t\t\x3c!--按日期分割日志文件 一天一个--\x3e\n\t\t\x3c!-- appender 定义日志输出方式   将日志以回滚文件的形式写到文件中。--\x3e\n\t\t<appender name="RollingFile" type="log4net.Appender.RollingFileAppender">\n\t\t\t\x3c!--定义文件存放位置--\x3e\n\t\t\t<file value="Log\\log_"/>\n\t\t\t\x3c!--是否追加到文件--\x3e\n\t\t\t<appendToFile value="true"/>\n\t\t\t\x3c!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全--\x3e\n\t\t\t<lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>\n\t\t\t\x3c!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数--\x3e\n\t\t\t<maxSizeRollBackups value="-1"/>\n\t\t\t\x3c!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])--\x3e\n\t\t\t<rollingStyle value="Composite"/>\n\t\t\t<datePattern value="yyyy\\\\yyyyMM\\\\yyyyMMdd\'.txt\'"/>\n\t\t\t\x3c!--是否只写到一个文件中--\x3e\n\t\t\t<staticLogFileName value="false"/>\n\t\t\t\x3c!--每个文件的大小。只在混合方式与文件大小方式下使用。\n        超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。\n        可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志--\x3e\n\t\t\t<maximumFileSize value="100MB"/>\n\t\t\t\x3c!--计数类型为1，2，3…--\x3e\n\t\t\t\x3c!--<param name="CountDirection" value="1"/>--\x3e\n\t\t\t<layout type="log4net.Layout.PatternLayout">\n\t\t\t\t\x3c!--输出格式-样例：\n\t\t\t记录时间：2022-08-24 17:59:31,172    线程ID：[4]    日志级别：INFO  \n\t\t\t当前类：Log4NetDemo.MainClass    行号：%L\n\t\t\t日志描述：创建连接失败。--\x3e\n\t\t\t\t<conversionPattern value="记录时间：%date    线程ID：[%thread]    日志级别：%-5level %n\n\t\t\t\t\t\t\t当前类：%logger\t\t行号：%L  %n\n\t\t\t\t\t\t\t日志描述：%message%newline %n"/>\n\t\t\t</layout>\n\t\t</appender>\n\n\t\t\x3c!--错误日志：：：记录错误日志--\x3e\n\t\t\x3c!--按日期分割日志文件 一天一个--\x3e\n\t\t\x3c!-- appender 定义日志输出方式   将日志以回滚文件的形式写到文件中。--\x3e\n\t\t<appender name="ErrorAppender" type="log4net.Appender.RollingFileAppender">\n\t\t\t\x3c!--定义文件存放位置--\x3e\n\t\t\t<file value="Log\\error_"/>\n\t\t\t\x3c!--是否追加到文件--\x3e\n\t\t\t<appendToFile value="true"/>\n\t\t\t\x3c!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全--\x3e\n\t\t\t<lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>\n\t\t\t\x3c!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数--\x3e\n\t\t\t<maxSizeRollBackups value="-1"/>\n\t\t\t\x3c!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])--\x3e\n\t\t\t<rollingStyle value="Composite"/>\n\t\t\t<datePattern value="yyyy\\\\yyyyMM\\\\yyyyMMdd\'.txt\'"/>\n\t\t\t\x3c!--是否只写到一个文件中--\x3e\n\t\t\t<staticLogFileName value="false"/>\n\t\t\t\x3c!--每个文件的大小。只在混合方式与文件大小方式下使用。\n        超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。\n        可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志--\x3e\n\t\t\t<maximumFileSize value="100MB"/>\n\t\t\t\x3c!-- layout 控制Appender的输出格式，也可以是xml  一个Appender只能是一个layout--\x3e\n\t\t\t<layout type="log4net.Layout.PatternLayout">\n\t\t\t\t\x3c!--每条日志末尾的文字说明--\x3e\n\t\t\t\t\x3c!--输出格式 模板--\x3e\n\t\t\t\t\x3c!-- <param name="ConversionPattern"  value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger   \n        操作者ID：%property{Operator} 操作类型：%property{Action}%n  当前机器名:%property%n当前机器名及登录用户：%username %n  \n        记录位置：%location%n 消息描述：%property{Message}%n   异常：%exception%n 消息：%message%newline%n%n" />--\x3e\n\n\t\t\t\t\x3c!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info--\x3e\n\t\t\t\t\x3c!--<conversionPattern value="%newline %n记录时间：%date %n线程ID:[%thread] %n日志级别： %-5level %n错误描述：%message%newline %n"/>--\x3e\n\t\t\t\t<conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝\n                                  %n【日志级别】%-5level\n                                  %n【记录时间】%date\n                                  %n【执行时间】[%r]毫秒\n                                  %n【错误位置】%logger 属性[%property{NDC}]\n                                  %n【错误描述】%message\n                                  %n【错误详情】%newline"/>\n\t\t\t</layout>\n\t\t\t<filter type="log4net.Filter.LevelRangeFilter,log4net">\n\t\t\t\t<levelMin value="ERROR" />\n\t\t\t\t<levelMax value="FATAL" />\n\t\t\t</filter>\n\t\t</appender>\n\n\t\t\x3c!--DEBUG：：：记录DEBUG日志--\x3e\n\t\t\x3c!--按日期分割日志文件 一天一个--\x3e\n\t\t\x3c!-- appender 定义日志输出方式   将日志以回滚文件的形式写到文件中。--\x3e\n\t\t<appender name="DebugAppender" type="log4net.Appender.RollingFileAppender">\n\t\t\t\x3c!--定义文件存放位置--\x3e\n\t\t\t<file value="Log\\debug_"/>\n\t\t\t\x3c!--是否追加到文件--\x3e\n\t\t\t<appendToFile value="true"/>\n\t\t\t\x3c!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全--\x3e\n\t\t\t<lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>\n\t\t\t\x3c!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数--\x3e\n\t\t\t<maxSizeRollBackups value="-1"/>\n\t\t\t\x3c!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])--\x3e\n\t\t\t<rollingStyle value="Composite"/>\n\t\t\t<datePattern value="yyyy\\\\yyyyMM\\\\yyyyMMdd\'.txt\'"/>\n\t\t\t\x3c!--是否只写到一个文件中--\x3e\n\t\t\t<staticLogFileName value="false"/>\n\t\t\t\x3c!--每个文件的大小。只在混合方式与文件大小方式下使用。\n        超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。\n        可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志--\x3e\n\t\t\t<maximumFileSize value="100MB"/>\n\t\t\t\x3c!-- layout 控制Appender的输出格式，也可以是xml  一个Appender只能是一个layout--\x3e\n\t\t\t<layout type="log4net.Layout.PatternLayout">\n\t\t\t\t\x3c!--每条日志末尾的文字说明--\x3e\n\t\t\t\t\x3c!--输出格式 模板--\x3e\n\t\t\t\t\x3c!-- <param name="ConversionPattern"  value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger   \n        操作者ID：%property{Operator} 操作类型：%property{Action}%n  当前机器名:%property%n当前机器名及登录用户：%username %n  \n        记录位置：%location%n 消息描述：%property{Message}%n   异常：%exception%n 消息：%message%newline%n%n" />--\x3e\n\n\t\t\t\t\x3c!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info--\x3e\n\t\t\t\t\x3c!--<conversionPattern value="%newline %n记录时间：%date %n线程ID:[%thread] %n日志级别： %-5level %n错误描述：%message%newline %n"/>--\x3e\n\t\t\t\t<conversionPattern value="%n＝＝＝＝＝＝＝＝＝＝\n                                  %n【日志级别】%-2level\n                                  %n【记录时间】%date\n                                  %n【执行时间】[%r]毫秒\n                                  %n【debug位置】%logger 属性[%property{NDC}]\n                                  %n【debug描述】%message"/>\n\t\t\t</layout>\n\t\t\t<filter type="log4net.Filter.LevelRangeFilter,log4net">\n\t\t\t\t<levelMin value="DEBUG" />\n\t\t\t\t<levelMax value="WARN" />\n\t\t\t</filter>\n\t\t</appender>\n\n\t\t<root>\n\t\t\t\x3c!--日志等级：OFF > FATAL > ERROR > WARN > INFO > DEBUG  > ALL--\x3e\n\t\t\t<level value="ALL" />\n\t\t\t<appender-ref ref="ADONetAppender" />\n\t\t\t<appender-ref ref="RollingFile" />\n\t\t\t<appender-ref ref="ErrorAppender" />\n\t\t\t<appender-ref ref="DebugAppender" />\n\t\t</root>\n\n\t</log4net>\n\n</configuration>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n\n\n\n# 新建数据表\n\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ----------------------------\n-- Table structure for log4net\n-- ----------------------------\nDROP TABLE IF EXISTS `log4net`;\nCREATE TABLE `log4net`  (\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `log_datetime` datetime NULL DEFAULT NULL,\n  `log_thread` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL,\n  `log_level` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL,\n  `log_logger` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL,\n  `log_message` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = latin1 COLLATE = latin1_swedish_ci ROW_FORMAT = Dynamic;\n\nSET FOREIGN_KEY_CHECKS = 1;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 日志帮助类\n\nLoggerHelper.cs\n\n/// <summary>\n/// 日志帮助实现类\n/// </summary>\npublic class LoggerHelper<TClass>\n{\n    private static readonly ILog Log = LogManager.GetLogger("LogRepository", typeof(TClass));\n\n    public static void Debug(string msg) => Log.Debug(msg);\n\n    public static void Info(string msg) => Log.Info(msg);\n\n    public static void Warn(string msg) => Log.Warn(msg);\n\n    public static void Error(string msg) => Log.Error(msg);\n\n    public static void Fatal(string msg) => Log.Fatal(msg);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 全局异常类\n\nGLobalExceptionsFilter.cs\n\n/// <summary>\n/// 全局异常错误日志\n/// </summary>\npublic class GlobalExceptionsFilter : IExceptionFilter\n{\n    private readonly IWebHostEnvironment _env;\n    /// <summary>\n    /// 全局异常错误过滤\n    /// </summary>\n    /// <param name="env"></param>\n    public GlobalExceptionsFilter(IWebHostEnvironment env)\n    {\n        _env = env;\n    }\n    /// <summary>\n    /// 异常\n    /// </summary>\n    /// <param name="context"></param>\n    public void OnException(ExceptionContext context)\n    {\n        var json = new JsonErrorResponse();\n        json.Message = context.Exception.Message;//错误信息\n        if (_env.IsDevelopment())\n        {\n            json.DevelopmentMessage = context.Exception.StackTrace;//堆栈信息\n        }\n        context.Result = new InternalServerErrorObjectResult(json);\n\n        //采用log4net 进行错误日志记录\n        LoggerHelper<Exception>.Error(WriteLog(json.Message, context.Exception));\n\n    }\n\n    /// <summary>\n    /// 自定义返回格式\n    /// </summary>\n    /// <param name="throwMsg"></param>\n    /// <param name="ex"></param>\n    /// <returns></returns>\n    public string WriteLog(string throwMsg, Exception ex)\n    {\n        return string.Format("【自定义错误】：{0} \\r\\n" +\n                             "【异常类型】：{1} \\r\\n" +\n                             "【异常信息】：{2} \\r\\n" +\n                             "【堆栈调用】：{3}",\n                             new object[] {\n                             throwMsg,\n                             ex.GetType().Name,\n                             ex.Message,\n                             ex.StackTrace\n                             });\n    }\n\n}\n\n/// <summary>\n/// \n/// </summary>\npublic class InternalServerErrorObjectResult : ObjectResult\n{\n    /// <summary>\n    /// \n    /// </summary>\n    /// <param name="value"></param>\n    public InternalServerErrorObjectResult(object value) : base(value)\n    {\n        StatusCode = StatusCodes.Status500InternalServerError;\n    }\n}\n/// <summary>\n/// 返回错误信息\n/// </summary>\npublic class JsonErrorResponse\n{\n    /// <summary>\n    /// 生产环境的消息\n    /// </summary>\n    public string? Message { get; set; }\n    /// <summary>\n    /// 开发环境的消息\n    /// </summary>\n    public string? DevelopmentMessage { get; set; }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n\n\n\n# 注册服务\n\n修改Controller服务\n\n// 全局配置 log4net\nILoggerRepository repository = LogManager.CreateRepository("LogRepository");\n// 读取配置文件\nXmlConfigurator.Configure(repository, new FileInfo("Config/Log4net/log4net.Config"));\n// 全局异常\nbuilder.Services.AddControllers(options =>\n{\n    options.SuppressAsyncSuffixInActionNames = false;\n    options.Filters.Add(typeof(GlobalExceptionsFilter));\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 使用\n\nLoggerHelper<TestController>.Info("登录成功");\nLoggerHelper<User>.Info("登录成功");\nthrow new Exception("登录成功");\n\n\n1\n2\n3\n',normalizedContent:'# 说明\n\nlog4net 是从 java 下的 log4j 移植过来的，是一个能够将日志信息输出到各种 不同目标的.net 类库， 主要作用是将程序调试和运行时的各种日志信息进行记录。 log4net主要几个方法： 控制级别，由低到高: all ，debug ，info， warn ，error，fatal，off，标签下配置写入级别，写入配置级别以上日志。\n\n参考.net6 core web api 配置 log4net + mysql-csdn博客\n\n\n# 安装依赖包\n\n\n\n\n# 新建配置\n\n在config下新建配置文件log4net/log4net.config，文件为始终复制\n\n\n\n<?xml version="1.0" encoding="utf-8"?>\n<configuration>\n\t<configsections>\n\t\t\x3c!-- 读取<log4not>节点 --\x3e\n\t\t<section name="log4net" type="log4net.config.log4netconfigurationsectionhandler, log4net" />\n\t</configsections>\n\n\t<log4net>\n\t\t\x3c!--正常日志：：：记录正常日志--\x3e\n\t\t\x3c!-- appender 定义日志输出方式   将日志以回滚文件的形式写到mysql数据库中。--\x3e\n\t\t<appender name="adonetappender" type="log4net.appender.adonetappender">\n\t\t\t\x3c!-- 代表缓存大小,在没达到缓存大小时,暂时不会存到数据库中, --\x3e\n\t\t\t\x3c!-- 当程序关闭之后,会将未插入的信息加入到数据库中 --\x3e\n\t\t\t<buffersize value="1" />\n\n\t\t\t\x3c!--引入《mysql.data》包--\x3e\n\t\t\t<param name="connectiontype" value="mysql.data.mysqlclient.mysqlconnection, mysql.data" />\n\t\t\t\x3c!--配置连接数据库的字符串--\x3e\n\t\t\t<param name="connectionstring" value="server=192.168.1.5;port=3306;uid=root;pwd=123456;database=caiwei-tool;"/>\n\t\t\t\x3c!--配置mysql的插入语句--\x3e\n\t\t\t<param name="commandtext" value="insert into log4net(log_datetime, log_thread, log_level, log_logger, log_message) values(@log_datetime, @log_thread , @log_level, @log_logger, @log_message)" />\n\n\t\t\t<param name="parameter">\n\t\t\t\t<param name="parametername" value="@log_datetime" />\n\t\t\t\t<param name="dbtype" value="datetime" />\n\t\t\t\t<param name="layout" type="log4net.layout.patternlayout">\n\t\t\t\t\t<param name="conversionpattern" value="%d{yyyy\'-\'mm\'-\'dd hh\':\'mm\':\'ss}" />\n\t\t\t\t</param>\n\t\t\t</param>\n\n\t\t\t<param name="parameter">\n\t\t\t\t<param name="parametername" value="@log_thread" />\n\t\t\t\t<param name="dbtype" value="string" />\n\t\t\t\t<param name="size" value="255" />\n\t\t\t\t<param name="layout" type="log4net.layout.patternlayout">\n\t\t\t\t\t<param name="conversionpattern" value="%t" />\n\t\t\t\t</param>\n\t\t\t</param>\n\n\t\t\t<param name="parameter">\n\t\t\t\t<param name="parametername" value="@log_level" />\n\t\t\t\t<param name="dbtype" value="string" />\n\t\t\t\t<param name="size" value="255" />\n\t\t\t\t<param name="layout" type="log4net.layout.patternlayout">\n\t\t\t\t\t<param name="conversionpattern" value="%p" />\n\t\t\t\t</param>\n\t\t\t</param>\n\n\t\t\t<param name="parameter">\n\t\t\t\t<param name="parametername" value="@log_logger" />\n\t\t\t\t<param name="dbtype" value="string" />\n\t\t\t\t<param name="size" value="255" />\n\t\t\t\t<param name="layout" type="log4net.layout.patternlayout">\n\t\t\t\t\t<param name="conversionpattern" value="%c" />\n\t\t\t\t</param>\n\t\t\t</param>\n\n\t\t\t<param name="parameter">\n\t\t\t\t<param name="parametername" value="@log_message" />\n\t\t\t\t<param name="dbtype" value="string" />\n\t\t\t\t<param name="size" value="4000" />\n\t\t\t\t<param name="layout" type="log4net.layout.patternlayout">\n\t\t\t\t\t<param name="conversionpattern" value="%m" />\n\t\t\t\t</param>\n\t\t\t</param>\n\n\t\t</appender>\n\n\t\t\x3c!--正常日志：：：记录正常日志--\x3e\n\t\t\x3c!--按日期分割日志文件 一天一个--\x3e\n\t\t\x3c!-- appender 定义日志输出方式   将日志以回滚文件的形式写到文件中。--\x3e\n\t\t<appender name="rollingfile" type="log4net.appender.rollingfileappender">\n\t\t\t\x3c!--定义文件存放位置--\x3e\n\t\t\t<file value="log\\log_"/>\n\t\t\t\x3c!--是否追加到文件--\x3e\n\t\t\t<appendtofile value="true"/>\n\t\t\t\x3c!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写log,官方说线程非安全--\x3e\n\t\t\t<lockingmodel type="log4net.appender.fileappender+minimallock"/>\n\t\t\t\x3c!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数--\x3e\n\t\t\t<maxsizerollbackups value="-1"/>\n\t\t\t\x3c!--按照何种方式产生多个日志文件(日期[date],文件大小[size],混合[composite])--\x3e\n\t\t\t<rollingstyle value="composite"/>\n\t\t\t<datepattern value="yyyy\\\\yyyymm\\\\yyyymmdd\'.txt\'"/>\n\t\t\t\x3c!--是否只写到一个文件中--\x3e\n\t\t\t<staticlogfilename value="false"/>\n\t\t\t\x3c!--每个文件的大小。只在混合方式与文件大小方式下使用。\n        超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。\n        可用的单位:kb|mb|gb。不要使用小数,否则会一直写入当前日志--\x3e\n\t\t\t<maximumfilesize value="100mb"/>\n\t\t\t\x3c!--计数类型为1，2，3…--\x3e\n\t\t\t\x3c!--<param name="countdirection" value="1"/>--\x3e\n\t\t\t<layout type="log4net.layout.patternlayout">\n\t\t\t\t\x3c!--输出格式-样例：\n\t\t\t记录时间：2022-08-24 17:59:31,172    线程id：[4]    日志级别：info  \n\t\t\t当前类：log4netdemo.mainclass    行号：%l\n\t\t\t日志描述：创建连接失败。--\x3e\n\t\t\t\t<conversionpattern value="记录时间：%date    线程id：[%thread]    日志级别：%-5level %n\n\t\t\t\t\t\t\t当前类：%logger\t\t行号：%l  %n\n\t\t\t\t\t\t\t日志描述：%message%newline %n"/>\n\t\t\t</layout>\n\t\t</appender>\n\n\t\t\x3c!--错误日志：：：记录错误日志--\x3e\n\t\t\x3c!--按日期分割日志文件 一天一个--\x3e\n\t\t\x3c!-- appender 定义日志输出方式   将日志以回滚文件的形式写到文件中。--\x3e\n\t\t<appender name="errorappender" type="log4net.appender.rollingfileappender">\n\t\t\t\x3c!--定义文件存放位置--\x3e\n\t\t\t<file value="log\\error_"/>\n\t\t\t\x3c!--是否追加到文件--\x3e\n\t\t\t<appendtofile value="true"/>\n\t\t\t\x3c!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写log,官方说线程非安全--\x3e\n\t\t\t<lockingmodel type="log4net.appender.fileappender+minimallock"/>\n\t\t\t\x3c!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数--\x3e\n\t\t\t<maxsizerollbackups value="-1"/>\n\t\t\t\x3c!--按照何种方式产生多个日志文件(日期[date],文件大小[size],混合[composite])--\x3e\n\t\t\t<rollingstyle value="composite"/>\n\t\t\t<datepattern value="yyyy\\\\yyyymm\\\\yyyymmdd\'.txt\'"/>\n\t\t\t\x3c!--是否只写到一个文件中--\x3e\n\t\t\t<staticlogfilename value="false"/>\n\t\t\t\x3c!--每个文件的大小。只在混合方式与文件大小方式下使用。\n        超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。\n        可用的单位:kb|mb|gb。不要使用小数,否则会一直写入当前日志--\x3e\n\t\t\t<maximumfilesize value="100mb"/>\n\t\t\t\x3c!-- layout 控制appender的输出格式，也可以是xml  一个appender只能是一个layout--\x3e\n\t\t\t<layout type="log4net.layout.patternlayout">\n\t\t\t\t\x3c!--每条日志末尾的文字说明--\x3e\n\t\t\t\t\x3c!--输出格式 模板--\x3e\n\t\t\t\t\x3c!-- <param name="conversionpattern"  value="记录时间：%date 线程id:[%thread] 日志级别：%-5level 记录类：%logger   \n        操作者id：%property{operator} 操作类型：%property{action}%n  当前机器名:%property%n当前机器名及登录用户：%username %n  \n        记录位置：%location%n 消息描述：%property{message}%n   异常：%exception%n 消息：%message%newline%n%n" />--\x3e\n\n\t\t\t\t\x3c!--样例：2008-03-26 13:42:32,111 [10] info  log4netdemo.mainclass [(null)] - info--\x3e\n\t\t\t\t\x3c!--<conversionpattern value="%newline %n记录时间：%date %n线程id:[%thread] %n日志级别： %-5level %n错误描述：%message%newline %n"/>--\x3e\n\t\t\t\t<conversionpattern value="%n＝＝＝＝＝＝＝＝＝＝\n                                  %n【日志级别】%-5level\n                                  %n【记录时间】%date\n                                  %n【执行时间】[%r]毫秒\n                                  %n【错误位置】%logger 属性[%property{ndc}]\n                                  %n【错误描述】%message\n                                  %n【错误详情】%newline"/>\n\t\t\t</layout>\n\t\t\t<filter type="log4net.filter.levelrangefilter,log4net">\n\t\t\t\t<levelmin value="error" />\n\t\t\t\t<levelmax value="fatal" />\n\t\t\t</filter>\n\t\t</appender>\n\n\t\t\x3c!--debug：：：记录debug日志--\x3e\n\t\t\x3c!--按日期分割日志文件 一天一个--\x3e\n\t\t\x3c!-- appender 定义日志输出方式   将日志以回滚文件的形式写到文件中。--\x3e\n\t\t<appender name="debugappender" type="log4net.appender.rollingfileappender">\n\t\t\t\x3c!--定义文件存放位置--\x3e\n\t\t\t<file value="log\\debug_"/>\n\t\t\t\x3c!--是否追加到文件--\x3e\n\t\t\t<appendtofile value="true"/>\n\t\t\t\x3c!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写log,官方说线程非安全--\x3e\n\t\t\t<lockingmodel type="log4net.appender.fileappender+minimallock"/>\n\t\t\t\x3c!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数--\x3e\n\t\t\t<maxsizerollbackups value="-1"/>\n\t\t\t\x3c!--按照何种方式产生多个日志文件(日期[date],文件大小[size],混合[composite])--\x3e\n\t\t\t<rollingstyle value="composite"/>\n\t\t\t<datepattern value="yyyy\\\\yyyymm\\\\yyyymmdd\'.txt\'"/>\n\t\t\t\x3c!--是否只写到一个文件中--\x3e\n\t\t\t<staticlogfilename value="false"/>\n\t\t\t\x3c!--每个文件的大小。只在混合方式与文件大小方式下使用。\n        超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。\n        可用的单位:kb|mb|gb。不要使用小数,否则会一直写入当前日志--\x3e\n\t\t\t<maximumfilesize value="100mb"/>\n\t\t\t\x3c!-- layout 控制appender的输出格式，也可以是xml  一个appender只能是一个layout--\x3e\n\t\t\t<layout type="log4net.layout.patternlayout">\n\t\t\t\t\x3c!--每条日志末尾的文字说明--\x3e\n\t\t\t\t\x3c!--输出格式 模板--\x3e\n\t\t\t\t\x3c!-- <param name="conversionpattern"  value="记录时间：%date 线程id:[%thread] 日志级别：%-5level 记录类：%logger   \n        操作者id：%property{operator} 操作类型：%property{action}%n  当前机器名:%property%n当前机器名及登录用户：%username %n  \n        记录位置：%location%n 消息描述：%property{message}%n   异常：%exception%n 消息：%message%newline%n%n" />--\x3e\n\n\t\t\t\t\x3c!--样例：2008-03-26 13:42:32,111 [10] info  log4netdemo.mainclass [(null)] - info--\x3e\n\t\t\t\t\x3c!--<conversionpattern value="%newline %n记录时间：%date %n线程id:[%thread] %n日志级别： %-5level %n错误描述：%message%newline %n"/>--\x3e\n\t\t\t\t<conversionpattern value="%n＝＝＝＝＝＝＝＝＝＝\n                                  %n【日志级别】%-2level\n                                  %n【记录时间】%date\n                                  %n【执行时间】[%r]毫秒\n                                  %n【debug位置】%logger 属性[%property{ndc}]\n                                  %n【debug描述】%message"/>\n\t\t\t</layout>\n\t\t\t<filter type="log4net.filter.levelrangefilter,log4net">\n\t\t\t\t<levelmin value="debug" />\n\t\t\t\t<levelmax value="warn" />\n\t\t\t</filter>\n\t\t</appender>\n\n\t\t<root>\n\t\t\t\x3c!--日志等级：off > fatal > error > warn > info > debug  > all--\x3e\n\t\t\t<level value="all" />\n\t\t\t<appender-ref ref="adonetappender" />\n\t\t\t<appender-ref ref="rollingfile" />\n\t\t\t<appender-ref ref="errorappender" />\n\t\t\t<appender-ref ref="debugappender" />\n\t\t</root>\n\n\t</log4net>\n\n</configuration>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n\n\n\n# 新建数据表\n\nset names utf8mb4;\nset foreign_key_checks = 0;\n\n-- ----------------------------\n-- table structure for log4net\n-- ----------------------------\ndrop table if exists `log4net`;\ncreate table `log4net`  (\n  `id` bigint(20) not null auto_increment,\n  `log_datetime` datetime null default null,\n  `log_thread` varchar(255) character set utf8mb4 collate utf8mb4_unicode_ci null default null,\n  `log_level` varchar(255) character set utf8mb4 collate utf8mb4_unicode_ci null default null,\n  `log_logger` varchar(255) character set utf8mb4 collate utf8mb4_unicode_ci null default null,\n  `log_message` varchar(255) character set utf8mb4 collate utf8mb4_unicode_ci null default null,\n  primary key (`id`) using btree\n) engine = innodb auto_increment = 1 character set = latin1 collate = latin1_swedish_ci row_format = dynamic;\n\nset foreign_key_checks = 1;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 日志帮助类\n\nloggerhelper.cs\n\n/// <summary>\n/// 日志帮助实现类\n/// </summary>\npublic class loggerhelper<tclass>\n{\n    private static readonly ilog log = logmanager.getlogger("logrepository", typeof(tclass));\n\n    public static void debug(string msg) => log.debug(msg);\n\n    public static void info(string msg) => log.info(msg);\n\n    public static void warn(string msg) => log.warn(msg);\n\n    public static void error(string msg) => log.error(msg);\n\n    public static void fatal(string msg) => log.fatal(msg);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 全局异常类\n\nglobalexceptionsfilter.cs\n\n/// <summary>\n/// 全局异常错误日志\n/// </summary>\npublic class globalexceptionsfilter : iexceptionfilter\n{\n    private readonly iwebhostenvironment _env;\n    /// <summary>\n    /// 全局异常错误过滤\n    /// </summary>\n    /// <param name="env"></param>\n    public globalexceptionsfilter(iwebhostenvironment env)\n    {\n        _env = env;\n    }\n    /// <summary>\n    /// 异常\n    /// </summary>\n    /// <param name="context"></param>\n    public void onexception(exceptioncontext context)\n    {\n        var json = new jsonerrorresponse();\n        json.message = context.exception.message;//错误信息\n        if (_env.isdevelopment())\n        {\n            json.developmentmessage = context.exception.stacktrace;//堆栈信息\n        }\n        context.result = new internalservererrorobjectresult(json);\n\n        //采用log4net 进行错误日志记录\n        loggerhelper<exception>.error(writelog(json.message, context.exception));\n\n    }\n\n    /// <summary>\n    /// 自定义返回格式\n    /// </summary>\n    /// <param name="throwmsg"></param>\n    /// <param name="ex"></param>\n    /// <returns></returns>\n    public string writelog(string throwmsg, exception ex)\n    {\n        return string.format("【自定义错误】：{0} \\r\\n" +\n                             "【异常类型】：{1} \\r\\n" +\n                             "【异常信息】：{2} \\r\\n" +\n                             "【堆栈调用】：{3}",\n                             new object[] {\n                             throwmsg,\n                             ex.gettype().name,\n                             ex.message,\n                             ex.stacktrace\n                             });\n    }\n\n}\n\n/// <summary>\n/// \n/// </summary>\npublic class internalservererrorobjectresult : objectresult\n{\n    /// <summary>\n    /// \n    /// </summary>\n    /// <param name="value"></param>\n    public internalservererrorobjectresult(object value) : base(value)\n    {\n        statuscode = statuscodes.status500internalservererror;\n    }\n}\n/// <summary>\n/// 返回错误信息\n/// </summary>\npublic class jsonerrorresponse\n{\n    /// <summary>\n    /// 生产环境的消息\n    /// </summary>\n    public string? message { get; set; }\n    /// <summary>\n    /// 开发环境的消息\n    /// </summary>\n    public string? developmentmessage { get; set; }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n\n\n\n# 注册服务\n\n修改controller服务\n\n// 全局配置 log4net\niloggerrepository repository = logmanager.createrepository("logrepository");\n// 读取配置文件\nxmlconfigurator.configure(repository, new fileinfo("config/log4net/log4net.config"));\n// 全局异常\nbuilder.services.addcontrollers(options =>\n{\n    options.suppressasyncsuffixinactionnames = false;\n    options.filters.add(typeof(globalexceptionsfilter));\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 使用\n\nloggerhelper<testcontroller>.info("登录成功");\nloggerhelper<user>.info("登录成功");\nthrow new exception("登录成功");\n\n\n1\n2\n3\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WebApi增删改查06-AutoMapper配置",frontmatter:{title:"WebApi增删改查06-AutoMapper配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/automapper/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/06.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A506-AutoMapper%E9%85%8D%E7%BD%AE.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/06.WebApi增删改查06-AutoMapper配置.md",key:"v-1063e789",path:"/soft/webapi/automapper/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:3,title:"什么是AutoMapper",slug:"什么是automapper",normalizedTitle:"什么是automapper",charIndex:9},{level:3,title:"为什么要做对象之间的映射",slug:"为什么要做对象之间的映射",normalizedTitle:"为什么要做对象之间的映射",charIndex:168},{level:2,title:"安装包",slug:"安装包",normalizedTitle:"安装包",charIndex:432},{level:2,title:"注册",slug:"注册",normalizedTitle:"注册",charIndex:442},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:378}],headersStr:"说明 什么是AutoMapper 为什么要做对象之间的映射 安装包 注册 使用",content:'# 说明\n\n\n# 什么是AutoMapper\n\nAutoMapper是以.NET(C#)语言开发的一个轻量的处理一个实体对象到另一个实体对象之间映射关系的组件库。\n\n开发人员需要做的是通过AutoMapper配置两个实体对象之间的一些映射关系，就可以直接实现映射关系的复用，提高开发效率，减少重复代码。\n\n官网地址\n\n文档地址\n\n\n# 为什么要做对象之间的映射\n\n为了降低现代开发框架的复杂度，往往需要做代码分层，分层之后，必然出现不同的数据承载对象VO、BO、Entity ，从设计的角度来说，VO、BO、Entity 的设计思路并不违反 DRY 原则，为了分层清晰、减少耦合，多维护几个类的成本也并不是不能接受的，对于代码重复的问题，我们可以通过继承或者组合来解决。\n\n层与层之间数据对象的转换工作是一个非常常见的情况，最简单的方式就是手动复制。当然，使用数据对象转化工具，可以大大简化繁琐的对象转化工作，AutoMapper就是一种很好的转换工具。\n\n\n# 安装包\n\n\n\n\n# 注册\n\n在Program.cs中添加\n\n#region 初始化AutoMapper 自动映射\nvar serviceAssembly = Assembly.Load("Test.Api");\nbuilder.Services.AddAutoMapper(serviceAssembly);\n#endregion\n\n\n1\n2\n3\n4\n\n\n\n# 使用\n\n在Config文件夹下新建类\n\nAutoMapperConfig.cs\n\n/// <summary>\n/// 自动映射\n/// </summary>\npublic class AutoMapperConfig : Profile\n{\n    /// <summary>\n    /// 自动映射\n    /// </summary>\n    public AutoMapperConfig()\n    {\n        //CreateMap<SysUserDO, SysUserRespVO>();\n\t\t//CreateMap<SysUserDO, SysUserRespVO>().ReverseMap();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n',normalizedContent:'# 说明\n\n\n# 什么是automapper\n\nautomapper是以.net(c#)语言开发的一个轻量的处理一个实体对象到另一个实体对象之间映射关系的组件库。\n\n开发人员需要做的是通过automapper配置两个实体对象之间的一些映射关系，就可以直接实现映射关系的复用，提高开发效率，减少重复代码。\n\n官网地址\n\n文档地址\n\n\n# 为什么要做对象之间的映射\n\n为了降低现代开发框架的复杂度，往往需要做代码分层，分层之后，必然出现不同的数据承载对象vo、bo、entity ，从设计的角度来说，vo、bo、entity 的设计思路并不违反 dry 原则，为了分层清晰、减少耦合，多维护几个类的成本也并不是不能接受的，对于代码重复的问题，我们可以通过继承或者组合来解决。\n\n层与层之间数据对象的转换工作是一个非常常见的情况，最简单的方式就是手动复制。当然，使用数据对象转化工具，可以大大简化繁琐的对象转化工作，automapper就是一种很好的转换工具。\n\n\n# 安装包\n\n\n\n\n# 注册\n\n在program.cs中添加\n\n#region 初始化automapper 自动映射\nvar serviceassembly = assembly.load("test.api");\nbuilder.services.addautomapper(serviceassembly);\n#endregion\n\n\n1\n2\n3\n4\n\n\n\n# 使用\n\n在config文件夹下新建类\n\nautomapperconfig.cs\n\n/// <summary>\n/// 自动映射\n/// </summary>\npublic class automapperconfig : profile\n{\n    /// <summary>\n    /// 自动映射\n    /// </summary>\n    public automapperconfig()\n    {\n        //createmap<sysuserdo, sysuserrespvo>();\n\t\t//createmap<sysuserdo, sysuserrespvo>().reversemap();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WebApi增删改查07-用户增删改查",frontmatter:{title:"WebApi增删改查07-用户增删改查",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/user/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/07.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A507-%E7%94%A8%E6%88%B7%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/07.WebApi增删改查07-用户增删改查.md",key:"v-707cfa82",path:"/soft/webapi/user/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"数据表",slug:"数据表",normalizedTitle:"数据表",charIndex:27},{level:2,title:"格式化返回数据",slug:"格式化返回数据",normalizedTitle:"格式化返回数据",charIndex:1593},{level:2,title:"分页实体",slug:"分页实体",normalizedTitle:"分页实体",charIndex:2537},{level:2,title:"用户实体",slug:"用户实体",normalizedTitle:"用户实体",charIndex:7952},{level:2,title:"AutoMapper自动映射",slug:"automapper自动映射",normalizedTitle:"automapper自动映射",charIndex:10728},{level:2,title:"用户接口与实现",slug:"用户接口与实现",normalizedTitle:"用户接口与实现",charIndex:11068},{level:2,title:"API控制器",slug:"api控制器",normalizedTitle:"api控制器",charIndex:15709},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:18626},{level:3,title:"新增",slug:"新增",normalizedTitle:"新增",charIndex:9781},{level:3,title:"删除",slug:"删除",normalizedTitle:"删除",charIndex:12080},{level:3,title:"查询单条数据",slug:"查询单条数据",normalizedTitle:"查询单条数据",charIndex:18676},{level:3,title:"查询所有数据",slug:"查询所有数据",normalizedTitle:"查询所有数据",charIndex:18691},{level:3,title:"查询分页数据",slug:"查询分页数据",normalizedTitle:"查询分页数据",charIndex:18706},{level:3,title:"更新用户",slug:"更新用户",normalizedTitle:"更新用户",charIndex:11415}],headersStr:"说明 数据表 格式化返回数据 分页实体 用户实体 AutoMapper自动映射 用户接口与实现 API控制器 测试 新增 删除 查询单条数据 查询所有数据 查询分页数据 更新用户",content:'# 说明\n\n实现用户的增删改查，包含分页实现\n\n\n# 数据表\n\n-- ----------------------------\n-- Table structure for sys_user\n-- ----------------------------\nDROP TABLE IF EXISTS `sys_user`;\nCREATE TABLE `sys_user`  (\n  `id` bigint NOT NULL AUTO_INCREMENT COMMENT \'用户ID\',\n  `username` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT \'用户账号\',\n  `password` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT \'\' COMMENT \'密码\',\n  `nickname` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT \'用户昵称\',\n  `remark` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT \'备注\',\n  `avatar` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT \'\' COMMENT \'头像地址\',\n  `login_ip` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT \'\' COMMENT \'最后登录IP\',\n  `login_date` datetime NULL DEFAULT NULL COMMENT \'最后登录时间\',\n  `creator` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT \'\' COMMENT \'创建者\',\n  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT \'创建时间\',\n  `updater` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT \'\' COMMENT \'更新者\',\n  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT \'更新时间\',\n  PRIMARY KEY (`id`) USING BTREE,\n  UNIQUE INDEX `idx_username`(`username` ASC, `update_time` ASC) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci COMMENT = \'用户信息表\';\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 格式化返回数据\n\n前后端共同使用，建立在Share工程下，Common/JsonResult.cs\n\npublic class JsonResult\n{\n    public string? Msg { get; set; }\n    public int Code { get; set; }\n    public object? Data { get; set; }\n    \n    public static JsonResult Success()\n    {\n        return new JsonResult\n        {\n            Code = 200,\n            Msg = "操作成功"\n        };\n    }\n\n    public static JsonResult Success(object obj)\n    {\n        return new JsonResult\n        {\n            Code = 200,\n            Msg = "操作成功",\n            Data = obj\n        };\n    }\n\n    public static JsonResult Error(string msg)\n    {\n        return new JsonResult\n        {\n            Code = 500,\n            Msg = msg\n        };\n    }\n}\n\npublic class JsonResult<T>\n{\n    public string? Msg { get; set; }\n    public int Code { get; set; }\n    public T? Data { get; set; }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\n\n# 分页实体\n\nShare工程存放Model，PageResult.cs\n\n/// <summary>\n/// 分页泛型集合\n/// </summary>\n/// <typeparam name="TEntity"></typeparam>\npublic class PageResult<TEntity>\n{\n    /// <summary>\n    /// 页码\n    /// </summary>\n    public int Page { get; set; }\n\n    /// <summary>\n    /// 页容量\n    /// </summary>\n    public int PageSize { get; set; }\n\n    /// <summary>\n    /// 总条数\n    /// </summary>\n    public int Total { get; set; }\n\n    /// <summary>\n    /// 总页数\n    /// </summary>\n    public int TotalPages { get; set; }\n\n    /// <summary>\n    /// 当前页集合\n    /// </summary>\n    public IEnumerable<TEntity>? Items { get; set; }\n\n    /// <summary>\n    /// 是否有上一页\n    /// </summary>\n    public bool HasPrevPage { get; set; }\n\n    /// <summary>\n    /// 是否有下一页\n    /// </summary>\n    public bool HasNextPage { get; set; }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\nApi工程存放实现，依赖于SqlSugar\n\n/// <summary>\n/// 分页拓展类\n/// </summary>\npublic static class PageResult\n{\n    /// <summary>\n    /// 分页拓展\n    /// </summary>\n    /// <param name="query"><see cref="ISugarQueryable{TEntity}"/>对象</param>\n    /// <param name="pageIndex">当前页码，从1开始</param>\n    /// <param name="pageSize">页码容量</param>\n    /// <param name="expression">查询结果 Select 表达式</param>\n    /// <returns></returns>\n    public static PageResult<TResult> ToPagedList<TEntity, TResult>(this ISugarQueryable<TEntity> query, int pageIndex, int pageSize,\n        Expression<Func<TEntity, TResult>> expression)\n    {\n        var total = 0;\n        var items = query.ToPageList(pageIndex, pageSize, ref total, expression);\n        return CreatePagedList(items, total, pageIndex, pageSize);\n    }\n\n    /// <summary>\n    /// 分页拓展\n    /// </summary>\n    /// <param name="query"><see cref="ISugarQueryable{TEntity}"/>对象</param>\n    /// <param name="pageIndex">当前页码，从1开始</param>\n    /// <param name="pageSize">页码容量</param>\n    /// <returns></returns>\n    public static PageResult<TEntity> ToPagedList<TEntity>(this ISugarQueryable<TEntity> query, int pageIndex, int pageSize)\n    {\n        var total = 0;\n        var items = query.ToPageList(pageIndex, pageSize, ref total);\n        return CreatePagedList(items, total, pageIndex, pageSize);\n    }\n\n    /// <summary>\n    /// 分页拓展\n    /// </summary>\n    /// <param name="query"><see cref="ISugarQueryable{TEntity}"/>对象</param>\n    /// <param name="pageIndex">当前页码，从1开始</param>\n    /// <param name="pageSize">页码容量</param>\n    /// <param name="expression">查询结果 Select 表达式</param>\n    /// <returns></returns>\n    public static async Task<PageResult<TResult>> ToPagedListAsync<TEntity, TResult>(this ISugarQueryable<TEntity> query, int pageIndex, int pageSize,\n        Expression<Func<TEntity, TResult>> expression)\n    {\n        RefAsync<int> total = 0;\n        var items = await query.ToPageListAsync(pageIndex, pageSize, total, expression);\n        return CreatePagedList(items, total, pageIndex, pageSize);\n    }\n\n    /// <summary>\n    /// 分页拓展\n    /// </summary>\n    /// <param name="query"><see cref="ISugarQueryable{TEntity}"/>对象</param>\n    /// <param name="pageIndex">当前页码，从1开始</param>\n    /// <param name="pageSize">页码容量</param>\n    /// <returns></returns>\n    public static async Task<PageResult<TEntity>> ToPagedListAsync<TEntity>(this ISugarQueryable<TEntity> query, int pageIndex, int pageSize)\n    {\n        RefAsync<int> total = 0;\n        var items = await query.ToPageListAsync(pageIndex, pageSize, total);\n        return CreatePagedList(items, total, pageIndex, pageSize);\n    }\n\n    /// <summary>\n    /// 分页拓展\n    /// </summary>\n    /// <param name="list">集合对象</param>\n    /// <param name="pageIndex">当前页码，从1开始</param>\n    /// <param name="pageSize">页码容量</param>\n    /// <returns></returns>\n    public static PageResult<TEntity> ToPagedList<TEntity>(this IEnumerable<TEntity> list, int pageIndex, int pageSize)\n    {\n        var total = list.Count();\n        var items = list.Skip((pageIndex - 1) * pageSize).Take(pageSize).ToList();\n        return CreatePagedList(items, total, pageIndex, pageSize);\n    }\n\n    /// <summary>\n    /// 创建 <see cref="PageResult{TEntity}"/> 对象\n    /// </summary>\n    /// <typeparam name="TEntity"></typeparam>\n    /// <param name="items">分页内容的对象集合</param>\n    /// <param name="total">总条数</param>\n    /// <param name="pageIndex">当前页码，从1开始</param>\n    /// <param name="pageSize">页码容量</param>\n    /// <returns></returns>\n    private static PageResult<TEntity> CreatePagedList<TEntity>(IEnumerable<TEntity> items, int total, int pageIndex, int pageSize)\n    {\n        var totalPages = pageSize > 0 ? (int)Math.Ceiling(total / (double)pageSize) : 0;\n        return new PageResult<TEntity>\n        {\n            Page = pageIndex,\n            PageSize = pageSize,\n            Items = items,\n            Total = total,\n            TotalPages = totalPages,\n            HasNextPage = pageIndex < totalPages,\n            HasPrevPage = pageIndex - 1 > 0\n        };\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n\n\n分页参数实体，用于分页查询，公共项目使用，PageParam.cs\n\npublic class PageParam\n{\n    public int PageNo { get; set; } = 1;\n    public int PageSize { get; set; } = 10;\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 用户实体\n\n * DO，与数据库对应\n   \n   在Api工程中新建基本实体类DAL/BaseDO.cs\n   \n   public class BaseDO\n   {\n       [SugarColumn(ColumnName = "id", IsPrimaryKey = true, ColumnDescription = "主键")]\n       public long Id { get; set; }\n       [SugarColumn(ColumnName = "create_time", ColumnDescription = "创建时间")]\n       public DateTime CreateTime { get; set; } = DateTime.Now;\n       [SugarColumn(ColumnName = "creator", ColumnDescription = "创建人")]\n       public string? Creator { get; set; }\n       [SugarColumn(ColumnName = "update_time", ColumnDescription = "更新时间")]\n       public DateTime UpdateTime { get; set; } = DateTime.Now;\n       [SugarColumn(ColumnName = "updater", ColumnDescription = "更新人")]\n       public string? Updater { get; set; }\n       [SugarColumn(ColumnName = "remark", ColumnDescription = "备注")]\n       public string Remark { get; set; }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n   \n   在Api工程中新建基本实体类DAL/SysUserDO.cs\n   \n   [SugarTable("sys_user")]\n   public class SysUserDO : BaseDO\n   {\n       [SugarColumn(ColumnName = "username", ColumnDescription = "用户名")]\n       public string Username { get; set; }\n       [SugarColumn(ColumnName = "nickname", ColumnDescription = "昵称")]\n       public string Nickname { get; set; }\n       [SugarColumn(ColumnName = "password", ColumnDescription = "密码")]\n       public string Password { get; set; }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * VO，页面展示或其它请求参数，VO建在共享项目Share中，前后端共同使用，命名中Req为请求，Resp为响应\n   \n   * SysUserBaseModel，基类\n     \n     public class SysUserBaseVO\n     {\n         public string Username { get; set; }\n         public string Nickname { get; set; }\n         public string? Remark { get; set; }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n   \n   * SysUserCreateReqModel，新增请求\n     \n     public class SysUserCreateReqVO : SysUserBaseVO\n     {\n         public string Password { get; set; }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     \n   \n   * SysUserUpdateReqModel，更新请求\n     \n     public class SysUserUpdateReqVO : SysUserBaseVO\n     {\n         public long Id { get; set; }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     \n   \n   * SysUserPageReqModel，分页查询\n     \n     public class SysUserPageReqVO : PageParam\n     {\n         public string? Username { get; set; }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     \n   \n   * SysUserPageRespModel，前台展示\n     \n     public class SysUserRespVO\n     {\n         public long Id { get; set; }\n         public string Username { get; set; }\n         public string Nickname { get; set; }\n         public string? Remark { get; set; }\n         public DateTime CreateTime { get; set; }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n\n\n# AutoMapper自动映射\n\n打开之前创建的AutoMapperConfig类，添加映射\n\n/// <summary>\n/// 映射配置\n/// </summary>\npublic AutoMapperConfig()\n{\n    CreateMap<SysUserCreateReqVO, SysUserDO>();\n    CreateMap<SysUserUpdateReqVO, SysUserDO>();\n    CreateMap<SysUserDO, SysUserRespVO>();\n    //CreateMap<SysUserDO, SysUserRespVO>().ReverseMap();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 用户接口与实现\n\n在WebApi工程中Service，新建接口ISysUserService与实现SysUserService\n\n/// <summary>\n/// 用户接口\n/// </summary>\npublic interface ISysUserService\n{\n    /// <summary>\n    /// 创建用户\n    /// </summary>\n    /// <param name="reqVO"></param>\n    /// <returns></returns>\n    public Task<long> Create([FromBody] SysUserCreateReqVO reqVO);\n\n    /// <summary>\n    /// 更新用户\n    /// </summary>\n    /// <param name="reqVO"></param>\n    /// <returns></returns>\n    public Task<long> Update([FromBody] SysUserUpdateReqVO reqVO);\n\n    /// <summary>\n    /// 分页查询\n    /// </summary>\n    /// <param name="param"></param>\n    /// <returns></returns>\n\n    public Task<List<SysUserRespVO>> Page([FromQuery] SysUserPageReqVO param);\n\n    /// <summary>\n    /// 查询所有\n    /// </summary>\n    /// <returns></returns>\n    public Task<List<SysUserRespVO>> List();\n\n    /// <summary>\n    /// 根据ID查询单个\n    /// </summary>\n    /// <param name="id"></param>\n    /// <returns></returns>\n    public Task<SysUserRespVO> Get(long id);\n\n    /// <summary>\n    /// 删除用户\n    /// </summary>\n    /// <param name="id"></param>\n    /// <returns></returns>\n    public Task Delete(long id);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\n\n/// <summary>\n/// 用户接口实现\n/// </summary>\npublic class SysUserService : ISysUserService\n{\n    private readonly ISqlSugarClient db;\n    private readonly IMapper mapper;\n\n    /// <summary>\n    /// 构造函数\n    /// </summary>\n    /// <param name="db"></param>\n    /// <param name="mapper"></param>\n    public SysUserService(ISqlSugarClient db, IMapper mapper)\n    {\n        this.db = db;\n        this.mapper = mapper;\n    }\n\n    /// <inheritdoc/>\n    public async Task<long> Create([FromBody] SysUserCreateReqVO reqVO)\n    {\n        ValidateForCreate(reqVO.Username);\n        var sysUser = mapper.Map<SysUserDO>(reqVO);\n        return await db.Insertable(sysUser).ExecuteReturnBigIdentityAsync();\n    }\n\n    /// <inheritdoc/>\n    public async Task Delete(long id)\n    {\n        // 校验自己存在\n        if (db.Queryable<SysUserDO>().Where(s => s.Id == id).First() == null)\n        {\n            throw new Exception("数据不存在");\n        }\n        await db.Deleteable<SysUserDO>().Where(s => s.Id == id).ExecuteCommandAsync();\n    }\n    /// <inheritdoc/>\n\n    public async Task<SysUserRespVO> Get(long id)\n    {\n        var sysUserDO = await db.Queryable<SysUserDO>().Where(s => s.Id == id).FirstAsync();\n        return mapper.Map<SysUserRespVO>(sysUserDO);\n    }\n    /// <inheritdoc/>\n\n    public async Task<List<SysUserRespVO>> List()\n    {\n        var doList = await db.Queryable<SysUserDO>().ToListAsync();\n        return mapper.Map<List<SysUserRespVO>>(doList);\n    }\n    /// <inheritdoc/>\n\n    public async Task<List<SysUserRespVO>> Page([FromQuery] SysUserPageReqVO param)\n    {\n        // 查询构造器\n        var list = await db.Queryable<SysUserDO>()\n            .Where(Expressionable.Create<SysUserDO>()\n                .OrIF(!string.IsNullOrWhiteSpace(param.Username), o => o.Username.Contains(param.Username))\n                .ToExpression()\n            )\n            .ToListAsync();\n        return mapper.Map<List<SysUserRespVO>>(list);\n    }\n    /// <inheritdoc/>\n\n    public async Task<long> Update([FromBody] SysUserUpdateReqVO reqVO)\n    {\n        ValidateForUpdate(reqVO.Id, reqVO.Username);\n        var sysUser = mapper.Map<SysUserDO>(reqVO);\n        await db.Updateable(sysUser)\n            .UpdateColumns(it => new { it.Username, it.Nickname, it.Remark, it.UpdateTime })\n            .ExecuteCommandAsync();\n        return reqVO.Id;\n    }\n\n    private void ValidateForCreate(string name)\n    {\n        SysUserDO userDO = db.Queryable<SysUserDO>().Where(s => s.Username == name).First();\n        if (userDO == null)\n        {\n            return;\n        }\n    }\n    private void ValidateForUpdate(long id, string name)\n    {\n        // 校验自己存在\n        if (db.Queryable<SysUserDO>().Where(s => s.Id == id).First() == null)\n        {\n            throw new Exception("数据不存在");\n        }\n        // 校验唯一性\n        SysUserDO userDO = db.Queryable<SysUserDO>().Where(s => s.Username == name).First();\n        if (userDO != null)\n        {\n            throw new Exception("数据重复");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\n\n注意\n\n需要在program.cs中注册接口\n\nbuilder.Services.AddTransient<ISysUserService,SysUserService>();\n\n\n1\n\n\n\n# API控制器\n\nController/SysUserController.cs\n\n/// <summary>\n/// 用户\n/// </summary>\n[ApiController]\n[Route("api/[controller]/[action]")]\npublic class SysUserController : ControllerBase\n{\n    private readonly ISysUserService userService;\n\n    /// <summary>\n    /// 构造函数\n    /// </summary>\n    /// <param name="userService"></param>\n    public SysUserController(ISysUserService userService)\n    {\n        this.userService = userService;\n    }\n\n    /// <summary>\n    /// 新增用户\n    /// </summary>\n    /// <param name="reqVO"></param>\n    /// <returns></returns>\n    /// <exception cref="Exception"></exception>\n    [HttpPost]\n    [ProducesResponseType(typeof(SysUserRespVO), StatusCodes.Status200OK)]\n    public async Task<JsonResult> Create([FromBody] SysUserCreateReqVO reqVO)\n    {\n        return JsonResult.Success(await userService.Create(reqVO));\n    }\n\n    /// <summary>\n    /// 更新用户\n    /// </summary>\n    /// <param name="reqVO"></param>\n    /// <returns></returns>\n    /// <exception cref="Exception"></exception>\n    [HttpPut]\n    [ProducesResponseType(typeof(SysUserRespVO), StatusCodes.Status200OK)]\n    public async Task<JsonResult> Update([FromBody] SysUserUpdateReqVO reqVO)\n    {\n        return JsonResult.Success(await userService.Update(reqVO));\n    }\n\n    /// <summary>\n    /// 分页查询\n    /// </summary>\n    /// <param name="param"></param>\n    /// <returns></returns>\n    [HttpGet]\n    [ProducesResponseType(typeof(List<SysUserRespVO>), StatusCodes.Status200OK)]\n    public async Task<JsonResult> Page([FromQuery] SysUserPageReqVO param)\n    {\n       // 查询构造器\n        var list = await userService.Page(param);\n        var pageList = list.ToPagedList(param.PageNo, param.PageSize);\n        return JsonResult.Success(pageList);\n    }\n\n    /// <summary>\n    /// 返回所有数据\n    /// </summary>\n    [HttpGet]\n    [ProducesResponseType(typeof(List<SysUserRespVO>), StatusCodes.Status200OK)]\n    public async Task<JsonResult> List()\n    {\n        return JsonResult.Success(await userService.List());\n    }\n\n    /// <summary>\n    /// 返回单条数据\n    /// </summary>\n    /// <returns></returns>\n    [HttpGet]\n    [ProducesResponseType(typeof(SysUserRespVO), StatusCodes.Status200OK)]\n    public async Task<JsonResult> Get(long id)\n    {\n        return JsonResult.Success(await userService.Get(id));\n    }\n\n    /// <summary>\n    /// 删除用户，强删除\n    /// </summary>\n    /// <param name="id"></param>\n    /// <returns></returns>\n    [HttpDelete]\n    [ProducesResponseType(typeof(SysUserRespVO), StatusCodes.Status200OK)]\n    public async Task<JsonResult> Delete(long id)\n    {\n        await userService.Delete(id);\n        return JsonResult.Success();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n\n\n\n# 测试\n\n在Swagger中或者ApiFox测试\n\n\n# 新增\n\n\n\n\n\n\n# 删除\n\n\n\n\n\n\n# 查询单条数据\n\n\n\n\n\n\n# 查询所有数据\n\n\n\n\n\n\n# 查询分页数据\n\n\n\n\n\n\n\n\n\n\n# 更新用户\n\n\n\n',normalizedContent:'# 说明\n\n实现用户的增删改查，包含分页实现\n\n\n# 数据表\n\n-- ----------------------------\n-- table structure for sys_user\n-- ----------------------------\ndrop table if exists `sys_user`;\ncreate table `sys_user`  (\n  `id` bigint not null auto_increment comment \'用户id\',\n  `username` varchar(30) character set utf8mb4 collate utf8mb4_unicode_ci not null comment \'用户账号\',\n  `password` varchar(100) character set utf8mb4 collate utf8mb4_unicode_ci not null default \'\' comment \'密码\',\n  `nickname` varchar(30) character set utf8mb4 collate utf8mb4_unicode_ci not null comment \'用户昵称\',\n  `remark` varchar(500) character set utf8mb4 collate utf8mb4_unicode_ci null default null comment \'备注\',\n  `avatar` varchar(512) character set utf8mb4 collate utf8mb4_unicode_ci null default \'\' comment \'头像地址\',\n  `login_ip` varchar(50) character set utf8mb4 collate utf8mb4_unicode_ci null default \'\' comment \'最后登录ip\',\n  `login_date` datetime null default null comment \'最后登录时间\',\n  `creator` varchar(64) character set utf8mb4 collate utf8mb4_unicode_ci null default \'\' comment \'创建者\',\n  `create_time` datetime not null default current_timestamp comment \'创建时间\',\n  `updater` varchar(64) character set utf8mb4 collate utf8mb4_unicode_ci null default \'\' comment \'更新者\',\n  `update_time` datetime not null default current_timestamp on update current_timestamp comment \'更新时间\',\n  primary key (`id`) using btree,\n  unique index `idx_username`(`username` asc, `update_time` asc) using btree\n) engine = innodb auto_increment = 1 character set = utf8mb4 collate = utf8mb4_unicode_ci comment = \'用户信息表\';\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 格式化返回数据\n\n前后端共同使用，建立在share工程下，common/jsonresult.cs\n\npublic class jsonresult\n{\n    public string? msg { get; set; }\n    public int code { get; set; }\n    public object? data { get; set; }\n    \n    public static jsonresult success()\n    {\n        return new jsonresult\n        {\n            code = 200,\n            msg = "操作成功"\n        };\n    }\n\n    public static jsonresult success(object obj)\n    {\n        return new jsonresult\n        {\n            code = 200,\n            msg = "操作成功",\n            data = obj\n        };\n    }\n\n    public static jsonresult error(string msg)\n    {\n        return new jsonresult\n        {\n            code = 500,\n            msg = msg\n        };\n    }\n}\n\npublic class jsonresult<t>\n{\n    public string? msg { get; set; }\n    public int code { get; set; }\n    public t? data { get; set; }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\n\n# 分页实体\n\nshare工程存放model，pageresult.cs\n\n/// <summary>\n/// 分页泛型集合\n/// </summary>\n/// <typeparam name="tentity"></typeparam>\npublic class pageresult<tentity>\n{\n    /// <summary>\n    /// 页码\n    /// </summary>\n    public int page { get; set; }\n\n    /// <summary>\n    /// 页容量\n    /// </summary>\n    public int pagesize { get; set; }\n\n    /// <summary>\n    /// 总条数\n    /// </summary>\n    public int total { get; set; }\n\n    /// <summary>\n    /// 总页数\n    /// </summary>\n    public int totalpages { get; set; }\n\n    /// <summary>\n    /// 当前页集合\n    /// </summary>\n    public ienumerable<tentity>? items { get; set; }\n\n    /// <summary>\n    /// 是否有上一页\n    /// </summary>\n    public bool hasprevpage { get; set; }\n\n    /// <summary>\n    /// 是否有下一页\n    /// </summary>\n    public bool hasnextpage { get; set; }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\napi工程存放实现，依赖于sqlsugar\n\n/// <summary>\n/// 分页拓展类\n/// </summary>\npublic static class pageresult\n{\n    /// <summary>\n    /// 分页拓展\n    /// </summary>\n    /// <param name="query"><see cref="isugarqueryable{tentity}"/>对象</param>\n    /// <param name="pageindex">当前页码，从1开始</param>\n    /// <param name="pagesize">页码容量</param>\n    /// <param name="expression">查询结果 select 表达式</param>\n    /// <returns></returns>\n    public static pageresult<tresult> topagedlist<tentity, tresult>(this isugarqueryable<tentity> query, int pageindex, int pagesize,\n        expression<func<tentity, tresult>> expression)\n    {\n        var total = 0;\n        var items = query.topagelist(pageindex, pagesize, ref total, expression);\n        return createpagedlist(items, total, pageindex, pagesize);\n    }\n\n    /// <summary>\n    /// 分页拓展\n    /// </summary>\n    /// <param name="query"><see cref="isugarqueryable{tentity}"/>对象</param>\n    /// <param name="pageindex">当前页码，从1开始</param>\n    /// <param name="pagesize">页码容量</param>\n    /// <returns></returns>\n    public static pageresult<tentity> topagedlist<tentity>(this isugarqueryable<tentity> query, int pageindex, int pagesize)\n    {\n        var total = 0;\n        var items = query.topagelist(pageindex, pagesize, ref total);\n        return createpagedlist(items, total, pageindex, pagesize);\n    }\n\n    /// <summary>\n    /// 分页拓展\n    /// </summary>\n    /// <param name="query"><see cref="isugarqueryable{tentity}"/>对象</param>\n    /// <param name="pageindex">当前页码，从1开始</param>\n    /// <param name="pagesize">页码容量</param>\n    /// <param name="expression">查询结果 select 表达式</param>\n    /// <returns></returns>\n    public static async task<pageresult<tresult>> topagedlistasync<tentity, tresult>(this isugarqueryable<tentity> query, int pageindex, int pagesize,\n        expression<func<tentity, tresult>> expression)\n    {\n        refasync<int> total = 0;\n        var items = await query.topagelistasync(pageindex, pagesize, total, expression);\n        return createpagedlist(items, total, pageindex, pagesize);\n    }\n\n    /// <summary>\n    /// 分页拓展\n    /// </summary>\n    /// <param name="query"><see cref="isugarqueryable{tentity}"/>对象</param>\n    /// <param name="pageindex">当前页码，从1开始</param>\n    /// <param name="pagesize">页码容量</param>\n    /// <returns></returns>\n    public static async task<pageresult<tentity>> topagedlistasync<tentity>(this isugarqueryable<tentity> query, int pageindex, int pagesize)\n    {\n        refasync<int> total = 0;\n        var items = await query.topagelistasync(pageindex, pagesize, total);\n        return createpagedlist(items, total, pageindex, pagesize);\n    }\n\n    /// <summary>\n    /// 分页拓展\n    /// </summary>\n    /// <param name="list">集合对象</param>\n    /// <param name="pageindex">当前页码，从1开始</param>\n    /// <param name="pagesize">页码容量</param>\n    /// <returns></returns>\n    public static pageresult<tentity> topagedlist<tentity>(this ienumerable<tentity> list, int pageindex, int pagesize)\n    {\n        var total = list.count();\n        var items = list.skip((pageindex - 1) * pagesize).take(pagesize).tolist();\n        return createpagedlist(items, total, pageindex, pagesize);\n    }\n\n    /// <summary>\n    /// 创建 <see cref="pageresult{tentity}"/> 对象\n    /// </summary>\n    /// <typeparam name="tentity"></typeparam>\n    /// <param name="items">分页内容的对象集合</param>\n    /// <param name="total">总条数</param>\n    /// <param name="pageindex">当前页码，从1开始</param>\n    /// <param name="pagesize">页码容量</param>\n    /// <returns></returns>\n    private static pageresult<tentity> createpagedlist<tentity>(ienumerable<tentity> items, int total, int pageindex, int pagesize)\n    {\n        var totalpages = pagesize > 0 ? (int)math.ceiling(total / (double)pagesize) : 0;\n        return new pageresult<tentity>\n        {\n            page = pageindex,\n            pagesize = pagesize,\n            items = items,\n            total = total,\n            totalpages = totalpages,\n            hasnextpage = pageindex < totalpages,\n            hasprevpage = pageindex - 1 > 0\n        };\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n\n\n分页参数实体，用于分页查询，公共项目使用，pageparam.cs\n\npublic class pageparam\n{\n    public int pageno { get; set; } = 1;\n    public int pagesize { get; set; } = 10;\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 用户实体\n\n * do，与数据库对应\n   \n   在api工程中新建基本实体类dal/basedo.cs\n   \n   public class basedo\n   {\n       [sugarcolumn(columnname = "id", isprimarykey = true, columndescription = "主键")]\n       public long id { get; set; }\n       [sugarcolumn(columnname = "create_time", columndescription = "创建时间")]\n       public datetime createtime { get; set; } = datetime.now;\n       [sugarcolumn(columnname = "creator", columndescription = "创建人")]\n       public string? creator { get; set; }\n       [sugarcolumn(columnname = "update_time", columndescription = "更新时间")]\n       public datetime updatetime { get; set; } = datetime.now;\n       [sugarcolumn(columnname = "updater", columndescription = "更新人")]\n       public string? updater { get; set; }\n       [sugarcolumn(columnname = "remark", columndescription = "备注")]\n       public string remark { get; set; }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n   \n   在api工程中新建基本实体类dal/sysuserdo.cs\n   \n   [sugartable("sys_user")]\n   public class sysuserdo : basedo\n   {\n       [sugarcolumn(columnname = "username", columndescription = "用户名")]\n       public string username { get; set; }\n       [sugarcolumn(columnname = "nickname", columndescription = "昵称")]\n       public string nickname { get; set; }\n       [sugarcolumn(columnname = "password", columndescription = "密码")]\n       public string password { get; set; }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * vo，页面展示或其它请求参数，vo建在共享项目share中，前后端共同使用，命名中req为请求，resp为响应\n   \n   * sysuserbasemodel，基类\n     \n     public class sysuserbasevo\n     {\n         public string username { get; set; }\n         public string nickname { get; set; }\n         public string? remark { get; set; }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n   \n   * sysusercreatereqmodel，新增请求\n     \n     public class sysusercreatereqvo : sysuserbasevo\n     {\n         public string password { get; set; }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     \n   \n   * sysuserupdatereqmodel，更新请求\n     \n     public class sysuserupdatereqvo : sysuserbasevo\n     {\n         public long id { get; set; }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     \n   \n   * sysuserpagereqmodel，分页查询\n     \n     public class sysuserpagereqvo : pageparam\n     {\n         public string? username { get; set; }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     \n   \n   * sysuserpagerespmodel，前台展示\n     \n     public class sysuserrespvo\n     {\n         public long id { get; set; }\n         public string username { get; set; }\n         public string nickname { get; set; }\n         public string? remark { get; set; }\n         public datetime createtime { get; set; }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n\n\n# automapper自动映射\n\n打开之前创建的automapperconfig类，添加映射\n\n/// <summary>\n/// 映射配置\n/// </summary>\npublic automapperconfig()\n{\n    createmap<sysusercreatereqvo, sysuserdo>();\n    createmap<sysuserupdatereqvo, sysuserdo>();\n    createmap<sysuserdo, sysuserrespvo>();\n    //createmap<sysuserdo, sysuserrespvo>().reversemap();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 用户接口与实现\n\n在webapi工程中service，新建接口isysuserservice与实现sysuserservice\n\n/// <summary>\n/// 用户接口\n/// </summary>\npublic interface isysuserservice\n{\n    /// <summary>\n    /// 创建用户\n    /// </summary>\n    /// <param name="reqvo"></param>\n    /// <returns></returns>\n    public task<long> create([frombody] sysusercreatereqvo reqvo);\n\n    /// <summary>\n    /// 更新用户\n    /// </summary>\n    /// <param name="reqvo"></param>\n    /// <returns></returns>\n    public task<long> update([frombody] sysuserupdatereqvo reqvo);\n\n    /// <summary>\n    /// 分页查询\n    /// </summary>\n    /// <param name="param"></param>\n    /// <returns></returns>\n\n    public task<list<sysuserrespvo>> page([fromquery] sysuserpagereqvo param);\n\n    /// <summary>\n    /// 查询所有\n    /// </summary>\n    /// <returns></returns>\n    public task<list<sysuserrespvo>> list();\n\n    /// <summary>\n    /// 根据id查询单个\n    /// </summary>\n    /// <param name="id"></param>\n    /// <returns></returns>\n    public task<sysuserrespvo> get(long id);\n\n    /// <summary>\n    /// 删除用户\n    /// </summary>\n    /// <param name="id"></param>\n    /// <returns></returns>\n    public task delete(long id);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\n\n/// <summary>\n/// 用户接口实现\n/// </summary>\npublic class sysuserservice : isysuserservice\n{\n    private readonly isqlsugarclient db;\n    private readonly imapper mapper;\n\n    /// <summary>\n    /// 构造函数\n    /// </summary>\n    /// <param name="db"></param>\n    /// <param name="mapper"></param>\n    public sysuserservice(isqlsugarclient db, imapper mapper)\n    {\n        this.db = db;\n        this.mapper = mapper;\n    }\n\n    /// <inheritdoc/>\n    public async task<long> create([frombody] sysusercreatereqvo reqvo)\n    {\n        validateforcreate(reqvo.username);\n        var sysuser = mapper.map<sysuserdo>(reqvo);\n        return await db.insertable(sysuser).executereturnbigidentityasync();\n    }\n\n    /// <inheritdoc/>\n    public async task delete(long id)\n    {\n        // 校验自己存在\n        if (db.queryable<sysuserdo>().where(s => s.id == id).first() == null)\n        {\n            throw new exception("数据不存在");\n        }\n        await db.deleteable<sysuserdo>().where(s => s.id == id).executecommandasync();\n    }\n    /// <inheritdoc/>\n\n    public async task<sysuserrespvo> get(long id)\n    {\n        var sysuserdo = await db.queryable<sysuserdo>().where(s => s.id == id).firstasync();\n        return mapper.map<sysuserrespvo>(sysuserdo);\n    }\n    /// <inheritdoc/>\n\n    public async task<list<sysuserrespvo>> list()\n    {\n        var dolist = await db.queryable<sysuserdo>().tolistasync();\n        return mapper.map<list<sysuserrespvo>>(dolist);\n    }\n    /// <inheritdoc/>\n\n    public async task<list<sysuserrespvo>> page([fromquery] sysuserpagereqvo param)\n    {\n        // 查询构造器\n        var list = await db.queryable<sysuserdo>()\n            .where(expressionable.create<sysuserdo>()\n                .orif(!string.isnullorwhitespace(param.username), o => o.username.contains(param.username))\n                .toexpression()\n            )\n            .tolistasync();\n        return mapper.map<list<sysuserrespvo>>(list);\n    }\n    /// <inheritdoc/>\n\n    public async task<long> update([frombody] sysuserupdatereqvo reqvo)\n    {\n        validateforupdate(reqvo.id, reqvo.username);\n        var sysuser = mapper.map<sysuserdo>(reqvo);\n        await db.updateable(sysuser)\n            .updatecolumns(it => new { it.username, it.nickname, it.remark, it.updatetime })\n            .executecommandasync();\n        return reqvo.id;\n    }\n\n    private void validateforcreate(string name)\n    {\n        sysuserdo userdo = db.queryable<sysuserdo>().where(s => s.username == name).first();\n        if (userdo == null)\n        {\n            return;\n        }\n    }\n    private void validateforupdate(long id, string name)\n    {\n        // 校验自己存在\n        if (db.queryable<sysuserdo>().where(s => s.id == id).first() == null)\n        {\n            throw new exception("数据不存在");\n        }\n        // 校验唯一性\n        sysuserdo userdo = db.queryable<sysuserdo>().where(s => s.username == name).first();\n        if (userdo != null)\n        {\n            throw new exception("数据重复");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\n\n注意\n\n需要在program.cs中注册接口\n\nbuilder.services.addtransient<isysuserservice,sysuserservice>();\n\n\n1\n\n\n\n# api控制器\n\ncontroller/sysusercontroller.cs\n\n/// <summary>\n/// 用户\n/// </summary>\n[apicontroller]\n[route("api/[controller]/[action]")]\npublic class sysusercontroller : controllerbase\n{\n    private readonly isysuserservice userservice;\n\n    /// <summary>\n    /// 构造函数\n    /// </summary>\n    /// <param name="userservice"></param>\n    public sysusercontroller(isysuserservice userservice)\n    {\n        this.userservice = userservice;\n    }\n\n    /// <summary>\n    /// 新增用户\n    /// </summary>\n    /// <param name="reqvo"></param>\n    /// <returns></returns>\n    /// <exception cref="exception"></exception>\n    [httppost]\n    [producesresponsetype(typeof(sysuserrespvo), statuscodes.status200ok)]\n    public async task<jsonresult> create([frombody] sysusercreatereqvo reqvo)\n    {\n        return jsonresult.success(await userservice.create(reqvo));\n    }\n\n    /// <summary>\n    /// 更新用户\n    /// </summary>\n    /// <param name="reqvo"></param>\n    /// <returns></returns>\n    /// <exception cref="exception"></exception>\n    [httpput]\n    [producesresponsetype(typeof(sysuserrespvo), statuscodes.status200ok)]\n    public async task<jsonresult> update([frombody] sysuserupdatereqvo reqvo)\n    {\n        return jsonresult.success(await userservice.update(reqvo));\n    }\n\n    /// <summary>\n    /// 分页查询\n    /// </summary>\n    /// <param name="param"></param>\n    /// <returns></returns>\n    [httpget]\n    [producesresponsetype(typeof(list<sysuserrespvo>), statuscodes.status200ok)]\n    public async task<jsonresult> page([fromquery] sysuserpagereqvo param)\n    {\n       // 查询构造器\n        var list = await userservice.page(param);\n        var pagelist = list.topagedlist(param.pageno, param.pagesize);\n        return jsonresult.success(pagelist);\n    }\n\n    /// <summary>\n    /// 返回所有数据\n    /// </summary>\n    [httpget]\n    [producesresponsetype(typeof(list<sysuserrespvo>), statuscodes.status200ok)]\n    public async task<jsonresult> list()\n    {\n        return jsonresult.success(await userservice.list());\n    }\n\n    /// <summary>\n    /// 返回单条数据\n    /// </summary>\n    /// <returns></returns>\n    [httpget]\n    [producesresponsetype(typeof(sysuserrespvo), statuscodes.status200ok)]\n    public async task<jsonresult> get(long id)\n    {\n        return jsonresult.success(await userservice.get(id));\n    }\n\n    /// <summary>\n    /// 删除用户，强删除\n    /// </summary>\n    /// <param name="id"></param>\n    /// <returns></returns>\n    [httpdelete]\n    [producesresponsetype(typeof(sysuserrespvo), statuscodes.status200ok)]\n    public async task<jsonresult> delete(long id)\n    {\n        await userservice.delete(id);\n        return jsonresult.success();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n\n\n\n# 测试\n\n在swagger中或者apifox测试\n\n\n# 新增\n\n\n\n\n\n\n# 删除\n\n\n\n\n\n\n# 查询单条数据\n\n\n\n\n\n\n# 查询所有数据\n\n\n\n\n\n\n# 查询分页数据\n\n\n\n\n\n\n\n\n\n\n# 更新用户\n\n\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WebApi增删改查08-JWT配置实现",frontmatter:{title:"WebApi增删改查08-JWT配置实现",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/jwt/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/08.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A508-JWT%E9%85%8D%E7%BD%AE%E5%AE%9E%E7%8E%B0.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/08.WebApi增删改查08-JWT配置实现.md",key:"v-72d5170e",path:"/soft/webapi/jwt/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:3,title:"安装依赖包",slug:"安装依赖包",normalizedTitle:"安装依赖包",charIndex:48},{level:2,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:73},{level:2,title:"JWT生成类",slug:"jwt生成类",normalizedTitle:"jwt生成类",charIndex:241},{level:2,title:"注册",slug:"注册",normalizedTitle:"注册",charIndex:2049},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:3909}],headersStr:"说明 安装依赖包 配置 JWT生成类 注册 测试",content:'# 说明\n\nJSON Web Token（JWT）是目前最流行的跨域身份验证解决方案。\n\n\n# 安装依赖包\n\n.NET6安装对应版本\n\n\n\n\n# 配置\n\n修改appsettings.json，添加\n\n  "Jwt": {\n    "SecretKey": "podsahjuhfuewhbhdsg", //私钥\n    "Issuer": "icaiwei", //发布者\n    "Audience": "icaiwei" //接收者\n  },\n\n\n1\n2\n3\n4\n5\n\n\n\n# JWT生成类\n\nCommon/JWTHelper.cs\n\n/// <summary>\n/// 授权JWT类\n/// </summary>\npublic class JwtHelper\n{\n    private readonly IConfiguration _configuration;\n\n    /// <summary>\n    /// Token配置\n    /// </summary>\n    /// <param name="configuration"></param>\n    public JwtHelper(IConfiguration configuration)\n    {\n        _configuration = configuration;\n    }\n\n    /// <summary>\n    /// 创建Token 这里面可以保存自己想要的信息\n    /// </summary>\n    /// <param name="username"></param>\n    /// <returns></returns>\n    public string CreateToken(string username)\n    {\n        // 1. 定义需要使用到的Claims\n        var claims = new[]\n        {\n        new Claim("username", username),\n        /* 可以保存自己想要信息，传参进来即可\n        new Claim("head_url", "xxxxx")\n        */\n    };\n\n        // 2. 从 appsettings.json 中读取SecretKey\n        var secretKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration["Jwt:SecretKey"]));\n\n        // 3. 选择加密算法\n        var algorithm = SecurityAlgorithms.HmacSha256;\n\n        // 4. 生成Credentials\n        var signingCredentials = new SigningCredentials(secretKey, algorithm);\n\n        // 5. 根据以上，生成token\n        var jwtSecurityToken = new JwtSecurityToken(\n            _configuration["Jwt:Issuer"],    //Issuer\n            _configuration["Jwt:Audience"],  //Audience\n            claims,                          //Claims,\n            DateTime.Now,                    //notBefore\n            DateTime.Now.AddMinutes(10),     //expires\n            signingCredentials               //Credentials\n        );\n\n        // 6. 将token变为string\n        var token = new JwtSecurityTokenHandler().WriteToken(jwtSecurityToken);\n\n        return token;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n\n# 注册\n\nConfig/JwtConfig.cs\n\n/// <summary>\n/// JWT配置\n/// </summary>\npublic static class JwtConfig\n{\n    /// <summary>\n    /// JWT配置\n    /// </summary>\n    /// <param name="services"></param>\n    /// <param name="configuration"></param>\n    public static void AddJwtConfig(this IServiceCollection services, IConfiguration configuration)\n    {\n        // JWT注入\n        services.AddSingleton(new JwtHelper(configuration));\n        //JWT认证\n        services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme).AddJwtBearer(options =>\n        {\n            //取出私钥\n            //var secretByte = Encoding.UTF8.GetBytes(builder.Configuration["Authentication:SecretKey"]);\n            options.TokenValidationParameters = new TokenValidationParameters()\n            {\n                ValidateIssuer = true, //是否验证Issuer\n                ValidIssuer = configuration["Jwt:Issuer"], //发行人Issuer\n                ValidateAudience = true, //是否验证Audience\n                ValidAudience = configuration["Jwt:Audience"], //订阅人Audience\n                ValidateIssuerSigningKey = true, //是否验证SecurityKey\n                IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(configuration["Jwt:SecretKey"])), //SecurityKey\n                ValidateLifetime = true, //是否验证失效时间\n                ClockSkew = TimeSpan.FromSeconds(30), //过期时间容错值，解决服务器端时间不同步问题（秒）\n                RequireExpirationTime = true,\n                ////验证私钥\n                //IssuerSigningKey = new SymmetricSecurityKey(secretByte)\n            };\n        });\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\nProgram.cs\n\n// JWT\nbuilder.Services.AddJwtConfig(builder.Configuration);\n\n...\napp.UseAuthentication();\napp.UseAuthorization();\n\n// 所有需要鉴权\napp.MapControllers().RequireAuthorization();\n\napp.Run();    \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 测试\n\n访问得到未授权\n\n',normalizedContent:'# 说明\n\njson web token（jwt）是目前最流行的跨域身份验证解决方案。\n\n\n# 安装依赖包\n\n.net6安装对应版本\n\n\n\n\n# 配置\n\n修改appsettings.json，添加\n\n  "jwt": {\n    "secretkey": "podsahjuhfuewhbhdsg", //私钥\n    "issuer": "icaiwei", //发布者\n    "audience": "icaiwei" //接收者\n  },\n\n\n1\n2\n3\n4\n5\n\n\n\n# jwt生成类\n\ncommon/jwthelper.cs\n\n/// <summary>\n/// 授权jwt类\n/// </summary>\npublic class jwthelper\n{\n    private readonly iconfiguration _configuration;\n\n    /// <summary>\n    /// token配置\n    /// </summary>\n    /// <param name="configuration"></param>\n    public jwthelper(iconfiguration configuration)\n    {\n        _configuration = configuration;\n    }\n\n    /// <summary>\n    /// 创建token 这里面可以保存自己想要的信息\n    /// </summary>\n    /// <param name="username"></param>\n    /// <returns></returns>\n    public string createtoken(string username)\n    {\n        // 1. 定义需要使用到的claims\n        var claims = new[]\n        {\n        new claim("username", username),\n        /* 可以保存自己想要信息，传参进来即可\n        new claim("head_url", "xxxxx")\n        */\n    };\n\n        // 2. 从 appsettings.json 中读取secretkey\n        var secretkey = new symmetricsecuritykey(encoding.utf8.getbytes(_configuration["jwt:secretkey"]));\n\n        // 3. 选择加密算法\n        var algorithm = securityalgorithms.hmacsha256;\n\n        // 4. 生成credentials\n        var signingcredentials = new signingcredentials(secretkey, algorithm);\n\n        // 5. 根据以上，生成token\n        var jwtsecuritytoken = new jwtsecuritytoken(\n            _configuration["jwt:issuer"],    //issuer\n            _configuration["jwt:audience"],  //audience\n            claims,                          //claims,\n            datetime.now,                    //notbefore\n            datetime.now.addminutes(10),     //expires\n            signingcredentials               //credentials\n        );\n\n        // 6. 将token变为string\n        var token = new jwtsecuritytokenhandler().writetoken(jwtsecuritytoken);\n\n        return token;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n\n# 注册\n\nconfig/jwtconfig.cs\n\n/// <summary>\n/// jwt配置\n/// </summary>\npublic static class jwtconfig\n{\n    /// <summary>\n    /// jwt配置\n    /// </summary>\n    /// <param name="services"></param>\n    /// <param name="configuration"></param>\n    public static void addjwtconfig(this iservicecollection services, iconfiguration configuration)\n    {\n        // jwt注入\n        services.addsingleton(new jwthelper(configuration));\n        //jwt认证\n        services.addauthentication(jwtbearerdefaults.authenticationscheme).addjwtbearer(options =>\n        {\n            //取出私钥\n            //var secretbyte = encoding.utf8.getbytes(builder.configuration["authentication:secretkey"]);\n            options.tokenvalidationparameters = new tokenvalidationparameters()\n            {\n                validateissuer = true, //是否验证issuer\n                validissuer = configuration["jwt:issuer"], //发行人issuer\n                validateaudience = true, //是否验证audience\n                validaudience = configuration["jwt:audience"], //订阅人audience\n                validateissuersigningkey = true, //是否验证securitykey\n                issuersigningkey = new symmetricsecuritykey(encoding.utf8.getbytes(configuration["jwt:secretkey"])), //securitykey\n                validatelifetime = true, //是否验证失效时间\n                clockskew = timespan.fromseconds(30), //过期时间容错值，解决服务器端时间不同步问题（秒）\n                requireexpirationtime = true,\n                ////验证私钥\n                //issuersigningkey = new symmetricsecuritykey(secretbyte)\n            };\n        });\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\nprogram.cs\n\n// jwt\nbuilder.services.addjwtconfig(builder.configuration);\n\n...\napp.useauthentication();\napp.useauthorization();\n\n// 所有需要鉴权\napp.mapcontrollers().requireauthorization();\n\napp.run();    \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 测试\n\n访问得到未授权\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WebApi增删改查09-登录",frontmatter:{title:"WebApi增删改查09-登录",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/login/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/09.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A509-%E7%99%BB%E5%BD%95.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/09.WebApi增删改查09-登录.md",key:"v-5086963b",path:"/soft/webapi/login/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"登录实体",slug:"登录实体",normalizedTitle:"登录实体",charIndex:33},{level:2,title:"登录简单实现",slug:"登录简单实现",normalizedTitle:"登录简单实现",charIndex:207},{level:2,title:"效果",slug:"效果",normalizedTitle:"效果",charIndex:1243}],headersStr:"说明 登录实体 登录简单实现 效果",content:'# 说明\n\n登录后返回token，使用token访问接口\n\n\n# 登录实体\n\n只包含用户名和密码，Share工程中，Models/LoginModel.cs\n\npublic class LoginModel\n{\n    public string Username { get; set; }\n    public string Password { get; set; }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 登录简单实现\n\nLoginController.cs，使用[AllowAnonymous]可跳过鉴权\n\n/// <summary>\n/// 登录实现\n/// </summary>\n[Route("api/[controller]/[action]")]\n[ApiController]\npublic class LoginController : ControllerBase\n{\n    public JwtHelper jwtHelper;\n    /// <summary>\n    /// 构造函数\n    /// </summary>\n    /// <param name="jwtHelper"></param>\n    public LoginController(JwtHelper jwtHelper)\n    {\n        this.jwtHelper = jwtHelper;\n    }\n    /// <summary>\n    /// 登录\n    /// </summary>\n    /// <param name="loginModel"></param>\n    /// <returns></returns>\n    [HttpPost]\n    [AllowAnonymous]\n    public JsonResult Login([FromBody] LoginModel loginModel)\n    {\n        if (loginModel.Username == "admin" && loginModel.Password == "admin")\n        {\n            var token = jwtHelper.CreateToken(loginModel.Username);\n            return JsonResult.Success(token);\n        }\n        else\n        {\n            return JsonResult.Error("登录失败");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# 效果\n\n 1. 先登录获得token\n\n\n\n\n\n 2. 填入token获取数据，此时接口中携带了token\n    \n    \n    \n    ',normalizedContent:'# 说明\n\n登录后返回token，使用token访问接口\n\n\n# 登录实体\n\n只包含用户名和密码，share工程中，models/loginmodel.cs\n\npublic class loginmodel\n{\n    public string username { get; set; }\n    public string password { get; set; }\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 登录简单实现\n\nlogincontroller.cs，使用[allowanonymous]可跳过鉴权\n\n/// <summary>\n/// 登录实现\n/// </summary>\n[route("api/[controller]/[action]")]\n[apicontroller]\npublic class logincontroller : controllerbase\n{\n    public jwthelper jwthelper;\n    /// <summary>\n    /// 构造函数\n    /// </summary>\n    /// <param name="jwthelper"></param>\n    public logincontroller(jwthelper jwthelper)\n    {\n        this.jwthelper = jwthelper;\n    }\n    /// <summary>\n    /// 登录\n    /// </summary>\n    /// <param name="loginmodel"></param>\n    /// <returns></returns>\n    [httppost]\n    [allowanonymous]\n    public jsonresult login([frombody] loginmodel loginmodel)\n    {\n        if (loginmodel.username == "admin" && loginmodel.password == "admin")\n        {\n            var token = jwthelper.createtoken(loginmodel.username);\n            return jsonresult.success(token);\n        }\n        else\n        {\n            return jsonresult.error("登录失败");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# 效果\n\n 1. 先登录获得token\n\n\n\n\n\n 2. 填入token获取数据，此时接口中携带了token\n    \n    \n    \n    ',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WebApi增删改查10-Redis配置",frontmatter:{title:"WebApi增删改查10-Redis配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/redis/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/10.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A510-Redis%E9%85%8D%E7%BD%AE.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/10.WebApi增删改查10-Redis配置.md",key:"v-331adf9a",path:"/soft/webapi/redis/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"安装依赖包",slug:"安装依赖包",normalizedTitle:"安装依赖包",charIndex:83},{level:2,title:"新增配置",slug:"新增配置",normalizedTitle:"新增配置",charIndex:95},{level:2,title:"Redis帮助类",slug:"redis帮助类",normalizedTitle:"redis帮助类",charIndex:313},{level:2,title:"修改登录实现",slug:"修改登录实现",normalizedTitle:"修改登录实现",charIndex:2721},{level:2,title:"注册服务",slug:"注册服务",normalizedTitle:"注册服务",charIndex:4029},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:5018}],headersStr:"说明 安装依赖包 新增配置 Redis帮助类 修改登录实现 注册服务 测试",content:'# 说明\n\n前端登录后需要携带token访问数据，由于安全性，考虑在登录后将token存入redis\n\n前端需要读取redis，Redis放入Share工程\n\n\n# 安装依赖包\n\n\n\n\n# 新增配置\n\n修改appsettings.json\n\n"Redis": {\n  "Default": {\n    "Connection": "192.168.1.5:6379,password=123456", //redis连接地址，端口号,密码\n    "InstanceName": "local", //实例名\n    "DefaultDB": "6" //DB6数据库\n  }\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# Redis帮助类\n\nCommon/Redishelper.cs\n\n/// <summary>\n/// redis类\n/// </summary>\npublic class RedisHelper : IDisposable\n{\n    //连接字符串\n    private string _connectionString;\n    //实例名称\n    private string _instanceName;\n    //默认数据库\n    private int _defaultDB;\n\n    private ConcurrentDictionary<string, ConnectionMultiplexer> _connections;\n    /// <summary>\n    /// 初始化\n    /// </summary>\n    /// <param name="connectionString"></param>\n    /// <param name="instanceName"></param>\n    /// <param name="defaultDB"></param>\n    public RedisHelper(string connectionString, string instanceName, int defaultDB = 0)\n    {\n        _connectionString = connectionString;\n        _instanceName = instanceName;\n        _defaultDB = defaultDB;\n        _connections = new ConcurrentDictionary<string, ConnectionMultiplexer>();\n    }\n\n    /// <summary>\n    /// 获取ConnectionMultiplexer\n    /// </summary>\n    /// <returns></returns>\n    private ConnectionMultiplexer GetConnect()\n    {\n        return _connections.GetOrAdd(_instanceName, p => ConnectionMultiplexer.Connect(_connectionString));\n    }\n\n    /// <summary>\n    /// 获取redis数据库\n    /// </summary>\n    /// <returns></returns>\n    public IDatabase GetDatabase()\n    {\n        return GetConnect().GetDatabase(_defaultDB);\n    }\n    /// <summary>\n    /// \n    /// </summary>\n    /// <param name="configName"></param>\n    /// <param name="endPointsIndex"></param>\n    /// <returns></returns>\n    public IServer GetServer(string? configName = null, int endPointsIndex = 0)\n    {\n        var confOption = ConfigurationOptions.Parse(_connectionString);\n        return GetConnect().GetServer(confOption.EndPoints[endPointsIndex]);\n    }\n    /// <summary>\n    /// \n    /// </summary>\n    /// <param name="configName"></param>\n    /// <returns></returns>\n    public ISubscriber GetSubscriber(string? configName = null)\n    {\n        return GetConnect().GetSubscriber();\n    }\n    /// <summary>\n    /// \n    /// </summary>\n    public void Dispose()\n    {\n        if (_connections != null && _connections.Count > 0)\n        {\n            foreach (var item in _connections.Values)\n            {\n                item.Close();\n            }\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n\n\n\n# 修改登录实现\n\n/// <summary>\n/// 登录实现\n/// </summary>\n[Route("api/[controller]/[action]")]\n[ApiController]\npublic class LoginController : ControllerBase\n{\n    public JwtHelper jwtHelper;\n    public RedisHelper redisHelper;\n    /// <summary>\n    /// 构造函数\n    /// </summary>\n    /// <param name="jwtHelper"></param>\n    public LoginController(JwtHelper jwtHelper, RedisHelper redisHelper)\n    {\n        this.jwtHelper = jwtHelper;\n        this.redisHelper = redisHelper;\n    }\n    /// <summary>\n    /// 登录\n    /// </summary>\n    /// <param name="loginModel"></param>\n    /// <returns></returns>\n    [HttpPost]\n    [AllowAnonymous]\n    public JsonResult Login([FromBody] LoginModel loginModel)\n    {\n        if (loginModel.Username == "admin" && loginModel.Password == "admin")\n        {\n            var token = jwtHelper.CreateToken(loginModel.Username);\n            redisHelper.GetDatabase().StringSet($"user.info.{loginModel.Username}", token);\n            redisHelper.GetDatabase().KeyExpire($"user.info.{loginModel.Username}", TimeSpan.FromMinutes(30));\n            return JsonResult.Success(token);\n        }\n        else\n        {\n            return JsonResult.Error("登录失败");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n\n# 注册服务\n\nConfig/RedisConfig.cs\n\n/// <summary>\n/// Redis配置\n/// </summary>\npublic static class RedisConfig\n{\n    /// <summary>\n    /// 配置Redis\n    /// </summary>\n    /// <param name="services"></param>\n    /// <param name="configuration"></param>\n    public static void AddRedisConfig(this IServiceCollection services, IConfiguration configuration)\n    {\n        // 配置Redis   注入类似于配置数据库连接字符串\n        var section = configuration.GetSection("Redis:Default");\n        // 连接字符串\n        string _connectionString = section.GetSection("Connection").Value;\n        // 实例名称\n        string _instanceName = section.GetSection("InstanceName").Value;\n        // 默认数据库 \n        int _defaultDB = int.Parse(section.GetSection("DefaultDB").Value ?? "0");\n        services.AddSingleton(new RedisHelper(_connectionString, _instanceName, _defaultDB));\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n修改program.cs\n\n// Redis\nbuilder.Services.AddRedisConfig(builder.Configuration);\n\n\n1\n2\n\n\n\n# 测试\n\n重新登陆后查看redis\n\n\n\n',normalizedContent:'# 说明\n\n前端登录后需要携带token访问数据，由于安全性，考虑在登录后将token存入redis\n\n前端需要读取redis，redis放入share工程\n\n\n# 安装依赖包\n\n\n\n\n# 新增配置\n\n修改appsettings.json\n\n"redis": {\n  "default": {\n    "connection": "192.168.1.5:6379,password=123456", //redis连接地址，端口号,密码\n    "instancename": "local", //实例名\n    "defaultdb": "6" //db6数据库\n  }\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# redis帮助类\n\ncommon/redishelper.cs\n\n/// <summary>\n/// redis类\n/// </summary>\npublic class redishelper : idisposable\n{\n    //连接字符串\n    private string _connectionstring;\n    //实例名称\n    private string _instancename;\n    //默认数据库\n    private int _defaultdb;\n\n    private concurrentdictionary<string, connectionmultiplexer> _connections;\n    /// <summary>\n    /// 初始化\n    /// </summary>\n    /// <param name="connectionstring"></param>\n    /// <param name="instancename"></param>\n    /// <param name="defaultdb"></param>\n    public redishelper(string connectionstring, string instancename, int defaultdb = 0)\n    {\n        _connectionstring = connectionstring;\n        _instancename = instancename;\n        _defaultdb = defaultdb;\n        _connections = new concurrentdictionary<string, connectionmultiplexer>();\n    }\n\n    /// <summary>\n    /// 获取connectionmultiplexer\n    /// </summary>\n    /// <returns></returns>\n    private connectionmultiplexer getconnect()\n    {\n        return _connections.getoradd(_instancename, p => connectionmultiplexer.connect(_connectionstring));\n    }\n\n    /// <summary>\n    /// 获取redis数据库\n    /// </summary>\n    /// <returns></returns>\n    public idatabase getdatabase()\n    {\n        return getconnect().getdatabase(_defaultdb);\n    }\n    /// <summary>\n    /// \n    /// </summary>\n    /// <param name="configname"></param>\n    /// <param name="endpointsindex"></param>\n    /// <returns></returns>\n    public iserver getserver(string? configname = null, int endpointsindex = 0)\n    {\n        var confoption = configurationoptions.parse(_connectionstring);\n        return getconnect().getserver(confoption.endpoints[endpointsindex]);\n    }\n    /// <summary>\n    /// \n    /// </summary>\n    /// <param name="configname"></param>\n    /// <returns></returns>\n    public isubscriber getsubscriber(string? configname = null)\n    {\n        return getconnect().getsubscriber();\n    }\n    /// <summary>\n    /// \n    /// </summary>\n    public void dispose()\n    {\n        if (_connections != null && _connections.count > 0)\n        {\n            foreach (var item in _connections.values)\n            {\n                item.close();\n            }\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n\n\n\n# 修改登录实现\n\n/// <summary>\n/// 登录实现\n/// </summary>\n[route("api/[controller]/[action]")]\n[apicontroller]\npublic class logincontroller : controllerbase\n{\n    public jwthelper jwthelper;\n    public redishelper redishelper;\n    /// <summary>\n    /// 构造函数\n    /// </summary>\n    /// <param name="jwthelper"></param>\n    public logincontroller(jwthelper jwthelper, redishelper redishelper)\n    {\n        this.jwthelper = jwthelper;\n        this.redishelper = redishelper;\n    }\n    /// <summary>\n    /// 登录\n    /// </summary>\n    /// <param name="loginmodel"></param>\n    /// <returns></returns>\n    [httppost]\n    [allowanonymous]\n    public jsonresult login([frombody] loginmodel loginmodel)\n    {\n        if (loginmodel.username == "admin" && loginmodel.password == "admin")\n        {\n            var token = jwthelper.createtoken(loginmodel.username);\n            redishelper.getdatabase().stringset($"user.info.{loginmodel.username}", token);\n            redishelper.getdatabase().keyexpire($"user.info.{loginmodel.username}", timespan.fromminutes(30));\n            return jsonresult.success(token);\n        }\n        else\n        {\n            return jsonresult.error("登录失败");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n\n# 注册服务\n\nconfig/redisconfig.cs\n\n/// <summary>\n/// redis配置\n/// </summary>\npublic static class redisconfig\n{\n    /// <summary>\n    /// 配置redis\n    /// </summary>\n    /// <param name="services"></param>\n    /// <param name="configuration"></param>\n    public static void addredisconfig(this iservicecollection services, iconfiguration configuration)\n    {\n        // 配置redis   注入类似于配置数据库连接字符串\n        var section = configuration.getsection("redis:default");\n        // 连接字符串\n        string _connectionstring = section.getsection("connection").value;\n        // 实例名称\n        string _instancename = section.getsection("instancename").value;\n        // 默认数据库 \n        int _defaultdb = int.parse(section.getsection("defaultdb").value ?? "0");\n        services.addsingleton(new redishelper(_connectionstring, _instancename, _defaultdb));\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n修改program.cs\n\n// redis\nbuilder.services.addredisconfig(builder.configuration);\n\n\n1\n2\n\n\n\n# 测试\n\n重新登陆后查看redis\n\n\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WebApi增删改查11-跨域CORS解决",frontmatter:{title:"WebApi增删改查11-跨域CORS解决",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/cors/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/11.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A511-%E8%B7%A8%E5%9F%9FCORS%E8%A7%A3%E5%86%B3.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/11.WebApi增删改查11-跨域CORS解决.md",key:"v-410fcd31",path:"/soft/webapi/cors/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:467},{level:2,title:"注册服务",slug:"注册服务",normalizedTitle:"注册服务",charIndex:926}],headersStr:"说明 配置 注册服务",content:'# 说明\n\n跨源资源共享（CORS，或通俗地译为跨域资源共享）是一种基于 HTTP 头的机制，该机制通过允许服务器标示除了它自己以外的其他源（域、协议或端口），使得浏览器允许这些源访问加载自己的资源。\n\n跨源资源共享还通过一种机制来检查服务器是否会允许要发送的真实请求，该机制通过浏览器发起一个到服务器托管的跨源资源的“预检”请求。\n\n在预检中，浏览器发送的头中标示有 HTTP 方法和真实请求中会用到的头。\n\n跨源 HTTP 请求的一个例子：运行在 https://domain-a.com 的 JavaScript 代码使用 XMLHttpRequest 来发起一个到 https://domain-b.com/data.json 的请求。\n\n出于安全性，浏览器限制脚本内发起的跨源 HTTP 请求。例如，XMLHttpRequest 和 Fetch API 遵循同源策略。这意味着使用这些 API 的 Web 应用程序只能从加载应用程序的同一个域请求 HTTP 资源，除非响应报文包含了正确 CORS 响应头。\n\n需要在服务器做配置，使前端访问到数据。\n\n\n# 配置\n\nCorsConfig.cs\n\n/// <summary>\n/// 跨域配置\n/// </summary>\npublic static class CorsConfig\n{\n    /// <summary>\n    /// 跨域配置\n    /// </summary>\n    /// <param name="services"></param>\n    public static void AddCorsConfig(this IServiceCollection services)\n    {\n        services.AddCors(c => c.AddPolicy("AllowAnyOrigin", \n            p => p.AllowAnyHeader().AllowAnyMethod().AllowAnyOrigin()));\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 注册服务\n\n修改program.cs\n\n// Cors\nbuilder.Services.AddCorsConfig();\n...\napp.UseCors();\n\napp.UseAuthentication();\napp.UseAuthorization();\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'# 说明\n\n跨源资源共享（cors，或通俗地译为跨域资源共享）是一种基于 http 头的机制，该机制通过允许服务器标示除了它自己以外的其他源（域、协议或端口），使得浏览器允许这些源访问加载自己的资源。\n\n跨源资源共享还通过一种机制来检查服务器是否会允许要发送的真实请求，该机制通过浏览器发起一个到服务器托管的跨源资源的“预检”请求。\n\n在预检中，浏览器发送的头中标示有 http 方法和真实请求中会用到的头。\n\n跨源 http 请求的一个例子：运行在 https://domain-a.com 的 javascript 代码使用 xmlhttprequest 来发起一个到 https://domain-b.com/data.json 的请求。\n\n出于安全性，浏览器限制脚本内发起的跨源 http 请求。例如，xmlhttprequest 和 fetch api 遵循同源策略。这意味着使用这些 api 的 web 应用程序只能从加载应用程序的同一个域请求 http 资源，除非响应报文包含了正确 cors 响应头。\n\n需要在服务器做配置，使前端访问到数据。\n\n\n# 配置\n\ncorsconfig.cs\n\n/// <summary>\n/// 跨域配置\n/// </summary>\npublic static class corsconfig\n{\n    /// <summary>\n    /// 跨域配置\n    /// </summary>\n    /// <param name="services"></param>\n    public static void addcorsconfig(this iservicecollection services)\n    {\n        services.addcors(c => c.addpolicy("allowanyorigin", \n            p => p.allowanyheader().allowanymethod().allowanyorigin()));\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 注册服务\n\n修改program.cs\n\n// cors\nbuilder.services.addcorsconfig();\n...\napp.usecors();\n\napp.useauthentication();\napp.useauthorization();\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},lastUpdated:"2023/10/18, 19:38:19",lastUpdatedTimestamp:1697629099e3},{title:"WPF项增删改查01-说明",frontmatter:{title:"WPF项增删改查01-说明",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/info/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/02.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/01.WPF%E9%A1%B9%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A501-%E8%AF%B4%E6%98%8E.html",relativePath:"06.软件开发/05.WPF/02.WPF增删改查/01.WPF项增删改查01-说明.md",key:"v-0e82b9b7",path:"/soft/wpf/info/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:3,title:"实现功能",slug:"实现功能",normalizedTitle:"实现功能",charIndex:9},{level:3,title:"软件框架",slug:"软件框架",normalizedTitle:"软件框架",charIndex:51},{level:2,title:"目录",slug:"目录",normalizedTitle:"目录",charIndex:122}],headersStr:"说明 实现功能 软件框架 目录",content:"# 说明\n\n\n# 实现功能\n\n * WPF作为前端调用WebAPI接口实现登录和数据增删改查\n\n\n# 软件框架\n\n * VS2022，.Net6\n * Caliburn.Core，HandyControl，Fody，RestSharp\n\n\n# 目录\n\nWPF项增删改查01-说明\n\nWPF项增删改查02-新建工程\n\nWPF项增删改查03-Caliburn配置\n\nWPF项增删改查04-HandyControl配置\n\nWPF增删改查05-页面切换\n\nWPF增删改查06-RestSharp\n\nWPF增删改查07-用户增删改查\n\nWPF增删改查08-登录实现\n\nWPF增删改查09-美化\n\nWPF增删改查10-发布",normalizedContent:"# 说明\n\n\n# 实现功能\n\n * wpf作为前端调用webapi接口实现登录和数据增删改查\n\n\n# 软件框架\n\n * vs2022，.net6\n * caliburn.core，handycontrol，fody，restsharp\n\n\n# 目录\n\nwpf项增删改查01-说明\n\nwpf项增删改查02-新建工程\n\nwpf项增删改查03-caliburn配置\n\nwpf项增删改查04-handycontrol配置\n\nwpf增删改查05-页面切换\n\nwpf增删改查06-restsharp\n\nwpf增删改查07-用户增删改查\n\nwpf增删改查08-登录实现\n\nwpf增删改查09-美化\n\nwpf增删改查10-发布",charsets:{cjk:!0},lastUpdated:"2023/10/18, 19:38:19",lastUpdatedTimestamp:1697629099e3},{title:"WebApi增删改查12-Docker发布",frontmatter:{title:"WebApi增删改查12-Docker发布",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/docker/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/01.WebAPI%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/12.WebApi%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A512-Docker%E5%8F%91%E5%B8%83.html",relativePath:"06.软件开发/05.WPF/01.WebAPI增删改查/12.WebApi增删改查12-Docker发布.md",key:"v-842371a0",path:"/soft/webapi/docker/",headersStr:null,content:'功能测试完毕后可以发布到服务器，以虚拟机Centos7，docker为例\n\n 1. 右键Api工程，添加Docker支持，生产新的Dockerfile\n\n\n\n 2. 手动生成文件，可以修改Dockerfile，设为始终复制\n    \n    FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base\n    WORKDIR /app\n    EXPOSE 36188\n    \n    FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build\n    WORKDIR /src\n    #COPY ["Test.Api/Test.Api.csproj", "Test.Api/"]\n    #COPY ["Test.Shared/Test.Shared.csproj", "Test.Shared/"]\n    #RUN dotnet restore "Test.Api/Test.Api.csproj"\n    COPY . .\n    #WORKDIR "/src/Test.Api"\n    #RUN dotnet build "Test.Api.csproj" -c Release -o /app/build\n    \n    #FROM build AS publish\n    #RUN dotnet publish "Test.Api.csproj" -c Release -o /app/publish /p:UseAppHost=false\n    \n    #FROM base AS final\n    #WORKDIR /app\n    #COPY --from=publish /app/publish .\n    ENTRYPOINT ["dotnet", "Test.Api.dll"]\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    \n\n 3. 修改Properties/launchSettings.json部署端口\n    \n    "Docker": {\n      "commandName": "Docker",\n      "launchBrowser": true,\n      "launchUrl": "{Scheme}://{ServiceHost}:{ServicePort}/swagger",\n      "environmentVariables": {\n        "ASPNETCORE_URLS": "http://+:36188"\n      },\n      "publishAllPorts": true\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n 4. 修改program.cs\n    \n    builder.WebHost.UseUrls("http://*:36188");\n    ...\n    // Configure the HTTP request pipeline.\n    //if (app.Environment.IsDevelopment())\n    //{\n    //    app.UseSwaggerConfig();\n    //}\n    app.UseSwaggerConfig();\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n\n 5. 右键工程，选择发布，选择默认文件夹，删除现有文件，生成后点击发布\n    \n    \n    \n    \n\n 6. 将发布后的文件传入linux\n\n 7. 构建镜像\n    \n    docker build -t webapi .\n    #查看镜像\n    docker images\n    \n    \n    1\n    2\n    3\n    \n    \n    \n\n\n\n 8.  运行镜像\n     \n     docker run -d -p 36188:36188 --name webapi webapi\n     \n     \n     1\n     \n     \n     \n\n 9.  测试\n     \n     服务器开放端口36188\n     \n     输入http://http://192.168.1.5:36188/swagger，可以看到swagger界面，部署成功，进行其他测试\n\n 10. 可添加脚本自动构建镜像，启动容器\n     \n     出现错误./deploy.sh: line 5: $\'\\r\': command not found\n     \n     vim deploy.sh\n     \n     :set ff=unix\n     \n     echo "开始删除 webapi容器"\n     docker stop webapi || true\n     docker rm webapi || true\n     echo "完成删除 webapi容器"\n     \n     echo "开始删除 webapi镜像"\n     docker rmi webapi || true\n     echo "完成删除 webapi镜像"\n     \n     echo "开始构建 webapi镜像"\n     docker build -t webapi .\n     echo "完成构建 webapi镜像"\n     \n     echo "开始启动 webapi容器"\n     docker run -d --name webapi -p 36188:36188 --restart=always webapi\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     ',normalizedContent:'功能测试完毕后可以发布到服务器，以虚拟机centos7，docker为例\n\n 1. 右键api工程，添加docker支持，生产新的dockerfile\n\n\n\n 2. 手动生成文件，可以修改dockerfile，设为始终复制\n    \n    from mcr.microsoft.com/dotnet/aspnet:6.0 as base\n    workdir /app\n    expose 36188\n    \n    from mcr.microsoft.com/dotnet/sdk:6.0 as build\n    workdir /src\n    #copy ["test.api/test.api.csproj", "test.api/"]\n    #copy ["test.shared/test.shared.csproj", "test.shared/"]\n    #run dotnet restore "test.api/test.api.csproj"\n    copy . .\n    #workdir "/src/test.api"\n    #run dotnet build "test.api.csproj" -c release -o /app/build\n    \n    #from build as publish\n    #run dotnet publish "test.api.csproj" -c release -o /app/publish /p:useapphost=false\n    \n    #from base as final\n    #workdir /app\n    #copy --from=publish /app/publish .\n    entrypoint ["dotnet", "test.api.dll"]\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    \n\n 3. 修改properties/launchsettings.json部署端口\n    \n    "docker": {\n      "commandname": "docker",\n      "launchbrowser": true,\n      "launchurl": "{scheme}://{servicehost}:{serviceport}/swagger",\n      "environmentvariables": {\n        "aspnetcore_urls": "http://+:36188"\n      },\n      "publishallports": true\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n 4. 修改program.cs\n    \n    builder.webhost.useurls("http://*:36188");\n    ...\n    // configure the http request pipeline.\n    //if (app.environment.isdevelopment())\n    //{\n    //    app.useswaggerconfig();\n    //}\n    app.useswaggerconfig();\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n\n 5. 右键工程，选择发布，选择默认文件夹，删除现有文件，生成后点击发布\n    \n    \n    \n    \n\n 6. 将发布后的文件传入linux\n\n 7. 构建镜像\n    \n    docker build -t webapi .\n    #查看镜像\n    docker images\n    \n    \n    1\n    2\n    3\n    \n    \n    \n\n\n\n 8.  运行镜像\n     \n     docker run -d -p 36188:36188 --name webapi webapi\n     \n     \n     1\n     \n     \n     \n\n 9.  测试\n     \n     服务器开放端口36188\n     \n     输入http://http://192.168.1.5:36188/swagger，可以看到swagger界面，部署成功，进行其他测试\n\n 10. 可添加脚本自动构建镜像，启动容器\n     \n     出现错误./deploy.sh: line 5: $\'\\r\': command not found\n     \n     vim deploy.sh\n     \n     :set ff=unix\n     \n     echo "开始删除 webapi容器"\n     docker stop webapi || true\n     docker rm webapi || true\n     echo "完成删除 webapi容器"\n     \n     echo "开始删除 webapi镜像"\n     docker rmi webapi || true\n     echo "完成删除 webapi镜像"\n     \n     echo "开始构建 webapi镜像"\n     docker build -t webapi .\n     echo "完成构建 webapi镜像"\n     \n     echo "开始启动 webapi容器"\n     docker run -d --name webapi -p 36188:36188 --restart=always webapi\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     ',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WPF项增删改查02-新建工程",frontmatter:{title:"WPF项增删改查02-新建工程",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/newproject/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/02.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/02.WPF%E9%A1%B9%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A502-%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B.html",relativePath:"06.软件开发/05.WPF/02.WPF增删改查/02.WPF项增删改查02-新建工程.md",key:"v-7eab0886",path:"/soft/wpf/newproject/",headersStr:null,content:" 1. 在之前的[空白方案](WebApi增删改查02-新建工程 | i采薇小楼 (icaiwei.github.io))上新建WPF工程，并引用Share工程\n\n\n\n\n\n 2. 删除默认的MainWindow.xaml\n\n 3. 添加依赖\n    \n    ",normalizedContent:" 1. 在之前的[空白方案](webapi增删改查02-新建工程 | i采薇小楼 (icaiwei.github.io))上新建wpf工程，并引用share工程\n\n\n\n\n\n 2. 删除默认的mainwindow.xaml\n\n 3. 添加依赖\n    \n    ",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WPF项增删改查03-Caliburn配置",frontmatter:{title:"WPF项增删改查03-Caliburn配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/caliburn/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/02.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/03.WPF%E9%A1%B9%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A503-Caliburn%E9%85%8D%E7%BD%AE.html",relativePath:"06.软件开发/05.WPF/02.WPF增删改查/03.WPF项增删改查03-Caliburn配置.md",key:"v-6be47dea",path:"/soft/wpf/caliburn/",headers:[{level:2,title:"主窗口",slug:"主窗口",normalizedTitle:"主窗口",charIndex:2},{level:2,title:"Bootstrapper",slug:"bootstrapper",normalizedTitle:"bootstrapper",charIndex:163},{level:2,title:"App.xaml",slug:"app-xaml",normalizedTitle:"app.xaml",charIndex:2169}],headersStr:"主窗口 Bootstrapper App.xaml",content:'# 主窗口\n\n新建主窗口及对应类，caliburn对命名严格要求\n\n/Views/MainView.xaml\n\n/ViewModels/MainViewModel.cs\n\n\n\n修改MainViewModel.cs\n\ninternal class MainViewModel : Screen\n{\n}\n\n\n1\n2\n3\n\n\n\n# Bootstrapper\n\n根目录下新建Bootstrapper.cs\n\nclass Bootstrapper : BootstrapperBase\n{\n    public Bootstrapper()\n    {\n        Initialize();\n    }\n\n    protected override void OnStartup(object sender, StartupEventArgs e)\n    {\n        DisplayRootViewForAsync<MainViewModel>();\n    }\n\n    private SimpleContainer container;\n    protected override void Configure()\n    {\n        container = new SimpleContainer();\n        container.Singleton<IWindowManager, WindowManager>();\n        container.Singleton<IEventAggregator, EventAggregator>();\n        //container.Singleton<IViewModel, SimpleContainerViewModel>();\n        //container.Singleton<IViewModel, ShellViewModel>();\n        //container.Singleton<Page1ViewModel>("Page1ViewModel");//注册实例方法1 有key\n        //container.Singleton<Page2ViewModel>("Page2ViewModel");//注册实例方法1 有key\n        //container.Singleton<SimpleContainerViewModel> ();//注册实例方法1 没有key\n        //#region 其它注册方法\n        //container.RegisterSingleton(typeof(SimpleContainerViewModel), "SimpleContainerViewModel", typeof(SimpleContainerViewModel));//注册实例方法2\n        //container.RegisterInstance(typeof(SimpleContainerViewModel), "SimpleContainerViewModel", new SimpleContainerViewModel()); //注册实例方法3\n        //#endregion\n        container.PerRequest<MainViewModel>(); //按照请求注册实例方法1\n        //container.RegisterPerRequest(typeof(ShellViewModel), "ShellViewModel", typeof(ShellViewModel));//按照请求注册实例方法2\n    }\n    protected override object GetInstance(Type service, string key)\n    {\n        return container.GetInstance(service, key);\n    }\n    protected override IEnumerable<object> GetAllInstances(Type service)\n    {\n        return container.GetAllInstances(service);\n    }\n    protected override void BuildUp(object instance)\n    {\n        container.BuildUp(instance);\n    }\n    \n}\npublic interface IViewModel\n{\n\n}\npublic interface IShell\n{\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n\n# App.xaml\n\n修改文件，删除StartupUri\n\n<Application\n    x:Class="Test.Wpf.App"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:local="clr-namespace:Test.Wpf">\n    <Application.Resources>\n        <ResourceDictionary>\n            <ResourceDictionary.MergedDictionaries>\n                <ResourceDictionary>\n                    <local:Bootstrapper x:Key="bootstrapper" />\n                </ResourceDictionary>\n            </ResourceDictionary.MergedDictionaries>\n        </ResourceDictionary>\n    </Application.Resources>\n</Application>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n运行后可看到主窗口',normalizedContent:'# 主窗口\n\n新建主窗口及对应类，caliburn对命名严格要求\n\n/views/mainview.xaml\n\n/viewmodels/mainviewmodel.cs\n\n\n\n修改mainviewmodel.cs\n\ninternal class mainviewmodel : screen\n{\n}\n\n\n1\n2\n3\n\n\n\n# bootstrapper\n\n根目录下新建bootstrapper.cs\n\nclass bootstrapper : bootstrapperbase\n{\n    public bootstrapper()\n    {\n        initialize();\n    }\n\n    protected override void onstartup(object sender, startupeventargs e)\n    {\n        displayrootviewforasync<mainviewmodel>();\n    }\n\n    private simplecontainer container;\n    protected override void configure()\n    {\n        container = new simplecontainer();\n        container.singleton<iwindowmanager, windowmanager>();\n        container.singleton<ieventaggregator, eventaggregator>();\n        //container.singleton<iviewmodel, simplecontainerviewmodel>();\n        //container.singleton<iviewmodel, shellviewmodel>();\n        //container.singleton<page1viewmodel>("page1viewmodel");//注册实例方法1 有key\n        //container.singleton<page2viewmodel>("page2viewmodel");//注册实例方法1 有key\n        //container.singleton<simplecontainerviewmodel> ();//注册实例方法1 没有key\n        //#region 其它注册方法\n        //container.registersingleton(typeof(simplecontainerviewmodel), "simplecontainerviewmodel", typeof(simplecontainerviewmodel));//注册实例方法2\n        //container.registerinstance(typeof(simplecontainerviewmodel), "simplecontainerviewmodel", new simplecontainerviewmodel()); //注册实例方法3\n        //#endregion\n        container.perrequest<mainviewmodel>(); //按照请求注册实例方法1\n        //container.registerperrequest(typeof(shellviewmodel), "shellviewmodel", typeof(shellviewmodel));//按照请求注册实例方法2\n    }\n    protected override object getinstance(type service, string key)\n    {\n        return container.getinstance(service, key);\n    }\n    protected override ienumerable<object> getallinstances(type service)\n    {\n        return container.getallinstances(service);\n    }\n    protected override void buildup(object instance)\n    {\n        container.buildup(instance);\n    }\n    \n}\npublic interface iviewmodel\n{\n\n}\npublic interface ishell\n{\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n\n# app.xaml\n\n修改文件，删除startupuri\n\n<application\n    x:class="test.wpf.app"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:local="clr-namespace:test.wpf">\n    <application.resources>\n        <resourcedictionary>\n            <resourcedictionary.mergeddictionaries>\n                <resourcedictionary>\n                    <local:bootstrapper x:key="bootstrapper" />\n                </resourcedictionary>\n            </resourcedictionary.mergeddictionaries>\n        </resourcedictionary>\n    </application.resources>\n</application>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n运行后可看到主窗口',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WPF项增删改查04-HandyControl配置",frontmatter:{title:"WPF项增删改查04-HandyControl配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/handycontrol/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/02.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/04.WPF%E9%A1%B9%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A504-HandyControl%E9%85%8D%E7%BD%AE.html",relativePath:"06.软件开发/05.WPF/02.WPF增删改查/04.WPF项增删改查04-HandyControl配置.md",key:"v-1b775658",path:"/soft/wpf/handycontrol/",headers:[{level:2,title:"App.xaml",slug:"app-xaml",normalizedTitle:"app.xaml",charIndex:2},{level:2,title:"界面中使用HandyControl",slug:"界面中使用handycontrol",normalizedTitle:"界面中使用handycontrol",charIndex:887}],headersStr:"App.xaml 界面中使用HandyControl",content:'# App.xaml\n\n引入依赖\n\n<Application\n    x:Class="Test.Wpf.App"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:local="clr-namespace:Test.Wpf">\n    <Application.Resources>\n        <ResourceDictionary>\n            <ResourceDictionary.MergedDictionaries>\n                <ResourceDictionary>\n                    <local:Bootstrapper x:Key="bootstrapper" />\n                </ResourceDictionary>\n                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml" />\n                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml" />\n            </ResourceDictionary.MergedDictionaries>\n        </ResourceDictionary>\n    </Application.Resources>\n</Application>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 界面中使用HandyControl\n\nxmlns:hc="https://handyorg.github.io/handycontrol"\n\n\n1\n',normalizedContent:'# app.xaml\n\n引入依赖\n\n<application\n    x:class="test.wpf.app"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:local="clr-namespace:test.wpf">\n    <application.resources>\n        <resourcedictionary>\n            <resourcedictionary.mergeddictionaries>\n                <resourcedictionary>\n                    <local:bootstrapper x:key="bootstrapper" />\n                </resourcedictionary>\n                <resourcedictionary source="pack://application:,,,/handycontrol;component/themes/skindefault.xaml" />\n                <resourcedictionary source="pack://application:,,,/handycontrol;component/themes/theme.xaml" />\n            </resourcedictionary.mergeddictionaries>\n        </resourcedictionary>\n    </application.resources>\n</application>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 界面中使用handycontrol\n\nxmlns:hc="https://handyorg.github.io/handycontrol"\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2023/10/18, 19:38:19",lastUpdatedTimestamp:1697629099e3},{title:"WPF增删改查05-页面切换",frontmatter:{title:"WPF增删改查05-页面切换",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/pages/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/02.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/05.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A505-%E9%A1%B5%E9%9D%A2%E5%88%87%E6%8D%A2.html",relativePath:"06.软件开发/05.WPF/02.WPF增删改查/05.WPF增删改查05-页面切换.md",key:"v-b3b2e64a",path:"/soft/wpf/pages/",headers:[{level:2,title:"新建页面",slug:"新建页面",normalizedTitle:"新建页面",charIndex:2},{level:2,title:"主窗口",slug:"主窗口",normalizedTitle:"主窗口",charIndex:5422},{level:2,title:"主窗口类",slug:"主窗口类",normalizedTitle:"主窗口类",charIndex:8853},{level:2,title:"演示效果",slug:"演示效果",normalizedTitle:"演示效果",charIndex:10083}],headersStr:"新建页面 主窗口 主窗口类 演示效果",content:'# 新建页面\n\n/Views/SysUserView.xaml，\n\n/ViewModels/SysUserViewModel.cs\n\n<UserControl\n    x:Class="Test.Wpf.Views.SysUserView"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:local="clr-namespace:Test.Wpf.Views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    d:DesignHeight="450"\n    d:DesignWidth="800"\n    mc:Ignorable="d">\n    <Grid>\n        <TextBlock\n            FontSize="30"\n            Foreground="Red"\n            Text="用户" />\n    </Grid>\n</UserControl>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\ninternal class SysUserViewModel : PropertyChangedBase, IViewModel\n{\n}\n\n\n1\n2\n3\n\n\n/Views/Page1View.xaml，\n\n/ViewModels/Page1ViewModel.cs\n\n<UserControl\n    x:Class="Test.Wpf.Views.Page1View"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:local="clr-namespace:Test.Wpf.Views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    d:DesignHeight="450"\n    d:DesignWidth="800"\n    mc:Ignorable="d">\n    <Grid>\n        <TextBlock\n            FontSize="30"\n            Foreground="Red"\n            Text="Page1" />\n    </Grid>\n</UserControl>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\ninternal class Page1ViewModel : PropertyChangedBase, IViewModel\n{\n}\n\n\n1\n2\n3\n\n\n/Views/Page2View.xaml，\n\n/ViewModels/Page2ViewModel.cs\n\n<UserControl\n    x:Class="Test.Wpf.Views.Page2View"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:cal="http://www.caliburnproject.org"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:local="clr-namespace:Test.Wpf.Views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    d:DesignHeight="450"\n    d:DesignWidth="800"\n    mc:Ignorable="d">\n    <Grid>\n        <Grid.ColumnDefinitions>\n            <ColumnDefinition Width="0.25*" />\n            <ColumnDefinition Width="*" />\n        </Grid.ColumnDefinitions>\n        <Border\n            Grid.ColumnSpan="2"\n            BorderBrush="LightSteelBlue"\n            BorderThickness="2"\n            CornerRadius="5" />\n        <Border\n            Grid.Column="0"\n            BorderBrush="LightSteelBlue"\n            BorderThickness="2"\n            CornerRadius="5" />\n        <ListBox\n            Name="ListBoxItems"\n            Grid.Column="0"\n            Margin="2"\n            cal:Message.Attach="[Event SelectionChanged] = [Action ListBoxItems_SelectionChanged]"\n            SelectedItem="{Binding SelectedItem}" />\n        <Grid Grid.Column="1">\n            <ContentControl x:Name="ActivePageView" />\n        </Grid>\n    </Grid>\n</UserControl>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\ninternal class Page2ViewModel : PropertyChangedBase, IViewModel\n{\n    public IViewModel ActivePageView { get; set; }\n    public ObservableCollection<string> ListBoxItems { get; set; }\n    public string SelectedItem { get; set; }\n\n    public Page2ViewModel()\n    {\n        ListBoxItems = new ObservableCollection<string>() { };\n        ListBoxItems.Add("Page21");\n        ListBoxItems.Add("Page22");\n    }\n\n    public void ListBoxItems_SelectionChanged()\n    {\n        switch (SelectedItem)\n        {\n            case "Page21":\n                ActivePageView = new Page21ViewModel(); break;\n            case "Page22":\n                ActivePageView = new Page22ViewModel(); break;\n            default: break;\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n/Views/Page1/Page21View.xaml，\n\n/ViewModels/Page2/Page21ViewModel.cs\n\n<UserControl\n    x:Class="Test.Wpf.Views.Page2.Page21View"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:local="clr-namespace:Test.Wpf.Views.Page2"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    d:DesignHeight="450"\n    d:DesignWidth="800"\n    mc:Ignorable="d">\n    <Grid>\n        <TextBlock\n            FontSize="30"\n            Foreground="Red"\n            Text="Page21" />\n    </Grid>\n</UserControl>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\ninternal class Page21ViewModel : PropertyChangedBase, IViewModel\n{\n}\n\n\n1\n2\n3\n\n\n/Views/Page1/Page22View.xaml，\n\n/ViewModels/Page2/Page22ViewModel.cs\n\n<UserControl\n    x:Class="Test.Wpf.Views.Page2.Page22View"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:local="clr-namespace:Test.Wpf.Views.Page2"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    d:DesignHeight="450"\n    d:DesignWidth="800"\n    mc:Ignorable="d">\n    <Grid>\n        <TextBlock\n            FontSize="30"\n            Foreground="Red"\n            Text="Page22" />\n    </Grid>\n</UserControl>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\ninternal class Page22ViewModel : PropertyChangedBase, IViewModel\n{\n}\n\n\n1\n2\n3\n\n\n\n\n\n# 主窗口\n\n修改MainView.xaml\n\n<Window\n    x:Class="Test.Wpf.Views.MainView"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:cal="http://www.caliburnproject.org"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:hc="https://handyorg.github.io/handycontrol"\n    xmlns:local="clr-namespace:Test.Wpf.Views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    Title="MainView"\n    Width="950"\n    Height="650"\n    MinWidth="800"\n    MinHeight="600"\n    ResizeMode="CanResizeWithGrip"\n    WindowStartupLocation="CenterScreen"\n    mc:Ignorable="d">\n    <Grid>\n        <Grid.ColumnDefinitions>\n            <ColumnDefinition Width="{Binding MenuWidth}" />\n            <ColumnDefinition Width="20" />\n            <ColumnDefinition />\n        </Grid.ColumnDefinitions>\n        <Grid Grid.Column="0">\n            <Border\n                Grid.ColumnSpan="2"\n                BorderBrush="LightSteelBlue"\n                BorderThickness="2"\n                CornerRadius="5" />\n            <Border\n                Grid.Column="0"\n                BorderBrush="LightSteelBlue"\n                BorderThickness="2"\n                CornerRadius="5" />\n            <ListBox\n                Name="ListBoxItems"\n                Grid.Column="0"\n                Margin="2"\n                cal:Message.Attach="[Event SelectionChanged] = [Action ListBoxItems_SelectionChanged]"\n                SelectedIndex="1"\n                SelectedItem="{Binding SelectedItem}" />\n        </Grid>\n        <Grid Grid.Column="1">\n            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top">\n                <StackPanel>\n                    <ToggleButton\n                        Name="ToggleMenuWidth"\n                        HorizontalAlignment="Center"\n                        BorderThickness="0"\n                        IsChecked="True"\n                        Style="{StaticResource ToggleButtonFlip.Small}">\n                        <hc:StatusSwitchElement.CheckedElement>\n                            <Border Background="{DynamicResource PrimaryBrush}">\n                                <TextBlock\n                                    HorizontalAlignment="Center"\n                                    VerticalAlignment="Center"\n                                    Foreground="{DynamicResource TextIconBrush}"\n                                    Text="&lt;" />\n                            </Border>\n                        </hc:StatusSwitchElement.CheckedElement>\n                        <Border Background="{DynamicResource SuccessBrush}">\n                            <TextBlock\n                                HorizontalAlignment="Center"\n                                VerticalAlignment="Center"\n                                Foreground="{DynamicResource TextIconBrush}"\n                                Text="&gt;" />\n                        </Border>\n                    </ToggleButton>\n                </StackPanel>\n            </StackPanel>\n        </Grid>\n        <Grid Grid.Column="2">\n            <ContentControl x:Name="ActiveWindowView" />\n        </Grid>\n    </Grid>\n</Window>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n\n\n\n# 主窗口类\n\ninternal class MainViewModel : Screen\n{\n    public IViewModel ActiveWindowView { get; set; }\n    public ObservableCollection<string> ListBoxItems { get; set; }\n    public string? SelectedItem { get; set; }\n    public int MenuWidth { get; set; } = 150;\n\n    public MainViewModel()\n    {\n        ActiveWindowView = new Page1ViewModel();\n        ListBoxItems = new ObservableCollection<string>() { };\n        ListBoxItems.Add("Page1");\n        ListBoxItems.Add("Page2");\n        ListBoxItems.Add("用户");\n    }\n\n    public void ListBoxItems_SelectionChanged()\n    {\n        switch (SelectedItem)\n        {\n            case "Page1":\n                ActiveWindowView = new Page1ViewModel(); break;\n            case "Page2":\n                ActiveWindowView = new Page2ViewModel(); break;\n            case "用户":\n                ActiveWindowView = new SysUserViewModel(); break;\n            default: break;\n        }\n    }\n\n    public void ToggleMenuWidth()\n    {\n        if (MenuWidth == 0)\n        {\n            MenuWidth = 150;\n        }\n        else\n        {\n            MenuWidth = 0;\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 演示效果\n\n',normalizedContent:'# 新建页面\n\n/views/sysuserview.xaml，\n\n/viewmodels/sysuserviewmodel.cs\n\n<usercontrol\n    x:class="test.wpf.views.sysuserview"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:local="clr-namespace:test.wpf.views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    d:designheight="450"\n    d:designwidth="800"\n    mc:ignorable="d">\n    <grid>\n        <textblock\n            fontsize="30"\n            foreground="red"\n            text="用户" />\n    </grid>\n</usercontrol>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\ninternal class sysuserviewmodel : propertychangedbase, iviewmodel\n{\n}\n\n\n1\n2\n3\n\n\n/views/page1view.xaml，\n\n/viewmodels/page1viewmodel.cs\n\n<usercontrol\n    x:class="test.wpf.views.page1view"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:local="clr-namespace:test.wpf.views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    d:designheight="450"\n    d:designwidth="800"\n    mc:ignorable="d">\n    <grid>\n        <textblock\n            fontsize="30"\n            foreground="red"\n            text="page1" />\n    </grid>\n</usercontrol>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\ninternal class page1viewmodel : propertychangedbase, iviewmodel\n{\n}\n\n\n1\n2\n3\n\n\n/views/page2view.xaml，\n\n/viewmodels/page2viewmodel.cs\n\n<usercontrol\n    x:class="test.wpf.views.page2view"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:cal="http://www.caliburnproject.org"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:local="clr-namespace:test.wpf.views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    d:designheight="450"\n    d:designwidth="800"\n    mc:ignorable="d">\n    <grid>\n        <grid.columndefinitions>\n            <columndefinition width="0.25*" />\n            <columndefinition width="*" />\n        </grid.columndefinitions>\n        <border\n            grid.columnspan="2"\n            borderbrush="lightsteelblue"\n            borderthickness="2"\n            cornerradius="5" />\n        <border\n            grid.column="0"\n            borderbrush="lightsteelblue"\n            borderthickness="2"\n            cornerradius="5" />\n        <listbox\n            name="listboxitems"\n            grid.column="0"\n            margin="2"\n            cal:message.attach="[event selectionchanged] = [action listboxitems_selectionchanged]"\n            selecteditem="{binding selecteditem}" />\n        <grid grid.column="1">\n            <contentcontrol x:name="activepageview" />\n        </grid>\n    </grid>\n</usercontrol>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\ninternal class page2viewmodel : propertychangedbase, iviewmodel\n{\n    public iviewmodel activepageview { get; set; }\n    public observablecollection<string> listboxitems { get; set; }\n    public string selecteditem { get; set; }\n\n    public page2viewmodel()\n    {\n        listboxitems = new observablecollection<string>() { };\n        listboxitems.add("page21");\n        listboxitems.add("page22");\n    }\n\n    public void listboxitems_selectionchanged()\n    {\n        switch (selecteditem)\n        {\n            case "page21":\n                activepageview = new page21viewmodel(); break;\n            case "page22":\n                activepageview = new page22viewmodel(); break;\n            default: break;\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n/views/page1/page21view.xaml，\n\n/viewmodels/page2/page21viewmodel.cs\n\n<usercontrol\n    x:class="test.wpf.views.page2.page21view"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:local="clr-namespace:test.wpf.views.page2"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    d:designheight="450"\n    d:designwidth="800"\n    mc:ignorable="d">\n    <grid>\n        <textblock\n            fontsize="30"\n            foreground="red"\n            text="page21" />\n    </grid>\n</usercontrol>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\ninternal class page21viewmodel : propertychangedbase, iviewmodel\n{\n}\n\n\n1\n2\n3\n\n\n/views/page1/page22view.xaml，\n\n/viewmodels/page2/page22viewmodel.cs\n\n<usercontrol\n    x:class="test.wpf.views.page2.page22view"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:local="clr-namespace:test.wpf.views.page2"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    d:designheight="450"\n    d:designwidth="800"\n    mc:ignorable="d">\n    <grid>\n        <textblock\n            fontsize="30"\n            foreground="red"\n            text="page22" />\n    </grid>\n</usercontrol>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\ninternal class page22viewmodel : propertychangedbase, iviewmodel\n{\n}\n\n\n1\n2\n3\n\n\n\n\n\n# 主窗口\n\n修改mainview.xaml\n\n<window\n    x:class="test.wpf.views.mainview"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:cal="http://www.caliburnproject.org"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:hc="https://handyorg.github.io/handycontrol"\n    xmlns:local="clr-namespace:test.wpf.views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    title="mainview"\n    width="950"\n    height="650"\n    minwidth="800"\n    minheight="600"\n    resizemode="canresizewithgrip"\n    windowstartuplocation="centerscreen"\n    mc:ignorable="d">\n    <grid>\n        <grid.columndefinitions>\n            <columndefinition width="{binding menuwidth}" />\n            <columndefinition width="20" />\n            <columndefinition />\n        </grid.columndefinitions>\n        <grid grid.column="0">\n            <border\n                grid.columnspan="2"\n                borderbrush="lightsteelblue"\n                borderthickness="2"\n                cornerradius="5" />\n            <border\n                grid.column="0"\n                borderbrush="lightsteelblue"\n                borderthickness="2"\n                cornerradius="5" />\n            <listbox\n                name="listboxitems"\n                grid.column="0"\n                margin="2"\n                cal:message.attach="[event selectionchanged] = [action listboxitems_selectionchanged]"\n                selectedindex="1"\n                selecteditem="{binding selecteditem}" />\n        </grid>\n        <grid grid.column="1">\n            <stackpanel horizontalalignment="center" verticalalignment="top">\n                <stackpanel>\n                    <togglebutton\n                        name="togglemenuwidth"\n                        horizontalalignment="center"\n                        borderthickness="0"\n                        ischecked="true"\n                        style="{staticresource togglebuttonflip.small}">\n                        <hc:statusswitchelement.checkedelement>\n                            <border background="{dynamicresource primarybrush}">\n                                <textblock\n                                    horizontalalignment="center"\n                                    verticalalignment="center"\n                                    foreground="{dynamicresource texticonbrush}"\n                                    text="&lt;" />\n                            </border>\n                        </hc:statusswitchelement.checkedelement>\n                        <border background="{dynamicresource successbrush}">\n                            <textblock\n                                horizontalalignment="center"\n                                verticalalignment="center"\n                                foreground="{dynamicresource texticonbrush}"\n                                text="&gt;" />\n                        </border>\n                    </togglebutton>\n                </stackpanel>\n            </stackpanel>\n        </grid>\n        <grid grid.column="2">\n            <contentcontrol x:name="activewindowview" />\n        </grid>\n    </grid>\n</window>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n\n\n\n# 主窗口类\n\ninternal class mainviewmodel : screen\n{\n    public iviewmodel activewindowview { get; set; }\n    public observablecollection<string> listboxitems { get; set; }\n    public string? selecteditem { get; set; }\n    public int menuwidth { get; set; } = 150;\n\n    public mainviewmodel()\n    {\n        activewindowview = new page1viewmodel();\n        listboxitems = new observablecollection<string>() { };\n        listboxitems.add("page1");\n        listboxitems.add("page2");\n        listboxitems.add("用户");\n    }\n\n    public void listboxitems_selectionchanged()\n    {\n        switch (selecteditem)\n        {\n            case "page1":\n                activewindowview = new page1viewmodel(); break;\n            case "page2":\n                activewindowview = new page2viewmodel(); break;\n            case "用户":\n                activewindowview = new sysuserviewmodel(); break;\n            default: break;\n        }\n    }\n\n    public void togglemenuwidth()\n    {\n        if (menuwidth == 0)\n        {\n            menuwidth = 150;\n        }\n        else\n        {\n            menuwidth = 0;\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 演示效果\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WPF增删改查06-RestHttp配置",frontmatter:{title:"WPF增删改查06-RestHttp配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/restsharp/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/02.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/06.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A506-RestSharp.html",relativePath:"06.软件开发/05.WPF/02.WPF增删改查/06.WPF增删改查06-RestSharp.md",key:"v-7cda3b26",path:"/soft/wpf/restsharp/",headers:[{level:2,title:"新建配置",slug:"新建配置",normalizedTitle:"新建配置",charIndex:2},{level:2,title:"工具类RestSharpHelp",slug:"工具类restsharphelp",normalizedTitle:"工具类restsharphelp",charIndex:79}],headersStr:"新建配置 工具类RestSharpHelp",content:'# 新建配置\n\n/Properties/Settings.settings\n\n用于保存登录的用户名，根据用户名获取后端redis的token\n\n\n\n\n\n\n# 工具类RestSharpHelp\n\ninternal class RestSharpHelper\n{\n    private static string BaseUrl = "http://192.168.1.5:36188";\n    public static RedisHelper redisHelper = new RedisHelper("192.168.1.5:6379,password=123456", "local", 6);\n\n    public static async Task<JsonResult> GetData(string api, Method method)\n    {\n        string url = BaseUrl + api;\n        var client = new RestClient(url);\n        RestRequest request = new RestRequest();\n        request.Method = method;\n        string username = Properties.Settings.Default.Username;\n        string token = redisHelper.GetDatabase().StringGet($"user.info.{username}");\n        request.AddHeader("Authorization", $"Bearer {token}");\n        RestResponse response = await client.ExecuteAsync(request);\n        if (!string.IsNullOrWhiteSpace(response.Content))\n        {\n            return JsonConvert.DeserializeObject<JsonResult>(response.Content);\n        }\n        else\n        {\n            return JsonResult.Error("连接服务器失败");\n        }\n    }\n\n    public static async Task<JsonResult> PostData(string api, Method method, object param)\n    {\n        string url = BaseUrl + api;\n        var client = new RestClient(url);\n        RestRequest request = new RestRequest();\n        request.Method = method;\n        string username = Properties.Settings.Default.Username;\n        string token = redisHelper.GetDatabase().StringGet($"user.info.{username}");\n        request.AddHeader("Authorization", $"Bearer {token}");\n        request.AddParameter("application/json", JsonConvert.SerializeObject(param), ParameterType.RequestBody);\n        RestResponse response = await client.ExecuteAsync(request);\n        if (!string.IsNullOrWhiteSpace(response.Content))\n        {\n            return JsonConvert.DeserializeObject<JsonResult>(response.Content);\n        }\n        else\n        {\n            return JsonResult.Error("连接服务器失败");\n        }\n    }\n\n    public static async Task<JsonResult> Login(string api, Method method, object param)\n    {\n        string url = BaseUrl + api;\n        var client = new RestClient(url);\n        RestRequest request = new RestRequest();\n        request.Method = method;\n        request.AddParameter("application/json", JsonConvert.SerializeObject(param), ParameterType.RequestBody);\n        RestResponse response = await client.ExecuteAsync(request);\n        if (!string.IsNullOrWhiteSpace(response.Content))\n        {\n            return JsonConvert.DeserializeObject<JsonResult>(response.Content);\n        }\n        else\n        {\n            return JsonResult.Error("连接服务器失败");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n',normalizedContent:'# 新建配置\n\n/properties/settings.settings\n\n用于保存登录的用户名，根据用户名获取后端redis的token\n\n\n\n\n\n\n# 工具类restsharphelp\n\ninternal class restsharphelper\n{\n    private static string baseurl = "http://192.168.1.5:36188";\n    public static redishelper redishelper = new redishelper("192.168.1.5:6379,password=123456", "local", 6);\n\n    public static async task<jsonresult> getdata(string api, method method)\n    {\n        string url = baseurl + api;\n        var client = new restclient(url);\n        restrequest request = new restrequest();\n        request.method = method;\n        string username = properties.settings.default.username;\n        string token = redishelper.getdatabase().stringget($"user.info.{username}");\n        request.addheader("authorization", $"bearer {token}");\n        restresponse response = await client.executeasync(request);\n        if (!string.isnullorwhitespace(response.content))\n        {\n            return jsonconvert.deserializeobject<jsonresult>(response.content);\n        }\n        else\n        {\n            return jsonresult.error("连接服务器失败");\n        }\n    }\n\n    public static async task<jsonresult> postdata(string api, method method, object param)\n    {\n        string url = baseurl + api;\n        var client = new restclient(url);\n        restrequest request = new restrequest();\n        request.method = method;\n        string username = properties.settings.default.username;\n        string token = redishelper.getdatabase().stringget($"user.info.{username}");\n        request.addheader("authorization", $"bearer {token}");\n        request.addparameter("application/json", jsonconvert.serializeobject(param), parametertype.requestbody);\n        restresponse response = await client.executeasync(request);\n        if (!string.isnullorwhitespace(response.content))\n        {\n            return jsonconvert.deserializeobject<jsonresult>(response.content);\n        }\n        else\n        {\n            return jsonresult.error("连接服务器失败");\n        }\n    }\n\n    public static async task<jsonresult> login(string api, method method, object param)\n    {\n        string url = baseurl + api;\n        var client = new restclient(url);\n        restrequest request = new restrequest();\n        request.method = method;\n        request.addparameter("application/json", jsonconvert.serializeobject(param), parametertype.requestbody);\n        restresponse response = await client.executeasync(request);\n        if (!string.isnullorwhitespace(response.content))\n        {\n            return jsonconvert.deserializeobject<jsonresult>(response.content);\n        }\n        else\n        {\n            return jsonresult.error("连接服务器失败");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WPF增删改查07-用户增删改查",frontmatter:{title:"WPF增删改查07-用户增删改查",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/user/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/02.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/07.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A507-%E7%94%A8%E6%88%B7%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5.html",relativePath:"06.软件开发/05.WPF/02.WPF增删改查/07.WPF增删改查07-用户增删改查.md",key:"v-5269a9a3",path:"/soft/wpf/user/",headers:[{level:2,title:"PageModel.cs",slug:"pagemodel-cs",normalizedTitle:"pagemodel.cs",charIndex:2},{level:2,title:"SysUserView.xaml",slug:"sysuserview-xaml",normalizedTitle:"sysuserview.xaml",charIndex:372},{level:2,title:"演示",slug:"演示",normalizedTitle:"演示",charIndex:16078}],headersStr:"PageModel.cs SysUserView.xaml 演示",content:'# PageModel.cs\n\n用于分页实现\n\n[AddINotifyPropertyChangedInterface]\npublic class PageModel\n{\n    public int PageNo { get; set; } = 1;\n    public int PageSize { get; set; } = 10;\n    public int PageCount { get; set; }\n    public long Total { get; set; }\n    public List<int>? PageNoList { get; set; }\n    public List<int>? PageSizeList { get; set; }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# SysUserView.xaml\n\n<UserControl\n    x:Class="Test.Wpf.Views.SysUserView"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:cal="http://www.caliburnproject.org"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:hc="https://handyorg.github.io/handycontrol"\n    xmlns:local="clr-namespace:Test.Wpf.Views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    xmlns:viewmodels="clr-namespace:Test.Wpf.ViewModels"\n    d:DesignHeight="450"\n    d:DesignWidth="800"\n    mc:Ignorable="d">\n    <hc:TransitioningContentControl>\n        <Grid>\n            <Grid.ColumnDefinitions>\n                <ColumnDefinition />\n                <ColumnDefinition Width="{Binding RightColumnWidth}" />\n            </Grid.ColumnDefinitions>\n            <Grid Grid.Column="0">\n                <Grid.RowDefinitions>\n                    <RowDefinition Height="60" />\n                    <RowDefinition />\n                    <RowDefinition Height="40" />\n                </Grid.RowDefinitions>\n                <Grid Grid.Row="0" Margin="10">\n                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">\n                        <hc:TextBox\n                            Name="Username"\n                            Width="320"\n                            Height="30"\n                            hc:InfoElement.Placeholder="请输入用户名" />\n                        <Button\n                            Name="GetDataAsync"\n                            Margin="5,0,0,0"\n                            Content="查询"\n                            Style="{StaticResource ButtonSuccess}" />\n                        <Button\n                            Name="ResetQuery"\n                            Margin="5,0,0,0"\n                            Content="重置"\n                            Style="{StaticResource ButtonInfo}" />\n                    </StackPanel>\n                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">\n                        <Button\n                            Name="OpenCreateForm"\n                            Margin="5,0,0,0"\n                            Content="新增"\n                            Style="{StaticResource ButtonPrimary}" />\n                        <Button\n                            Name="OpenUpdateForm"\n                            Margin="5,0,0,0"\n                            Content="编辑"\n                            Style="{StaticResource ButtonWarning}" />\n                        <Button\n                            Name="DeleteUser"\n                            Margin="5,0,0,0"\n                            Content="删除"\n                            Style="{StaticResource ButtonDanger}" />\n                    </StackPanel>\n\n                </Grid>\n                <Grid Grid.Row="1">\n                    <Grid.ColumnDefinitions>\n                        <ColumnDefinition Width="27*" />\n                        <ColumnDefinition Width="5*" />\n                    </Grid.ColumnDefinitions>\n                    <hc:ScrollViewer\n                        Grid.ColumnSpan="2"\n                        CanContentScroll="True"\n                        HorizontalScrollBarVisibility="Auto"\n                        VerticalScrollBarVisibility="Disabled">\n                        <DataGrid\n                            x:Name="dg"\n                            AutoGenerateColumns="False"\n                            FrozenColumnCount="1"\n                            HeadersVisibility="All"\n                            ItemsSource="{Binding UserList}"\n                            RowHeaderWidth="60"\n                            SelectedIndex="{Binding index}"\n                            SelectionMode="Single"\n                            Style="{StaticResource DataGrid.Small}">\n                            <DataGrid.RowHeaderTemplate>\n                                <DataTemplate>\n                                    <CheckBox IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" />\n                                </DataTemplate>\n                            </DataGrid.RowHeaderTemplate>\n                            <DataGrid.Columns>\n                                <DataGridTextColumn\n                                    Width="80"\n                                    Binding="{Binding Id}"\n                                    CanUserResize="False"\n                                    Header="ID"\n                                    IsReadOnly="True" />\n                                <DataGridTextColumn Binding="{Binding Username}" Header="用户名" />\n                                <DataGridTextColumn Binding="{Binding Nickname}" Header="昵称" />\n                                <DataGridTextColumn Binding="{Binding Remark}" Header="备注" />\n                                <DataGridTextColumn Binding="{Binding CreateTime, StringFormat={}\\{0:yyyy-MM-dd hh:mm:ss\\}}" Header="创建时间" />\n                            </DataGrid.Columns>\n                        </DataGrid>\n                    </hc:ScrollViewer>\n                </Grid>\n                <Grid Grid.Row="2">\n                    <StackPanel\n                        HorizontalAlignment="Left"\n                        VerticalAlignment="Center"\n                        Orientation="Horizontal">\n                        <TextBlock\n                            Width="20"\n                            Height="30"\n                            Margin="15,15,0,0"\n                            HorizontalAlignment="Center"\n                            VerticalAlignment="Center"\n                            Text="共" />\n                        <TextBlock\n                            Width="20"\n                            Height="30"\n                            Margin="0,15,0,0"\n                            HorizontalAlignment="Center"\n                            VerticalAlignment="Center"\n                            Text="{Binding PageModel.Total}" />\n                        <TextBlock\n                            Width="20"\n                            Height="30"\n                            Margin="0,15,0,0"\n                            HorizontalAlignment="Center"\n                            VerticalAlignment="Center"\n                            Text="条" />\n                        <TextBlock\n                            Width="20"\n                            Height="30"\n                            Margin="15,15,0,0"\n                            HorizontalAlignment="Center"\n                            VerticalAlignment="Center"\n                            Text="第" />\n                        <ComboBox\n                            Name="PageNoUpdated"\n                            Width="70"\n                            Height="30"\n                            Margin="0,0,0,0"\n                            ItemsSource="{Binding PageModel.PageNoList}"\n                            SelectedValue="{Binding PageModel.PageNo, Mode=TwoWay}" />\n                        <TextBlock\n                            Width="20"\n                            Height="30"\n                            Margin="5,15,0,0"\n                            HorizontalAlignment="Center"\n                            VerticalAlignment="Center"\n                            Text="页" />\n                        <TextBlock\n                            Width="40"\n                            Height="30"\n                            Margin="30,15,0,0"\n                            HorizontalAlignment="Center"\n                            VerticalAlignment="Center"\n                            Text="每页" />\n                        <ComboBox\n                            Name="PageSizeUpdated"\n                            Width="70"\n                            Height="30"\n                            Margin="0,0,0,0"\n                            ItemsSource="{Binding PageModel.PageSizeList}"\n                            SelectedValue="{Binding PageModel.PageSize, Mode=TwoWay}" />\n                        <TextBlock\n                            Width="20"\n                            Height="30"\n                            Margin="15,15,0,0"\n                            HorizontalAlignment="Center"\n                            VerticalAlignment="Center"\n                            Text="条" />\n                    </StackPanel>\n                </Grid>\n            </Grid>\n            <Grid Grid.Column="1">\n                <StackPanel VerticalAlignment="Top" Orientation="Vertical">\n                    <TextBlock\n                        Margin="5,20,5,5"\n                        HorizontalAlignment="Left"\n                        Style="{StaticResource TextBlockTitleBold}"\n                        Text="{Binding FormTitle}" />\n                    <hc:TextBox\n                        Name="NewUsername"\n                        Width="150"\n                        Margin="5"\n                        hc:InfoElement.Placeholder="请输入用户名" />\n                    <hc:TextBox\n                        Name="NewNickname"\n                        Width="150"\n                        Margin="5"\n                        hc:InfoElement.Placeholder="请输入昵称" />\n                    <hc:TextBox\n                        Name="NewPassword"\n                        Width="150"\n                        Margin="5"\n                        hc:InfoElement.Placeholder="请输入密码" />\n                    <hc:TextBox\n                        Name="NewRemark"\n                        Width="150"\n                        Margin="5"\n                        hc:InfoElement.Placeholder="请输入备注" />\n                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">\n                        <Button\n                            Name="SubmitForm"\n                            Margin="5"\n                            Content="提交"\n                            Style="{StaticResource ButtonPrimary}" />\n                        <Button\n                            Name="CloseForm"\n                            Margin="5"\n                            Content="取消"\n                            Style="{StaticResource ButtonInfo}" />\n                    </StackPanel>\n                </StackPanel>\n\n            </Grid>\n        </Grid>\n    </hc:TransitioningContentControl>\n</UserControl>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n\n\ninternal class SysUserViewModel : PropertyChangedBase, IViewModel\n{\n    public List<SysUserRespVO> UserList { get; set; }\n\n    public string? Username { get; set; } = null;\n    public long NewId { get; set; }\n    public string NewUsername { get; set; }\n    public string NewNickname { get; set; }\n    public string NewPassword { get; set; }\n    public string? NewRemark { get; set; } = "";\n    public int RightColumnWidth { get; set; } = 0;\n    public string FormTitle { get; set; } = "新增用户";\n    public int index { get; set; }\n    public string ModifyType { get; set; }\n\n    public PageModel PageModel { get; set; }\n\n    public SysUserViewModel()\n    {\n        PageModel = new PageModel();\n        PageModel.PageSizeList = new List<int> { 10, 20, 50 };\n        GetDataAsync();\n    }\n    public async void GetDataAsync()\n    {\n        string url = $"/api/SysUser/Page?PageNo={PageModel.PageNo}&PageSize={PageModel.PageSize}&Username={Username}";\n        var res = await RestSharpHelper.GetData(url, Method.Get);\n        var data = res.Data;\n        var result = JsonConvert.DeserializeObject<PageResult<SysUserRespVO>>(data.ToString());\n        PageModel.Total = result.Total;\n        PageModel.PageCount = result.TotalPages;\n        var tempNoList = new List<int>();\n        for (int i = 1; i <= PageModel.PageCount; i++)\n        {\n            tempNoList.Add(i);\n        }\n        PageModel.PageNoList = tempNoList;\n        UserList = result.Items.ToList();\n    }\n    public void ResetQuery()\n    {\n        Username = null;\n        PageModel.PageNo = 1;\n        PageModel.PageSize = 10;\n        GetDataAsync();\n    }\n\n    public void PageNoUpdated()\n    {\n        GetDataAsync();\n    }\n    public void PageSizeUpdated()\n    {\n        GetDataAsync();\n    }\n\n    public void OpenCreateForm()\n    {\n        RightColumnWidth = 180;\n        ModifyType = "新增";\n    }\n    public void OpenUpdateForm()\n    {\n        RightColumnWidth = 180;\n        FormTitle = "修改用户";\n        ModifyType = "修改";\n\n        var SelectedUser = UserList.ElementAt(index);\n        NewId = SelectedUser.Id;\n        NewUsername = SelectedUser.Username;\n        NewNickname = SelectedUser.Nickname;\n        NewRemark = SelectedUser.Remark;\n    }\n    public void CloseForm()\n    {\n        RightColumnWidth = 0;\n        NewUsername = "";\n        NewNickname = "";\n        NewPassword = "";\n        NewRemark = "";\n    }\n\n    public async void DeleteUser()\n    {\n        var SelectedUser = UserList.ElementAt(index);\n        string url = $"/api/SysUser/Delete?id={SelectedUser.Id}";\n        var res = await RestSharpHelper.GetData(url, Method.Delete);\n        if (res.Code == 200)\n        {\n            Growl.Success("删除成功");\n            GetDataAsync();\n        }\n        else\n        {\n            Growl.Error("删除失败");\n        }\n\n    }\n\n    public async void SubmitForm()\n    {\n        string url;\n        if (ModifyType == "新增")\n        {\n            url = "/api/SysUser/Create";\n            SysUserCreateReqVO createReqVO = new SysUserCreateReqVO();\n            createReqVO.Username = NewUsername;\n            createReqVO.Nickname = NewNickname;\n            createReqVO.Password = NewPassword;\n            createReqVO.Remark = NewRemark;\n            var res = await RestSharpHelper.PostData(url, Method.Post, createReqVO);\n            if (res.Code == 200)\n            {\n                Growl.Success("新增成功");\n                CloseForm();\n                GetDataAsync();\n            }\n            else\n            {\n                Growl.Error("新增失败");\n            }\n        }\n        else\n        {\n            url = "/api/SysUser/Update";\n            SysUserUpdateReqVO updateReqVO = new SysUserUpdateReqVO();\n            updateReqVO.Id = NewId;\n            updateReqVO.Username = NewUsername;\n            updateReqVO.Nickname = NewNickname;\n            updateReqVO.Remark = NewRemark;\n            var res = await RestSharpHelper.PostData(url, Method.Put, updateReqVO);\n            if (res.Code == 200)\n            {\n                Growl.Success("修改成功");\n                CloseForm();\n                GetDataAsync();\n            }\n            else\n            {\n                Growl.Error("修改失败");\n            }\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n\n\n\n# 演示\n\n由于跨源，登录后演示',normalizedContent:'# pagemodel.cs\n\n用于分页实现\n\n[addinotifypropertychangedinterface]\npublic class pagemodel\n{\n    public int pageno { get; set; } = 1;\n    public int pagesize { get; set; } = 10;\n    public int pagecount { get; set; }\n    public long total { get; set; }\n    public list<int>? pagenolist { get; set; }\n    public list<int>? pagesizelist { get; set; }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# sysuserview.xaml\n\n<usercontrol\n    x:class="test.wpf.views.sysuserview"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:cal="http://www.caliburnproject.org"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:hc="https://handyorg.github.io/handycontrol"\n    xmlns:local="clr-namespace:test.wpf.views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    xmlns:viewmodels="clr-namespace:test.wpf.viewmodels"\n    d:designheight="450"\n    d:designwidth="800"\n    mc:ignorable="d">\n    <hc:transitioningcontentcontrol>\n        <grid>\n            <grid.columndefinitions>\n                <columndefinition />\n                <columndefinition width="{binding rightcolumnwidth}" />\n            </grid.columndefinitions>\n            <grid grid.column="0">\n                <grid.rowdefinitions>\n                    <rowdefinition height="60" />\n                    <rowdefinition />\n                    <rowdefinition height="40" />\n                </grid.rowdefinitions>\n                <grid grid.row="0" margin="10">\n                    <stackpanel horizontalalignment="left" orientation="horizontal">\n                        <hc:textbox\n                            name="username"\n                            width="320"\n                            height="30"\n                            hc:infoelement.placeholder="请输入用户名" />\n                        <button\n                            name="getdataasync"\n                            margin="5,0,0,0"\n                            content="查询"\n                            style="{staticresource buttonsuccess}" />\n                        <button\n                            name="resetquery"\n                            margin="5,0,0,0"\n                            content="重置"\n                            style="{staticresource buttoninfo}" />\n                    </stackpanel>\n                    <stackpanel horizontalalignment="right" orientation="horizontal">\n                        <button\n                            name="opencreateform"\n                            margin="5,0,0,0"\n                            content="新增"\n                            style="{staticresource buttonprimary}" />\n                        <button\n                            name="openupdateform"\n                            margin="5,0,0,0"\n                            content="编辑"\n                            style="{staticresource buttonwarning}" />\n                        <button\n                            name="deleteuser"\n                            margin="5,0,0,0"\n                            content="删除"\n                            style="{staticresource buttondanger}" />\n                    </stackpanel>\n\n                </grid>\n                <grid grid.row="1">\n                    <grid.columndefinitions>\n                        <columndefinition width="27*" />\n                        <columndefinition width="5*" />\n                    </grid.columndefinitions>\n                    <hc:scrollviewer\n                        grid.columnspan="2"\n                        cancontentscroll="true"\n                        horizontalscrollbarvisibility="auto"\n                        verticalscrollbarvisibility="disabled">\n                        <datagrid\n                            x:name="dg"\n                            autogeneratecolumns="false"\n                            frozencolumncount="1"\n                            headersvisibility="all"\n                            itemssource="{binding userlist}"\n                            rowheaderwidth="60"\n                            selectedindex="{binding index}"\n                            selectionmode="single"\n                            style="{staticresource datagrid.small}">\n                            <datagrid.rowheadertemplate>\n                                <datatemplate>\n                                    <checkbox ischecked="{binding isselected, relativesource={relativesource ancestortype=datagridrow}}" />\n                                </datatemplate>\n                            </datagrid.rowheadertemplate>\n                            <datagrid.columns>\n                                <datagridtextcolumn\n                                    width="80"\n                                    binding="{binding id}"\n                                    canuserresize="false"\n                                    header="id"\n                                    isreadonly="true" />\n                                <datagridtextcolumn binding="{binding username}" header="用户名" />\n                                <datagridtextcolumn binding="{binding nickname}" header="昵称" />\n                                <datagridtextcolumn binding="{binding remark}" header="备注" />\n                                <datagridtextcolumn binding="{binding createtime, stringformat={}\\{0:yyyy-mm-dd hh:mm:ss\\}}" header="创建时间" />\n                            </datagrid.columns>\n                        </datagrid>\n                    </hc:scrollviewer>\n                </grid>\n                <grid grid.row="2">\n                    <stackpanel\n                        horizontalalignment="left"\n                        verticalalignment="center"\n                        orientation="horizontal">\n                        <textblock\n                            width="20"\n                            height="30"\n                            margin="15,15,0,0"\n                            horizontalalignment="center"\n                            verticalalignment="center"\n                            text="共" />\n                        <textblock\n                            width="20"\n                            height="30"\n                            margin="0,15,0,0"\n                            horizontalalignment="center"\n                            verticalalignment="center"\n                            text="{binding pagemodel.total}" />\n                        <textblock\n                            width="20"\n                            height="30"\n                            margin="0,15,0,0"\n                            horizontalalignment="center"\n                            verticalalignment="center"\n                            text="条" />\n                        <textblock\n                            width="20"\n                            height="30"\n                            margin="15,15,0,0"\n                            horizontalalignment="center"\n                            verticalalignment="center"\n                            text="第" />\n                        <combobox\n                            name="pagenoupdated"\n                            width="70"\n                            height="30"\n                            margin="0,0,0,0"\n                            itemssource="{binding pagemodel.pagenolist}"\n                            selectedvalue="{binding pagemodel.pageno, mode=twoway}" />\n                        <textblock\n                            width="20"\n                            height="30"\n                            margin="5,15,0,0"\n                            horizontalalignment="center"\n                            verticalalignment="center"\n                            text="页" />\n                        <textblock\n                            width="40"\n                            height="30"\n                            margin="30,15,0,0"\n                            horizontalalignment="center"\n                            verticalalignment="center"\n                            text="每页" />\n                        <combobox\n                            name="pagesizeupdated"\n                            width="70"\n                            height="30"\n                            margin="0,0,0,0"\n                            itemssource="{binding pagemodel.pagesizelist}"\n                            selectedvalue="{binding pagemodel.pagesize, mode=twoway}" />\n                        <textblock\n                            width="20"\n                            height="30"\n                            margin="15,15,0,0"\n                            horizontalalignment="center"\n                            verticalalignment="center"\n                            text="条" />\n                    </stackpanel>\n                </grid>\n            </grid>\n            <grid grid.column="1">\n                <stackpanel verticalalignment="top" orientation="vertical">\n                    <textblock\n                        margin="5,20,5,5"\n                        horizontalalignment="left"\n                        style="{staticresource textblocktitlebold}"\n                        text="{binding formtitle}" />\n                    <hc:textbox\n                        name="newusername"\n                        width="150"\n                        margin="5"\n                        hc:infoelement.placeholder="请输入用户名" />\n                    <hc:textbox\n                        name="newnickname"\n                        width="150"\n                        margin="5"\n                        hc:infoelement.placeholder="请输入昵称" />\n                    <hc:textbox\n                        name="newpassword"\n                        width="150"\n                        margin="5"\n                        hc:infoelement.placeholder="请输入密码" />\n                    <hc:textbox\n                        name="newremark"\n                        width="150"\n                        margin="5"\n                        hc:infoelement.placeholder="请输入备注" />\n                    <stackpanel horizontalalignment="right" orientation="horizontal">\n                        <button\n                            name="submitform"\n                            margin="5"\n                            content="提交"\n                            style="{staticresource buttonprimary}" />\n                        <button\n                            name="closeform"\n                            margin="5"\n                            content="取消"\n                            style="{staticresource buttoninfo}" />\n                    </stackpanel>\n                </stackpanel>\n\n            </grid>\n        </grid>\n    </hc:transitioningcontentcontrol>\n</usercontrol>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n\n\ninternal class sysuserviewmodel : propertychangedbase, iviewmodel\n{\n    public list<sysuserrespvo> userlist { get; set; }\n\n    public string? username { get; set; } = null;\n    public long newid { get; set; }\n    public string newusername { get; set; }\n    public string newnickname { get; set; }\n    public string newpassword { get; set; }\n    public string? newremark { get; set; } = "";\n    public int rightcolumnwidth { get; set; } = 0;\n    public string formtitle { get; set; } = "新增用户";\n    public int index { get; set; }\n    public string modifytype { get; set; }\n\n    public pagemodel pagemodel { get; set; }\n\n    public sysuserviewmodel()\n    {\n        pagemodel = new pagemodel();\n        pagemodel.pagesizelist = new list<int> { 10, 20, 50 };\n        getdataasync();\n    }\n    public async void getdataasync()\n    {\n        string url = $"/api/sysuser/page?pageno={pagemodel.pageno}&pagesize={pagemodel.pagesize}&username={username}";\n        var res = await restsharphelper.getdata(url, method.get);\n        var data = res.data;\n        var result = jsonconvert.deserializeobject<pageresult<sysuserrespvo>>(data.tostring());\n        pagemodel.total = result.total;\n        pagemodel.pagecount = result.totalpages;\n        var tempnolist = new list<int>();\n        for (int i = 1; i <= pagemodel.pagecount; i++)\n        {\n            tempnolist.add(i);\n        }\n        pagemodel.pagenolist = tempnolist;\n        userlist = result.items.tolist();\n    }\n    public void resetquery()\n    {\n        username = null;\n        pagemodel.pageno = 1;\n        pagemodel.pagesize = 10;\n        getdataasync();\n    }\n\n    public void pagenoupdated()\n    {\n        getdataasync();\n    }\n    public void pagesizeupdated()\n    {\n        getdataasync();\n    }\n\n    public void opencreateform()\n    {\n        rightcolumnwidth = 180;\n        modifytype = "新增";\n    }\n    public void openupdateform()\n    {\n        rightcolumnwidth = 180;\n        formtitle = "修改用户";\n        modifytype = "修改";\n\n        var selecteduser = userlist.elementat(index);\n        newid = selecteduser.id;\n        newusername = selecteduser.username;\n        newnickname = selecteduser.nickname;\n        newremark = selecteduser.remark;\n    }\n    public void closeform()\n    {\n        rightcolumnwidth = 0;\n        newusername = "";\n        newnickname = "";\n        newpassword = "";\n        newremark = "";\n    }\n\n    public async void deleteuser()\n    {\n        var selecteduser = userlist.elementat(index);\n        string url = $"/api/sysuser/delete?id={selecteduser.id}";\n        var res = await restsharphelper.getdata(url, method.delete);\n        if (res.code == 200)\n        {\n            growl.success("删除成功");\n            getdataasync();\n        }\n        else\n        {\n            growl.error("删除失败");\n        }\n\n    }\n\n    public async void submitform()\n    {\n        string url;\n        if (modifytype == "新增")\n        {\n            url = "/api/sysuser/create";\n            sysusercreatereqvo createreqvo = new sysusercreatereqvo();\n            createreqvo.username = newusername;\n            createreqvo.nickname = newnickname;\n            createreqvo.password = newpassword;\n            createreqvo.remark = newremark;\n            var res = await restsharphelper.postdata(url, method.post, createreqvo);\n            if (res.code == 200)\n            {\n                growl.success("新增成功");\n                closeform();\n                getdataasync();\n            }\n            else\n            {\n                growl.error("新增失败");\n            }\n        }\n        else\n        {\n            url = "/api/sysuser/update";\n            sysuserupdatereqvo updatereqvo = new sysuserupdatereqvo();\n            updatereqvo.id = newid;\n            updatereqvo.username = newusername;\n            updatereqvo.nickname = newnickname;\n            updatereqvo.remark = newremark;\n            var res = await restsharphelper.postdata(url, method.put, updatereqvo);\n            if (res.code == 200)\n            {\n                growl.success("修改成功");\n                closeform();\n                getdataasync();\n            }\n            else\n            {\n                growl.error("修改失败");\n            }\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n\n\n\n# 演示\n\n由于跨源，登录后演示',charsets:{cjk:!0},lastUpdated:"2023/10/18, 19:38:19",lastUpdatedTimestamp:1697629099e3},{title:"WPF增删改查08-登录实现",frontmatter:{title:"WPF增删改查08-登录实现",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/login/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/02.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/08.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A508-%E7%99%BB%E5%BD%95%E5%AE%9E%E7%8E%B0.html",relativePath:"06.软件开发/05.WPF/02.WPF增删改查/08.WPF增删改查08-登录实现.md",key:"v-3fb0f994",path:"/soft/wpf/login/",headers:[{level:2,title:"LoginView.xaml",slug:"loginview-xaml",normalizedTitle:"loginview.xaml",charIndex:2},{level:2,title:"LoginViewModel.xaml",slug:"loginviewmodel-xaml",normalizedTitle:"loginviewmodel.xaml",charIndex:2883},{level:2,title:"修改Bootstrapper",slug:"修改bootstrapper",normalizedTitle:"修改bootstrapper",charIndex:4217},{level:2,title:"演示",slug:"演示",normalizedTitle:"演示",charIndex:4271}],headersStr:"LoginView.xaml LoginViewModel.xaml 修改Bootstrapper 演示",content:'# LoginView.xaml\n\n<Window\n    x:Class="Test.Wpf.Views.LoginView"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:hc="https://handyorg.github.io/handycontrol"\n    xmlns:local="clr-namespace:Test.Wpf.Views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    Title="登录"\n    Width="600"\n    Height="400"\n    MinWidth="600"\n    MinHeight="400"\n    ResizeMode="NoResize"\n    WindowStartupLocation="CenterScreen"\n    mc:Ignorable="d">\n    <Grid>\n        <Grid.ColumnDefinitions>\n            <ColumnDefinition Width="1.2*" />\n            <ColumnDefinition Width="*" />\n        </Grid.ColumnDefinitions>\n        <Grid Grid.Column="0">\n            <Image\n                Width="300"\n                Height="300"\n                Source="pack://application:,,,/Resources/Images/login-box-bg.png"\n                Stretch="Fill" />\n        </Grid>\n        <Grid Grid.Column="1">\n            <StackPanel\n                Width="250"\n                Margin="0,35,0,35"\n                HorizontalAlignment="Center"\n                Orientation="Vertical">\n                <hc:OutlineText\n                    Margin="0,20,0,0"\n                    HorizontalAlignment="Center"\n                    Fill="{DynamicResource PrimaryBrush}"\n                    FontFamily="隶书"\n                    FontSize="30"\n                    FontWeight="Bold"\n                    Stroke="PaleVioletRed"\n                    StrokeThickness="2"\n                    Text="i采薇工具箱" />\n                <hc:TextBox\n                    Name="Username"\n                    Width="200"\n                    Margin="0,20,0,0"\n                    hc:InfoElement.Necessary="True"\n                    hc:InfoElement.Placeholder="请输入用户名"\n                    hc:InfoElement.ShowClearButton="True" />\n                <hc:PasswordBox\n                    Width="200"\n                    Margin="0,20,0,0"\n                    hc:InfoElement.Necessary="True"\n                    hc:InfoElement.Placeholder="请输入密码"\n                    IsSafeEnabled="False"\n                    ShowClearButton="True"\n                    ShowEyeButton="True"\n                    UnsafePassword="{Binding Path=Password, Mode=TwoWay}" />\n                <Button\n                    Name="Login"\n                    Width="200"\n                    Margin="0,20,0,0"\n                    Content="登    录"\n                    IsDefault="True"\n                    Style="{StaticResource ButtonPrimary}" />\n            </StackPanel>\n        </Grid>\n    </Grid>\n</Window>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n\n\n\n# LoginViewModel.xaml\n\npublic class LoginViewModel : Screen\n{\n    public string Username { get; set; }\n    public string Password { get; set; }\n    public LoginViewModel()\n    {\n\n    }\n\n    public async void Login()\n    {\n        if (!(string.IsNullOrWhiteSpace(Username) && string.IsNullOrWhiteSpace(Password)))\n        {\n            string url = "/api/Login/Login";\n            LoginModel loginModel = new LoginModel();\n            loginModel.Username = Username;\n            loginModel.Password = Password;\n            var res = await RestSharpHelper.Login(url, Method.Post, loginModel);\n            if (res.Code == 200)\n            {\n                // 写配置文件\n                Properties.Settings.Default.Username = Username;\n                Properties.Settings.Default.Save();\n                // 跳转到主界面\n                IWindowManager manager = new WindowManager();\n                await manager.ShowWindowAsync(new MainViewModel(), null, null);\n                await TryCloseAsync();\n                Growl.Success("登录成功");\n            }\n            else\n            {\n                Growl.Error("登录失败");\n            }\n        }\n        else\n        {\n            Growl.Error("登录失败，请检查用户信息是否正确");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n\n# 修改Bootstrapper\n\n将其中的MainViewModel改为LoginViewModel\n\n\n# 演示\n\n',normalizedContent:'# loginview.xaml\n\n<window\n    x:class="test.wpf.views.loginview"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:hc="https://handyorg.github.io/handycontrol"\n    xmlns:local="clr-namespace:test.wpf.views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    title="登录"\n    width="600"\n    height="400"\n    minwidth="600"\n    minheight="400"\n    resizemode="noresize"\n    windowstartuplocation="centerscreen"\n    mc:ignorable="d">\n    <grid>\n        <grid.columndefinitions>\n            <columndefinition width="1.2*" />\n            <columndefinition width="*" />\n        </grid.columndefinitions>\n        <grid grid.column="0">\n            <image\n                width="300"\n                height="300"\n                source="pack://application:,,,/resources/images/login-box-bg.png"\n                stretch="fill" />\n        </grid>\n        <grid grid.column="1">\n            <stackpanel\n                width="250"\n                margin="0,35,0,35"\n                horizontalalignment="center"\n                orientation="vertical">\n                <hc:outlinetext\n                    margin="0,20,0,0"\n                    horizontalalignment="center"\n                    fill="{dynamicresource primarybrush}"\n                    fontfamily="隶书"\n                    fontsize="30"\n                    fontweight="bold"\n                    stroke="palevioletred"\n                    strokethickness="2"\n                    text="i采薇工具箱" />\n                <hc:textbox\n                    name="username"\n                    width="200"\n                    margin="0,20,0,0"\n                    hc:infoelement.necessary="true"\n                    hc:infoelement.placeholder="请输入用户名"\n                    hc:infoelement.showclearbutton="true" />\n                <hc:passwordbox\n                    width="200"\n                    margin="0,20,0,0"\n                    hc:infoelement.necessary="true"\n                    hc:infoelement.placeholder="请输入密码"\n                    issafeenabled="false"\n                    showclearbutton="true"\n                    showeyebutton="true"\n                    unsafepassword="{binding path=password, mode=twoway}" />\n                <button\n                    name="login"\n                    width="200"\n                    margin="0,20,0,0"\n                    content="登    录"\n                    isdefault="true"\n                    style="{staticresource buttonprimary}" />\n            </stackpanel>\n        </grid>\n    </grid>\n</window>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n\n\n\n# loginviewmodel.xaml\n\npublic class loginviewmodel : screen\n{\n    public string username { get; set; }\n    public string password { get; set; }\n    public loginviewmodel()\n    {\n\n    }\n\n    public async void login()\n    {\n        if (!(string.isnullorwhitespace(username) && string.isnullorwhitespace(password)))\n        {\n            string url = "/api/login/login";\n            loginmodel loginmodel = new loginmodel();\n            loginmodel.username = username;\n            loginmodel.password = password;\n            var res = await restsharphelper.login(url, method.post, loginmodel);\n            if (res.code == 200)\n            {\n                // 写配置文件\n                properties.settings.default.username = username;\n                properties.settings.default.save();\n                // 跳转到主界面\n                iwindowmanager manager = new windowmanager();\n                await manager.showwindowasync(new mainviewmodel(), null, null);\n                await trycloseasync();\n                growl.success("登录成功");\n            }\n            else\n            {\n                growl.error("登录失败");\n            }\n        }\n        else\n        {\n            growl.error("登录失败，请检查用户信息是否正确");\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n\n# 修改bootstrapper\n\n将其中的mainviewmodel改为loginviewmodel\n\n\n# 演示\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"WPF增删改查09-美化",frontmatter:{title:"WPF增删改查09-美化",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/beautify/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/02.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/09.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A509-%E7%BE%8E%E5%8C%96.html",relativePath:"06.软件开发/05.WPF/02.WPF增删改查/09.WPF增删改查09-美化.md",key:"v-20f7c41f",path:"/soft/wpf/beautify/",headers:[{level:2,title:"App.xaml",slug:"app-xaml",normalizedTitle:"app.xaml",charIndex:32},{level:2,title:"MainView.xaml",slug:"mainview-xaml",normalizedTitle:"mainview.xaml",charIndex:1756},{level:2,title:"MainView.xaml.cs",slug:"mainview-xaml-cs",normalizedTitle:"mainview.xaml.cs",charIndex:11747},{level:2,title:"LoginView.xaml",slug:"loginview-xaml",normalizedTitle:"loginview.xaml",charIndex:15583},{level:2,title:"LoginView.xaml.cs",slug:"loginview-xaml-cs",normalizedTitle:"loginview.xaml.cs",charIndex:20778}],headersStr:"App.xaml MainView.xaml MainView.xaml.cs LoginView.xaml LoginView.xaml.cs",content:'使用HandyControl美化非客户区，不需要可跳过\n\n\n# App.xaml\n\n<Application\n    x:Class="Test.Wpf.App"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:local="clr-namespace:Test.Wpf">\n    <Application.Resources>\n        <ResourceDictionary>\n            <ResourceDictionary.MergedDictionaries>\n                <ResourceDictionary>\n                    <local:Bootstrapper x:Key="bootstrapper" />\n                </ResourceDictionary>\n                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml" />\n                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml" />\n                \x3c!--  Base  --\x3e\n                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/Color.xaml" />\n                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/Brush.xaml" />\n                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/Geometry.xaml" />\n                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/Style.xaml" />\n                \x3c!--  Theme  --\x3e\n                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/Themes/BaseLight.xaml" />\n                \x3c!--  Primary  --\x3e\n                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/Primary/Primary.xaml" />\n            </ResourceDictionary.MergedDictionaries>\n            <FontFamily x:Key="IconFont">pack://application:,,,/Resources/#iconfont</FontFamily>\n        </ResourceDictionary>\n    </Application.Resources>\n</Application>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# MainView.xaml\n\n<hc:GlowWindow\n    x:Class="Test.Wpf.Views.MainView"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:cm="http://www.caliburnproject.org"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:hc="https://handyorg.github.io/handycontrol"\n    xmlns:local="clr-namespace:Test.Wpf.Views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    Title="MainView"\n    Width="950"\n    Height="650"\n    MinWidth="800"\n    MinHeight="600"\n    ActiveGlowColor="{DynamicResource PrimaryColor}"\n    AllowsTransparency="True"\n    Background="{DynamicResource RegionBrush}"\n    MouseDoubleClick="Window_MouseDoubleClick"\n    MouseLeftButtonDown="Window_MouseLeftButtonDown"\n    ResizeMode="CanResizeWithGrip"\n    WindowStartupLocation="CenterScreen"\n    WindowStyle="None"\n    mc:Ignorable="d">\n    <Grid>\n        <Grid.RowDefinitions>\n            <RowDefinition Height="auto" />\n            <RowDefinition />\n        </Grid.RowDefinitions>\n        <Grid Grid.Row="0">\n            <DockPanel>\n                <StackPanel Orientation="Horizontal">\n                    <Image\n                        Height="30"\n                        Margin="10,3"\n                        HorizontalAlignment="Left"\n                        Source="pack://application:,,,/Resources/Images/icon.ico" />\n                    <hc:OutlineText\n                        Margin="3"\n                        Fill="{DynamicResource PrimaryBrush}"\n                        FontFamily="隶书"\n                        FontSize="30"\n                        FontWeight="Bold"\n                        Stroke="Violet"\n                        StrokeThickness="2"\n                        Text="i采薇工具箱" />\n                </StackPanel>\n                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">\n                    <Button\n                        Name="ButtonConfig"\n                        Width="30"\n                        Height="30"\n                        Margin="3"\n                        hc:BorderElement.CornerRadius="16"\n                        hc:IconElement.Geometry="{StaticResource ConfigGeometry}"\n                        hc:IconElement.Height="8"\n                        hc:IconElement.Width="8"\n                        Click="ButtonConfig_OnClick"\n                        Style="{StaticResource ButtonPrimary}" />\n                    <Popup\n                        Name="PopupConfig"\n                        AllowsTransparency="True"\n                        HorizontalOffset="-28"\n                        PlacementTarget="{Binding ElementName=ButtonConfig}"\n                        StaysOpen="False"\n                        VerticalOffset="6">\n                        <Border\n                            Margin="16"\n                            Background="{DynamicResource SecondaryRegionBrush}"\n                            CornerRadius="4"\n                            Effect="{StaticResource EffectShadow1}">\n                            <StackPanel Margin="10,10,10,10" Orientation="Horizontal">\n                                <Button\n                                    Name="BaseDark"\n                                    VerticalAlignment="Center"\n                                    Click="ButtonTheme_Click"\n                                    Style="{StaticResource ButtonCustom}">\n                                    <Border\n                                        Width="32"\n                                        Height="21"\n                                        Background="Black"\n                                        BorderBrush="{DynamicResource BorderBrush}"\n                                        BorderThickness="1"\n                                        CornerRadius="2" />\n                                </Button>\n                                <Button\n                                    Name="BaseLight"\n                                    VerticalAlignment="Center"\n                                    Click="ButtonTheme_Click"\n                                    Style="{StaticResource ButtonCustom}">\n                                    <Border\n                                        Width="32"\n                                        Height="21"\n                                        Background="White"\n                                        BorderBrush="{DynamicResource BorderBrush}"\n                                        BorderThickness="1"\n                                        CornerRadius="2" />\n                                </Button>\n                                <Button\n                                    Name="BaseColor"\n                                    VerticalAlignment="Center"\n                                    Click="ButtonColor_Click"\n                                    Style="{StaticResource ButtonCustom}">\n                                    <Border\n                                        Width="32"\n                                        Height="21"\n                                        Background="DarkViolet"\n                                        BorderBrush="{DynamicResource BorderBrush}"\n                                        BorderThickness="1"\n                                        CornerRadius="2" />\n                                </Button>\n                            </StackPanel>\n                        </Border>\n                    </Popup>\n\n                    <Button\n                        Margin="3"\n                        hc:BorderElement.CornerRadius="16"\n                        hc:IconElement.Geometry="{StaticResource WindowMinGeometry}"\n                        Click="ButtonMinimize_Click"\n                        Style="{StaticResource ButtonPrimary}" />\n                    <Button\n                        Margin="3"\n                        hc:BorderElement.CornerRadius="16"\n                        hc:IconElement.Geometry="{StaticResource WindowMaxGeometry}"\n                        Click="ButtonMaximize_Click"\n                        Style="{StaticResource ButtonPrimary}" />\n                    <Button\n                        Margin="3"\n                        hc:BorderElement.CornerRadius="16"\n                        hc:IconElement.Geometry="{StaticResource CloseGeometry}"\n                        Click="ButtonClose_Click"\n                        Style="{StaticResource ButtonPrimary}" />\n                </StackPanel>\n\n            </DockPanel>\n        </Grid>\n        <Grid Grid.Row="1">\n            <Grid.ColumnDefinitions>\n                <ColumnDefinition Width="{Binding MenuWidth}" />\n                <ColumnDefinition Width="20" />\n                <ColumnDefinition />\n            </Grid.ColumnDefinitions>\n            <Grid Grid.Column="0">\n                <Border\n                    Grid.ColumnSpan="2"\n                    BorderBrush="LightSteelBlue"\n                    BorderThickness="2"\n                    CornerRadius="5" />\n                <Border\n                    Grid.Column="0"\n                    BorderBrush="LightSteelBlue"\n                    BorderThickness="2"\n                    CornerRadius="5" />\n                <ListBox\n                    Name="ListBoxItems"\n                    Grid.Column="0"\n                    Margin="2"\n                    cm:Message.Attach="[Event SelectionChanged] = [Action ListBoxItems_SelectionChanged]"\n                    SelectedIndex="1"\n                    SelectedItem="{Binding SelectedItem}" />\n            </Grid>\n            <Grid Grid.Column="1">\n                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top">\n                    <StackPanel>\n                        <ToggleButton\n                            Name="ToggleMenuWidth"\n                            HorizontalAlignment="Center"\n                            BorderThickness="0"\n                            IsChecked="True"\n                            Style="{StaticResource ToggleButtonFlip.Small}">\n                            <hc:StatusSwitchElement.CheckedElement>\n                                <Border Background="{DynamicResource PrimaryBrush}">\n                                    <TextBlock\n                                        HorizontalAlignment="Center"\n                                        VerticalAlignment="Center"\n                                        Foreground="{DynamicResource TextIconBrush}"\n                                        Text="&lt;" />\n                                </Border>\n                            </hc:StatusSwitchElement.CheckedElement>\n                            <Border Background="{DynamicResource SuccessBrush}">\n                                <TextBlock\n                                    HorizontalAlignment="Center"\n                                    VerticalAlignment="Center"\n                                    Foreground="{DynamicResource TextIconBrush}"\n                                    Text="&gt;" />\n                            </Border>\n                        </ToggleButton>\n                    </StackPanel>\n                </StackPanel>\n            </Grid>\n            <Grid Grid.Column="2">\n                <ContentControl x:Name="ActiveWindowView" />\n            </Grid>\n        </Grid>\n    </Grid>\n</hc:GlowWindow>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n\n\n\n# MainView.xaml.cs\n\n去掉了继承的Window类\n\n/// <summary>\n/// MainView.xaml 的交互逻辑\n/// </summary>\npublic partial class MainView\n{\n    private int ThemeColorFlag { get; set; } = 0;\n    public MainView()\n    {\n        InitializeComponent();\n\n        this.MaxHeight = SystemParameters.MaximizedPrimaryScreenHeight;\n        this.MaxWidth = SystemParameters.MaximizedPrimaryScreenWidth;\n\n        InitialResourceDictionary();\n    }\n\n    // Ititial ResourceDictionary\n    private void InitialResourceDictionary()\n    {\n        // Theme\n        ResourceDictionary theme = new ResourceDictionary\n        {\n            Source = new Uri("pack://application:,,,/Resources/Styles/Themes/BaseLight.xaml")\n        };\n        Resources.MergedDictionaries.Add(theme);\n        // Color\n        ResourceDictionary color = new ResourceDictionary\n        {\n            Source = new Uri("pack://application:,,,/Resources/Styles/Primary/Primary.xaml")\n        };\n        Resources.MergedDictionaries.Add(color);\n    }\n\n    // Updata ResourceDictionary\n    private void UpdataResourceDictionary(string resourceStr, int pos)\n    {\n        if (pos < 0 || pos > 2)\n        {\n            return;\n        }\n        ResourceDictionary resource = new ResourceDictionary\n        {\n            Source = new Uri(resourceStr)\n        };\n        Resources.MergedDictionaries.RemoveAt(pos);\n        Resources.MergedDictionaries.Insert(pos, resource);\n    }\n\n    //// Theme\n    private void ButtonTheme_Click(object sender, RoutedEventArgs e)\n    {\n        if (!(sender is Button button))\n        {\n            return;\n        }\n        string resourceStr = "pack://application:,,,/Resources/Styles/Themes/BaseLight.xaml";\n        if (button.Name.ToString() == "BaseDark")\n        {\n            resourceStr = "pack://application:,,,/Resources/Styles/Themes/BaseDark.xaml";\n        }\n        UpdataResourceDictionary(resourceStr, 0);\n    }\n\n    //// Primary Color\n    private void ButtonColor_Click(object sender, RoutedEventArgs e)\n    {\n        ThemeColorFlag = (ThemeColorFlag + 1) % 3;\n        string resourceStr = "pack://application:,,,/Resources/Styles/Primary/Primary.xaml";\n        if (ThemeColorFlag == 1)\n        {\n            resourceStr = "pack://application:,,,/Resources/Styles/Primary/Magenta.xaml";\n        }\n        else if (ThemeColorFlag == 2)\n        {\n            resourceStr = "pack://application:,,,/Resources/Styles/Primary/Violet.xaml";\n        }\n        UpdataResourceDictionary(resourceStr, 1);\n    }\n\n    ////主题配置\n    private void ButtonConfig_OnClick(object sender, RoutedEventArgs e) => PopupConfig.IsOpen = true;\n    // 最小化\n    private void ButtonMinimize_Click(object sender, RoutedEventArgs e)\n    {\n        WindowState = WindowState.Minimized;\n    }\n    //最大化\n    private void ButtonMaximize_Click(object sender, RoutedEventArgs e)\n    {\n        if (this.WindowState == WindowState.Maximized)\n            this.WindowState = WindowState.Normal;\n        else\n            this.WindowState = WindowState.Maximized;\n    }\n    // 关闭\n    private void ButtonClose_Click(object sender, RoutedEventArgs e)\n    {\n        Close();\n    }\n    private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)\n    {\n        this.DragMove();\n    }\n    private void Window_MouseDoubleClick(object sender, MouseButtonEventArgs e)\n    {\n        if (this.WindowState == WindowState.Normal)\n            this.WindowState = WindowState.Maximized;\n        else\n            this.WindowState = WindowState.Normal;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n\n\n\n# LoginView.xaml\n\n<hc:GlowWindow\n    x:Class="Test.Wpf.Views.LoginView"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:hc="https://handyorg.github.io/handycontrol"\n    xmlns:local="clr-namespace:Test.Wpf.Views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    Title="LoginView"\n    Width="600"\n    Height="400"\n    MinWidth="600"\n    MinHeight="400"\n    AllowsTransparency="True"\n    ResizeMode="NoResize"\n    WindowStartupLocation="CenterScreen"\n    WindowStyle="None"\n    mc:Ignorable="d">\n    <Border CornerRadius="120">\n        <Grid>\n            <Grid.RowDefinitions>\n                <RowDefinition Height="auto" />\n                <RowDefinition />\n            </Grid.RowDefinitions>\n            <Grid Grid.Row="0" MouseLeftButtonDown="Window_MouseLeftButtonDown">\n                <DockPanel>\n                    <StackPanel Orientation="Horizontal">\n                        <Image\n                            Height="30"\n                            Margin="10,3"\n                            HorizontalAlignment="Left"\n                            Source="pack://application:,,,/Resources/Images/icon.ico" />\n                        <hc:OutlineText\n                            Margin="3"\n                            Fill="{DynamicResource PrimaryBrush}"\n                            FontFamily="隶书"\n                            FontSize="30"\n                            FontWeight="Bold"\n                            Stroke="PaleVioletRed"\n                            StrokeThickness="2"\n                            Text="登录" />\n                    </StackPanel>\n                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">\n                        <Button\n                            Margin="3"\n                            hc:BorderElement.CornerRadius="16"\n                            hc:IconElement.Geometry="{StaticResource CloseGeometry}"\n                            Click="ButtonClose_Click"\n                            Style="{StaticResource ButtonPrimary}" />\n                    </StackPanel>\n                </DockPanel>\n            </Grid>\n            <Grid Grid.Row="1">\n                <Grid.ColumnDefinitions>\n                    <ColumnDefinition Width="1.2*" />\n                    <ColumnDefinition Width="*" />\n                </Grid.ColumnDefinitions>\n                <Grid Grid.Column="0">\n                    <Image\n                        Width="300"\n                        Height="300"\n                        hc:IconElement.Geometry=""\n                        Source="pack://application:,,,/Resources/Images/login-box-bg.png"\n                        Stretch="Fill" />\n                </Grid>\n                <Grid Grid.Column="1">\n                    <StackPanel\n                        Width="250"\n                        Margin="0,35,0,35"\n                        HorizontalAlignment="Center"\n                        Orientation="Vertical">\n                        <hc:OutlineText\n                            Margin="0,20,0,0"\n                            HorizontalAlignment="Center"\n                            Fill="{DynamicResource PrimaryBrush}"\n                            FontFamily="隶书"\n                            FontSize="30"\n                            FontWeight="Bold"\n                            Stroke="PaleVioletRed"\n                            StrokeThickness="2"\n                            Text="i采薇工具箱" />\n                        <hc:TextBox\n                            Name="Username"\n                            Width="200"\n                            Margin="0,20,0,0"\n                            hc:InfoElement.Necessary="True"\n                            hc:InfoElement.Placeholder="请输入用户名"\n                            hc:InfoElement.ShowClearButton="True" />\n                        <hc:PasswordBox\n                            Width="200"\n                            Margin="0,20,0,0"\n                            hc:InfoElement.Necessary="True"\n                            hc:InfoElement.Placeholder="请输入密码"\n                            IsSafeEnabled="False"\n                            ShowClearButton="True"\n                            ShowEyeButton="True"\n                            UnsafePassword="{Binding Path=Password, Mode=TwoWay}" />\n                        <Button\n                            Name="Login"\n                            Width="200"\n                            Margin="0,20,0,0"\n                            Content="登    录"\n                            IsDefault="True"\n                            Style="{StaticResource ButtonPrimary}" />\n                    </StackPanel>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Border>\n</hc:GlowWindow>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n\n\n\n# LoginView.xaml.cs\n\n/// <summary>\n/// LoginView.xaml 的交互逻辑\n/// </summary>\npublic partial class LoginView\n{\n    public LoginView()\n    {\n        InitializeComponent();\n    }\n    private void ButtonClose_Click(object sender, RoutedEventArgs e)\n    {\n        Close();\n    }\n    private void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)\n    {\n        DragMove();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'使用handycontrol美化非客户区，不需要可跳过\n\n\n# app.xaml\n\n<application\n    x:class="test.wpf.app"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:local="clr-namespace:test.wpf">\n    <application.resources>\n        <resourcedictionary>\n            <resourcedictionary.mergeddictionaries>\n                <resourcedictionary>\n                    <local:bootstrapper x:key="bootstrapper" />\n                </resourcedictionary>\n                <resourcedictionary source="pack://application:,,,/handycontrol;component/themes/skindefault.xaml" />\n                <resourcedictionary source="pack://application:,,,/handycontrol;component/themes/theme.xaml" />\n                \x3c!--  base  --\x3e\n                <resourcedictionary source="pack://application:,,,/resources/styles/color.xaml" />\n                <resourcedictionary source="pack://application:,,,/resources/styles/brush.xaml" />\n                <resourcedictionary source="pack://application:,,,/resources/styles/geometry.xaml" />\n                <resourcedictionary source="pack://application:,,,/resources/styles/style.xaml" />\n                \x3c!--  theme  --\x3e\n                <resourcedictionary source="pack://application:,,,/resources/styles/themes/baselight.xaml" />\n                \x3c!--  primary  --\x3e\n                <resourcedictionary source="pack://application:,,,/resources/styles/primary/primary.xaml" />\n            </resourcedictionary.mergeddictionaries>\n            <fontfamily x:key="iconfont">pack://application:,,,/resources/#iconfont</fontfamily>\n        </resourcedictionary>\n    </application.resources>\n</application>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# mainview.xaml\n\n<hc:glowwindow\n    x:class="test.wpf.views.mainview"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:cm="http://www.caliburnproject.org"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:hc="https://handyorg.github.io/handycontrol"\n    xmlns:local="clr-namespace:test.wpf.views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    title="mainview"\n    width="950"\n    height="650"\n    minwidth="800"\n    minheight="600"\n    activeglowcolor="{dynamicresource primarycolor}"\n    allowstransparency="true"\n    background="{dynamicresource regionbrush}"\n    mousedoubleclick="window_mousedoubleclick"\n    mouseleftbuttondown="window_mouseleftbuttondown"\n    resizemode="canresizewithgrip"\n    windowstartuplocation="centerscreen"\n    windowstyle="none"\n    mc:ignorable="d">\n    <grid>\n        <grid.rowdefinitions>\n            <rowdefinition height="auto" />\n            <rowdefinition />\n        </grid.rowdefinitions>\n        <grid grid.row="0">\n            <dockpanel>\n                <stackpanel orientation="horizontal">\n                    <image\n                        height="30"\n                        margin="10,3"\n                        horizontalalignment="left"\n                        source="pack://application:,,,/resources/images/icon.ico" />\n                    <hc:outlinetext\n                        margin="3"\n                        fill="{dynamicresource primarybrush}"\n                        fontfamily="隶书"\n                        fontsize="30"\n                        fontweight="bold"\n                        stroke="violet"\n                        strokethickness="2"\n                        text="i采薇工具箱" />\n                </stackpanel>\n                <stackpanel horizontalalignment="right" orientation="horizontal">\n                    <button\n                        name="buttonconfig"\n                        width="30"\n                        height="30"\n                        margin="3"\n                        hc:borderelement.cornerradius="16"\n                        hc:iconelement.geometry="{staticresource configgeometry}"\n                        hc:iconelement.height="8"\n                        hc:iconelement.width="8"\n                        click="buttonconfig_onclick"\n                        style="{staticresource buttonprimary}" />\n                    <popup\n                        name="popupconfig"\n                        allowstransparency="true"\n                        horizontaloffset="-28"\n                        placementtarget="{binding elementname=buttonconfig}"\n                        staysopen="false"\n                        verticaloffset="6">\n                        <border\n                            margin="16"\n                            background="{dynamicresource secondaryregionbrush}"\n                            cornerradius="4"\n                            effect="{staticresource effectshadow1}">\n                            <stackpanel margin="10,10,10,10" orientation="horizontal">\n                                <button\n                                    name="basedark"\n                                    verticalalignment="center"\n                                    click="buttontheme_click"\n                                    style="{staticresource buttoncustom}">\n                                    <border\n                                        width="32"\n                                        height="21"\n                                        background="black"\n                                        borderbrush="{dynamicresource borderbrush}"\n                                        borderthickness="1"\n                                        cornerradius="2" />\n                                </button>\n                                <button\n                                    name="baselight"\n                                    verticalalignment="center"\n                                    click="buttontheme_click"\n                                    style="{staticresource buttoncustom}">\n                                    <border\n                                        width="32"\n                                        height="21"\n                                        background="white"\n                                        borderbrush="{dynamicresource borderbrush}"\n                                        borderthickness="1"\n                                        cornerradius="2" />\n                                </button>\n                                <button\n                                    name="basecolor"\n                                    verticalalignment="center"\n                                    click="buttoncolor_click"\n                                    style="{staticresource buttoncustom}">\n                                    <border\n                                        width="32"\n                                        height="21"\n                                        background="darkviolet"\n                                        borderbrush="{dynamicresource borderbrush}"\n                                        borderthickness="1"\n                                        cornerradius="2" />\n                                </button>\n                            </stackpanel>\n                        </border>\n                    </popup>\n\n                    <button\n                        margin="3"\n                        hc:borderelement.cornerradius="16"\n                        hc:iconelement.geometry="{staticresource windowmingeometry}"\n                        click="buttonminimize_click"\n                        style="{staticresource buttonprimary}" />\n                    <button\n                        margin="3"\n                        hc:borderelement.cornerradius="16"\n                        hc:iconelement.geometry="{staticresource windowmaxgeometry}"\n                        click="buttonmaximize_click"\n                        style="{staticresource buttonprimary}" />\n                    <button\n                        margin="3"\n                        hc:borderelement.cornerradius="16"\n                        hc:iconelement.geometry="{staticresource closegeometry}"\n                        click="buttonclose_click"\n                        style="{staticresource buttonprimary}" />\n                </stackpanel>\n\n            </dockpanel>\n        </grid>\n        <grid grid.row="1">\n            <grid.columndefinitions>\n                <columndefinition width="{binding menuwidth}" />\n                <columndefinition width="20" />\n                <columndefinition />\n            </grid.columndefinitions>\n            <grid grid.column="0">\n                <border\n                    grid.columnspan="2"\n                    borderbrush="lightsteelblue"\n                    borderthickness="2"\n                    cornerradius="5" />\n                <border\n                    grid.column="0"\n                    borderbrush="lightsteelblue"\n                    borderthickness="2"\n                    cornerradius="5" />\n                <listbox\n                    name="listboxitems"\n                    grid.column="0"\n                    margin="2"\n                    cm:message.attach="[event selectionchanged] = [action listboxitems_selectionchanged]"\n                    selectedindex="1"\n                    selecteditem="{binding selecteditem}" />\n            </grid>\n            <grid grid.column="1">\n                <stackpanel horizontalalignment="center" verticalalignment="top">\n                    <stackpanel>\n                        <togglebutton\n                            name="togglemenuwidth"\n                            horizontalalignment="center"\n                            borderthickness="0"\n                            ischecked="true"\n                            style="{staticresource togglebuttonflip.small}">\n                            <hc:statusswitchelement.checkedelement>\n                                <border background="{dynamicresource primarybrush}">\n                                    <textblock\n                                        horizontalalignment="center"\n                                        verticalalignment="center"\n                                        foreground="{dynamicresource texticonbrush}"\n                                        text="&lt;" />\n                                </border>\n                            </hc:statusswitchelement.checkedelement>\n                            <border background="{dynamicresource successbrush}">\n                                <textblock\n                                    horizontalalignment="center"\n                                    verticalalignment="center"\n                                    foreground="{dynamicresource texticonbrush}"\n                                    text="&gt;" />\n                            </border>\n                        </togglebutton>\n                    </stackpanel>\n                </stackpanel>\n            </grid>\n            <grid grid.column="2">\n                <contentcontrol x:name="activewindowview" />\n            </grid>\n        </grid>\n    </grid>\n</hc:glowwindow>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n\n\n\n# mainview.xaml.cs\n\n去掉了继承的window类\n\n/// <summary>\n/// mainview.xaml 的交互逻辑\n/// </summary>\npublic partial class mainview\n{\n    private int themecolorflag { get; set; } = 0;\n    public mainview()\n    {\n        initializecomponent();\n\n        this.maxheight = systemparameters.maximizedprimaryscreenheight;\n        this.maxwidth = systemparameters.maximizedprimaryscreenwidth;\n\n        initialresourcedictionary();\n    }\n\n    // ititial resourcedictionary\n    private void initialresourcedictionary()\n    {\n        // theme\n        resourcedictionary theme = new resourcedictionary\n        {\n            source = new uri("pack://application:,,,/resources/styles/themes/baselight.xaml")\n        };\n        resources.mergeddictionaries.add(theme);\n        // color\n        resourcedictionary color = new resourcedictionary\n        {\n            source = new uri("pack://application:,,,/resources/styles/primary/primary.xaml")\n        };\n        resources.mergeddictionaries.add(color);\n    }\n\n    // updata resourcedictionary\n    private void updataresourcedictionary(string resourcestr, int pos)\n    {\n        if (pos < 0 || pos > 2)\n        {\n            return;\n        }\n        resourcedictionary resource = new resourcedictionary\n        {\n            source = new uri(resourcestr)\n        };\n        resources.mergeddictionaries.removeat(pos);\n        resources.mergeddictionaries.insert(pos, resource);\n    }\n\n    //// theme\n    private void buttontheme_click(object sender, routedeventargs e)\n    {\n        if (!(sender is button button))\n        {\n            return;\n        }\n        string resourcestr = "pack://application:,,,/resources/styles/themes/baselight.xaml";\n        if (button.name.tostring() == "basedark")\n        {\n            resourcestr = "pack://application:,,,/resources/styles/themes/basedark.xaml";\n        }\n        updataresourcedictionary(resourcestr, 0);\n    }\n\n    //// primary color\n    private void buttoncolor_click(object sender, routedeventargs e)\n    {\n        themecolorflag = (themecolorflag + 1) % 3;\n        string resourcestr = "pack://application:,,,/resources/styles/primary/primary.xaml";\n        if (themecolorflag == 1)\n        {\n            resourcestr = "pack://application:,,,/resources/styles/primary/magenta.xaml";\n        }\n        else if (themecolorflag == 2)\n        {\n            resourcestr = "pack://application:,,,/resources/styles/primary/violet.xaml";\n        }\n        updataresourcedictionary(resourcestr, 1);\n    }\n\n    ////主题配置\n    private void buttonconfig_onclick(object sender, routedeventargs e) => popupconfig.isopen = true;\n    // 最小化\n    private void buttonminimize_click(object sender, routedeventargs e)\n    {\n        windowstate = windowstate.minimized;\n    }\n    //最大化\n    private void buttonmaximize_click(object sender, routedeventargs e)\n    {\n        if (this.windowstate == windowstate.maximized)\n            this.windowstate = windowstate.normal;\n        else\n            this.windowstate = windowstate.maximized;\n    }\n    // 关闭\n    private void buttonclose_click(object sender, routedeventargs e)\n    {\n        close();\n    }\n    private void window_mouseleftbuttondown(object sender, mousebuttoneventargs e)\n    {\n        this.dragmove();\n    }\n    private void window_mousedoubleclick(object sender, mousebuttoneventargs e)\n    {\n        if (this.windowstate == windowstate.normal)\n            this.windowstate = windowstate.maximized;\n        else\n            this.windowstate = windowstate.normal;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n\n\n\n# loginview.xaml\n\n<hc:glowwindow\n    x:class="test.wpf.views.loginview"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n    xmlns:hc="https://handyorg.github.io/handycontrol"\n    xmlns:local="clr-namespace:test.wpf.views"\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n    title="loginview"\n    width="600"\n    height="400"\n    minwidth="600"\n    minheight="400"\n    allowstransparency="true"\n    resizemode="noresize"\n    windowstartuplocation="centerscreen"\n    windowstyle="none"\n    mc:ignorable="d">\n    <border cornerradius="120">\n        <grid>\n            <grid.rowdefinitions>\n                <rowdefinition height="auto" />\n                <rowdefinition />\n            </grid.rowdefinitions>\n            <grid grid.row="0" mouseleftbuttondown="window_mouseleftbuttondown">\n                <dockpanel>\n                    <stackpanel orientation="horizontal">\n                        <image\n                            height="30"\n                            margin="10,3"\n                            horizontalalignment="left"\n                            source="pack://application:,,,/resources/images/icon.ico" />\n                        <hc:outlinetext\n                            margin="3"\n                            fill="{dynamicresource primarybrush}"\n                            fontfamily="隶书"\n                            fontsize="30"\n                            fontweight="bold"\n                            stroke="palevioletred"\n                            strokethickness="2"\n                            text="登录" />\n                    </stackpanel>\n                    <stackpanel horizontalalignment="right" orientation="horizontal">\n                        <button\n                            margin="3"\n                            hc:borderelement.cornerradius="16"\n                            hc:iconelement.geometry="{staticresource closegeometry}"\n                            click="buttonclose_click"\n                            style="{staticresource buttonprimary}" />\n                    </stackpanel>\n                </dockpanel>\n            </grid>\n            <grid grid.row="1">\n                <grid.columndefinitions>\n                    <columndefinition width="1.2*" />\n                    <columndefinition width="*" />\n                </grid.columndefinitions>\n                <grid grid.column="0">\n                    <image\n                        width="300"\n                        height="300"\n                        hc:iconelement.geometry=""\n                        source="pack://application:,,,/resources/images/login-box-bg.png"\n                        stretch="fill" />\n                </grid>\n                <grid grid.column="1">\n                    <stackpanel\n                        width="250"\n                        margin="0,35,0,35"\n                        horizontalalignment="center"\n                        orientation="vertical">\n                        <hc:outlinetext\n                            margin="0,20,0,0"\n                            horizontalalignment="center"\n                            fill="{dynamicresource primarybrush}"\n                            fontfamily="隶书"\n                            fontsize="30"\n                            fontweight="bold"\n                            stroke="palevioletred"\n                            strokethickness="2"\n                            text="i采薇工具箱" />\n                        <hc:textbox\n                            name="username"\n                            width="200"\n                            margin="0,20,0,0"\n                            hc:infoelement.necessary="true"\n                            hc:infoelement.placeholder="请输入用户名"\n                            hc:infoelement.showclearbutton="true" />\n                        <hc:passwordbox\n                            width="200"\n                            margin="0,20,0,0"\n                            hc:infoelement.necessary="true"\n                            hc:infoelement.placeholder="请输入密码"\n                            issafeenabled="false"\n                            showclearbutton="true"\n                            showeyebutton="true"\n                            unsafepassword="{binding path=password, mode=twoway}" />\n                        <button\n                            name="login"\n                            width="200"\n                            margin="0,20,0,0"\n                            content="登    录"\n                            isdefault="true"\n                            style="{staticresource buttonprimary}" />\n                    </stackpanel>\n                </grid>\n            </grid>\n        </grid>\n    </border>\n</hc:glowwindow>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n\n\n\n# loginview.xaml.cs\n\n/// <summary>\n/// loginview.xaml 的交互逻辑\n/// </summary>\npublic partial class loginview\n{\n    public loginview()\n    {\n        initializecomponent();\n    }\n    private void buttonclose_click(object sender, routedeventargs e)\n    {\n        close();\n    }\n    private void window_mouseleftbuttondown(object sender, mousebuttoneventargs e)\n    {\n        dragmove();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},lastUpdated:"2023/10/18, 19:38:19",lastUpdatedTimestamp:1697629099e3},{title:"WPF增删改查10-发布",frontmatter:{title:"WPF增删改查10-发布",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/publish/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/02.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/10.WPF%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A510-%E5%8F%91%E5%B8%83.html",relativePath:"06.软件开发/05.WPF/02.WPF增删改查/10.WPF增删改查10-发布.md",key:"v-09bf9794",path:"/soft/wpf/publish/",headers:[{level:2,title:"修改应用图标",slug:"修改应用图标",normalizedTitle:"修改应用图标",charIndex:2},{level:2,title:"发布",slug:"发布",normalizedTitle:"发布",charIndex:15}],headersStr:"修改应用图标 发布",content:"# 修改应用图标\n\n\n\n\n# 发布\n\n选择文件夹\n\n\n\n",normalizedContent:"# 修改应用图标\n\n\n\n\n# 发布\n\n选择文件夹\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"引用MaterialDesign主题",frontmatter:{title:"引用MaterialDesign主题",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/theme/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/03.MaterialDesign/01.%E5%BC%95%E7%94%A8MaterialDesign%E4%B8%BB%E9%A2%98.html",relativePath:"06.软件开发/05.WPF/03.MaterialDesign/01.引用MaterialDesign主题.md",key:"v-279b8f2e",path:"/soft/wpf/material/theme/",headers:[{level:2,title:"引入依赖",slug:"引入依赖",normalizedTitle:"引入依赖",charIndex:2},{level:2,title:"引入资源",slug:"引入资源",normalizedTitle:"引入资源",charIndex:44}],headersStr:"引入依赖 引入资源",content:'# 引入依赖\n\n右键引入NuGet包，MaterialDesignThemes\n\n\n# 引入资源\n\n在App.xaml中添加资源\n\nxmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"\n\n<Application.Resources>\n    <ResourceDictionary>\n        <ResourceDictionary.MergedDictionaries>\n            <materialDesign:BundledTheme\n                                         BaseTheme="Light"\n                                         PrimaryColor="DeepPurple"\n                                         SecondaryColor="Lime" />\n            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />\n        </ResourceDictionary.MergedDictionaries>\n    </ResourceDictionary>\n</Application.Resources>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n完整引入\n\n<Application\n    x:Class="CaiWei.App"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:local="clr-namespace:CaiWei"\n    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"\n    ShutdownMode="OnExplicitShutdown">\n    <Application.Resources>\n        <ResourceDictionary>\n            <ResourceDictionary.MergedDictionaries>\n                <materialDesign:BundledTheme\n                    BaseTheme="Light"\n                    PrimaryColor="DeepPurple"\n                    SecondaryColor="Lime" />\n                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />\n            </ResourceDictionary.MergedDictionaries>\n        </ResourceDictionary>\n    </Application.Resources>\n</Application>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'# 引入依赖\n\n右键引入nuget包，materialdesignthemes\n\n\n# 引入资源\n\n在app.xaml中添加资源\n\nxmlns:materialdesign="http://materialdesigninxaml.net/winfx/xaml/themes"\n\n<application.resources>\n    <resourcedictionary>\n        <resourcedictionary.mergeddictionaries>\n            <materialdesign:bundledtheme\n                                         basetheme="light"\n                                         primarycolor="deeppurple"\n                                         secondarycolor="lime" />\n            <resourcedictionary source="pack://application:,,,/materialdesignthemes.wpf;component/themes/materialdesigntheme.defaults.xaml" />\n        </resourcedictionary.mergeddictionaries>\n    </resourcedictionary>\n</application.resources>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n完整引入\n\n<application\n    x:class="caiwei.app"\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n    xmlns:local="clr-namespace:caiwei"\n    xmlns:materialdesign="http://materialdesigninxaml.net/winfx/xaml/themes"\n    shutdownmode="onexplicitshutdown">\n    <application.resources>\n        <resourcedictionary>\n            <resourcedictionary.mergeddictionaries>\n                <materialdesign:bundledtheme\n                    basetheme="light"\n                    primarycolor="deeppurple"\n                    secondarycolor="lime" />\n                <resourcedictionary source="pack://application:,,,/materialdesignthemes.wpf;component/themes/materialdesigntheme.defaults.xaml" />\n            </resourcedictionary.mergeddictionaries>\n        </resourcedictionary>\n    </application.resources>\n</application>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},lastUpdated:"2023/10/18, 12:05:22",lastUpdatedTimestamp:1697601922e3},{title:"动画显示",frontmatter:{title:"动画显示",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/animation/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/03.MaterialDesign/03.%E5%8A%A8%E7%94%BB%E6%98%BE%E7%A4%BA.html",relativePath:"06.软件开发/05.WPF/03.MaterialDesign/03.动画显示.md",key:"v-663867c2",path:"/soft/wpf/material/animation/",headers:[{level:2,title:"添加窗口触发器",slug:"添加窗口触发器",normalizedTitle:"添加窗口触发器",charIndex:2},{level:2,title:"添加目标",slug:"添加目标",normalizedTitle:"添加目标",charIndex:508}],headersStr:"添加窗口触发器 添加目标",content:'# 添加窗口触发器\n\n<Window.Triggers>\n    <EventTrigger RoutedEvent="Window.Loaded">\n        <BeginStoryboard>\n            <Storyboard>\n                <DoubleAnimation\n                                 Storyboard.TargetName="ani"\n                                 Storyboard.TargetProperty="X"\n                                 To="0"\n                                 Duration="0:0:0.7" />\n            </Storyboard>\n        </BeginStoryboard>\n    </EventTrigger>\n</Window.Triggers>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 添加目标\n\n<Border.RenderTransform>\n    <TranslateTransform x:Name="ani" X="-340" />\n</Border.RenderTransform>\n\n\n1\n2\n3\n',normalizedContent:'# 添加窗口触发器\n\n<window.triggers>\n    <eventtrigger routedevent="window.loaded">\n        <beginstoryboard>\n            <storyboard>\n                <doubleanimation\n                                 storyboard.targetname="ani"\n                                 storyboard.targetproperty="x"\n                                 to="0"\n                                 duration="0:0:0.7" />\n            </storyboard>\n        </beginstoryboard>\n    </eventtrigger>\n</window.triggers>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 添加目标\n\n<border.rendertransform>\n    <translatetransform x:name="ani" x="-340" />\n</border.rendertransform>\n\n\n1\n2\n3\n',charsets:{cjk:!0},lastUpdated:"2023/10/18, 12:05:22",lastUpdatedTimestamp:1697601922e3},{title:"Password绑定",frontmatter:{title:"Password绑定",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/password/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/03.MaterialDesign/04.Password%E7%BB%91%E5%AE%9A.html",relativePath:"06.软件开发/05.WPF/03.MaterialDesign/04.Password绑定.md",key:"v-37f2faac",path:"/soft/wpf/material/password/",headers:[{level:2,title:"PasswordBoxHelper",slug:"passwordboxhelper",normalizedTitle:"passwordboxhelper",charIndex:2},{level:2,title:"PasswordBox",slug:"passwordbox",normalizedTitle:"passwordbox",charIndex:2}],headersStr:"PasswordBoxHelper PasswordBox",content:'# PasswordBoxHelper\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows;\nusing System.Windows.Controls;\n\nnamespace CaiWei.Common\n{\n    public class PasswordBoxHelper\n    {\n        //包含两个依赖附加属性Password Attach\n        public static readonly DependencyProperty PasswordProperty = DependencyProperty.RegisterAttached("Password", typeof(string), typeof(PasswordBoxHelper),\n            new PropertyMetadata(new PropertyChangedCallback(OnPropertyChanged)));\n        public static string GetPassword(DependencyObject d)\n        {\n            return (string)d.GetValue(PasswordProperty);\n        }\n        public static void SetPassword(DependencyObject d, string value)\n        {\n            d.SetValue(PasswordProperty, value);\n        }\n        public static readonly DependencyProperty AttachProperty = DependencyProperty.RegisterAttached("Attach", typeof(string),\n            typeof(PasswordBoxHelper), new PropertyMetadata(new PropertyChangedCallback(OnAttachChanged)));\n        public static string GetAttach(DependencyObject d)\n        {\n            return (string)d.GetValue(PasswordProperty);\n        }\n        public static void SetAttach(DependencyObject d, string value)\n        {\n            d.SetValue(PasswordProperty, value);\n        }\n        static bool _isUpdating = false;\n        private static void OnPropertyChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n        {\n            PasswordBox pb = d as PasswordBox;\n            pb.PasswordChanged -= Pb_PasswordChanged;\n            if (!_isUpdating)\n                (d as PasswordBox).Password = e.NewValue.ToString();\n            pb.PasswordChanged += Pb_PasswordChanged;\n        }\n        private static void OnAttachChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n        {\n            PasswordBox pb = d as PasswordBox;\n            pb.PasswordChanged -= Pb_PasswordChanged;\n        }\n        private static void Pb_PasswordChanged(object sender, RoutedEventArgs e)\n        {\n            PasswordBox pb = sender as PasswordBox;\n            _isUpdating = true;\n            SetPassword(pb, pb.Password);\n            _isUpdating = false;\n        }\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n\n# PasswordBox\n\n<PasswordBox\n             Grid.Column="1"\n             VerticalAlignment="Center"\n             common:PasswordBoxHelper.Attach="true"\n             common:PasswordBoxHelper.Password="{Binding UserModel.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"\n             materialDesign:HintAssist.Hint="请输入密码"\n             Style="{StaticResource MaterialDesignFloatingHintPasswordBox}" />\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'# passwordboxhelper\n\nusing system;\nusing system.collections.generic;\nusing system.linq;\nusing system.text;\nusing system.threading.tasks;\nusing system.windows;\nusing system.windows.controls;\n\nnamespace caiwei.common\n{\n    public class passwordboxhelper\n    {\n        //包含两个依赖附加属性password attach\n        public static readonly dependencyproperty passwordproperty = dependencyproperty.registerattached("password", typeof(string), typeof(passwordboxhelper),\n            new propertymetadata(new propertychangedcallback(onpropertychanged)));\n        public static string getpassword(dependencyobject d)\n        {\n            return (string)d.getvalue(passwordproperty);\n        }\n        public static void setpassword(dependencyobject d, string value)\n        {\n            d.setvalue(passwordproperty, value);\n        }\n        public static readonly dependencyproperty attachproperty = dependencyproperty.registerattached("attach", typeof(string),\n            typeof(passwordboxhelper), new propertymetadata(new propertychangedcallback(onattachchanged)));\n        public static string getattach(dependencyobject d)\n        {\n            return (string)d.getvalue(passwordproperty);\n        }\n        public static void setattach(dependencyobject d, string value)\n        {\n            d.setvalue(passwordproperty, value);\n        }\n        static bool _isupdating = false;\n        private static void onpropertychanged(dependencyobject d, dependencypropertychangedeventargs e)\n        {\n            passwordbox pb = d as passwordbox;\n            pb.passwordchanged -= pb_passwordchanged;\n            if (!_isupdating)\n                (d as passwordbox).password = e.newvalue.tostring();\n            pb.passwordchanged += pb_passwordchanged;\n        }\n        private static void onattachchanged(dependencyobject d, dependencypropertychangedeventargs e)\n        {\n            passwordbox pb = d as passwordbox;\n            pb.passwordchanged -= pb_passwordchanged;\n        }\n        private static void pb_passwordchanged(object sender, routedeventargs e)\n        {\n            passwordbox pb = sender as passwordbox;\n            _isupdating = true;\n            setpassword(pb, pb.password);\n            _isupdating = false;\n        }\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n\n# passwordbox\n\n<passwordbox\n             grid.column="1"\n             verticalalignment="center"\n             common:passwordboxhelper.attach="true"\n             common:passwordboxhelper.password="{binding usermodel.password, mode=twoway, updatesourcetrigger=propertychanged}"\n             materialdesign:hintassist.hint="请输入密码"\n             style="{staticresource materialdesignfloatinghintpasswordbox}" />\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},lastUpdated:"2023/10/18, 12:05:22",lastUpdatedTimestamp:1697601922e3},{title:"窗口切换",frontmatter:{title:"窗口切换",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/window/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/03.MaterialDesign/02.%E7%AA%97%E5%8F%A3%E5%88%87%E6%8D%A2.html",relativePath:"06.软件开发/05.WPF/03.MaterialDesign/02.窗口切换.md",key:"v-1821f942",path:"/soft/wpf/material/window/",headers:[{level:2,title:"添加登录窗口与主窗口",slug:"添加登录窗口与主窗口",normalizedTitle:"添加登录窗口与主窗口",charIndex:2},{level:2,title:"App.xaml",slug:"app-xaml",normalizedTitle:"app.xaml",charIndex:17},{level:2,title:"App.xaml.cs",slug:"app-xaml-cs",normalizedTitle:"app.xaml.cs",charIndex:84},{level:2,title:"添加事件",slug:"添加事件",normalizedTitle:"添加事件",charIndex:426}],headersStr:"添加登录窗口与主窗口 App.xaml App.xaml.cs 添加事件",content:'# 添加登录窗口与主窗口\n\n\n# App.xaml\n\n在App.xaml中添加\n\nShutdownMode="OnExplicitShutdown"\n\n\n1\n\n\n\n# App.xaml.cs\n\npublic partial class App : Application\n{\n    protected override void OnStartup(StartupEventArgs e)\n    {\n        base.OnStartup(e);\n        if (new LoginWindow().ShowDialog() == true)\n        {\n            new MainWindow().ShowDialog();\n        }\n        Application.Current.Shutdown();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 添加事件\n\n由 ((Window)obj).DialogResult = true; 来控制窗口的显示与隐藏',normalizedContent:'# 添加登录窗口与主窗口\n\n\n# app.xaml\n\n在app.xaml中添加\n\nshutdownmode="onexplicitshutdown"\n\n\n1\n\n\n\n# app.xaml.cs\n\npublic partial class app : application\n{\n    protected override void onstartup(startupeventargs e)\n    {\n        base.onstartup(e);\n        if (new loginwindow().showdialog() == true)\n        {\n            new mainwindow().showdialog();\n        }\n        application.current.shutdown();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 添加事件\n\n由 ((window)obj).dialogresult = true; 来控制窗口的显示与隐藏',charsets:{cjk:!0},lastUpdated:"2023/10/18, 12:05:22",lastUpdatedTimestamp:1697601922e3},{title:"Command绑定",frontmatter:{title:"Command绑定",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/command/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/03.MaterialDesign/05.Command%E7%BB%91%E5%AE%9A.html",relativePath:"06.软件开发/05.WPF/03.MaterialDesign/05.Command绑定.md",key:"v-e34f65d4",path:"/soft/wpf/material/command/",headers:[{level:2,title:"CommandBase.cs",slug:"commandbase-cs",normalizedTitle:"commandbase.cs",charIndex:2},{level:2,title:"示例-关闭窗口",slug:"示例-关闭窗口",normalizedTitle:"示例-关闭窗口",charIndex:629}],headersStr:"CommandBase.cs 示例-关闭窗口",content:"# CommandBase.cs\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows.Input;\n\nnamespace CaiWei.Base\n{\n    public class CommandBase : ICommand\n    {\n        public event EventHandler CanExecuteChanged;\n\n        public bool CanExecute(object parameter)\n        {\n            return true;\n        }\n\n        public void Execute(object parameter)\n        {\n            DoExecute?.Invoke(parameter);\n        }\n        public Action<object> DoExecute { get; set; }\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 示例-关闭窗口\n\n//关闭命令\nprivate CommandBase _closeCommand;\npublic CommandBase CloseCommand\n{\n    get\n    {\n        if (_closeCommand == null)\n        {\n            _closeCommand = new CommandBase();\n            _closeCommand.DoExecute = new Action<object>(obj =>\n                                                         {\n                                                             ((Window)obj).DialogResult = false;\n                                                         });\n        }\n        return _closeCommand;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n",normalizedContent:"# commandbase.cs\n\nusing system;\nusing system.collections.generic;\nusing system.linq;\nusing system.text;\nusing system.threading.tasks;\nusing system.windows.input;\n\nnamespace caiwei.base\n{\n    public class commandbase : icommand\n    {\n        public event eventhandler canexecutechanged;\n\n        public bool canexecute(object parameter)\n        {\n            return true;\n        }\n\n        public void execute(object parameter)\n        {\n            doexecute?.invoke(parameter);\n        }\n        public action<object> doexecute { get; set; }\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 示例-关闭窗口\n\n//关闭命令\nprivate commandbase _closecommand;\npublic commandbase closecommand\n{\n    get\n    {\n        if (_closecommand == null)\n        {\n            _closecommand = new commandbase();\n            _closecommand.doexecute = new action<object>(obj =>\n                                                         {\n                                                             ((window)obj).dialogresult = false;\n                                                         });\n        }\n        return _closecommand;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n",charsets:{cjk:!0},lastUpdated:"2023/10/18, 12:05:22",lastUpdatedTimestamp:1697601922e3},{title:"属性变化通知",frontmatter:{title:"属性变化通知",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/property/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/05.WPF/03.MaterialDesign/06.%E5%B1%9E%E6%80%A7%E5%8F%98%E5%8C%96%E9%80%9A%E7%9F%A5.html",relativePath:"06.软件开发/05.WPF/03.MaterialDesign/06.属性变化通知.md",key:"v-6c8a3562",path:"/soft/wpf/material/property/",headers:[{level:2,title:"NotifyBase",slug:"notifybase",normalizedTitle:"notifybase",charIndex:2},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:593}],headersStr:"NotifyBase 示例",content:'# NotifyBase\n\nusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Linq;\nusing System.Runtime.CompilerServices;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace CaiWei.Base\n{\n    public class NotifyBase:INotifyPropertyChanged\n    {\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        public void NotifyChanged([CallerMemberName] string propName="")\n        {\n            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propName));\n        }\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 示例\n\nprivate string _errorMessage;\n\npublic string ErrorMessage\n{\n    get { return _errorMessage; }\n    set { _errorMessage = value; this.NotifyChanged(); }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'# notifybase\n\nusing system;\nusing system.collections.generic;\nusing system.componentmodel;\nusing system.linq;\nusing system.runtime.compilerservices;\nusing system.text;\nusing system.threading.tasks;\n\nnamespace caiwei.base\n{\n    public class notifybase:inotifypropertychanged\n    {\n        public event propertychangedeventhandler propertychanged;\n\n        public void notifychanged([callermembername] string propname="")\n        {\n            propertychanged?.invoke(this, new propertychangedeventargs(propname));\n        }\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 示例\n\nprivate string _errormessage;\n\npublic string errormessage\n{\n    get { return _errormessage; }\n    set { _errormessage = value; this.notifychanged(); }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},lastUpdated:"2023/10/18, 12:05:22",lastUpdatedTimestamp:1697601922e3},{title:"Python笔记",frontmatter:{title:"Python笔记",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/python/note/",private:!0,categories:["软件开发"],tags:["软件开发","Python"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/07.Python/01.%E7%AC%94%E8%AE%B0/01.Python%E7%AC%94%E8%AE%B0.html",relativePath:"06.软件开发/07.Python/01.笔记/01.Python笔记.md",key:"v-1bb59077",path:"/soft/python/note/",headers:[{level:2,title:"文件头",slug:"文件头",normalizedTitle:"文件头",charIndex:2},{level:2,title:"更换源",slug:"更换源",normalizedTitle:"更换源",charIndex:103},{level:2,title:"打包exe",slug:"打包exe",normalizedTitle:"打包exe",charIndex:410},{level:2,title:"写入Excel",slug:"写入excel",normalizedTitle:"写入excel",charIndex:458},{level:2,title:"打开文件",slug:"打开文件",normalizedTitle:"打开文件",charIndex:777},{level:2,title:"字符串切片",slug:"字符串切片",normalizedTitle:"字符串切片",charIndex:843},{level:2,title:"字符串转数字",slug:"字符串转数字",normalizedTitle:"字符串转数字",charIndex:989},{level:2,title:"关于Anaconda python以及pycharm中出现SSL不可用的解决办法",slug:"关于anaconda-python以及pycharm中出现ssl不可用的解决办法",normalizedTitle:"关于anaconda python以及pycharm中出现ssl不可用的解决办法",charIndex:1105},{level:2,title:"获取当前时间",slug:"获取当前时间",normalizedTitle:"获取当前时间",charIndex:1240}],headersStr:"文件头 更换源 打包exe 写入Excel 打开文件 字符串切片 字符串转数字 关于Anaconda python以及pycharm中出现SSL不可用的解决办法 获取当前时间",content:"# 文件头\n\n# -*- ciding: utf-8 -*-\n# time:   ${DATE}\n# file:   ${NAME}.py\n# author: icaiwei\n\n\n1\n2\n3\n4\n\n\n\n# 更换源\n\npip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\n\npython 国内源推荐\n清华大学：https://pypi.tuna.tsinghua.edu.cn/simple\n阿里云：http://mirrors.aliyun.com/pypi/simple/\n豆瓣：http://pypi.douban.com/simple/\n华中理工大学：http://pypi.hustunique.com/\n山东理工大学：http://pypi.sdutlinux.org/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 打包exe\n\npyinstaller.exe --onefile zb.py\n\n\n1\n\n\n\n# 写入Excel\n\ndefwrite_excel(lst):\n    print(\"###### 写入Excel ######\")\n    file_name=sys.argv[1]\n    df=pd.DataFrame(lst,columns=['REFDES', 'COMP_PACKAGE', 'SYM_CENTER_X', 'SYM_CENTER_Y', 'SYM_ROTATE', 'SYM_MIRROR', 'BOARD_LAYERS', 'BOARD_UNITS', 'COMP_DEVICE_TYPE'])\n    df.to_excel(file_name,index=False,)\n\n\n1\n2\n3\n4\n5\n\n\n\n# 打开文件\n\nwith open(file,\"r\") as f:\n    print(file.read())\n\n\n1\n2\n\n\n\n# 字符串切片\n\nstr=\"Line1-abcdef \\nLine2-abc \\nLine4-abcd\";\nprintstr.split( );       # 以空格为分隔符，包含 \\n\nprintstr.split(' ', 1); # 以空格为分隔符，分隔成两个\n\n\n1\n2\n3\n\n\n\n# 字符串转数字\n\nb=\"30.5\"\na=float(b)\n\n\n1\n2\n\n\n读取Excel保留0开头字符串\n\ndf = pd.read_excel(file_path,converters={'客户编号':str})\n\n\n1\n\n\n\n# 关于Anaconda python以及pycharm中出现SSL不可用的解决办法\n\n将“Anaconda\\Library\\bin”里的\nlibssl-1_1.dll\nlibcrypto-1_1.dll\n拷贝到“Anaconda\\DLLs”\n\n\n1\n2\n3\n4\n\n\n\n# 获取当前时间\n\nimport time\nnow = time.localtime()\nnow_time = time.strftime('%Y-%m-%d %H\"%M:%S', now)\n\n\n1\n2\n3\n",normalizedContent:"# 文件头\n\n# -*- ciding: utf-8 -*-\n# time:   ${date}\n# file:   ${name}.py\n# author: icaiwei\n\n\n1\n2\n3\n4\n\n\n\n# 更换源\n\npip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\n\npython 国内源推荐\n清华大学：https://pypi.tuna.tsinghua.edu.cn/simple\n阿里云：http://mirrors.aliyun.com/pypi/simple/\n豆瓣：http://pypi.douban.com/simple/\n华中理工大学：http://pypi.hustunique.com/\n山东理工大学：http://pypi.sdutlinux.org/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 打包exe\n\npyinstaller.exe --onefile zb.py\n\n\n1\n\n\n\n# 写入excel\n\ndefwrite_excel(lst):\n    print(\"###### 写入excel ######\")\n    file_name=sys.argv[1]\n    df=pd.dataframe(lst,columns=['refdes', 'comp_package', 'sym_center_x', 'sym_center_y', 'sym_rotate', 'sym_mirror', 'board_layers', 'board_units', 'comp_device_type'])\n    df.to_excel(file_name,index=false,)\n\n\n1\n2\n3\n4\n5\n\n\n\n# 打开文件\n\nwith open(file,\"r\") as f:\n    print(file.read())\n\n\n1\n2\n\n\n\n# 字符串切片\n\nstr=\"line1-abcdef \\nline2-abc \\nline4-abcd\";\nprintstr.split( );       # 以空格为分隔符，包含 \\n\nprintstr.split(' ', 1); # 以空格为分隔符，分隔成两个\n\n\n1\n2\n3\n\n\n\n# 字符串转数字\n\nb=\"30.5\"\na=float(b)\n\n\n1\n2\n\n\n读取excel保留0开头字符串\n\ndf = pd.read_excel(file_path,converters={'客户编号':str})\n\n\n1\n\n\n\n# 关于anaconda python以及pycharm中出现ssl不可用的解决办法\n\n将“anaconda\\library\\bin”里的\nlibssl-1_1.dll\nlibcrypto-1_1.dll\n拷贝到“anaconda\\dlls”\n\n\n1\n2\n3\n4\n\n\n\n# 获取当前时间\n\nimport time\nnow = time.localtime()\nnow_time = time.strftime('%y-%m-%d %h\"%m:%s', now)\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2023/09/09, 10:35:20",lastUpdatedTimestamp:169422692e4},{title:"Python-Excel笔记",frontmatter:{title:"Python-Excel笔记",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/python/note/excel/",private:!0,categories:["软件开发"],tags:["软件开发","Python"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/07.Python/01.%E7%AC%94%E8%AE%B0/02.Python-Excel%E7%AC%94%E8%AE%B0.html",relativePath:"06.软件开发/07.Python/01.笔记/02.Python-Excel笔记.md",key:"v-2f4357d7",path:"/soft/python/note/excel/",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:2},{level:2,title:"导入",slug:"导入",normalizedTitle:"导入",charIndex:35},{level:2,title:"创建新的Excel文件",slug:"创建新的excel文件",normalizedTitle:"创建新的excel文件",charIndex:69},{level:2,title:"打开已有的Excel文件",slug:"打开已有的excel文件",normalizedTitle:"打开已有的excel文件",charIndex:359},{level:2,title:"读入和写入值",slug:"读入和写入值",normalizedTitle:"读入和写入值",charIndex:767},{level:2,title:"活动对象",slug:"活动对象",normalizedTitle:"活动对象",charIndex:1614},{level:2,title:"范围和切片取值，范围写值",slug:"范围和切片取值-范围写值",normalizedTitle:"范围和切片取值，范围写值",charIndex:1765},{level:2,title:"一些属性或方法",slug:"一些属性或方法",normalizedTitle:"一些属性或方法",charIndex:2427},{level:2,title:"完整操作",slug:"完整操作",normalizedTitle:"完整操作",charIndex:2846},{level:3,title:"创建工作簿表",slug:"创建工作簿表",normalizedTitle:"创建工作簿表",charIndex:2855},{level:3,title:"读取工作簿",slug:"读取工作簿",normalizedTitle:"读取工作簿",charIndex:3657},{level:3,title:"一些数据读取的操作",slug:"一些数据读取的操作",normalizedTitle:"一些数据读取的操作",charIndex:4163}],headersStr:"安装 导入 创建新的Excel文件 打开已有的Excel文件 读入和写入值 活动对象 范围和切片取值，范围写值 一些属性或方法 完整操作 创建工作簿表 读取工作簿 一些数据读取的操作",content:"# 安装\n\npip install xlwings\n\n\n1\n\n\n\n# 导入\n\nimport xlwings as xw\n\n\n1\n\n\n\n# 创建新的Excel文件\n\n# 方法1：\n# 创建一个新的App，并在新App中新建一个Book\nwb = xw.Book()\nwb.save('1.xlsx')\nwb.close()\n\n# 方法2：\n# 当前App下新建一个Book\n# visible参数控制创建文件时可见的属性\napp=xw.App(visible=False,add_book=False)\nwb=app.books.add()\nwb.save('1.xlsx')\nwb.close()\n#结束进程\napp.quit()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 打开已有的Excel文件\n\nimport xlwings as xw\napp=xw.App(visible=True,add_book=False)\n#不显示Excel消息框\napp.display_alerts=False \n#关闭屏幕更新,可加快宏的执行速度\napp.screen_updating=False  \nwb=app.books.open('1.xlsx')\n# 输出打开的excle的绝对路径\n# print(wb.fullname)\nwb.save()\nwb.close()\n# 退出excel程序，\napp.quit()\n# 通过杀掉进程强制Excel app退出\n​# app.kill() \n# 以第一种方式创建Book时，打开文件的操作可如下\nwb = xw.Book('1.xlsx')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 读入和写入值\n\n# 在A1单元格写入值\n# 实例化一个工作表对象\nsheet1 = wb.sheets[\"sheet1\"]\n# 或者\n# sheet1 =xw.books['1.xlsx'].sheets['sheet1']\n输出工作簿名称\n# print(sheet1.name)\n# 写入值\nsheet1.range('A1').value = 'python知识学堂'\n# 读值并打印\nprint('value of A1:',sheet1.range('A1').value)\n# 清空单元格内容,如果A1中是图片，此方法没有效果\nsheet1.range('A1').clear()\n# 传入列表写入多行值\nsheet1.range('A1').value = [['a','b','c],[1,2,3]]\n\n# 当然也可以将pandas的DataFrame数据写入\nimport pandas as pd\ndf = pd.DataFrame([[1,2], [3,4]], columns=['A', 'B'])\nsheet1.range('A1').value = df\n# 读取数据，输出类型为DataFrame\nsheet1.range('A1').options(pd.DataFrame, expand='table').value\n\n\n# 支持添加图片的操作\nimport numpy as np\nimport matplotlib.pyplot as plt\nfig = plt.figure()\nx = np.arange(20)\nplt.plot(x, np.log(x))\nsheet1.pictures.add(fig, name='MyPlot', update=True)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# 活动对象\n\n#  但存在活动工作表的时候（比如打开一个1.xlsx文件以后），可以直接操作\n#  不存在的时候，就需要通过Book经sheet获取range\nimport xlwings as xw\nxw.Range('A1').value = 'Python知识学堂'\n\n\n1\n2\n3\n4\n\n\n\n# 范围和切片取值，范围写值\n\n假设现有的1.xlsx文件的数据如下：\n\n\n\n# 传递字符串或索引/切片使得取值更加方便\napp = xw.App(visible=False,add_book=False)\nwb = app.books.open('1.xlsx')\nrange_1 = wb.sheets[0].range('A1:D3')\nprint(range_1)\n\n# <Range [1.xlsx]Sheet1!$A$1:$D$3>\nprint(range_1.value)\n# [[None, 'a', 'b', None], [0.0, 1.0, 2.0, None], [1.0, 3.0, 4.0, None]]\n# 切片方式\nrange_2 = wb.sheets[0][:3, :3]\n# <Range [1.xlsx]Sheet1!$A$1:$C$3>\n​\n# 写值的情况\n# 使用列表将1,2,3,4写入A1,A2,A3,A4\n# transpose=True进行转置写入\nwb.sheets[0].range('A1').options(transpose=True).value=[1,2,3,4]\n# 将二维数组，储存在A1:B3中\nwb.sheets[0].range('A1').options(expand='table').value=[[1,2],[3,4],[5,6]]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 一些属性或方法\n\n在Excel的读写中，经常需要获取当前打开的文件的数据行和列数，在Xlwings中的获取方式：\n\n假设数据文件如下：\n\n\n\nws = wb.sheets['Sheet1']\nshape = ws.used_range.shape\nprint(shape) #(2, 3)\n​\nnrow1 = ws.api.UsedRange.Rows.count\nncol1 = ws.api.UsedRange.Columns.count\nprint(nrow1) # 2\nprint(ncol1) # 3\n​\nrng = ws.range('A1').expand()\nnrow2 = rng.last_cell.row\nncol2 = rng.last_cell.column\nprint(nrow2)  # 3\nprint(ncol2)  # 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 完整操作\n\n\n# 创建工作簿表\n\n#创建操作对象\napp=xw.App(visible=True,add_book=False)\n#visible  是否打开文件，在Excel软件中显示\n#add_book 是否创建新的工作簿，即Excel表(这个表是默认的，未命名状态)#创建一个工作簿，即Excel表wb=app.books.add()\n#创建一个sheet工作表\nsht=wb.sheets['sheet1']\n#给单元格创建一个值\nsht.range('A1').value='我给了单元格A1一个值2'\n#保存Excel,保存创建的工作簿，如果文件存在，则会覆盖原文件\n\n#给连续的行写入值,从A2开始按行写\nsht.range('A2').value=[1,2,3,4,56,7]  #sht.range('A2:F2').value=[1,2,3,4,56,7]\n#写入行,需要转置\nsht.range('B2').options(transpose=True).value=[22,33,44,55]\n#插入行列\nsht.range('A6').value=[[1,2],[3,4],[5,6]] #默认起点A6，插入三行两列\n\nwb.save(r'file/xlwings_excel2.xlsx')\n\n#如果资源不关闭，任然还是可以对工作簿进行操作\n#后写入的内容需要重新保存\n# sht.range('A6').value='我给了单元格A1一个值5'\n#wb.save()  #后面的保存不需要传入文件\n\n#关闭Excel程序,\n# 如果不关闭资源，重复执行的话，则会生成一个默认的工作簿\nwb.close()\napp.quit()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 读取工作簿\n\n#创建操作对象\napp=xw.App(visible=True,add_book=False)\n#打开已有的工作簿\nwb=app.books.open(r'file/xlwings_excel2.xlsx')\n\n#打开sheet表，表不存在保存\nsht=wb.sheets['sheet1']\n#打印单元的值\na1=sht.range('A1').value\nprint(a1)\n#读一行的值,A2:F2\na2=sht.range('A2:F2').value\nprint(a2)  #列表的形式显示\n#读一列\nb2=sht.range('b2:b20').value\nprint(b2)   #列表显示，如果没有值，显示none\n\n#读一个数组，如果对表有写的操作，需要保存wb.save()\na6_b6=sht.range('a6:b8').value\nprint(a6_b6) #一个二维数组\n\n#关闭资源\nwb.close()\napp.quit()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 一些数据读取的操作\n\nimport xlwings as xw\nimport time\n\n#xlwings对表操作的性能测试\n\n#建立一个操作对象\napp=xw.App(visible=False,add_book=False)\n\nstart_open_time=time.time()\n\n#打开一个工作薄\nwb=app.books.open(r'file/test_企业微信群名单.xlsx')\nsht=wb.sheets[3]\nt1=time.time()\nprint(f'打开工作薄所需要的时间{t1-start_open_time}')  #1.82s\n\n'''\n结论：\n打开工作薄所需要的时间与工作薄的数据大小有关，和工作表的大小无关\nMember_20210901202429.xlsx  36w数据-18秒\ntest_企业微信群名单.xlsx   多个工作表：5万数据，1.8s\n'''\n\n#读取工作表的数据\n#按行加载读取\n#得到表中有值的最大行和列\ntable_info = sht.used_range\nnrows = table_info.last_cell.row\nncolumns = table_info.last_cell.column\nprint(f'表的最大行==》{nrows}，最大列==》{ncolumns}')\nb_values=[]\n#按行取值，循环加入列表中\n# for i in range(2,nrows+1):\n#     v=sht.range(f'B{i}').value\n#     if not v: break  # 值是空的，结束循环\n#     b_values.append(v)\n\n#一次性加载某一列值\nb_values=sht.range(f'B2:B{nrows+1}').value\nprint(len(b_values))   #54297\n\nt2=time.time()\nprint(f'按行取值所需要的时间{t2-t1}')\n\n'''\n结论：\n按行取值54297行，需要16.9s\n一次性加载54297行，需要0.18s\n\n在操作excel中，不要频繁的调用excel的range对象取值\n尽量一次性的把数据读取到Python的内存中\n'''\n\n#资源关闭\nwb.close()\napp.quit()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n",normalizedContent:"# 安装\n\npip install xlwings\n\n\n1\n\n\n\n# 导入\n\nimport xlwings as xw\n\n\n1\n\n\n\n# 创建新的excel文件\n\n# 方法1：\n# 创建一个新的app，并在新app中新建一个book\nwb = xw.book()\nwb.save('1.xlsx')\nwb.close()\n\n# 方法2：\n# 当前app下新建一个book\n# visible参数控制创建文件时可见的属性\napp=xw.app(visible=false,add_book=false)\nwb=app.books.add()\nwb.save('1.xlsx')\nwb.close()\n#结束进程\napp.quit()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 打开已有的excel文件\n\nimport xlwings as xw\napp=xw.app(visible=true,add_book=false)\n#不显示excel消息框\napp.display_alerts=false \n#关闭屏幕更新,可加快宏的执行速度\napp.screen_updating=false  \nwb=app.books.open('1.xlsx')\n# 输出打开的excle的绝对路径\n# print(wb.fullname)\nwb.save()\nwb.close()\n# 退出excel程序，\napp.quit()\n# 通过杀掉进程强制excel app退出\n​# app.kill() \n# 以第一种方式创建book时，打开文件的操作可如下\nwb = xw.book('1.xlsx')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 读入和写入值\n\n# 在a1单元格写入值\n# 实例化一个工作表对象\nsheet1 = wb.sheets[\"sheet1\"]\n# 或者\n# sheet1 =xw.books['1.xlsx'].sheets['sheet1']\n输出工作簿名称\n# print(sheet1.name)\n# 写入值\nsheet1.range('a1').value = 'python知识学堂'\n# 读值并打印\nprint('value of a1:',sheet1.range('a1').value)\n# 清空单元格内容,如果a1中是图片，此方法没有效果\nsheet1.range('a1').clear()\n# 传入列表写入多行值\nsheet1.range('a1').value = [['a','b','c],[1,2,3]]\n\n# 当然也可以将pandas的dataframe数据写入\nimport pandas as pd\ndf = pd.dataframe([[1,2], [3,4]], columns=['a', 'b'])\nsheet1.range('a1').value = df\n# 读取数据，输出类型为dataframe\nsheet1.range('a1').options(pd.dataframe, expand='table').value\n\n\n# 支持添加图片的操作\nimport numpy as np\nimport matplotlib.pyplot as plt\nfig = plt.figure()\nx = np.arange(20)\nplt.plot(x, np.log(x))\nsheet1.pictures.add(fig, name='myplot', update=true)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# 活动对象\n\n#  但存在活动工作表的时候（比如打开一个1.xlsx文件以后），可以直接操作\n#  不存在的时候，就需要通过book经sheet获取range\nimport xlwings as xw\nxw.range('a1').value = 'python知识学堂'\n\n\n1\n2\n3\n4\n\n\n\n# 范围和切片取值，范围写值\n\n假设现有的1.xlsx文件的数据如下：\n\n\n\n# 传递字符串或索引/切片使得取值更加方便\napp = xw.app(visible=false,add_book=false)\nwb = app.books.open('1.xlsx')\nrange_1 = wb.sheets[0].range('a1:d3')\nprint(range_1)\n\n# <range [1.xlsx]sheet1!$a$1:$d$3>\nprint(range_1.value)\n# [[none, 'a', 'b', none], [0.0, 1.0, 2.0, none], [1.0, 3.0, 4.0, none]]\n# 切片方式\nrange_2 = wb.sheets[0][:3, :3]\n# <range [1.xlsx]sheet1!$a$1:$c$3>\n​\n# 写值的情况\n# 使用列表将1,2,3,4写入a1,a2,a3,a4\n# transpose=true进行转置写入\nwb.sheets[0].range('a1').options(transpose=true).value=[1,2,3,4]\n# 将二维数组，储存在a1:b3中\nwb.sheets[0].range('a1').options(expand='table').value=[[1,2],[3,4],[5,6]]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 一些属性或方法\n\n在excel的读写中，经常需要获取当前打开的文件的数据行和列数，在xlwings中的获取方式：\n\n假设数据文件如下：\n\n\n\nws = wb.sheets['sheet1']\nshape = ws.used_range.shape\nprint(shape) #(2, 3)\n​\nnrow1 = ws.api.usedrange.rows.count\nncol1 = ws.api.usedrange.columns.count\nprint(nrow1) # 2\nprint(ncol1) # 3\n​\nrng = ws.range('a1').expand()\nnrow2 = rng.last_cell.row\nncol2 = rng.last_cell.column\nprint(nrow2)  # 3\nprint(ncol2)  # 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 完整操作\n\n\n# 创建工作簿表\n\n#创建操作对象\napp=xw.app(visible=true,add_book=false)\n#visible  是否打开文件，在excel软件中显示\n#add_book 是否创建新的工作簿，即excel表(这个表是默认的，未命名状态)#创建一个工作簿，即excel表wb=app.books.add()\n#创建一个sheet工作表\nsht=wb.sheets['sheet1']\n#给单元格创建一个值\nsht.range('a1').value='我给了单元格a1一个值2'\n#保存excel,保存创建的工作簿，如果文件存在，则会覆盖原文件\n\n#给连续的行写入值,从a2开始按行写\nsht.range('a2').value=[1,2,3,4,56,7]  #sht.range('a2:f2').value=[1,2,3,4,56,7]\n#写入行,需要转置\nsht.range('b2').options(transpose=true).value=[22,33,44,55]\n#插入行列\nsht.range('a6').value=[[1,2],[3,4],[5,6]] #默认起点a6，插入三行两列\n\nwb.save(r'file/xlwings_excel2.xlsx')\n\n#如果资源不关闭，任然还是可以对工作簿进行操作\n#后写入的内容需要重新保存\n# sht.range('a6').value='我给了单元格a1一个值5'\n#wb.save()  #后面的保存不需要传入文件\n\n#关闭excel程序,\n# 如果不关闭资源，重复执行的话，则会生成一个默认的工作簿\nwb.close()\napp.quit()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 读取工作簿\n\n#创建操作对象\napp=xw.app(visible=true,add_book=false)\n#打开已有的工作簿\nwb=app.books.open(r'file/xlwings_excel2.xlsx')\n\n#打开sheet表，表不存在保存\nsht=wb.sheets['sheet1']\n#打印单元的值\na1=sht.range('a1').value\nprint(a1)\n#读一行的值,a2:f2\na2=sht.range('a2:f2').value\nprint(a2)  #列表的形式显示\n#读一列\nb2=sht.range('b2:b20').value\nprint(b2)   #列表显示，如果没有值，显示none\n\n#读一个数组，如果对表有写的操作，需要保存wb.save()\na6_b6=sht.range('a6:b8').value\nprint(a6_b6) #一个二维数组\n\n#关闭资源\nwb.close()\napp.quit()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 一些数据读取的操作\n\nimport xlwings as xw\nimport time\n\n#xlwings对表操作的性能测试\n\n#建立一个操作对象\napp=xw.app(visible=false,add_book=false)\n\nstart_open_time=time.time()\n\n#打开一个工作薄\nwb=app.books.open(r'file/test_企业微信群名单.xlsx')\nsht=wb.sheets[3]\nt1=time.time()\nprint(f'打开工作薄所需要的时间{t1-start_open_time}')  #1.82s\n\n'''\n结论：\n打开工作薄所需要的时间与工作薄的数据大小有关，和工作表的大小无关\nmember_20210901202429.xlsx  36w数据-18秒\ntest_企业微信群名单.xlsx   多个工作表：5万数据，1.8s\n'''\n\n#读取工作表的数据\n#按行加载读取\n#得到表中有值的最大行和列\ntable_info = sht.used_range\nnrows = table_info.last_cell.row\nncolumns = table_info.last_cell.column\nprint(f'表的最大行==》{nrows}，最大列==》{ncolumns}')\nb_values=[]\n#按行取值，循环加入列表中\n# for i in range(2,nrows+1):\n#     v=sht.range(f'b{i}').value\n#     if not v: break  # 值是空的，结束循环\n#     b_values.append(v)\n\n#一次性加载某一列值\nb_values=sht.range(f'b2:b{nrows+1}').value\nprint(len(b_values))   #54297\n\nt2=time.time()\nprint(f'按行取值所需要的时间{t2-t1}')\n\n'''\n结论：\n按行取值54297行，需要16.9s\n一次性加载54297行，需要0.18s\n\n在操作excel中，不要频繁的调用excel的range对象取值\n尽量一次性的把数据读取到python的内存中\n'''\n\n#资源关闭\nwb.close()\napp.quit()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Python-Word笔记",frontmatter:{title:"Python-Word笔记",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/python/note/word/",private:!0,categories:["软件开发"],tags:["软件开发","Python"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/07.Python/01.%E7%AC%94%E8%AE%B0/04.Python-Word%E7%AC%94%E8%AE%B0.html",relativePath:"06.软件开发/07.Python/01.笔记/04.Python-Word笔记.md",key:"v-089a3483",path:"/soft/python/note/word/",headers:[{level:2,title:"创建word文档",slug:"创建word文档",normalizedTitle:"创建word文档",charIndex:2},{level:2,title:"编辑已存在的word文档",slug:"编辑已存在的word文档",normalizedTitle:"编辑已存在的word文档",charIndex:1938}],headersStr:"创建word文档 编辑已存在的word文档",content:"# 创建word文档\n\n# 导包\nfrom docx import Document\n# docx.shared 中包含诸如\"字号\"，\"颜色\"，\"行间距\"等常用模块\nfrom docx.shared import Inches,Pt,RGBColor\nfrom docx.oxml.ns import qn\n\n\n#创建 Document 对象，相当于打开一个 word 文档\n#将整个文章看做是一个Document对象\ndocument = Document()\n\n# 对正文的样式进行设置\n# Normal指的是正文部分，还有很多其他选项如标题、表格、列表等，可遍历doc.styles进行查看\n# 设置正文颜色，大小，粗体\ndocument.styles['Normal'].font.color.rgb = RGBColor(0, 0, 255)\ndocument.styles['Normal'].font.size = Pt(12)\ndocument.styles['Normal'].font.bold = True\ndocument.styles['Normal'].font.name = u'宋体'\n# 对于中文字体必须加这一句\ndocument.styles['Normal']._element.rPr.rFonts.set(qn('w:eastAsia'), u'宋体')\n\n#向文档中添加一个标题，标题级别设置为0级，0，1，2...表示标题号大到小\ndocument.add_heading('网红书店', level=0)\n\n#向文档中添加一个段落，并将段落引用赋给变量 p（https://www.jianshu.com/p/7d2fcf976914）\n#- 每个Document包含许多个代表“段落”的Paragraph对象，存放在document.paragraphs中\n#可以使用 add_run 方法在P后面继续追加文字，并设置格式\n#- 每个Paragraph都有许多个代表\"行内元素\"的Run对象，存放在paragraph.runs中。\np = document.add_paragraph('实体书店承载着人们的情怀与梦想')\np.add_run('城市发展').bold = True # 加粗\np.add_run('也应为实体书店') \np.add_run('留下一席之地。').italic = True # 斜体\n\n#添加标题和段落，采用不同的形式\ndocument.add_heading('书店可以成为城市“文化会客厅”', level=1)\ndocument.add_paragraph('实体书店只有不断研究消费者需求',style=\"Intense Quote\")\ndocument.add_paragraph('不断创新', style='List Bullet')\ndocument.add_paragraph('才是发展之道', style='List Number')\n\n#添加图片，设置图片大小\ndocument.add_picture(r\"C:\\Users\\ABC\\Desktop\\12.png\", width=Inches(2.25))\n\n#添加表格，填入表格内容\ntable = document.add_table(rows=2, cols=2)\ntable.cell(0,0).text = \"1\"\ntable.cell(0,1).text = \"2\"\ntable.cell(1,0).text = \"3\"\ntable.cell(1,1).text = \"4\"\n\ntable=document.add_table(rows=2,cols=4,style='Table Grid')\nfor i in range(0,2):\n    for j in range(0,4):\n        table.cell(i,j).text=\"第{i}行{j}列\".format(i=i+1,j=j+1)\n\n# 插入一个分页符\ndocument.add_page_break()\n\n#保存文本\ndocument.save('demo.docx')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n\n\n\n# 编辑已存在的word文档\n\n# 导入\nfrom docx import Document\nfrom docx.shared import Inches,Pt,RGBColor\nfrom docx.oxml.ns import qn\nfrom docx.enum.style import WD_STYLE_TYPE #所有样式 （包括段落、文字、表格）的枚举常量集\nfrom docx.enum.text import WD_ALIGN_PARAGRAPH #对齐方式 的枚举常量集，不过在vscode中显示有错，事实又能够执行\nfrom docx.enum.text import WD_LINE_SPACING #行间距的单位枚举常量集（包括：单倍行距，1.5倍行距，固定 值，最小值等）\n\n\n# 从文件创建文档对象\ndocument = Document('./书店.docx')\n\n# 显示每段的内容\nfor p in document.paragraphs:\n    print(p.text)\n    #设置段落间距\n    paragraph_format = p.paragraph_format\n    # p.space_before=Pt(18)    #上行间距\n    # p.space_after=Pt(12)    #下行间距\n    paragraph_format.line_spacing=Pt(25)  #行距\n    paragraph_format.first_line_indent=document.styles['Normal'].font.size * 2 #段落首行缩进量\n    for run in p.runs:\n        run.font.bold = True\n        # run.font.italic = True\n        run.font.underline = True\n        # run.font.strike = True\n        # run.font.shadow = True\n        run.font.size = Pt(12)\n        # run.font.color.rgb = RGBColor(255,0,255)\n        run.font.name = \"黑体\"\n        # 设置像黑体这样的中文字体，必须添加下面 2 行代码\n        r = run._element.rPr.rFonts\n        r.set(qn(\"w:eastAsia\"),\"黑体\")\n\n# 修改正文样式\ndocument.styles['Normal'].font.color.rgb = RGBColor(0, 0, 255)\ndocument.styles['Normal'].font.size = Pt(20)\ndocument.styles['Normal'].font.bold = True\ndocument.styles['Normal'].font.name = u'楷体'\ndocument.styles['Normal']._element.rPr.rFonts.set(qn('w:eastAsia'), u'楷体')\n#document.styles['Normal'].paragraph_format.line_spacing_rule=WD_LINE_SPACING.EXACTLY #段落行距样式为固定值，必须指定行距值，否则就会变成 多倍行距 模式 \n#document.styles['Normal'].paragraph_format.line_spacing_rule=WD_LINE_SPACING.SINGLE #段落行距样式为单倍行距 模式\ndocument.styles['Normal'].paragraph_format.line_spacing_rule=WD_LINE_SPACING.MULTIPLE #多倍行距，此模式的具体行间距由文字字号大小决定，如果后面指定了行距值，此多倍行距设置会被忽略，变成固定值模式\ndocument.styles['Normal'].paragraph_format.line_spacing=Pt(22) #行距值\ndocument.styles['Normal'].paragraph_format.space_before=Pt(10) #段前距\ndocument.styles['Normal'].paragraph_format.space_after=Pt(20) #段后距\ndocument.styles['Normal'].paragraph_format.first_line_indent=document.styles['Normal'].font.size * 2 #段落首行缩进量\n\n\n# 添加段落\nparagraph = document.add_paragraph('实体书店承载着人们的情怀与梦想，城市发展也应为实体书店留下一席之地。')\nparagraph.bold = True # 加粗\n# 在此段落之前插入一个段落\nprior_paragraph = paragraph.insert_paragraph_before('---------------')\n\n# 保存文档\ndocument.save('书店.docx')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n修改前\n\n\n\n修改后\n\n",normalizedContent:"# 创建word文档\n\n# 导包\nfrom docx import document\n# docx.shared 中包含诸如\"字号\"，\"颜色\"，\"行间距\"等常用模块\nfrom docx.shared import inches,pt,rgbcolor\nfrom docx.oxml.ns import qn\n\n\n#创建 document 对象，相当于打开一个 word 文档\n#将整个文章看做是一个document对象\ndocument = document()\n\n# 对正文的样式进行设置\n# normal指的是正文部分，还有很多其他选项如标题、表格、列表等，可遍历doc.styles进行查看\n# 设置正文颜色，大小，粗体\ndocument.styles['normal'].font.color.rgb = rgbcolor(0, 0, 255)\ndocument.styles['normal'].font.size = pt(12)\ndocument.styles['normal'].font.bold = true\ndocument.styles['normal'].font.name = u'宋体'\n# 对于中文字体必须加这一句\ndocument.styles['normal']._element.rpr.rfonts.set(qn('w:eastasia'), u'宋体')\n\n#向文档中添加一个标题，标题级别设置为0级，0，1，2...表示标题号大到小\ndocument.add_heading('网红书店', level=0)\n\n#向文档中添加一个段落，并将段落引用赋给变量 p（https://www.jianshu.com/p/7d2fcf976914）\n#- 每个document包含许多个代表“段落”的paragraph对象，存放在document.paragraphs中\n#可以使用 add_run 方法在p后面继续追加文字，并设置格式\n#- 每个paragraph都有许多个代表\"行内元素\"的run对象，存放在paragraph.runs中。\np = document.add_paragraph('实体书店承载着人们的情怀与梦想')\np.add_run('城市发展').bold = true # 加粗\np.add_run('也应为实体书店') \np.add_run('留下一席之地。').italic = true # 斜体\n\n#添加标题和段落，采用不同的形式\ndocument.add_heading('书店可以成为城市“文化会客厅”', level=1)\ndocument.add_paragraph('实体书店只有不断研究消费者需求',style=\"intense quote\")\ndocument.add_paragraph('不断创新', style='list bullet')\ndocument.add_paragraph('才是发展之道', style='list number')\n\n#添加图片，设置图片大小\ndocument.add_picture(r\"c:\\users\\abc\\desktop\\12.png\", width=inches(2.25))\n\n#添加表格，填入表格内容\ntable = document.add_table(rows=2, cols=2)\ntable.cell(0,0).text = \"1\"\ntable.cell(0,1).text = \"2\"\ntable.cell(1,0).text = \"3\"\ntable.cell(1,1).text = \"4\"\n\ntable=document.add_table(rows=2,cols=4,style='table grid')\nfor i in range(0,2):\n    for j in range(0,4):\n        table.cell(i,j).text=\"第{i}行{j}列\".format(i=i+1,j=j+1)\n\n# 插入一个分页符\ndocument.add_page_break()\n\n#保存文本\ndocument.save('demo.docx')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n\n\n\n# 编辑已存在的word文档\n\n# 导入\nfrom docx import document\nfrom docx.shared import inches,pt,rgbcolor\nfrom docx.oxml.ns import qn\nfrom docx.enum.style import wd_style_type #所有样式 （包括段落、文字、表格）的枚举常量集\nfrom docx.enum.text import wd_align_paragraph #对齐方式 的枚举常量集，不过在vscode中显示有错，事实又能够执行\nfrom docx.enum.text import wd_line_spacing #行间距的单位枚举常量集（包括：单倍行距，1.5倍行距，固定 值，最小值等）\n\n\n# 从文件创建文档对象\ndocument = document('./书店.docx')\n\n# 显示每段的内容\nfor p in document.paragraphs:\n    print(p.text)\n    #设置段落间距\n    paragraph_format = p.paragraph_format\n    # p.space_before=pt(18)    #上行间距\n    # p.space_after=pt(12)    #下行间距\n    paragraph_format.line_spacing=pt(25)  #行距\n    paragraph_format.first_line_indent=document.styles['normal'].font.size * 2 #段落首行缩进量\n    for run in p.runs:\n        run.font.bold = true\n        # run.font.italic = true\n        run.font.underline = true\n        # run.font.strike = true\n        # run.font.shadow = true\n        run.font.size = pt(12)\n        # run.font.color.rgb = rgbcolor(255,0,255)\n        run.font.name = \"黑体\"\n        # 设置像黑体这样的中文字体，必须添加下面 2 行代码\n        r = run._element.rpr.rfonts\n        r.set(qn(\"w:eastasia\"),\"黑体\")\n\n# 修改正文样式\ndocument.styles['normal'].font.color.rgb = rgbcolor(0, 0, 255)\ndocument.styles['normal'].font.size = pt(20)\ndocument.styles['normal'].font.bold = true\ndocument.styles['normal'].font.name = u'楷体'\ndocument.styles['normal']._element.rpr.rfonts.set(qn('w:eastasia'), u'楷体')\n#document.styles['normal'].paragraph_format.line_spacing_rule=wd_line_spacing.exactly #段落行距样式为固定值，必须指定行距值，否则就会变成 多倍行距 模式 \n#document.styles['normal'].paragraph_format.line_spacing_rule=wd_line_spacing.single #段落行距样式为单倍行距 模式\ndocument.styles['normal'].paragraph_format.line_spacing_rule=wd_line_spacing.multiple #多倍行距，此模式的具体行间距由文字字号大小决定，如果后面指定了行距值，此多倍行距设置会被忽略，变成固定值模式\ndocument.styles['normal'].paragraph_format.line_spacing=pt(22) #行距值\ndocument.styles['normal'].paragraph_format.space_before=pt(10) #段前距\ndocument.styles['normal'].paragraph_format.space_after=pt(20) #段后距\ndocument.styles['normal'].paragraph_format.first_line_indent=document.styles['normal'].font.size * 2 #段落首行缩进量\n\n\n# 添加段落\nparagraph = document.add_paragraph('实体书店承载着人们的情怀与梦想，城市发展也应为实体书店留下一席之地。')\nparagraph.bold = true # 加粗\n# 在此段落之前插入一个段落\nprior_paragraph = paragraph.insert_paragraph_before('---------------')\n\n# 保存文档\ndocument.save('书店.docx')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n修改前\n\n\n\n修改后\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"处理Excel的类库",frontmatter:{title:"处理Excel的类库",date:"2023-09-02T21:00:00.000Z",permalink:"/soft/python/autowork/lib",private:!0,categories:["软件开发"],tags:["软件开发","Python"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/07.Python/03.%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96/01.%E5%A4%84%E7%90%86Excel%E7%9A%84%E7%B1%BB%E5%BA%93.html",relativePath:"06.软件开发/07.Python/03.办公自动化/01.处理Excel的类库.md",key:"v-ec63dd96",path:"/soft/python/autowork/lib/",headersStr:null,content:" * 90%的情况，用pandas一个库搞定\n\n * 如果想要控制格式、样式，可以用Pandas配合xlwings(安装了office)，Linux或者没有安装office配合openpyxl\n\n * 配合其他类库\n   \n   * 爬虫 requests/bs4\n   * Web网页 flask\n   * 数据可视化 matplotlib\n   * 机器学习 sklearn\n   * 与word互通 python-docx\n   * 发送邮件 smtplib",normalizedContent:" * 90%的情况，用pandas一个库搞定\n\n * 如果想要控制格式、样式，可以用pandas配合xlwings(安装了office)，linux或者没有安装office配合openpyxl\n\n * 配合其他类库\n   \n   * 爬虫 requests/bs4\n   * web网页 flask\n   * 数据可视化 matplotlib\n   * 机器学习 sklearn\n   * 与word互通 python-docx\n   * 发送邮件 smtplib",charsets:{cjk:!0},lastUpdated:"2023/09/09, 10:35:20",lastUpdatedTimestamp:169422692e4},{title:"批量新建Excel文件",frontmatter:{title:"批量新建Excel文件",date:"2023-09-02T21:00:00.000Z",permalink:"/soft/python/autowork/batnew",private:!0,categories:["软件开发"],tags:["软件开发","Python"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/07.Python/03.%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96/02.%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86Excel%E6%96%87%E4%BB%B6.html",relativePath:"06.软件开发/07.Python/03.办公自动化/02.批量处理Excel文件.md",key:"v-4d28f511",path:"/soft/python/autowork/batnew/",headers:[{level:2,title:"批量新建Excel",slug:"批量新建excel",normalizedTitle:"批量新建excel",charIndex:2},{level:2,title:"批量打开Excel",slug:"批量打开excel",normalizedTitle:"批量打开excel",charIndex:214},{level:2,title:"批量重命名工作表",slug:"批量重命名工作表",normalizedTitle:"批量重命名工作表",charIndex:437},{level:2,title:"合并Excel文件内容到一个文件",slug:"合并excel文件内容到一个文件",normalizedTitle:"合并excel文件内容到一个文件",charIndex:684},{level:2,title:"合并多个Sheet内容",slug:"合并多个sheet内容",normalizedTitle:"合并多个sheet内容",charIndex:1011},{level:2,title:"拆分Excel到多个文件",slug:"拆分excel到多个文件",normalizedTitle:"拆分excel到多个文件",charIndex:1455},{level:2,title:"对比两个Excel",slug:"对比两个excel",normalizedTitle:"对比两个excel",charIndex:1694},{level:2,title:"拆分一列到多列",slug:"拆分一列到多列",normalizedTitle:"拆分一列到多列",charIndex:2225},{level:2,title:"提取所有表唯一值",slug:"提取所有表唯一值",normalizedTitle:"提取所有表唯一值",charIndex:2955},{level:2,title:"批量分类汇总",slug:"批量分类汇总",normalizedTitle:"批量分类汇总",charIndex:3205},{level:2,title:"多个文件VLOOKUP",slug:"多个文件vlookup",normalizedTitle:"多个文件vlookup",charIndex:3811}],headersStr:"批量新建Excel 批量打开Excel 批量重命名工作表 合并Excel文件内容到一个文件 合并多个Sheet内容 拆分Excel到多个文件 对比两个Excel 拆分一列到多列 提取所有表唯一值 批量分类汇总 多个文件VLOOKUP",content:'# 批量新建Excel\n\nimport xlwings as xw\n\napp = xw.App(visible=True, add_book=False)\nfor dept in ["技术部", "销售部", "运营部", "财务部"]:\n    workbook = app.books.add()\n    workbook.save(f"./部门业绩-{dept}.xlsx")\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 批量打开Excel\n\nimport os\nimport xlwings as xw\n\napp = xw.App(visible=True, add_book=False)\n\nobj_dir = "."\nfor file in os.listdir(obj_dir):\n    if file.endswith(".xlsx"):\n        app.books.open(file)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 批量重命名工作表\n\nimport xlwings as xw\napp = xw.App(visible=False, add_book=False)\n\nworkbook = app.books.open("统计表.xlsx")\nfor sheet in workbook.sheets:\n    sheet.name = sheet.name.replace("销售", "")\n\nworkbook.save()\napp.quit()\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 合并Excel文件内容到一个文件\n\nimport pandas as pd\nimport os\n\ndata_list = []\ndata_all = []\nfor file in os.listdir("."):\n    if file.startswith("产品统计表-") and file.endswith(".xlsx"):\n        data_list.append(pd.read_excel(file))\n\ndata_all = pd.concat(data_list)\ndata_all.to_excel("产品统计表.xlsx", index=False)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 合并多个Sheet内容\n\n\n\nimport pandas as pd\nimport xlwings as xw\n\ndf_list = pd.read_excel("采购表.xlsx", sheet_name=None)\ndf_all = pd.concat(df_list.values())\n\napp = xw.App(visible=False, add_book=False)\nworkbook = app.books.open("采购表.xlsx")\nworkbook.sheets.add("汇总表", before=workbook.sheets[0])\nworkbook.sheets["汇总表"].range("A1").options(index=False).value = df_all\n\nworkbook.save()\nworkbook.close()\napp.quit()\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 拆分Excel到多个文件\n\n\n\nimport pandas as pd\n\ndf = pd.read_excel("采购表.xlsx")\n\nproducts = df["名称"].unique()\n\nfor product in products:\n    df_product = df[df["名称"] == product]\n    df_product.to_excel(f"采购统计表-{product}.xlsx")\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 对比两个Excel\n\nimport xlwings as xw\n\napp = xw.App(visible=False, add_book=False)\nbook = app.books.open("期末考试-学生成绩表.xlsx")\nbook_backup = app.books.open("期末考试-学生成绩表 - 备份.xlsx")\n\nfor row in book.sheets[0].range("A1").expand():\n    for cell in row:\n        backup_cell = book_backup.sheets[0].range(cell.address)\n        if cell.value != backup_cell.value:\n            cell.color = backup_cell.color = (255, 0, 0)\nbook.save()\nbook.close()\nbook_backup.save()\nbook_backup.close()\napp.quit()\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 拆分一列到多列\n\n\n\nimport xlwings as xw\nimport pandas as pd\nimport os\n\napp = xw.App(visible=False, add_book=False)\ndirectory = "产品记录表"\nfor name in os.listdir(directory):\n    if name.endswith(".xlsx"):\n        workbook = app.books.open(os.path.join(directory, name))\n        worksheet = workbook.sheets["规格表"]\n        df = worksheet.range("A1").options(pd.DataFrame, expand=\'table\').value\n        split_columns = df["规格"].str.split("*", expand=True)\n        df["长"] = split_columns[0]\n        df["宽"] = split_columns[1]\n        df["高"] = split_columns[2]\n        df.drop(labels=["规格"], axis=1, inplace=True)\n        worksheet.range("A1").value = df\n        workbook.save()\napp.quit()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 提取所有表唯一值\n\nimport pandas as pd\ndf_list = pd.read_excel("产品统计表.xlsx", sheet_name=None)\ndf_all = pd.concat(df_list.values())\ndf_names = pd.DataFrame({"物品": list(df_all["名称"].unique())})\ndf_names.to_excel("产品统计表-物品列表.xlsx", index=False)\n\n\n1\n2\n3\n4\n5\n\n\n\n# 批量分类汇总\n\nimport pandas as pd\nimport os\nimport xlwings as xw\n\napp = xw.App(visible=False, add_book=False)\nfor file in os.listdir("销售表"):\n    if file.endswith(".xlsx") and not file.startswith("~$"):\n        workbook = app.books.open(f"销售表/{file}")\n        worksheet = workbook.sheets[0]\n        df = worksheet.range("A1").options(pd.DataFrame, expand=\'table\').value\n        df["单价"] = df["单价"].astype(float)\n        df_agg = df.groupby("名称")["单价"].sum()\n        worksheet.range("D1").value = df_agg\n        workbook.save()\n        workbook.close()\napp.quit()\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 多个文件VLOOKUP\n\n',normalizedContent:'# 批量新建excel\n\nimport xlwings as xw\n\napp = xw.app(visible=true, add_book=false)\nfor dept in ["技术部", "销售部", "运营部", "财务部"]:\n    workbook = app.books.add()\n    workbook.save(f"./部门业绩-{dept}.xlsx")\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 批量打开excel\n\nimport os\nimport xlwings as xw\n\napp = xw.app(visible=true, add_book=false)\n\nobj_dir = "."\nfor file in os.listdir(obj_dir):\n    if file.endswith(".xlsx"):\n        app.books.open(file)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 批量重命名工作表\n\nimport xlwings as xw\napp = xw.app(visible=false, add_book=false)\n\nworkbook = app.books.open("统计表.xlsx")\nfor sheet in workbook.sheets:\n    sheet.name = sheet.name.replace("销售", "")\n\nworkbook.save()\napp.quit()\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 合并excel文件内容到一个文件\n\nimport pandas as pd\nimport os\n\ndata_list = []\ndata_all = []\nfor file in os.listdir("."):\n    if file.startswith("产品统计表-") and file.endswith(".xlsx"):\n        data_list.append(pd.read_excel(file))\n\ndata_all = pd.concat(data_list)\ndata_all.to_excel("产品统计表.xlsx", index=false)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 合并多个sheet内容\n\n\n\nimport pandas as pd\nimport xlwings as xw\n\ndf_list = pd.read_excel("采购表.xlsx", sheet_name=none)\ndf_all = pd.concat(df_list.values())\n\napp = xw.app(visible=false, add_book=false)\nworkbook = app.books.open("采购表.xlsx")\nworkbook.sheets.add("汇总表", before=workbook.sheets[0])\nworkbook.sheets["汇总表"].range("a1").options(index=false).value = df_all\n\nworkbook.save()\nworkbook.close()\napp.quit()\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 拆分excel到多个文件\n\n\n\nimport pandas as pd\n\ndf = pd.read_excel("采购表.xlsx")\n\nproducts = df["名称"].unique()\n\nfor product in products:\n    df_product = df[df["名称"] == product]\n    df_product.to_excel(f"采购统计表-{product}.xlsx")\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 对比两个excel\n\nimport xlwings as xw\n\napp = xw.app(visible=false, add_book=false)\nbook = app.books.open("期末考试-学生成绩表.xlsx")\nbook_backup = app.books.open("期末考试-学生成绩表 - 备份.xlsx")\n\nfor row in book.sheets[0].range("a1").expand():\n    for cell in row:\n        backup_cell = book_backup.sheets[0].range(cell.address)\n        if cell.value != backup_cell.value:\n            cell.color = backup_cell.color = (255, 0, 0)\nbook.save()\nbook.close()\nbook_backup.save()\nbook_backup.close()\napp.quit()\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 拆分一列到多列\n\n\n\nimport xlwings as xw\nimport pandas as pd\nimport os\n\napp = xw.app(visible=false, add_book=false)\ndirectory = "产品记录表"\nfor name in os.listdir(directory):\n    if name.endswith(".xlsx"):\n        workbook = app.books.open(os.path.join(directory, name))\n        worksheet = workbook.sheets["规格表"]\n        df = worksheet.range("a1").options(pd.dataframe, expand=\'table\').value\n        split_columns = df["规格"].str.split("*", expand=true)\n        df["长"] = split_columns[0]\n        df["宽"] = split_columns[1]\n        df["高"] = split_columns[2]\n        df.drop(labels=["规格"], axis=1, inplace=true)\n        worksheet.range("a1").value = df\n        workbook.save()\napp.quit()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 提取所有表唯一值\n\nimport pandas as pd\ndf_list = pd.read_excel("产品统计表.xlsx", sheet_name=none)\ndf_all = pd.concat(df_list.values())\ndf_names = pd.dataframe({"物品": list(df_all["名称"].unique())})\ndf_names.to_excel("产品统计表-物品列表.xlsx", index=false)\n\n\n1\n2\n3\n4\n5\n\n\n\n# 批量分类汇总\n\nimport pandas as pd\nimport os\nimport xlwings as xw\n\napp = xw.app(visible=false, add_book=false)\nfor file in os.listdir("销售表"):\n    if file.endswith(".xlsx") and not file.startswith("~$"):\n        workbook = app.books.open(f"销售表/{file}")\n        worksheet = workbook.sheets[0]\n        df = worksheet.range("a1").options(pd.dataframe, expand=\'table\').value\n        df["单价"] = df["单价"].astype(float)\n        df_agg = df.groupby("名称")["单价"].sum()\n        worksheet.range("d1").value = df_agg\n        workbook.save()\n        workbook.close()\napp.quit()\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 多个文件vlookup\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"批量打开目录下所有Excel",frontmatter:{title:"批量打开目录下所有Excel",date:"2023-09-02T21:00:00.000Z",permalink:"/soft/python/autowork/batopen",private:!0,categories:["软件开发"],tags:["软件开发","Python"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/07.Python/03.%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96/03.%E6%89%B9%E9%87%8F%E6%89%93%E5%BC%80%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%89%80%E6%9C%89Excel.html",relativePath:"06.软件开发/07.Python/03.办公自动化/03.批量打开目录下所有Excel.md",key:"v-6309016c",path:"/soft/python/autowork/batopen/",headersStr:null,content:'# -*- ciding: utf-8 -*-\n# time:   2023/9/2 0002\n# file:   01批量新建Excel.py\n# author: icaiwei\n\nimport xlwings as xw\n\napp = xw.App(visible=True, add_book=False)\nfor dept in ["技术部", "销售部", "运营部", "财务部"]:\n    workbook = app.books.add()\n    workbook.save(f"./部门业绩-{dept}.xlsx")\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',normalizedContent:'# -*- ciding: utf-8 -*-\n# time:   2023/9/2 0002\n# file:   01批量新建excel.py\n# author: icaiwei\n\nimport xlwings as xw\n\napp = xw.app(visible=true, add_book=false)\nfor dept in ["技术部", "销售部", "运营部", "财务部"]:\n    workbook = app.books.add()\n    workbook.save(f"./部门业绩-{dept}.xlsx")\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',charsets:{cjk:!0},lastUpdated:"2023/09/09, 10:35:20",lastUpdatedTimestamp:169422692e4},{title:"pip使用",frontmatter:{title:"pip使用",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/python/pip/",private:!0,categories:["软件开发"],tags:["软件开发","Python"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/07.Python/10.pip%E4%BD%BF%E7%94%A8.html",relativePath:"06.软件开发/07.Python/10.pip使用.md",key:"v-447ea980",path:"/soft/python/pip/",headers:[{level:2,title:"查看现有默认pip安装源",slug:"查看现有默认pip安装源",normalizedTitle:"查看现有默认pip安装源",charIndex:2},{level:2,title:"临时引用",slug:"临时引用",normalizedTitle:"临时引用",charIndex:41},{level:2,title:"修改源",slug:"修改源",normalizedTitle:"修改源",charIndex:118},{level:2,title:"修改pip install的第三方包默认安装路径",slug:"修改pip-install的第三方包默认安装路径",normalizedTitle:"修改pip install的第三方包默认安装路径",charIndex:386},{level:2,title:"pip is configured with locations that require TLS/SSL",slug:"pip-is-configured-with-locations-that-require-tls-ssl",normalizedTitle:"pip is configured with locations that require tls/ssl",charIndex:909}],headersStr:"查看现有默认pip安装源 临时引用 修改源 修改pip install的第三方包默认安装路径 pip is configured with locations that require TLS/SSL",content:'# 查看现有默认pip安装源\n\npip config list\n\n\n1\n\n\n\n# 临时引用\n\npip install numpy -i https://pypi.tuna.tsinghua.edu.cn/simple\n\n\n1\n\n\n\n# 修改源\n\nwin+r快捷键启动运行窗口输入%HOMEPATH%快速查看当前用户主目录是否有pip文件夹，若无则新建pip文件夹\n进入pip文件夹，新建一个pip.ini文件\n编辑pip.ini文件写入如下内容，此处使用清华镜像源，也可替换为其他镜像源\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n[install]\ntrusted-host = https://pypi.tuna.tsinghua.edu.cn\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 修改pip install的第三方包默认安装路径\n\n修改Python安装路径下的site.py文件\n我的路径是C:\\Program Files(x86)\\Python38\\Lib\\site.py\n把USER_SITE和USER_BASE修改为你想要的位置，USER_SITE是实际安装包的位置。\n# 修改前：\nUSER_SITE = None\nUSER_BASE = None\n\n# 修改后：\nUSER_SITE = "D:/Cache/Python/Python38/site-packages"\nUSER_BASE = "D:/Cache/Python"\n如果保存时提示“拒绝访问”，则先给site.py文件配写入和修改权限\n（如果上面配置完还是安装到默认位置）在user目录下新建pip文件夹，里面新建pip.ini文件，内容写\n\n[global]\nindex-url=http://mirrors.aliyun.com/pypi/simple/\ntarget=D:/Cache/Python/Python38/site-packages\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# pip is configured with locations that require TLS/SSL\n\n解决方法为到https://slproweb.com/products/Win32OpenSSL.html上下载winopessl，直接下载第一个MSI安装即可\n\n安装MSI的过程中，记住安装路径选择：Anaconda\\Anaconda3\\Lib\\site-packages,然后一直默认下一步，最后一步选第二个',normalizedContent:'# 查看现有默认pip安装源\n\npip config list\n\n\n1\n\n\n\n# 临时引用\n\npip install numpy -i https://pypi.tuna.tsinghua.edu.cn/simple\n\n\n1\n\n\n\n# 修改源\n\nwin+r快捷键启动运行窗口输入%homepath%快速查看当前用户主目录是否有pip文件夹，若无则新建pip文件夹\n进入pip文件夹，新建一个pip.ini文件\n编辑pip.ini文件写入如下内容，此处使用清华镜像源，也可替换为其他镜像源\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n[install]\ntrusted-host = https://pypi.tuna.tsinghua.edu.cn\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 修改pip install的第三方包默认安装路径\n\n修改python安装路径下的site.py文件\n我的路径是c:\\program files(x86)\\python38\\lib\\site.py\n把user_site和user_base修改为你想要的位置，user_site是实际安装包的位置。\n# 修改前：\nuser_site = none\nuser_base = none\n\n# 修改后：\nuser_site = "d:/cache/python/python38/site-packages"\nuser_base = "d:/cache/python"\n如果保存时提示“拒绝访问”，则先给site.py文件配写入和修改权限\n（如果上面配置完还是安装到默认位置）在user目录下新建pip文件夹，里面新建pip.ini文件，内容写\n\n[global]\nindex-url=http://mirrors.aliyun.com/pypi/simple/\ntarget=d:/cache/python/python38/site-packages\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# pip is configured with locations that require tls/ssl\n\n解决方法为到https://slproweb.com/products/win32openssl.html上下载winopessl，直接下载第一个msi安装即可\n\n安装msi的过程中，记住安装路径选择：anaconda\\anaconda3\\lib\\site-packages,然后一直默认下一步，最后一步选第二个',charsets:{cjk:!0},lastUpdated:"2023/09/09, 10:35:20",lastUpdatedTimestamp:169422692e4},{title:"PyQt安装",frontmatter:{title:"PyQt安装",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/python/pyqt/install/",private:!0,categories:["软件开发"],tags:["软件开发","Python"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/07.Python/99.PyQt%E5%AE%89%E8%A3%85.html",relativePath:"06.软件开发/07.Python/99.PyQt安装.md",key:"v-8333508a",path:"/soft/python/pyqt/install/",headers:[{level:2,title:"安装依赖",slug:"安装依赖",normalizedTitle:"安装依赖",charIndex:2},{level:2,title:"添加额外工具",slug:"添加额外工具",normalizedTitle:"添加额外工具",charIndex:46}],headersStr:"安装依赖 添加额外工具",content:"# 安装依赖\n\npip install pyqt5 pyqt-tools\n\n\n1\n\n\n\n# 添加额外工具\n\n在Setting中添加Extend Tools\n\nQT Designer\n\n\n\nQtUIC\n\n\n\nqrcToPy\n\n",normalizedContent:"# 安装依赖\n\npip install pyqt5 pyqt-tools\n\n\n1\n\n\n\n# 添加额外工具\n\n在setting中添加extend tools\n\nqt designer\n\n\n\nqtuic\n\n\n\nqrctopy\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Qt笔记",frontmatter:{title:"Qt笔记",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/note/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/09.Qt/01.Qt%E7%AC%94%E8%AE%B0.html",relativePath:"06.软件开发/09.Qt/01.Qt笔记.md",key:"v-1168c68c",path:"/soft/qt/note/",headers:[{level:2,title:"设置主题风格",slug:"设置主题风格",normalizedTitle:"设置主题风格",charIndex:2},{level:2,title:"获取树形节点名称",slug:"获取树形节点名称",normalizedTitle:"获取树形节点名称",charIndex:480},{level:2,title:"限制lineEdit",slug:"限制lineedit",normalizedTitle:"限制lineedit",charIndex:736},{level:2,title:"字符串与数字互转",slug:"字符串与数字互转",normalizedTitle:"字符串与数字互转",charIndex:924}],headersStr:"设置主题风格 获取树形节点名称 限制lineEdit 字符串与数字互转",content:'# 设置主题风格\n\n#include "mainwindow.h"\n\n#include <QApplication>\n#include <QStyleFactory>\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n    QApplication::setStyle(QStyleFactory::create("Fusion"));\n    MainWindow w;\n    w.show();\n    return a.exec();\n}\n\nTypically they include "windows" and "fusion". \nDepending on the platform, "windowsvista" and "macintosh" may be available. \nNote that keys are case insensitive.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 获取树形节点名称\n\nvoid onSelectItem(QTreeWidgetItem *item, int column)\n{\n    // 获取节点名\n    QString node = item->text(column);\n    qDebug()<<node<<endl;\n}\n\n在MainWindow中连接\nconnect(ui->treeWidget,&QTreeWidget::itemClicked,this,&onSelectItem);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 限制lineEdit\n\nQRegExp regx("[1-9][0-9]+$"); //第一个字符为数字1-9，后面为数字\nQValidator *validator = new QRegExpValidator(regx, ui->lineEdit_pin);\nui->lineEdit_pin->setValidator(validator);\n\n\n1\n2\n3\n\n\n\n# 字符串与数字互转\n\nbool ok = false;\nQString str1 = "10";\nint num1 = str1.toInt(&ok, 16);\n\nint num2 = 0x36;\nQString str = QString::number(num2, 16);\n或\nQString("%1").arg(i);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n',normalizedContent:'# 设置主题风格\n\n#include "mainwindow.h"\n\n#include <qapplication>\n#include <qstylefactory>\n\nint main(int argc, char *argv[])\n{\n    qapplication a(argc, argv);\n    qapplication::setstyle(qstylefactory::create("fusion"));\n    mainwindow w;\n    w.show();\n    return a.exec();\n}\n\ntypically they include "windows" and "fusion". \ndepending on the platform, "windowsvista" and "macintosh" may be available. \nnote that keys are case insensitive.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 获取树形节点名称\n\nvoid onselectitem(qtreewidgetitem *item, int column)\n{\n    // 获取节点名\n    qstring node = item->text(column);\n    qdebug()<<node<<endl;\n}\n\n在mainwindow中连接\nconnect(ui->treewidget,&qtreewidget::itemclicked,this,&onselectitem);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 限制lineedit\n\nqregexp regx("[1-9][0-9]+$"); //第一个字符为数字1-9，后面为数字\nqvalidator *validator = new qregexpvalidator(regx, ui->lineedit_pin);\nui->lineedit_pin->setvalidator(validator);\n\n\n1\n2\n3\n\n\n\n# 字符串与数字互转\n\nbool ok = false;\nqstring str1 = "10";\nint num1 = str1.toint(&ok, 16);\n\nint num2 = 0x36;\nqstring str = qstring::number(num2, 16);\n或\nqstring("%1").arg(i);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"类型互换",frontmatter:{title:"类型互换",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/convert/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/09.Qt/02.%E7%B1%BB%E5%9E%8B%E4%BA%92%E6%8D%A2.html",relativePath:"06.软件开发/09.Qt/02.类型互换.md",key:"v-09351090",path:"/soft/qt/convert/",headers:[{level:2,title:"Int 转 QString",slug:"int-转-qstring",normalizedTitle:"int 转 qstring",charIndex:2},{level:2,title:"QString 转 Int",slug:"qstring-转-int",normalizedTitle:"qstring 转 int",charIndex:130},{level:2,title:"QByteArray 转 QString",slug:"qbytearray-转-qstring",normalizedTitle:"qbytearray 转 qstring",charIndex:226},{level:2,title:"QString 转 QByteArray",slug:"qstring-转-qbytearray",normalizedTitle:"qstring 转 qbytearray",charIndex:343},{level:2,title:"QString 转 string",slug:"qstring-转-string",normalizedTitle:"qstring 转 string",charIndex:440},{level:2,title:"string 转QString",slug:"string-转qstring",normalizedTitle:"string 转qstring",charIndex:527},{level:2,title:"char 转 QString",slug:"char-转-qstring",normalizedTitle:"char 转 qstring",charIndex:626},{level:2,title:"QString 转 char",slug:"qstring-转-char",normalizedTitle:"qstring 转 char",charIndex:741},{level:2,title:"结构体转QByteArray",slug:"结构体转qbytearray",normalizedTitle:"结构体转qbytearray",charIndex:869},{level:2,title:"QByteArray转结构体",slug:"qbytearray转结构体",normalizedTitle:"qbytearray转结构体",charIndex:1076}],headersStr:"Int 转 QString QString 转 Int QByteArray 转 QString QString 转 QByteArray QString 转 string string 转QString char 转 QString QString 转 char 结构体转QByteArray QByteArray转结构体",content:'# Int 转 QString\n\nint number = 101;\nQString strnumber = QString("%1").arg(number);\nqDebug()<<"strnumber:"<<strnumber;\n\n\n1\n2\n3\n\n\n\n# QString 转 Int\n\nint numberstr = strnumber.toInt();\nqDebug()<<"numberstr:"<<numberstr;\n\n\n1\n2\n\n\n\n# QByteArray 转 QString\n\nQByteArray ba = "asdasd";\nQString strba = QString(ba);\nqDebug()<<"strba:"<<strba;\n\n\n1\n2\n3\n\n\n\n# QString 转 QByteArray\n\nQByteArray bastr = strba.toLatin1();\nqDebug()<<"bastr:"<<bastr;\n\n\n1\n2\n\n\n\n# QString 转 string\n\nQString qstr;\nstd::string = QString::toStdString(string);\n\n\n1\n2\n\n\n\n# string 转QString\n\nstd::string = str_info;\nQString qstr = QString::fromStdString(string);\n\n\n1\n2\n\n\n\n# char 转 QString\n\nchar* ch = "hello";\nQString strch = QString("%1").arg(ch);\nqDebug()<<"strch:"<<strch;\n\n\n1\n2\n3\n\n\n\n# QString 转 char\n\nstd::string str = strch.toStdString();\nconst char* chstr = str.c_str();\nqDebug()<<"chstr:"<<chstr;\n\n\n1\n2\n3\n\n\n\n# 结构体转QByteArray\n\nstruct Head head;\n//填充数据\nhead.fileName = m_fileName;\nhead.fileSize = m_fileSize;\n\nQByteArray data;\ndata.resize(sizeof(Head));\nmemcpy(data.data(), &head, sizeof(Head));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# QByteArray转结构体\n\nQByteArray array = "xxxx";\nHead head;\nchar *src = array.data();\nmemcpy(&head, src, sizeof(Head));\n\n\n1\n2\n3\n4\n',normalizedContent:'# int 转 qstring\n\nint number = 101;\nqstring strnumber = qstring("%1").arg(number);\nqdebug()<<"strnumber:"<<strnumber;\n\n\n1\n2\n3\n\n\n\n# qstring 转 int\n\nint numberstr = strnumber.toint();\nqdebug()<<"numberstr:"<<numberstr;\n\n\n1\n2\n\n\n\n# qbytearray 转 qstring\n\nqbytearray ba = "asdasd";\nqstring strba = qstring(ba);\nqdebug()<<"strba:"<<strba;\n\n\n1\n2\n3\n\n\n\n# qstring 转 qbytearray\n\nqbytearray bastr = strba.tolatin1();\nqdebug()<<"bastr:"<<bastr;\n\n\n1\n2\n\n\n\n# qstring 转 string\n\nqstring qstr;\nstd::string = qstring::tostdstring(string);\n\n\n1\n2\n\n\n\n# string 转qstring\n\nstd::string = str_info;\nqstring qstr = qstring::fromstdstring(string);\n\n\n1\n2\n\n\n\n# char 转 qstring\n\nchar* ch = "hello";\nqstring strch = qstring("%1").arg(ch);\nqdebug()<<"strch:"<<strch;\n\n\n1\n2\n3\n\n\n\n# qstring 转 char\n\nstd::string str = strch.tostdstring();\nconst char* chstr = str.c_str();\nqdebug()<<"chstr:"<<chstr;\n\n\n1\n2\n3\n\n\n\n# 结构体转qbytearray\n\nstruct head head;\n//填充数据\nhead.filename = m_filename;\nhead.filesize = m_filesize;\n\nqbytearray data;\ndata.resize(sizeof(head));\nmemcpy(data.data(), &head, sizeof(head));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# qbytearray转结构体\n\nqbytearray array = "xxxx";\nhead head;\nchar *src = array.data();\nmemcpy(&head, src, sizeof(head));\n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"字符串",frontmatter:{title:"字符串",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/string/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/09.Qt/03.%E5%AD%97%E7%AC%A6%E4%B8%B2.html",relativePath:"06.软件开发/09.Qt/03.字符串.md",key:"v-6fcf56df",path:"/soft/qt/string/",headers:[{level:2,title:"字符串分割",slug:"字符串分割",normalizedTitle:"字符串分割",charIndex:2},{level:2,title:"字符串匹配子串替换",slug:"字符串匹配子串替换",normalizedTitle:"字符串匹配子串替换",charIndex:387},{level:2,title:"字符串截取",slug:"字符串截取",normalizedTitle:"字符串截取",charIndex:561},{level:2,title:"字符串拼接",slug:"字符串拼接",normalizedTitle:"字符串拼接",charIndex:720},{level:2,title:"获取字符在字符中的位置",slug:"获取字符在字符中的位置",normalizedTitle:"获取字符在字符中的位置",charIndex:875},{level:2,title:"可以检测字符串是不是以某个特定的串开始或结尾",slug:"可以检测字符串是不是以某个特定的串开始或结尾",normalizedTitle:"可以检测字符串是不是以某个特定的串开始或结尾",charIndex:1175},{level:2,title:"字符串替换函数",slug:"字符串替换函数",normalizedTitle:"字符串替换函数",charIndex:1350}],headersStr:"字符串分割 字符串匹配子串替换 字符串截取 字符串拼接 获取字符在字符中的位置 可以检测字符串是不是以某个特定的串开始或结尾 字符串替换函数",content:'# 字符串分割\n\nQString tmpstr = "吃葡萄不吐葡萄皮，不吃葡萄到吐葡萄皮";\nQStringList list = tmpstr.split("葡萄");              \n//QStringList QString数组，用则加头文件#include <QStringList>，用split方法以“葡萄”分割成为一个数组\nfor (int var = 0; var < list.length(); ++var) {\n    qDebug()<<"list["<<var<<"]="<<list[var];\n    //输出  list[ 0 ]="吃  list[ 1 ]= "不吐"    list[ 2 ]= "皮，不吃"  list[ 3 ]= "到吐"   list[ 4 ]= "皮"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 字符串匹配子串替换\n\nQString tmpstr_2 = "吃葡萄不吐葡萄皮，不吃葡萄到吐葡萄皮";\ntmpstr_2 = tmpstr_2.replace("葡萄", "荔枝");            //tmpstr_2中的“葡萄”替换为“荔枝”\nqDebug()<<"tmpstr_2："<<tmpstr_2;\n\n\n1\n2\n3\n\n\n\n# 字符串截取\n\nQString x = "Nine pineapples";\nQString y = x.mid(5, 4);            // y == "pine"\nQString z = x.mid(5);               // z == "pineapples"\n\n\n1\n2\n3\n\n\n\n# 字符串拼接\n\nQString也重载的+和+=,这两个运算符可以把两个字符串连接到一起\nQString的append()函数则提供了类似的操作\n    \nstr = "User: ";  \nstr.append(userName);  \nstr.append("\\n");\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 获取字符在字符中的位置\n\n//存在lastIndexOf（）函数，返回字符串的最后一次出现的索引?  \nQString x = "sticky question";  \nQString y = "sti";  \nx.indexOf(y);               // returns 0  \nx.indexOf(y, 1);            // returns 10  \nx.indexOf(y, 10);           // returns 10  \nx.indexOf(y, 11);           // returns -1\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 可以检测字符串是不是以某个特定的串开始或结尾\n\nif (url.startsWith("http:") && url.endsWith(".png"))  \n{  }\n\n这段代码等价于\n\nif (url.left(5) == "http:" && url.right(4) == ".png") \n{  }\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 字符串替换函数\n\nreplace()\n\ntrimmed()函数去除字符串两侧的空白字符(注意，空白字符包括空格、Tab以及换行符，而不仅仅是空格);\ntoLower()和toUpper()函数会将字符串转换成小写大写字符串；\nremove()和 insert()函数提供了删除和插入字符串的能力;\nsimplified()函数可以将串中的所有连续的空白字符替换成一个，并且把两端的空白字符去除，例如"   \\t   ”会返回一个空格" "。\n\n\n1\n2\n3\n4\n5\n6\n',normalizedContent:'# 字符串分割\n\nqstring tmpstr = "吃葡萄不吐葡萄皮，不吃葡萄到吐葡萄皮";\nqstringlist list = tmpstr.split("葡萄");              \n//qstringlist qstring数组，用则加头文件#include <qstringlist>，用split方法以“葡萄”分割成为一个数组\nfor (int var = 0; var < list.length(); ++var) {\n    qdebug()<<"list["<<var<<"]="<<list[var];\n    //输出  list[ 0 ]="吃  list[ 1 ]= "不吐"    list[ 2 ]= "皮，不吃"  list[ 3 ]= "到吐"   list[ 4 ]= "皮"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 字符串匹配子串替换\n\nqstring tmpstr_2 = "吃葡萄不吐葡萄皮，不吃葡萄到吐葡萄皮";\ntmpstr_2 = tmpstr_2.replace("葡萄", "荔枝");            //tmpstr_2中的“葡萄”替换为“荔枝”\nqdebug()<<"tmpstr_2："<<tmpstr_2;\n\n\n1\n2\n3\n\n\n\n# 字符串截取\n\nqstring x = "nine pineapples";\nqstring y = x.mid(5, 4);            // y == "pine"\nqstring z = x.mid(5);               // z == "pineapples"\n\n\n1\n2\n3\n\n\n\n# 字符串拼接\n\nqstring也重载的+和+=,这两个运算符可以把两个字符串连接到一起\nqstring的append()函数则提供了类似的操作\n    \nstr = "user: ";  \nstr.append(username);  \nstr.append("\\n");\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 获取字符在字符中的位置\n\n//存在lastindexof（）函数，返回字符串的最后一次出现的索引?  \nqstring x = "sticky question";  \nqstring y = "sti";  \nx.indexof(y);               // returns 0  \nx.indexof(y, 1);            // returns 10  \nx.indexof(y, 10);           // returns 10  \nx.indexof(y, 11);           // returns -1\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 可以检测字符串是不是以某个特定的串开始或结尾\n\nif (url.startswith("http:") && url.endswith(".png"))  \n{  }\n\n这段代码等价于\n\nif (url.left(5) == "http:" && url.right(4) == ".png") \n{  }\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 字符串替换函数\n\nreplace()\n\ntrimmed()函数去除字符串两侧的空白字符(注意，空白字符包括空格、tab以及换行符，而不仅仅是空格);\ntolower()和toupper()函数会将字符串转换成小写大写字符串；\nremove()和 insert()函数提供了删除和插入字符串的能力;\nsimplified()函数可以将串中的所有连续的空白字符替换成一个，并且把两端的空白字符去除，例如"   \\t   ”会返回一个空格" "。\n\n\n1\n2\n3\n4\n5\n6\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"窗口设置",frontmatter:{title:"窗口设置",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/window/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/09.Qt/04.%E7%AA%97%E5%8F%A3%E8%AE%BE%E7%BD%AE.html",relativePath:"06.软件开发/09.Qt/04.窗口设置.md",key:"v-5f2964f4",path:"/soft/qt/window/",headers:[{level:2,title:'QT禁用"最大化按钮"和"禁止调节窗口大小"',slug:"qt禁用-最大化按钮-和-禁止调节窗口大小",normalizedTitle:"qt禁用&quot;最大化按钮&quot;和&quot;禁止调节窗口大小&quot;",charIndex:null}],headersStr:'QT禁用"最大化按钮"和"禁止调节窗口大小"',content:'# QT禁用"最大化按钮"和"禁止调节窗口大小"\n\n“最大化按钮”:setWindowFlags(windowFlags()& ~Qt::WindowMaximizeButtonHint);\n“禁止调节窗口大小”:setFixedSize(this->width(), this->height());\nsetWindowFlags ( Qt::WindowFlags type )：设置窗体样式。\n    \n具体样式有：\nQt::FrameWindowHint:没有边框的窗口\nQt::WindowStaysOnTopHint://总在最上面的窗口\nQt::CustomizeWindowHint://自定义窗口标题栏,以下标志必须与这个标志一起使用才有效,否则窗口将有默认的标题栏\nQt::WindowTitleHint:显示窗口标题栏\nQt::WindowSystemMenuHint://显示系统菜单\nQt::WindowMinimizeButtonHint://显示最小化按钮\nQt::WindowMaximizeButtonHint://显示最大化按钮\nQt::WindowMinMaxButtonsHint://显示最小化按钮和最大化按钮\nQt::WindowCloseButtonHint://显示关闭按钮\n\nw.setWindowFlags(w.windowFlags() &~ Qt::WindowMaximizeButtonHint);//禁止最大化\nw.setWindowFlags(w.windowFlags() &~ Qt::WindowMinMaxButtonsHint);//禁止最大和最小化\n\nsetMinimumHeight(300);\nsetMinimumWidth(500);\nsetFixedSize(this->width(),this->height());\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n',normalizedContent:'# qt禁用"最大化按钮"和"禁止调节窗口大小"\n\n“最大化按钮”:setwindowflags(windowflags()& ~qt::windowmaximizebuttonhint);\n“禁止调节窗口大小”:setfixedsize(this->width(), this->height());\nsetwindowflags ( qt::windowflags type )：设置窗体样式。\n    \n具体样式有：\nqt::framewindowhint:没有边框的窗口\nqt::windowstaysontophint://总在最上面的窗口\nqt::customizewindowhint://自定义窗口标题栏,以下标志必须与这个标志一起使用才有效,否则窗口将有默认的标题栏\nqt::windowtitlehint:显示窗口标题栏\nqt::windowsystemmenuhint://显示系统菜单\nqt::windowminimizebuttonhint://显示最小化按钮\nqt::windowmaximizebuttonhint://显示最大化按钮\nqt::windowminmaxbuttonshint://显示最小化按钮和最大化按钮\nqt::windowclosebuttonhint://显示关闭按钮\n\nw.setwindowflags(w.windowflags() &~ qt::windowmaximizebuttonhint);//禁止最大化\nw.setwindowflags(w.windowflags() &~ qt::windowminmaxbuttonshint);//禁止最大和最小化\n\nsetminimumheight(300);\nsetminimumwidth(500);\nsetfixedsize(this->width(),this->height());\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"添加应用程序图标和版本信息",frontmatter:{title:"添加应用程序图标和版本信息",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/version/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/09.Qt/06.%E6%B7%BB%E5%8A%A0%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%9B%BE%E6%A0%87%E5%92%8C%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF.html",relativePath:"06.软件开发/09.Qt/06.添加应用程序图标和版本信息.md",key:"v-db423e78",path:"/soft/qt/version/",headers:[{level:2,title:"方法一",slug:"方法一",normalizedTitle:"方法一",charIndex:2},{level:2,title:"方法二",slug:"方法二",normalizedTitle:"方法二",charIndex:197}],headersStr:"方法一 方法二",content:"# 方法一\n\n在pro文件中添加版本信息和图标\nRC_ICONS = logo.ico\nVERSION = 1.0.0.0\nQMAKE_TARGET_PRODUCT = 产品名称\nQMAKE_TARGET_COMPANY = 公司\nQMAKE_TARGET_DESCRIPTION = 文件描述\nQMAKE_TARGET_COPYRIGHT = 版权\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 方法二\n\n在新建的qrc目录下添加rc文件\n.pro下\nRESOURCES += qml.qrc\n\nwin32{\nRESOURCES += VersionInfo.qrc\nRC_FILE = VersionInfo.rc\n}\n然后添加qrc和rc文件（图标记得也在工程里添加）\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n",normalizedContent:"# 方法一\n\n在pro文件中添加版本信息和图标\nrc_icons = logo.ico\nversion = 1.0.0.0\nqmake_target_product = 产品名称\nqmake_target_company = 公司\nqmake_target_description = 文件描述\nqmake_target_copyright = 版权\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 方法二\n\n在新建的qrc目录下添加rc文件\n.pro下\nresources += qml.qrc\n\nwin32{\nresources += versioninfo.qrc\nrc_file = versioninfo.rc\n}\n然后添加qrc和rc文件（图标记得也在工程里添加）\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"编译XLSX模块",frontmatter:{title:"编译XLSX模块",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/xlsx/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/09.Qt/05.%E7%BC%96%E8%AF%91XLSX%E6%A8%A1%E5%9D%97.html",relativePath:"06.软件开发/09.Qt/05.编译XLSX模块.md",key:"v-29af13d0",path:"/soft/qt/xlsx/",headers:[{level:2,title:"下载QtXlsx源代码",slug:"下载qtxlsx源代码",normalizedTitle:"下载qtxlsx源代码",charIndex:2},{level:3,title:"编译",slug:"编译",normalizedTitle:"编译",charIndex:76},{level:3,title:"使用QtXlsx模块",slug:"使用qtxlsx模块",normalizedTitle:"使用qtxlsx模块",charIndex:181},{level:2,title:"直接使用源代码",slug:"直接使用源代码",normalizedTitle:"直接使用源代码",charIndex:218},{level:3,title:"在工程中引入xlsx源代码",slug:"在工程中引入xlsx源代码",normalizedTitle:"在工程中引入xlsx源代码",charIndex:286}],headersStr:"下载QtXlsx源代码 编译 使用QtXlsx模块 直接使用源代码 在工程中引入xlsx源代码",content:"# 下载QtXlsx源代码\n\n先安装perl\n\nhttps://github.com/dbzhang800/QtXlsxWriter\n\n\n1\n\n\n\n# 编译\n\n打开 MinGW 7.3.0 32-bit 控制台,找到QtXlsx源码路径\n\nqmake src.pro\nmingw32-make\nmingw32-make install\n\n\n1\n2\n3\n\n\n\n# 使用QtXlsx模块\n\n在.pro文件中引入xlsx模块\n\n\n\n\n\n\n# 直接使用源代码\n\n该包包含一个 qtxlsx.pri文件，允许您将组件集成到使用 qmake 进行生成步骤的应用程序中\n\n\n\n\n\n\n# 在工程中引入xlsx源代码\n\n",normalizedContent:"# 下载qtxlsx源代码\n\n先安装perl\n\nhttps://github.com/dbzhang800/qtxlsxwriter\n\n\n1\n\n\n\n# 编译\n\n打开 mingw 7.3.0 32-bit 控制台,找到qtxlsx源码路径\n\nqmake src.pro\nmingw32-make\nmingw32-make install\n\n\n1\n2\n3\n\n\n\n# 使用qtxlsx模块\n\n在.pro文件中引入xlsx模块\n\n\n\n\n\n\n# 直接使用源代码\n\n该包包含一个 qtxlsx.pri文件，允许您将组件集成到使用 qmake 进行生成步骤的应用程序中\n\n\n\n\n\n\n# 在工程中引入xlsx源代码\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 14:48:55",lastUpdatedTimestamp:1706165335e3},{title:"QSS 自定义QMessageBox",frontmatter:{title:"QSS 自定义QMessageBox",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/messagebox/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/09.Qt/07.QSS%20%E8%87%AA%E5%AE%9A%E4%B9%89QMessageBox.html",relativePath:"06.软件开发/09.Qt/07.QSS 自定义QMessageBox.md",key:"v-b6b0bc5c",path:"/soft/qt/messagebox/",headers:[{level:2,title:"简述",slug:"简述",normalizedTitle:"简述",charIndex:2},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:143},{level:2,title:"样式表",slug:"样式表",normalizedTitle:"样式表",charIndex:126}],headersStr:"简述 代码 样式表",content:'# 简述\n\nQMessageBox的textLabel对象名为qt_msgbox_label ，iconLabel对象名为qt_msgboxex_icon_label ，buttonBox对象名为qt_msgbox_buttonbox，通过对象名可以在样式表中有限的设置样式。\n\n\n# 代码\n\nQMessageBox messagebox(this);\nmessagebox.setWindowIcon(QIcon(":/Resource/logo"));\nmessagebox.setWindowTitle("QMessageBox");\nmessagebox.setText("QMessageBox style sheet");\nmessagebox.setIconPixmap(QPixmap(":/Resource/border_image").scaled(40, 40));\nmessagebox.addButton("Okay", QMessageBox::AcceptRole);\nmessagebox.addButton("Cancel", QMessageBox::RejectRole);\nQLabel *textlabel = messagebox.findChild<QLabel*>("qt_msgbox_label"); //获取textLabel\nif (textlabel)\n{\n\ttextlabel->setAlignment(Qt::AlignCenter); //设置textLabel文本居中\n}\nmessagebox.exec();\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 样式表\n\nQMessageBox {\n\tbackground-color: #F2F2F2; /* QMessageBox背景颜色 */\n}\n\nQMessageBox QLabel#qt_msgbox_label { /* textLabel */\n\tcolor: #298DFF;\n\tbackground-color: transparent;\n\tmin-width: 240px; /* textLabel设置最小宽度可以相应的改变QMessageBox的最小宽度 */\n\tmin-height: 40px; /* textLabel和iconLabel高度保持一致 */\n}\n\nQMessageBox QLabel#qt_msgboxex_icon_label { /* iconLabel */\n\twidth: 40px;\n\theight: 40px; /* textLabel和iconLabel高度保持一致 */\n}\n\nQMessageBox QPushButton { /* QMessageBox中的QPushButton样式 */\n\tborder: 1px solid #298DFF;\n\tborder-radius: 3px;\n\tbackground-color: #F2F2F2;\n\tcolor: #298DFF;\n\tfont-family: "Microsoft YaHei";\n\tfont-size: 10pt;\n\tmin-width: 70px;\n\tmin-height: 25px;\n}\n\nQMessageBox QPushButton:hover {\n\tbackground-color: #298DFF;\n\tcolor: #F2F2F2;\n}\n\nQMessageBox QPushButton:pressed {\n\tbackground-color: #257FE6;\n}\n\nQMessageBox QDialogButtonBox#qt_msgbox_buttonbox { /* buttonBox */\n\tbutton-layout: 0; /* 设置QPushButton布局好像没啥作用 */\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n',normalizedContent:'# 简述\n\nqmessagebox的textlabel对象名为qt_msgbox_label ，iconlabel对象名为qt_msgboxex_icon_label ，buttonbox对象名为qt_msgbox_buttonbox，通过对象名可以在样式表中有限的设置样式。\n\n\n# 代码\n\nqmessagebox messagebox(this);\nmessagebox.setwindowicon(qicon(":/resource/logo"));\nmessagebox.setwindowtitle("qmessagebox");\nmessagebox.settext("qmessagebox style sheet");\nmessagebox.seticonpixmap(qpixmap(":/resource/border_image").scaled(40, 40));\nmessagebox.addbutton("okay", qmessagebox::acceptrole);\nmessagebox.addbutton("cancel", qmessagebox::rejectrole);\nqlabel *textlabel = messagebox.findchild<qlabel*>("qt_msgbox_label"); //获取textlabel\nif (textlabel)\n{\n\ttextlabel->setalignment(qt::aligncenter); //设置textlabel文本居中\n}\nmessagebox.exec();\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 样式表\n\nqmessagebox {\n\tbackground-color: #f2f2f2; /* qmessagebox背景颜色 */\n}\n\nqmessagebox qlabel#qt_msgbox_label { /* textlabel */\n\tcolor: #298dff;\n\tbackground-color: transparent;\n\tmin-width: 240px; /* textlabel设置最小宽度可以相应的改变qmessagebox的最小宽度 */\n\tmin-height: 40px; /* textlabel和iconlabel高度保持一致 */\n}\n\nqmessagebox qlabel#qt_msgboxex_icon_label { /* iconlabel */\n\twidth: 40px;\n\theight: 40px; /* textlabel和iconlabel高度保持一致 */\n}\n\nqmessagebox qpushbutton { /* qmessagebox中的qpushbutton样式 */\n\tborder: 1px solid #298dff;\n\tborder-radius: 3px;\n\tbackground-color: #f2f2f2;\n\tcolor: #298dff;\n\tfont-family: "microsoft yahei";\n\tfont-size: 10pt;\n\tmin-width: 70px;\n\tmin-height: 25px;\n}\n\nqmessagebox qpushbutton:hover {\n\tbackground-color: #298dff;\n\tcolor: #f2f2f2;\n}\n\nqmessagebox qpushbutton:pressed {\n\tbackground-color: #257fe6;\n}\n\nqmessagebox qdialogbuttonbox#qt_msgbox_buttonbox { /* buttonbox */\n\tbutton-layout: 0; /* 设置qpushbutton布局好像没啥作用 */\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"QSS 自定义QMessageBox",frontmatter:{title:"QSS 自定义QMessageBox",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/mysql/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/09.Qt/08.MySQL%E4%BD%BF%E7%94%A8.html",relativePath:"06.软件开发/09.Qt/08.MySQL使用.md",key:"v-5e870662",path:"/soft/qt/mysql/",headers:[{level:2,title:"QT 通过ODBC连接MySQL",slug:"qt-通过odbc连接mysql",normalizedTitle:"qt 通过odbc连接mysql",charIndex:2},{level:2,title:"查询",slug:"查询",normalizedTitle:"查询",charIndex:764},{level:3,title:"方法一",slug:"方法一",normalizedTitle:"方法一",charIndex:771},{level:3,title:"方法二",slug:"方法二",normalizedTitle:"方法二",charIndex:983}],headersStr:"QT 通过ODBC连接MySQL 查询 方法一 方法二",content:'# QT 通过ODBC连接MySQL\n\n\n\n\n\n\n\nbool SqlTools::connectMySql(QString host, int port, QString databaseName, QString username, QString password)\n{\n    bool isConnected;\n    QSqlDatabase db = QSqlDatabase::addDatabase("QODBC");\n    db.setHostName(host);\n    db.setPort(port);\n    db.setDatabaseName(databaseName);\n    db.setUserName(username);\n    db.setPassword(password);\n\n    bool ok = db.open();\n    if(ok)\n    {\n        // QMessageBox::information(NULL,"连接成功","连接成功");\n        isConnected = true;\n    }\n    else {\n        // QMessageBox::critical(NULL,"失败","数据库连接失败");\n        // qDebug()<<"Error because:"<<db.lastError().text()<<endl;\n        isConnected = false;\n    }\n    return isConnected;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 查询\n\n\n# 方法一\n\nQString cmd = QString("select * from system_users where username=\'%1\'").arg(username);\nQSqlQuery query;\nbool a = query.exec(cmd);\n\n\n1\n2\n3\n\n\n检验是否存在不能使用query.exec(cmd)判断，因为只要代码正确返回值就是true，所以再用一个qq.next();\n\n\n# 方法二\n\nQSqlTableModel *mode = new QSqlTableModel;\nmodel->setTable("system_users");\nmodel->setFilter(QString("username=\'%1\'")).arg(username);\nmodel->select();\n\n\n1\n2\n3\n4\n',normalizedContent:'# qt 通过odbc连接mysql\n\n\n\n\n\n\n\nbool sqltools::connectmysql(qstring host, int port, qstring databasename, qstring username, qstring password)\n{\n    bool isconnected;\n    qsqldatabase db = qsqldatabase::adddatabase("qodbc");\n    db.sethostname(host);\n    db.setport(port);\n    db.setdatabasename(databasename);\n    db.setusername(username);\n    db.setpassword(password);\n\n    bool ok = db.open();\n    if(ok)\n    {\n        // qmessagebox::information(null,"连接成功","连接成功");\n        isconnected = true;\n    }\n    else {\n        // qmessagebox::critical(null,"失败","数据库连接失败");\n        // qdebug()<<"error because:"<<db.lasterror().text()<<endl;\n        isconnected = false;\n    }\n    return isconnected;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 查询\n\n\n# 方法一\n\nqstring cmd = qstring("select * from system_users where username=\'%1\'").arg(username);\nqsqlquery query;\nbool a = query.exec(cmd);\n\n\n1\n2\n3\n\n\n检验是否存在不能使用query.exec(cmd)判断，因为只要代码正确返回值就是true，所以再用一个qq.next();\n\n\n# 方法二\n\nqsqltablemodel *mode = new qsqltablemodel;\nmodel->settable("system_users");\nmodel->setfilter(qstring("username=\'%1\'")).arg(username);\nmodel->select();\n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"TreeWidget去除虚线",frontmatter:{title:"TreeWidget去除虚线",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/clion/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/09.Qt/10.Clion%E9%85%8D%E7%BD%AEQT.html",relativePath:"06.软件开发/09.Qt/10.Clion配置QT.md",key:"v-b7065ab0",path:"/soft/qt/clion/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"MySQL使用",frontmatter:{title:"MySQL使用",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/tree/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/09.Qt/09.TreeWidget%E5%8E%BB%E9%99%A4%E8%99%9A%E7%BA%BF.html",relativePath:"06.软件开发/09.Qt/09.TreeWidget去除虚线.md",key:"v-035c257e",path:"/soft/qt/tree/",headersStr:null,content:"使用QSS样式表，将虚线改为和背景一样的颜色\n\nQTreeWidget, QTabWidget > QWidget\n{\nbackground:transparent;\nbackground-color:#1A1A1A;\ncolor:white;\nborder:none;\n}\n\nQTreeWidget::item:selected\n{\nbackground-color: #123456;\ncolor:white;\n}\n\nQTreeWidget::item\n{\nheight:50px;\n}\n\nQTreeWidget::item:!selected:hover\n{\nbackground:transparent;\n}\n\nQTreeWidget::branch\n{\nbackground-color: #1A1A1A;\n}\n\nQTreeWidget::branch:selected\n{\nbackground-color: #123456;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n",normalizedContent:"使用qss样式表，将虚线改为和背景一样的颜色\n\nqtreewidget, qtabwidget > qwidget\n{\nbackground:transparent;\nbackground-color:#1a1a1a;\ncolor:white;\nborder:none;\n}\n\nqtreewidget::item:selected\n{\nbackground-color: #123456;\ncolor:white;\n}\n\nqtreewidget::item\n{\nheight:50px;\n}\n\nqtreewidget::item:!selected:hover\n{\nbackground:transparent;\n}\n\nqtreewidget::branch\n{\nbackground-color: #1a1a1a;\n}\n\nqtreewidget::branch:selected\n{\nbackground-color: #123456;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"TreeWidget去除虚线",frontmatter:{title:"TreeWidget去除虚线",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/theme/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/09.Qt/11.QT%20Creator%E9%85%8D%E7%BD%AEOne%20Dark%E4%B8%BB%E9%A2%98.html",relativePath:"06.软件开发/09.Qt/11.QT Creator配置One Dark主题.md",key:"v-5fa31dd8",path:"/soft/qt/theme/",headers:[{level:2,title:"配置文件",slug:"配置文件",normalizedTitle:"配置文件",charIndex:2},{level:3,title:"onedark.xml",slug:"onedark-xml",normalizedTitle:"onedark.xml",charIndex:11},{level:3,title:"onedark.creatortheme",slug:"onedark-creatortheme",normalizedTitle:"onedark.creatortheme",charIndex:4260},{level:3,title:"选择主题",slug:"选择主题",normalizedTitle:"选择主题",charIndex:15396}],headersStr:"配置文件 onedark.xml onedark.creatortheme 选择主题",content:'# 配置文件\n\n\n# onedark.xml\n\n<?xml version="1.0" encoding="UTF-8"?>\n<style-scheme version="1.0" name="One Dark">\n  <style name="Text" foreground="#abb2bf" background="#282c34"/>\n  <style name="Link" underlineStyle="SingleUnderline"/>\n  <style name="Selection" background="#3e4451"/>\n  <style name="LineNumber" foreground="#4b5363"/>\n  <style name="SearchResult" background="#324365"/>\n  <style name="SearchScope" background="#3e4451"/>\n  <style name="Parentheses" underlineColor="#61afef" underlineStyle="SingleUnderline"/>\n  <style name="ParenthesesMismatch" foreground="#000000" background="#c678dd"/>\n  <style name="AutoComplete" background="#3e4451"/>\n  <style name="CurrentLine" background="#3a3f4b"/>\n  <style name="CurrentLineNumber" foreground="#777c87"/>\n  <style name="Occurrences" background="#324365"/>\n  <style name="Occurrences.Unused" underlineColor="#d19a66" underlineStyle="DashUnderline"/>\n  <style name="Occurrences.Rename" background="#e06c75"/>\n  <style name="Number" foreground="#d19a66"/>\n  <style name="String" foreground="#98c379"/>\n  <style name="Type" foreground="#61afef"/>\n  <style name="Local"/>\n  <style name="Global"/>\n  <style name="Field" foreground="#e06c75"/>\n  <style name="Static" foreground="#61afef" italic="true"/>\n  <style name="VirtualMethod" foreground="#61afef" italic="true"/>\n  <style name="Function" foreground="#61afef"/>\n  <style name="Keyword" foreground="#c678dd"/>\n  <style name="PrimitiveType" foreground="#c678dd"/>\n  <style name="Operator" foreground="#c678dd"/>\n  <style name="Overloaded Operator" foreground="#c678dd"/>\n  <style name="Punctuation"/>\n  <style name="Preprocessor" foreground="#c678dd"/>\n  <style name="Label" foreground="#e06c75" bold="true"/>\n  <style name="Comment" foreground="#5c6370" italic="true"/>\n  <style name="Doxygen.Comment" foreground="#5c6370" italic="true"/>\n  <style name="Doxygen.Tag" foreground="#61afef"/>\n  <style name="VisualWhitespace" foreground="#3c4049"/>\n  <style name="QmlLocalId" foreground="#61afef"/>\n  <style name="QmlExternalId"/>\n  <style name="QmlTypeId" foreground="#61afef"/>\n  <style name="QmlRootObjectProperty" foreground="#61afef"/>\n  <style name="QmlScopeObjectProperty" foreground="#61afef"/>\n  <style name="QmlExternalObjectProperty"/>\n  <style name="JsScopeVar"/>\n  <style name="JsImportVar" foreground="#d19a66"/>\n  <style name="JsGlobalVar" foreground="#d19a66"/>\n  <style name="QmlStateName" foreground="#61afef"/>\n  <style name="Binding" foreground="#c678dd"/>\n  <style name="DisabledCode" foreground="#5c6370"/>\n  <style name="AddedLine" foreground="#98c379"/>\n  <style name="RemovedLine" foreground="#e06c75"/>\n  <style name="DiffFile" foreground="#61afef"/>\n  <style name="DiffLocation" foreground="#d19a66"/>\n  <style name="DiffFileLine" foreground="#000000" background="#e5c07b"/>\n  <style name="DiffContextLine" foreground="#000000" background="#56b6c2"/>\n  <style name="DiffSourceLine" foreground="#000000" background="#be5046"/>\n  <style name="DiffSourceChar" foreground="#000000" background="#e06c75"/>\n  <style name="DiffDestLine" foreground="#000000" background="#789353"/>\n  <style name="DiffDestChar" foreground="#000000" background="#98c379"/>\n  <style name="LogChangeLine" foreground="#e06c75"/>\n  <style name="LogAuthorName" foreground="#61afef"/>\n  <style name="LogCommitDate" foreground="#98c379"/>\n  <style name="LogCommitHash" foreground="#e06c75"/>\n  <style name="LogCommitSubject"/>\n  <style name="LogDecoration" foreground="#c678dd"/>\n  <style name="Warning" underlineColor="#d19a66" underlineStyle="SingleUnderline"/>\n  <style name="WarningContext" underlineColor="#d19a66" underlineStyle="DotLine"/>\n  <style name="Error" underlineColor="#e06c75" underlineStyle="SingleUnderline"/>\n  <style name="ErrorContext" underlineColor="#e06c75" underlineStyle="DotLine"/>\n  <style name="Declaration"/>\n  <style name="FunctionDefinition"/>\n  <style name="OutputArgument" italic="true"/>\n  <style name="LastStyleSentinel"/>\n</style-scheme>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n\n\nonedark.xml 文件存放路径：/Qt5.12.7/Tools/QtCreator/share/qtcreator/styles\n\n\n# onedark.creatortheme\n\n[General]\nThemeName=One Dark\nPreferredStyles=Fusion\nDefaultTextEditorColorScheme=onedark.xml\n\n[Palette]\nshadowBackground=ff21252b\ntext=ffabb2bf\ntextDisabled=99abb2bf\ntextHighlighted=ffd7dae0\ntoolBarItem=ffabb2bf\ntoolBarItemDisabled=99abb2bf\nfancyBarsNormalTextColor=ffabb2bf\nfancyBarsBoldTextColor=ffabb2bf\nhoverBackground=ff31363f\nselectedBackground=ff3a3f4b\nselectedBackgroundText=ffd7dae0\nnormalBackground=ff282c34\nalternateBackground=ff31363f\nerror=ffe06c75\nwarning=ffe5c07b\nsuccess=ff98c379\nmessage=ff61afef\nsplitter=ff181a1f\ntextColorLink=61afef\ntextColorLinkVisited=c678dd\nbackgroundColorDisabled=ff21252b\n\n[Colors]\n\n;DS controls theme START\nDScontrolBackground=normalBackground\nDScontrolOutline=splitter\nDStextColor=text\nDSdisabledTextColor=textDisabled\nDSpanelBackground=ff454444\nDShoverHighlight=hoverBackground\nDScolumnBackground=ff363636\nDSfocusEdit=normalBackground\nDSfocusDrag=ff565656\nDScontrolBackgroundPressed=selectedBackground\nDScontrolBackgroundChecked=selectedBackground\nDSinteraction=selectedBackground\nDSsliderActiveTrack=ff7a7a7a\nDSsliderInactiveTrack=ff4d4d4d\nDSsliderHandle=ff4b5362\nDSsliderActiveTrackHover=ff7f7f7f\nDSsliderInactiveTrackHover=ff505050\nDSsliderHandleHover=ff7a7a7a\nDSsliderActiveTrackFocus=ffaaaaaa\nDSsliderInactiveTrackFocus=ff7a7a7a\nDSsliderHandleFocus=ff1d545c\nDSerrorColor=error\nDScontrolBackgroundDisabled=backgroundColorDisabled\nDScontrolOutlineDisabled=ff4d4d4d\nDStextColorDisabled=textDisabled\nDStextSelectionColor=selectedBackground\nDStextSelectedTextColor=selectedBackgroundText\nDSscrollBarTrack=ff4d4d4d\nDSscrollBarHandle=ff4b5362\nDScontrolBackgroundInteraction=ff4d4d4d\nDStranslationIndicatorBorder=splitter\nDSsectionHeadBackground=alternateBackground\nDSchangedStateText=message\nDS3DAxisXColor=error\nDS3DAxisYColor=success\nDS3DAxisZColor=message\n;DS controls theme END\n\nBackgroundColorAlternate=alternateBackground\nBackgroundColorDark=shadowBackground\nBackgroundColorHover=hoverBackground\nBackgroundColorNormal=normalBackground\nBackgroundColorDisabled=backgroundColorDisabled\nBackgroundColorSelected=selectedBackground\nBadgeLabelBackgroundColorChecked=text\nBadgeLabelBackgroundColorUnchecked=text\nBadgeLabelTextColorChecked=normalBackground\nBadgeLabelTextColorUnchecked=normalBackground\nCanceledSearchTextColor=error\nComboBoxArrowColor=toolBarItem\nComboBoxArrowColorDisabled=toolBarItemDisabled\nComboBoxTextColor=fancyBarsNormalTextColor\nDetailsButtonBackgroundColorHover=hoverBackground\nDetailsWidgetBackgroundColor=shadowBackground\nDockWidgetResizeHandleColor=splitter\nDoubleTabWidget1stSeparatorColor=splitter\nDoubleTabWidget1stTabActiveTextColor=text\nDoubleTabWidget1stTabBackgroundColor=normalBackground\nDoubleTabWidget1stTabInactiveTextColor=text\nDoubleTabWidget2ndSeparatorColor=toolBarItemDisabled\nDoubleTabWidget2ndTabActiveTextColor=text\nDoubleTabWidget2ndTabBackgroundColor=selectedBackground\nDoubleTabWidget2ndTabInactiveTextColor=text\nEditorPlaceholderColor=shadowBackground\nFancyToolBarSeparatorColor=toolBarItemDisabled\nFancyTabBarBackgroundColor=shadowBackground\nFancyTabBarSelectedBackgroundColor=selectedBackground\nFancyTabWidgetDisabledSelectedTextColor=toolBarItemDisabled\nFancyTabWidgetDisabledUnselectedTextColor=toolBarItemDisabled\nFancyTabWidgetEnabledSelectedTextColor=fancyBarsBoldTextColor\nFancyTabWidgetEnabledUnselectedTextColor=fancyBarsBoldTextColor\nFancyToolButtonHoverColor=hoverBackground\nFancyToolButtonSelectedColor=selectedBackground\nFutureProgressBackgroundColor=shadowBackground\nIconsBaseColor=toolBarItem\nIconsDisabledColor=toolBarItemDisabled\nIconsInfoColor=message\nIconsInfoToolBarColor=message\nIconsWarningColor=warning\nIconsWarningToolBarColor=warning\nIconsErrorColor=error\nIconsErrorToolBarColor=error\nIconsRunColor=success\nIconsRunToolBarColor=success\nIconsStopColor=error\nIconsStopToolBarColor=error\nIconsInterruptColor=message\nIconsInterruptToolBarColor=message\nIconsDebugColor=toolBarItem\nIconsNavigationArrowsColor=warning\nIconsBuildHammerHandleColor=b06112\nIconsBuildHammerHeadColor=toolBarItem\nIconsModeWelcomeActiveColor=success\nIconsModeEditActiveColor=message\nIconsModeDesignActiveColor=warning\nIconsModeDebugActiveColor=message\nIconsModeProjectActiveColor=success\nIconsModeAnalyzeActiveColor=message\nIconsModeHelpActiveColor=warning\nIconsCodeModelKeywordColor=ff777777\nIconsCodeModelClassColor=ffc0b550\nIconsCodeModelStructColor=ff53b053\nIconsCodeModelFunctionColor=ffd34373\nIconsCodeModelVariableColor=ff2bbbcc\nIconsCodeModelEnumColor=ffc0b550\nIconsCodeModelMacroColor=ff476ba0\nIconsCodeModelAttributeColor=ff316511\nIconsCodeModelUniformColor=ff994899\nIconsCodeModelVaryingColor=ffa08833\nIconsCodeModelOverlayBackgroundColor=normalBackground\nIconsCodeModelOverlayForegroundColor=text\nInfoBarBackground=shadowBackground\nInfoBarText=text\nMenuBarEmptyAreaBackgroundColor=shadowBackground\nMenuBarItemBackgroundColor=shadowBackground\nMenuBarItemTextColorDisabled=textDisabled\nMenuBarItemTextColorNormal=text\nMenuItemTextColorDisabled=textDisabled\nMenuItemTextColorNormal=text\nMiniProjectTargetSelectorBackgroundColor=shadowBackground\nMiniProjectTargetSelectorBorderColor=shadowBackground\nMiniProjectTargetSelectorSummaryBackgroundColor=normalBackground\nMiniProjectTargetSelectorTextColor=fancyBarsNormalTextColor\nPanelStatusBarBackgroundColor=shadowBackground\nPanelsWidgetSeparatorLineColor=splitter\nPanelTextColorDark=text\nPanelTextColorMid=text\nPanelTextColorLight=textHighlighted\nProgressBarColorError=error\nProgressBarColorFinished=success\nProgressBarColorNormal=message\nProgressBarTitleColor=text\nProgressBarBackgroundColor=alternateBackground\nSplitterColor=splitter\nTextColorDisabled=textDisabled\nTextColorError=error\nTextColorHighlight=textHighlighted\nTextColorHighlightBackground=hoverBackground\nTextColorLink=textColorLink\nTextColorLinkVisited=textColorLinkVisited\nTextColorNormal=text\nToggleButtonBackgroundColor=shadowBackground\nToolBarBackgroundColor=shadowBackground\nTreeViewArrowColorNormal=hoverBackground\nTreeViewArrowColorSelected=text\n\nOutputPanes_DebugTextColor=text\nOutputPanes_ErrorMessageTextColor=error\nOutputPanes_MessageOutput=message\nOutputPanes_NormalMessageTextColor=text\nOutputPanes_StdErrTextColor=error\nOutputPanes_StdOutTextColor=text\nOutputPanes_WarningMessageTextColor=warning\nOutputPanes_TestPassTextColor=success\nOutputPanes_TestFailTextColor=error\nOutputPanes_TestXFailTextColor=error\nOutputPanes_TestXPassTextColor=message\nOutputPanes_TestSkipTextColor=message\nOutputPanes_TestWarnTextColor=warning\nOutputPanes_TestFatalTextColor=error\nOutputPanes_TestDebugTextColor=text\nOutputPaneButtonFlashColor=error\nOutputPaneToggleButtonTextColorChecked=fancyBarsNormalTextColor\nOutputPaneToggleButtonTextColorUnchecked=fancyBarsNormalTextColor\n\nDebugger_LogWindow_LogInput=ff56b6c2\nDebugger_LogWindow_LogStatus=message\nDebugger_LogWindow_LogTime=error\n\nDebugger_WatchItem_ValueNormal=text\nDebugger_WatchItem_ValueInvalid=textDisabled\nDebugger_WatchItem_ValueChanged=error\n\nDebugger_Breakpoint_TextMarkColor=message\n\nWelcome_TextColor=text\nWelcome_ForegroundPrimaryColor=text\nWelcome_ForegroundSecondaryColor=text\nWelcome_BackgroundColor=normalBackground\nWelcome_ButtonBackgroundColor=normalBackground\nWelcome_DividerColor=splitter\nWelcome_HoverColor=hoverBackground\nWelcome_LinkColor=textColorLink\nWelcome_DisabledLinkColor=textDisabled\n\nTimeline_TextColor=text\nTimeline_BackgroundColor1=normalBackground\nTimeline_BackgroundColor2=shadowBackground\nTimeline_DividerColor=splitter\nTimeline_HighlightColor=selectedBackground\nTimeline_PanelBackgroundColor=alternateBackground\nTimeline_PanelHeaderColor=normalBackground\nTimeline_HandleColor=ff4b5362\nTimeline_RangeColor=selectedBackground\n\nVcsBase_FileStatusUnknown_TextColor=text\nVcsBase_FileAdded_TextColor=success\nVcsBase_FileModified_TextColor=warning\nVcsBase_FileDeleted_TextColor=error\nVcsBase_FileRenamed_TextColor=message\nVcsBase_FileUnmerged_TextColor=error\n\nBookmarks_TextMarkColor=message\n\nTextEditor_SearchResult_ScrollBarColor=success\nTextEditor_CurrentLine_ScrollBarColor=message\n\nProjectExplorer_TaskError_TextMarkColor=error\nProjectExplorer_TaskWarn_TextMarkColor=warning\n\nCodeModel_Error_TextMarkColor=error\nCodeModel_Warning_TextMarkColor=warning\n\nQmlDesigner_BackgroundColor=normalBackground\nQmlDesigner_HighlightColor=selectedBackground\nQmlDesigner_FormEditorSelectionColor=message\nQmlDesigner_FormEditorForegroundColor=normalBackground\nQmlDesigner_BackgroundColorDarkAlternate=shadowBackground\nQmlDesigner_BackgroundColorDarker=splitter\nQmlDesigner_BorderColor=splitter\nQmlDesigner_ButtonColor=normalBackground\nQmlDesigner_TabDark=shadowBackground\nQmlDesigner_TabLight=text\nQmlDesigner_FormeditorBackgroundColor=normalBackground\nQmlDesigner_AlternateBackgroundColor=alternateBackground\nQmlDesigner_ScrollBarHandleColor=ff4b5362\n\nPaletteWindow=shadowBackground\nPaletteWindowText=text\nPaletteBase=normalBackground\nPaletteAlternateBase=alternateBackground\nPaletteButton=shadowBackground\nPaletteBrightText=error\nPaletteText=text\nPaletteButtonText=text\nPaletteButtonTextDisabled=textDisabled\nPaletteToolTipBase=hoverBackground\nPaletteHighlight=selectedBackground\nPaletteDark=shadowBackground\nPaletteHighlightedText=selectedBackgroundText\nPaletteToolTipText=text\nPaletteLink=textColorLink\nPaletteLinkVisited=textColorLinkVisited\nPaletteWindowDisabled=backgroundColorDisabled\nPaletteWindowTextDisabled=textDisabled\nPaletteBaseDisabled=backgroundColorDisabled\nPaletteTextDisabled=textDisabled\n\n[Flags]\nComboBoxDrawTextShadow=false\nDerivePaletteFromTheme=true\nDrawIndicatorBranch=true\nDrawSearchResultWidgetFrame=false\nDrawTargetSelectorBottom=false\nDrawToolBarHighlights=false\nDrawToolBarBorders=false\nApplyThemePaletteGlobally=true\nFlatToolBars=true\nFlatSideBarIcons=true\nFlatProjectsMode=true\nFlatMenuBar=true\nToolBarIconShadow=true\nWindowColorAsBase=true\nDarkUserInterface=true\n\n[Gradients]\nDetailsWidgetHeaderGradient\\1\\color=normalBackground\nDetailsWidgetHeaderGradient\\1\\pos=1\nDetailsWidgetHeaderGradient\\size=1\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n\n\n这个文件主要是配置代码区外边的边框的\n\nonedark.creatortheme 文件存放路径：/Qt5.12.7/Tools/QtCreator/share/qtcreator/themes\n\n\n# 选择主题\n\n',normalizedContent:'# 配置文件\n\n\n# onedark.xml\n\n<?xml version="1.0" encoding="utf-8"?>\n<style-scheme version="1.0" name="one dark">\n  <style name="text" foreground="#abb2bf" background="#282c34"/>\n  <style name="link" underlinestyle="singleunderline"/>\n  <style name="selection" background="#3e4451"/>\n  <style name="linenumber" foreground="#4b5363"/>\n  <style name="searchresult" background="#324365"/>\n  <style name="searchscope" background="#3e4451"/>\n  <style name="parentheses" underlinecolor="#61afef" underlinestyle="singleunderline"/>\n  <style name="parenthesesmismatch" foreground="#000000" background="#c678dd"/>\n  <style name="autocomplete" background="#3e4451"/>\n  <style name="currentline" background="#3a3f4b"/>\n  <style name="currentlinenumber" foreground="#777c87"/>\n  <style name="occurrences" background="#324365"/>\n  <style name="occurrences.unused" underlinecolor="#d19a66" underlinestyle="dashunderline"/>\n  <style name="occurrences.rename" background="#e06c75"/>\n  <style name="number" foreground="#d19a66"/>\n  <style name="string" foreground="#98c379"/>\n  <style name="type" foreground="#61afef"/>\n  <style name="local"/>\n  <style name="global"/>\n  <style name="field" foreground="#e06c75"/>\n  <style name="static" foreground="#61afef" italic="true"/>\n  <style name="virtualmethod" foreground="#61afef" italic="true"/>\n  <style name="function" foreground="#61afef"/>\n  <style name="keyword" foreground="#c678dd"/>\n  <style name="primitivetype" foreground="#c678dd"/>\n  <style name="operator" foreground="#c678dd"/>\n  <style name="overloaded operator" foreground="#c678dd"/>\n  <style name="punctuation"/>\n  <style name="preprocessor" foreground="#c678dd"/>\n  <style name="label" foreground="#e06c75" bold="true"/>\n  <style name="comment" foreground="#5c6370" italic="true"/>\n  <style name="doxygen.comment" foreground="#5c6370" italic="true"/>\n  <style name="doxygen.tag" foreground="#61afef"/>\n  <style name="visualwhitespace" foreground="#3c4049"/>\n  <style name="qmllocalid" foreground="#61afef"/>\n  <style name="qmlexternalid"/>\n  <style name="qmltypeid" foreground="#61afef"/>\n  <style name="qmlrootobjectproperty" foreground="#61afef"/>\n  <style name="qmlscopeobjectproperty" foreground="#61afef"/>\n  <style name="qmlexternalobjectproperty"/>\n  <style name="jsscopevar"/>\n  <style name="jsimportvar" foreground="#d19a66"/>\n  <style name="jsglobalvar" foreground="#d19a66"/>\n  <style name="qmlstatename" foreground="#61afef"/>\n  <style name="binding" foreground="#c678dd"/>\n  <style name="disabledcode" foreground="#5c6370"/>\n  <style name="addedline" foreground="#98c379"/>\n  <style name="removedline" foreground="#e06c75"/>\n  <style name="difffile" foreground="#61afef"/>\n  <style name="difflocation" foreground="#d19a66"/>\n  <style name="difffileline" foreground="#000000" background="#e5c07b"/>\n  <style name="diffcontextline" foreground="#000000" background="#56b6c2"/>\n  <style name="diffsourceline" foreground="#000000" background="#be5046"/>\n  <style name="diffsourcechar" foreground="#000000" background="#e06c75"/>\n  <style name="diffdestline" foreground="#000000" background="#789353"/>\n  <style name="diffdestchar" foreground="#000000" background="#98c379"/>\n  <style name="logchangeline" foreground="#e06c75"/>\n  <style name="logauthorname" foreground="#61afef"/>\n  <style name="logcommitdate" foreground="#98c379"/>\n  <style name="logcommithash" foreground="#e06c75"/>\n  <style name="logcommitsubject"/>\n  <style name="logdecoration" foreground="#c678dd"/>\n  <style name="warning" underlinecolor="#d19a66" underlinestyle="singleunderline"/>\n  <style name="warningcontext" underlinecolor="#d19a66" underlinestyle="dotline"/>\n  <style name="error" underlinecolor="#e06c75" underlinestyle="singleunderline"/>\n  <style name="errorcontext" underlinecolor="#e06c75" underlinestyle="dotline"/>\n  <style name="declaration"/>\n  <style name="functiondefinition"/>\n  <style name="outputargument" italic="true"/>\n  <style name="laststylesentinel"/>\n</style-scheme>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n\n\nonedark.xml 文件存放路径：/qt5.12.7/tools/qtcreator/share/qtcreator/styles\n\n\n# onedark.creatortheme\n\n[general]\nthemename=one dark\npreferredstyles=fusion\ndefaulttexteditorcolorscheme=onedark.xml\n\n[palette]\nshadowbackground=ff21252b\ntext=ffabb2bf\ntextdisabled=99abb2bf\ntexthighlighted=ffd7dae0\ntoolbaritem=ffabb2bf\ntoolbaritemdisabled=99abb2bf\nfancybarsnormaltextcolor=ffabb2bf\nfancybarsboldtextcolor=ffabb2bf\nhoverbackground=ff31363f\nselectedbackground=ff3a3f4b\nselectedbackgroundtext=ffd7dae0\nnormalbackground=ff282c34\nalternatebackground=ff31363f\nerror=ffe06c75\nwarning=ffe5c07b\nsuccess=ff98c379\nmessage=ff61afef\nsplitter=ff181a1f\ntextcolorlink=61afef\ntextcolorlinkvisited=c678dd\nbackgroundcolordisabled=ff21252b\n\n[colors]\n\n;ds controls theme start\ndscontrolbackground=normalbackground\ndscontroloutline=splitter\ndstextcolor=text\ndsdisabledtextcolor=textdisabled\ndspanelbackground=ff454444\ndshoverhighlight=hoverbackground\ndscolumnbackground=ff363636\ndsfocusedit=normalbackground\ndsfocusdrag=ff565656\ndscontrolbackgroundpressed=selectedbackground\ndscontrolbackgroundchecked=selectedbackground\ndsinteraction=selectedbackground\ndsslideractivetrack=ff7a7a7a\ndssliderinactivetrack=ff4d4d4d\ndssliderhandle=ff4b5362\ndsslideractivetrackhover=ff7f7f7f\ndssliderinactivetrackhover=ff505050\ndssliderhandlehover=ff7a7a7a\ndsslideractivetrackfocus=ffaaaaaa\ndssliderinactivetrackfocus=ff7a7a7a\ndssliderhandlefocus=ff1d545c\ndserrorcolor=error\ndscontrolbackgrounddisabled=backgroundcolordisabled\ndscontroloutlinedisabled=ff4d4d4d\ndstextcolordisabled=textdisabled\ndstextselectioncolor=selectedbackground\ndstextselectedtextcolor=selectedbackgroundtext\ndsscrollbartrack=ff4d4d4d\ndsscrollbarhandle=ff4b5362\ndscontrolbackgroundinteraction=ff4d4d4d\ndstranslationindicatorborder=splitter\ndssectionheadbackground=alternatebackground\ndschangedstatetext=message\nds3daxisxcolor=error\nds3daxisycolor=success\nds3daxiszcolor=message\n;ds controls theme end\n\nbackgroundcoloralternate=alternatebackground\nbackgroundcolordark=shadowbackground\nbackgroundcolorhover=hoverbackground\nbackgroundcolornormal=normalbackground\nbackgroundcolordisabled=backgroundcolordisabled\nbackgroundcolorselected=selectedbackground\nbadgelabelbackgroundcolorchecked=text\nbadgelabelbackgroundcolorunchecked=text\nbadgelabeltextcolorchecked=normalbackground\nbadgelabeltextcolorunchecked=normalbackground\ncanceledsearchtextcolor=error\ncomboboxarrowcolor=toolbaritem\ncomboboxarrowcolordisabled=toolbaritemdisabled\ncomboboxtextcolor=fancybarsnormaltextcolor\ndetailsbuttonbackgroundcolorhover=hoverbackground\ndetailswidgetbackgroundcolor=shadowbackground\ndockwidgetresizehandlecolor=splitter\ndoubletabwidget1stseparatorcolor=splitter\ndoubletabwidget1sttabactivetextcolor=text\ndoubletabwidget1sttabbackgroundcolor=normalbackground\ndoubletabwidget1sttabinactivetextcolor=text\ndoubletabwidget2ndseparatorcolor=toolbaritemdisabled\ndoubletabwidget2ndtabactivetextcolor=text\ndoubletabwidget2ndtabbackgroundcolor=selectedbackground\ndoubletabwidget2ndtabinactivetextcolor=text\neditorplaceholdercolor=shadowbackground\nfancytoolbarseparatorcolor=toolbaritemdisabled\nfancytabbarbackgroundcolor=shadowbackground\nfancytabbarselectedbackgroundcolor=selectedbackground\nfancytabwidgetdisabledselectedtextcolor=toolbaritemdisabled\nfancytabwidgetdisabledunselectedtextcolor=toolbaritemdisabled\nfancytabwidgetenabledselectedtextcolor=fancybarsboldtextcolor\nfancytabwidgetenabledunselectedtextcolor=fancybarsboldtextcolor\nfancytoolbuttonhovercolor=hoverbackground\nfancytoolbuttonselectedcolor=selectedbackground\nfutureprogressbackgroundcolor=shadowbackground\niconsbasecolor=toolbaritem\niconsdisabledcolor=toolbaritemdisabled\niconsinfocolor=message\niconsinfotoolbarcolor=message\niconswarningcolor=warning\niconswarningtoolbarcolor=warning\niconserrorcolor=error\niconserrortoolbarcolor=error\niconsruncolor=success\niconsruntoolbarcolor=success\niconsstopcolor=error\niconsstoptoolbarcolor=error\niconsinterruptcolor=message\niconsinterrupttoolbarcolor=message\niconsdebugcolor=toolbaritem\niconsnavigationarrowscolor=warning\niconsbuildhammerhandlecolor=b06112\niconsbuildhammerheadcolor=toolbaritem\niconsmodewelcomeactivecolor=success\niconsmodeeditactivecolor=message\niconsmodedesignactivecolor=warning\niconsmodedebugactivecolor=message\niconsmodeprojectactivecolor=success\niconsmodeanalyzeactivecolor=message\niconsmodehelpactivecolor=warning\niconscodemodelkeywordcolor=ff777777\niconscodemodelclasscolor=ffc0b550\niconscodemodelstructcolor=ff53b053\niconscodemodelfunctioncolor=ffd34373\niconscodemodelvariablecolor=ff2bbbcc\niconscodemodelenumcolor=ffc0b550\niconscodemodelmacrocolor=ff476ba0\niconscodemodelattributecolor=ff316511\niconscodemodeluniformcolor=ff994899\niconscodemodelvaryingcolor=ffa08833\niconscodemodeloverlaybackgroundcolor=normalbackground\niconscodemodeloverlayforegroundcolor=text\ninfobarbackground=shadowbackground\ninfobartext=text\nmenubaremptyareabackgroundcolor=shadowbackground\nmenubaritembackgroundcolor=shadowbackground\nmenubaritemtextcolordisabled=textdisabled\nmenubaritemtextcolornormal=text\nmenuitemtextcolordisabled=textdisabled\nmenuitemtextcolornormal=text\nminiprojecttargetselectorbackgroundcolor=shadowbackground\nminiprojecttargetselectorbordercolor=shadowbackground\nminiprojecttargetselectorsummarybackgroundcolor=normalbackground\nminiprojecttargetselectortextcolor=fancybarsnormaltextcolor\npanelstatusbarbackgroundcolor=shadowbackground\npanelswidgetseparatorlinecolor=splitter\npaneltextcolordark=text\npaneltextcolormid=text\npaneltextcolorlight=texthighlighted\nprogressbarcolorerror=error\nprogressbarcolorfinished=success\nprogressbarcolornormal=message\nprogressbartitlecolor=text\nprogressbarbackgroundcolor=alternatebackground\nsplittercolor=splitter\ntextcolordisabled=textdisabled\ntextcolorerror=error\ntextcolorhighlight=texthighlighted\ntextcolorhighlightbackground=hoverbackground\ntextcolorlink=textcolorlink\ntextcolorlinkvisited=textcolorlinkvisited\ntextcolornormal=text\ntogglebuttonbackgroundcolor=shadowbackground\ntoolbarbackgroundcolor=shadowbackground\ntreeviewarrowcolornormal=hoverbackground\ntreeviewarrowcolorselected=text\n\noutputpanes_debugtextcolor=text\noutputpanes_errormessagetextcolor=error\noutputpanes_messageoutput=message\noutputpanes_normalmessagetextcolor=text\noutputpanes_stderrtextcolor=error\noutputpanes_stdouttextcolor=text\noutputpanes_warningmessagetextcolor=warning\noutputpanes_testpasstextcolor=success\noutputpanes_testfailtextcolor=error\noutputpanes_testxfailtextcolor=error\noutputpanes_testxpasstextcolor=message\noutputpanes_testskiptextcolor=message\noutputpanes_testwarntextcolor=warning\noutputpanes_testfataltextcolor=error\noutputpanes_testdebugtextcolor=text\noutputpanebuttonflashcolor=error\noutputpanetogglebuttontextcolorchecked=fancybarsnormaltextcolor\noutputpanetogglebuttontextcolorunchecked=fancybarsnormaltextcolor\n\ndebugger_logwindow_loginput=ff56b6c2\ndebugger_logwindow_logstatus=message\ndebugger_logwindow_logtime=error\n\ndebugger_watchitem_valuenormal=text\ndebugger_watchitem_valueinvalid=textdisabled\ndebugger_watchitem_valuechanged=error\n\ndebugger_breakpoint_textmarkcolor=message\n\nwelcome_textcolor=text\nwelcome_foregroundprimarycolor=text\nwelcome_foregroundsecondarycolor=text\nwelcome_backgroundcolor=normalbackground\nwelcome_buttonbackgroundcolor=normalbackground\nwelcome_dividercolor=splitter\nwelcome_hovercolor=hoverbackground\nwelcome_linkcolor=textcolorlink\nwelcome_disabledlinkcolor=textdisabled\n\ntimeline_textcolor=text\ntimeline_backgroundcolor1=normalbackground\ntimeline_backgroundcolor2=shadowbackground\ntimeline_dividercolor=splitter\ntimeline_highlightcolor=selectedbackground\ntimeline_panelbackgroundcolor=alternatebackground\ntimeline_panelheadercolor=normalbackground\ntimeline_handlecolor=ff4b5362\ntimeline_rangecolor=selectedbackground\n\nvcsbase_filestatusunknown_textcolor=text\nvcsbase_fileadded_textcolor=success\nvcsbase_filemodified_textcolor=warning\nvcsbase_filedeleted_textcolor=error\nvcsbase_filerenamed_textcolor=message\nvcsbase_fileunmerged_textcolor=error\n\nbookmarks_textmarkcolor=message\n\ntexteditor_searchresult_scrollbarcolor=success\ntexteditor_currentline_scrollbarcolor=message\n\nprojectexplorer_taskerror_textmarkcolor=error\nprojectexplorer_taskwarn_textmarkcolor=warning\n\ncodemodel_error_textmarkcolor=error\ncodemodel_warning_textmarkcolor=warning\n\nqmldesigner_backgroundcolor=normalbackground\nqmldesigner_highlightcolor=selectedbackground\nqmldesigner_formeditorselectioncolor=message\nqmldesigner_formeditorforegroundcolor=normalbackground\nqmldesigner_backgroundcolordarkalternate=shadowbackground\nqmldesigner_backgroundcolordarker=splitter\nqmldesigner_bordercolor=splitter\nqmldesigner_buttoncolor=normalbackground\nqmldesigner_tabdark=shadowbackground\nqmldesigner_tablight=text\nqmldesigner_formeditorbackgroundcolor=normalbackground\nqmldesigner_alternatebackgroundcolor=alternatebackground\nqmldesigner_scrollbarhandlecolor=ff4b5362\n\npalettewindow=shadowbackground\npalettewindowtext=text\npalettebase=normalbackground\npalettealternatebase=alternatebackground\npalettebutton=shadowbackground\npalettebrighttext=error\npalettetext=text\npalettebuttontext=text\npalettebuttontextdisabled=textdisabled\npalettetooltipbase=hoverbackground\npalettehighlight=selectedbackground\npalettedark=shadowbackground\npalettehighlightedtext=selectedbackgroundtext\npalettetooltiptext=text\npalettelink=textcolorlink\npalettelinkvisited=textcolorlinkvisited\npalettewindowdisabled=backgroundcolordisabled\npalettewindowtextdisabled=textdisabled\npalettebasedisabled=backgroundcolordisabled\npalettetextdisabled=textdisabled\n\n[flags]\ncomboboxdrawtextshadow=false\nderivepalettefromtheme=true\ndrawindicatorbranch=true\ndrawsearchresultwidgetframe=false\ndrawtargetselectorbottom=false\ndrawtoolbarhighlights=false\ndrawtoolbarborders=false\napplythemepaletteglobally=true\nflattoolbars=true\nflatsidebaricons=true\nflatprojectsmode=true\nflatmenubar=true\ntoolbariconshadow=true\nwindowcolorasbase=true\ndarkuserinterface=true\n\n[gradients]\ndetailswidgetheadergradient\\1\\color=normalbackground\ndetailswidgetheadergradient\\1\\pos=1\ndetailswidgetheadergradient\\size=1\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n\n\n这个文件主要是配置代码区外边的边框的\n\nonedark.creatortheme 文件存放路径：/qt5.12.7/tools/qtcreator/share/qtcreator/themes\n\n\n# 选择主题\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"HelloWord",frontmatter:{title:"HelloWord",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/hello/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/01.HelloWord.html",relativePath:"06.软件开发/11.Win32/01.HelloWord.md",key:"v-1e6ca26a",path:"/soft/win32/hello/",headers:[{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:2}],headersStr:"代码",content:'# 代码\n\n#include <Windows.h>\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, PSTR szCmdLine, int iCmdShow)\n{\n\tMessageBox(NULL, TEXT("Hello WinMain!"), TEXT("HelloMsg"), 0);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n',normalizedContent:'# 代码\n\n#include <windows.h>\nint winapi winmain(hinstance hinstance, hinstance hprevinstance, pstr szcmdline, int icmdshow)\n{\n\tmessagebox(null, text("hello winmain!"), text("hellomsg"), 0);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"第一个Windows窗口程序",frontmatter:{title:"第一个Windows窗口程序",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/first/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/02.%E7%AC%AC%E4%B8%80%E4%B8%AAWindows%E7%AA%97%E5%8F%A3%E7%A8%8B%E5%BA%8F.html",relativePath:"06.软件开发/11.Win32/02.第一个Windows窗口程序.md",key:"v-ebab6e96",path:"/soft/win32/first/",headers:[{level:2,title:"窗口创建过程",slug:"窗口创建过程",normalizedTitle:"窗口创建过程",charIndex:2},{level:2,title:"窗口类概念",slug:"窗口类概念",normalizedTitle:"窗口类概念",charIndex:135},{level:2,title:"窗口类的分类",slug:"窗口类的分类",normalizedTitle:"窗口类的分类",charIndex:221},{level:2,title:"窗口类结构体",slug:"窗口类结构体",normalizedTitle:"窗口类结构体",charIndex:364},{level:2,title:"窗口创建",slug:"窗口创建",normalizedTitle:"窗口创建",charIndex:2},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:1428}],headersStr:"窗口创建过程 窗口类概念 窗口类的分类 窗口类结构体 窗口创建 代码",content:'# 窗口创建过程\n\n * 定义WinMain函数\n * 定义窗口处理函数（自定义，处理消息）\n * 注册窗口类（向操作系统写入一些数据）\n * 创建窗口（内存中创建窗口）\n * 显示窗口（绘制窗口的图像）\n * 消息循环（获取、翻译、派发消息）\n * 消息处理\n\n\n# 窗口类概念\n\n * 窗口类包含了窗口的各种参数信息的数据结构\n * 每个窗口都具有窗口类，基于窗口类创建窗口\n * 每个窗口类都具有一个名称，使用前必须注册到系统\n\n\n# 窗口类的分类\n\n * 系统窗口类\n   \n   系统已经定义好的的窗口类，所有应用程序都可以直接使用\n\n * 应用程序全局窗口类\n   \n   由用户自己定义，当前应用程序所有模块都可以使用\n\n * 应用程序局部窗口类\n   \n   由用户自己定义，当前应用程序本模块可以使用\n\n\n# 窗口类结构体\n\ntypedef struct WNDCLASS {\n    UINT        style;\t\t\t// 窗口类的风格\n    WNDPROC     lpfnWndProc;\t// 窗口处理函数\n    int         cbClsExtra;\t\t// 窗口类的附加数据buff大小\n    int         cbWndExtra;\t\t// 窗口的附加数据buff大小\n    HINSTANCE   hInstance;\t\t// 当前模块的实例句柄\n    HICON       hIcon;\t\t\t// 窗口图标句柄\n    HCURSOR     hCursor;\t\t// 鼠标句柄\n    HBRUSH      hbrBackground;\t// 绘制窗口背景的画刷句柄\n    LPCSTR      lpszMenuName;\t// 窗口菜单的资源ID字符串\n    LPCSTR      lpszClassName;\t// 窗口类名称\n} WNDCLASSA, *PWNDCLASSA;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 窗口创建\n\nWINUSERAPI\nHWND\nWINAPI\nCreateWindowExA(\n    _In_ DWORD dwExStyle,\t\t\t// 窗口扩展风格\n    _In_opt_ LPCSTR lpClassName,\t// 已注册窗口类名称\n    _In_opt_ LPCSTR lpWindowName,\t// 窗口标题栏名字\n    _In_ DWORD dwStyle,\t\t\t\t// 窗口基本风格\n    _In_ int X,\t\t\t\t\t\t// 窗口左上角水平坐标\n    _In_ int Y,\t\t\t\t\t\t// 窗口左上角垂直坐标\n    _In_ int nWidth,\t\t\t\t// 窗口宽度\n    _In_ int nHeight,\t\t\t\t// 窗口高度\n    _In_opt_ HWND hWndParent,\t\t// 窗口的父窗口句柄\n    _In_opt_ HMENU hMenu,\t\t\t// 窗口菜单句柄\n    _In_opt_ HINSTANCE hInstance,\t// 应用程序实例句柄\n    _In_opt_ LPVOID lpParam);\t\t// 创建窗口的附加参数\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 代码\n\n#include <Windows.h>\n\n//窗口处理函数\nLRESULT CALLBACK WndProc(HWND hWnd, UINT msgID, WPARAM wParam, LPARAM lParam) {\n    \n\treturn DefWindowProc(hWnd, msgID, wParam, lParam);\n}\n\n//入口函数\nint CALLBACK WinMain(HINSTANCE hInstance, HINSTANCE hPreInstance, LPSTR lpCmdLine, int nCmdShow) {\n\t// 注册窗口类\n\tWNDCLASS wc = { 0 };\n\twc.cbClsExtra = 0;\n\twc.cbWndExtra = 0;\n\twc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n\twc.hCursor = NULL;\n\twc.hIcon = NULL;\n\twc.hInstance = hInstance;\n\twc.lpfnWndProc = WndProc;\n\twc.lpszClassName = "Main";\n\twc.lpszMenuName = NULL;\n\twc.style = CS_HREDRAW | CS_VREDRAW;\n\n\tRegisterClass(&wc);\n\n\t//在内存中创建窗口\n\tHWND hWnd = CreateWindow("Main", "Window", WS_OVERLAPPEDWINDOW, 100, 100, 500, 500, NULL, NULL, hInstance, NULL);\n\t//显示窗口\n\tShowWindow(hWnd, SW_SHOW);\n\tUpdateWindow(hWnd);\n\t// 消息循环，避免窗口消失\n\tMSG nMsg = { 0 };\n\twhile (GetMessage(&nMsg, NULL, 0, 0))\n\t{\n\t\tTranslateMessage(&nMsg);\n\t\t//将消息交给窗口处理函数\n\t\tDispatchMessage(&nMsg);\n\t}\n\treturn 0;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n',normalizedContent:'# 窗口创建过程\n\n * 定义winmain函数\n * 定义窗口处理函数（自定义，处理消息）\n * 注册窗口类（向操作系统写入一些数据）\n * 创建窗口（内存中创建窗口）\n * 显示窗口（绘制窗口的图像）\n * 消息循环（获取、翻译、派发消息）\n * 消息处理\n\n\n# 窗口类概念\n\n * 窗口类包含了窗口的各种参数信息的数据结构\n * 每个窗口都具有窗口类，基于窗口类创建窗口\n * 每个窗口类都具有一个名称，使用前必须注册到系统\n\n\n# 窗口类的分类\n\n * 系统窗口类\n   \n   系统已经定义好的的窗口类，所有应用程序都可以直接使用\n\n * 应用程序全局窗口类\n   \n   由用户自己定义，当前应用程序所有模块都可以使用\n\n * 应用程序局部窗口类\n   \n   由用户自己定义，当前应用程序本模块可以使用\n\n\n# 窗口类结构体\n\ntypedef struct wndclass {\n    uint        style;\t\t\t// 窗口类的风格\n    wndproc     lpfnwndproc;\t// 窗口处理函数\n    int         cbclsextra;\t\t// 窗口类的附加数据buff大小\n    int         cbwndextra;\t\t// 窗口的附加数据buff大小\n    hinstance   hinstance;\t\t// 当前模块的实例句柄\n    hicon       hicon;\t\t\t// 窗口图标句柄\n    hcursor     hcursor;\t\t// 鼠标句柄\n    hbrush      hbrbackground;\t// 绘制窗口背景的画刷句柄\n    lpcstr      lpszmenuname;\t// 窗口菜单的资源id字符串\n    lpcstr      lpszclassname;\t// 窗口类名称\n} wndclassa, *pwndclassa;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 窗口创建\n\nwinuserapi\nhwnd\nwinapi\ncreatewindowexa(\n    _in_ dword dwexstyle,\t\t\t// 窗口扩展风格\n    _in_opt_ lpcstr lpclassname,\t// 已注册窗口类名称\n    _in_opt_ lpcstr lpwindowname,\t// 窗口标题栏名字\n    _in_ dword dwstyle,\t\t\t\t// 窗口基本风格\n    _in_ int x,\t\t\t\t\t\t// 窗口左上角水平坐标\n    _in_ int y,\t\t\t\t\t\t// 窗口左上角垂直坐标\n    _in_ int nwidth,\t\t\t\t// 窗口宽度\n    _in_ int nheight,\t\t\t\t// 窗口高度\n    _in_opt_ hwnd hwndparent,\t\t// 窗口的父窗口句柄\n    _in_opt_ hmenu hmenu,\t\t\t// 窗口菜单句柄\n    _in_opt_ hinstance hinstance,\t// 应用程序实例句柄\n    _in_opt_ lpvoid lpparam);\t\t// 创建窗口的附加参数\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 代码\n\n#include <windows.h>\n\n//窗口处理函数\nlresult callback wndproc(hwnd hwnd, uint msgid, wparam wparam, lparam lparam) {\n    \n\treturn defwindowproc(hwnd, msgid, wparam, lparam);\n}\n\n//入口函数\nint callback winmain(hinstance hinstance, hinstance hpreinstance, lpstr lpcmdline, int ncmdshow) {\n\t// 注册窗口类\n\twndclass wc = { 0 };\n\twc.cbclsextra = 0;\n\twc.cbwndextra = 0;\n\twc.hbrbackground = (hbrush)(color_window + 1);\n\twc.hcursor = null;\n\twc.hicon = null;\n\twc.hinstance = hinstance;\n\twc.lpfnwndproc = wndproc;\n\twc.lpszclassname = "main";\n\twc.lpszmenuname = null;\n\twc.style = cs_hredraw | cs_vredraw;\n\n\tregisterclass(&wc);\n\n\t//在内存中创建窗口\n\thwnd hwnd = createwindow("main", "window", ws_overlappedwindow, 100, 100, 500, 500, null, null, hinstance, null);\n\t//显示窗口\n\tshowwindow(hwnd, sw_show);\n\tupdatewindow(hwnd);\n\t// 消息循环，避免窗口消失\n\tmsg nmsg = { 0 };\n\twhile (getmessage(&nmsg, null, 0, 0))\n\t{\n\t\ttranslatemessage(&nmsg);\n\t\t//将消息交给窗口处理函数\n\t\tdispatchmessage(&nmsg);\n\t}\n\treturn 0;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"消息",frontmatter:{title:"消息",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/message/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/03.%E6%B6%88%E6%81%AF.html",relativePath:"06.软件开发/11.Win32/03.消息.md",key:"v-3bc197ef",path:"/soft/win32/message/",headers:[{level:2,title:"消息组成",slug:"消息组成",normalizedTitle:"消息组成",charIndex:2},{level:2,title:"消息作用",slug:"消息作用",normalizedTitle:"消息作用",charIndex:64},{level:2,title:"窗口处理函数",slug:"窗口处理函数",normalizedTitle:"窗口处理函数",charIndex:99},{level:2,title:"常见消息",slug:"常见消息",normalizedTitle:"常见消息",charIndex:356},{level:3,title:"WM_DESTORY",slug:"wm-destory",normalizedTitle:"wm_destory",charIndex:365},{level:3,title:"WM_SYSCOMMAND",slug:"wm-syscommand",normalizedTitle:"wm_syscommand",charIndex:499},{level:3,title:"WM_CREATE",slug:"wm-create",normalizedTitle:"wm_create",charIndex:663},{level:3,title:"WM_SIZE",slug:"wm-size",normalizedTitle:"wm_size",charIndex:820},{level:3,title:"WM_QUIT",slug:"wm-quit",normalizedTitle:"wm_quit",charIndex:986},{level:2,title:"消息循环",slug:"消息循环",normalizedTitle:"消息循环",charIndex:1073},{level:3,title:"阻塞",slug:"阻塞",normalizedTitle:"阻塞",charIndex:1136},{level:3,title:"发送消息",slug:"发送消息",normalizedTitle:"发送消息",charIndex:1530},{level:2,title:"消息分类",slug:"消息分类",normalizedTitle:"消息分类",charIndex:1611},{level:3,title:"系统消息",slug:"系统消息",normalizedTitle:"系统消息",charIndex:1620},{level:3,title:"用户自定义消息",slug:"用户自定义消息",normalizedTitle:"用户自定义消息",charIndex:1664},{level:2,title:"消息队列",slug:"消息队列",normalizedTitle:"消息队列",charIndex:1737},{level:3,title:"概念",slug:"概念",normalizedTitle:"概念",charIndex:1746},{level:3,title:"分类",slug:"分类",normalizedTitle:"分类",charIndex:1613},{level:2,title:"消息和消息队列的关系",slug:"消息和消息队列的关系",normalizedTitle:"消息和消息队列的关系",charIndex:1899},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:1265}],headersStr:"消息组成 消息作用 窗口处理函数 常见消息 WM_DESTORY WM_SYSCOMMAND WM_CREATE WM_SIZE WM_QUIT 消息循环 阻塞 发送消息 消息分类 系统消息 用户自定义消息 消息队列 概念 分类 消息和消息队列的关系 代码",content:'# 消息组成\n\n * 窗口句柄\n * 消息ID\n * 消息的两个参数\n * 消息产生的时间\n * 消息产生时的鼠标位置\n\n\n# 消息作用\n\n当系统通知窗口工作时，就采用消息的方式派发给窗口\n\n\n# 窗口处理函数\n\n每个窗口都必须由窗口处理函数，当系统通知窗口时，会调用窗口处理函数，同时将消息ID和消息参数传递给窗口处理函数。\n\n不处理的消息，使用缺省窗口处理函数DefWindowProc。\n\n//窗口处理函数\nLRESULT CALLBACK WndProc(HWND hWnd, UINT msgID, WPARAM wParam, LPARAM lParam) {\n\treturn DefWindowProc(hWnd, msgID, wParam, lParam);\n}\n\n\n1\n2\n3\n4\n\n\n\n# 常见消息\n\n\n# WM_DESTORY\n\n * 产生时间：窗口被销毁时的消息\n\n * 附带信息：wParam：0，lParam：0\n\n * 常用于窗口被销毁之前，做相应的善后处理，例如资源，内存\n\n * PostQuitMessage(0);\n   \n   \n   1\n   \n\n\n# WM_SYSCOMMAND\n\n * 产生时间：当点击窗口最大化，最小化，关闭等\n * 附带信息：wParam:具体点击的位置，例如关闭SC_CLOSE等\n\nlParam:鼠标光标的位置。\n\nLOWORD(lParam);//水平位置\n\nHIWORD(lParam)；//垂直位置\n\n * 常用于窗口关闭时，提示用户处理\n\n\n# WM_CREATE\n\n * 产生时间：窗口创建成功但还未显示时\n\n * 附带信息：wParam:0\n   \n   lParam: 为CREATESTRUCT类型的指针\n   \n   通过指针可以获取CreateWindowEx中的全部12个参数信息\n\n * 常用于初始化窗口的参数，资源等，包括创建子窗口\n\n\n# WM_SIZE\n\n * 产生时间：在窗口大小安生变化后\n\n * 附带信息：wParam:窗口变化原因\n   \n   lParam: 窗口变化后大小\n   \n   LOWORD(lParam);//变化后宽度\n   \n   HIWORD(lParam)；//变化后高度\n\n * 常用于窗口大小变化后，调整窗口内各个部分的布局\n\n\n# WM_QUIT\n\n * 产生时间：程序员发送\n\n * 附带信息：wParam:PostQuitMessage函数传递的参数\n   \n   lParam: 0\n\n * 用于结束消息循环，当GetMessage收到这个消息后，会返回FALSE，结束while处理，退出消息循环\n\n\n# 消息循环\n\n\n# 阻塞\n\n * GetMessage 从系统获取消息，将消息从系统中移除，阻塞函数。当系统无消息时，会等候下一条消息。\n\n * PeekMessage 以查看的方式从系统获取消息，可以不将消息从系统移除，非阻塞函数。当系统无消息时，返回FALSE，继续执行后续代码。\n   \n   WINUSERAPI\n   BOOL\n   WINAPI\n   PeekMessageA(\n       _Out_ LPMSG lpMsg,\n       _In_opt_ HWND hWnd,\n       _In_ UINT wMsgFilterMin,\n       _In_ UINT wMsgFilterMax,\n       _In_ UINT wRemoveMsg);\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n\n# 发送消息\n\n * SendMessage 发送消息，会等候消息处理结果\n * PostMessage 投递消息，消息发出后会立刻返回，不等候消息执行结果\n\n\n# 消息分类\n\n\n# 系统消息\n\nID范围0-0x03FF，由系统定义好的消息，可以再程序中直接使用\n\n\n# 用户自定义消息\n\nID范围0x0400-0x7FFF(31743)\n\n由用户自定义，满足用户自己的需求。\n\n自定义消息宏：WM_USER\n\n\n# 消息队列\n\n\n# 概念\n\n消息队列时用于存放消息的队列，消息在队列中先进先出，所有窗口程序都具有消息队列，程序可以从队列中获取消息。\n\n\n# 分类\n\n * 系统消息队列-由系统维护的消息队列。存放系统产生的消息，例如鼠标、键盘等。\n * 程序消息队列-属于每一个应用程序（线程）的消息队列。由应用程序（线程）维护。\n\n\n# 消息和消息队列的关系\n\n * 消息和消息队列的关系\n\n1 当鼠标、键盘产生消息时，会将消息存放到系统消息队列\n\n2 系统会根据存放的消息，找到对应程序的消息队列\n\n3 将消息头对到程序的消息队列中\n\n * 根据消息和消息队列之间的使用关系，将消息分成两类\n\n1 队列消息-消息的发送和获取，都是通过消息队列完成。常见：WM_PAINT，键盘、鼠标、定时器\n\n2 非队列消息 -消息的发送和获取，是直接调用消息的窗口处理完成。常见：WM_CREATE，WM_SIZE\n\n\n# 代码\n\n//\n// Created by JS-001 on 2022/10/26 0026.\n//\n#include <Windows.h>\n#include <stdio.h>\n\n#define WM_MYMESSAGE WM_USER+1001\n\nHANDLE g_hOutput = 0;//接收标准输出句柄\n\nvoid OnCreate(HWND hWnd, LPARAM lParam) {\n\tCREATESTRUCT* pcs = (CREATESTRUCT*)lParam;//强转为结构体\n\tchar* pszText = (char*)pcs->lpCreateParams;\n\tMessageBox(NULL, pszText, "info", MB_OK);\n\n\t//发送自定义消息\n\tPostMessage(hWnd, WM_MYMESSAGE, 1, 2);\n\n\tCreateWindowEx(0, "EDIT", pszText, WS_CHILD | WS_VISIBLE | WS_BORDER, 0, 0, 200, 200, hWnd, NULL, 0, NULL);\n}\n\nvoid OnSize(HWND hWnd, LPARAM lParam) {\n\tshort nWidth = LOWORD(lParam);\n\tshort nHeight = HIWORD(lParam);\n\tchar szText[256];\n\tsprintf_s(szText, "WM_SIXE:宽：%d,高：%d\\n", nWidth, nHeight);\n\tWriteConsole(g_hOutput, szText, strlen(szText), NULL, NULL);\n}\n\nvoid OnMyMessage(HWND hWnd, WPARAM wParam, LPARAM lParam) {\n\tchar szText[256];\n\tsprintf_s(szText,"自定义消息被处理：wParam=%d,lParam=%d\\n", wParam, lParam);\n\tMessageBox(hWnd, szText, "info", MB_OK);\n}\n\nvoid OnPaint(HWND hWnd) {\n\tconst char* pszText = "WM_PAINT\\n";\n\tWriteConsole(g_hOutput, pszText, strlen(pszText),NULL,NULL);\n\n\tPAINTSTRUCT ps = { 0 };\n\tHDC hdc = BeginPaint(hWnd, &ps);\n\tTextOut(hdc, 100, 100, "hello", 5);\n\tEndPaint(hWnd, &ps);\n}\n\n//窗口处理函数\nLRESULT CALLBACK WndProc(HWND hWnd, UINT msgID, WPARAM wParam, LPARAM lParam) {\n\tswitch (msgID)\n\t{\n\tcase WM_PAINT:\n\t\tOnPaint(hWnd);\n\t\tbreak;\n\tcase WM_LBUTTONDOWN:\n\t\tInvalidateRect(hWnd, NULL, TRUE);\n\t\tbreak;\n\tcase WM_MYMESSAGE:\n\t\tOnMyMessage(hWnd, wParam, lParam);\n\t\tbreak;\n\tcase WM_SIZE:\n\t\tOnSize(hWnd, lParam);\n\t\tbreak;\n\tcase WM_CREATE:\n\t\tOnCreate(hWnd, lParam);\n\t\tbreak;\n\tcase WM_DESTROY:\n\t\tPostQuitMessage(0);//可以使GetMessage函数返回0\n\t\tbreak;\n\tcase WM_SYSCOMMAND:\n\t\tif (wParam == SC_CLOSE) {\n\t\t\tint nRet = MessageBox(hWnd, "是否退出", "info", MB_YESNO);\n\t\t\tif (nRet == IDYES) {\n\t\t\t\t// 什么都不写，执行DefWindowProc\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn 0; // 无法关闭\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\treturn DefWindowProc(hWnd, msgID, wParam, lParam);\n}\n\n//入口函数\nint CALLBACK WinMain(HINSTANCE hInstance, HINSTANCE hPreInstance, LPSTR lpCmdLine, int nCmdShow) {\n\t//增加DOS\n\tAllocConsole();\n\tg_hOutput = GetStdHandle(STD_OUTPUT_HANDLE);\n\t// 注册窗口类\n\tWNDCLASS wc = { 0 };\n\twc.cbClsExtra = 0;\n\twc.cbWndExtra = 0;\n\twc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n\twc.hCursor = NULL;\n\twc.hIcon = NULL;\n\twc.hInstance = hInstance;\n\twc.lpfnWndProc = WndProc;\n\twc.lpszClassName = "Main";\n\twc.lpszMenuName = NULL;\n\twc.style = CS_HREDRAW | CS_VREDRAW;\n\n\tRegisterClass(&wc);\n\n\t//在内存中创建窗口\n\tchar* pszText = (char*)"hello data";\n\tHWND hWnd = CreateWindowEx(0, "Main", "Window", WS_OVERLAPPEDWINDOW, 100, 100, 500, 500, NULL, NULL, hInstance, pszText);\n\t//显示窗口\n\tShowWindow(hWnd, SW_SHOW);\n\tUpdateWindow(hWnd);\n\t// 消息循环，避免窗口消失\n\tMSG nMsg = { 0 };\n\twhile (GetMessage(&nMsg, NULL, 0, 0))\n\t{\n\t\tTranslateMessage(&nMsg);\n\t\t//将消息交给窗口处理函数\n\t\tDispatchMessage(&nMsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n',normalizedContent:'# 消息组成\n\n * 窗口句柄\n * 消息id\n * 消息的两个参数\n * 消息产生的时间\n * 消息产生时的鼠标位置\n\n\n# 消息作用\n\n当系统通知窗口工作时，就采用消息的方式派发给窗口\n\n\n# 窗口处理函数\n\n每个窗口都必须由窗口处理函数，当系统通知窗口时，会调用窗口处理函数，同时将消息id和消息参数传递给窗口处理函数。\n\n不处理的消息，使用缺省窗口处理函数defwindowproc。\n\n//窗口处理函数\nlresult callback wndproc(hwnd hwnd, uint msgid, wparam wparam, lparam lparam) {\n\treturn defwindowproc(hwnd, msgid, wparam, lparam);\n}\n\n\n1\n2\n3\n4\n\n\n\n# 常见消息\n\n\n# wm_destory\n\n * 产生时间：窗口被销毁时的消息\n\n * 附带信息：wparam：0，lparam：0\n\n * 常用于窗口被销毁之前，做相应的善后处理，例如资源，内存\n\n * postquitmessage(0);\n   \n   \n   1\n   \n\n\n# wm_syscommand\n\n * 产生时间：当点击窗口最大化，最小化，关闭等\n * 附带信息：wparam:具体点击的位置，例如关闭sc_close等\n\nlparam:鼠标光标的位置。\n\nloword(lparam);//水平位置\n\nhiword(lparam)；//垂直位置\n\n * 常用于窗口关闭时，提示用户处理\n\n\n# wm_create\n\n * 产生时间：窗口创建成功但还未显示时\n\n * 附带信息：wparam:0\n   \n   lparam: 为createstruct类型的指针\n   \n   通过指针可以获取createwindowex中的全部12个参数信息\n\n * 常用于初始化窗口的参数，资源等，包括创建子窗口\n\n\n# wm_size\n\n * 产生时间：在窗口大小安生变化后\n\n * 附带信息：wparam:窗口变化原因\n   \n   lparam: 窗口变化后大小\n   \n   loword(lparam);//变化后宽度\n   \n   hiword(lparam)；//变化后高度\n\n * 常用于窗口大小变化后，调整窗口内各个部分的布局\n\n\n# wm_quit\n\n * 产生时间：程序员发送\n\n * 附带信息：wparam:postquitmessage函数传递的参数\n   \n   lparam: 0\n\n * 用于结束消息循环，当getmessage收到这个消息后，会返回false，结束while处理，退出消息循环\n\n\n# 消息循环\n\n\n# 阻塞\n\n * getmessage 从系统获取消息，将消息从系统中移除，阻塞函数。当系统无消息时，会等候下一条消息。\n\n * peekmessage 以查看的方式从系统获取消息，可以不将消息从系统移除，非阻塞函数。当系统无消息时，返回false，继续执行后续代码。\n   \n   winuserapi\n   bool\n   winapi\n   peekmessagea(\n       _out_ lpmsg lpmsg,\n       _in_opt_ hwnd hwnd,\n       _in_ uint wmsgfiltermin,\n       _in_ uint wmsgfiltermax,\n       _in_ uint wremovemsg);\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n\n# 发送消息\n\n * sendmessage 发送消息，会等候消息处理结果\n * postmessage 投递消息，消息发出后会立刻返回，不等候消息执行结果\n\n\n# 消息分类\n\n\n# 系统消息\n\nid范围0-0x03ff，由系统定义好的消息，可以再程序中直接使用\n\n\n# 用户自定义消息\n\nid范围0x0400-0x7fff(31743)\n\n由用户自定义，满足用户自己的需求。\n\n自定义消息宏：wm_user\n\n\n# 消息队列\n\n\n# 概念\n\n消息队列时用于存放消息的队列，消息在队列中先进先出，所有窗口程序都具有消息队列，程序可以从队列中获取消息。\n\n\n# 分类\n\n * 系统消息队列-由系统维护的消息队列。存放系统产生的消息，例如鼠标、键盘等。\n * 程序消息队列-属于每一个应用程序（线程）的消息队列。由应用程序（线程）维护。\n\n\n# 消息和消息队列的关系\n\n * 消息和消息队列的关系\n\n1 当鼠标、键盘产生消息时，会将消息存放到系统消息队列\n\n2 系统会根据存放的消息，找到对应程序的消息队列\n\n3 将消息头对到程序的消息队列中\n\n * 根据消息和消息队列之间的使用关系，将消息分成两类\n\n1 队列消息-消息的发送和获取，都是通过消息队列完成。常见：wm_paint，键盘、鼠标、定时器\n\n2 非队列消息 -消息的发送和获取，是直接调用消息的窗口处理完成。常见：wm_create，wm_size\n\n\n# 代码\n\n//\n// created by js-001 on 2022/10/26 0026.\n//\n#include <windows.h>\n#include <stdio.h>\n\n#define wm_mymessage wm_user+1001\n\nhandle g_houtput = 0;//接收标准输出句柄\n\nvoid oncreate(hwnd hwnd, lparam lparam) {\n\tcreatestruct* pcs = (createstruct*)lparam;//强转为结构体\n\tchar* psztext = (char*)pcs->lpcreateparams;\n\tmessagebox(null, psztext, "info", mb_ok);\n\n\t//发送自定义消息\n\tpostmessage(hwnd, wm_mymessage, 1, 2);\n\n\tcreatewindowex(0, "edit", psztext, ws_child | ws_visible | ws_border, 0, 0, 200, 200, hwnd, null, 0, null);\n}\n\nvoid onsize(hwnd hwnd, lparam lparam) {\n\tshort nwidth = loword(lparam);\n\tshort nheight = hiword(lparam);\n\tchar sztext[256];\n\tsprintf_s(sztext, "wm_sixe:宽：%d,高：%d\\n", nwidth, nheight);\n\twriteconsole(g_houtput, sztext, strlen(sztext), null, null);\n}\n\nvoid onmymessage(hwnd hwnd, wparam wparam, lparam lparam) {\n\tchar sztext[256];\n\tsprintf_s(sztext,"自定义消息被处理：wparam=%d,lparam=%d\\n", wparam, lparam);\n\tmessagebox(hwnd, sztext, "info", mb_ok);\n}\n\nvoid onpaint(hwnd hwnd) {\n\tconst char* psztext = "wm_paint\\n";\n\twriteconsole(g_houtput, psztext, strlen(psztext),null,null);\n\n\tpaintstruct ps = { 0 };\n\thdc hdc = beginpaint(hwnd, &ps);\n\ttextout(hdc, 100, 100, "hello", 5);\n\tendpaint(hwnd, &ps);\n}\n\n//窗口处理函数\nlresult callback wndproc(hwnd hwnd, uint msgid, wparam wparam, lparam lparam) {\n\tswitch (msgid)\n\t{\n\tcase wm_paint:\n\t\tonpaint(hwnd);\n\t\tbreak;\n\tcase wm_lbuttondown:\n\t\tinvalidaterect(hwnd, null, true);\n\t\tbreak;\n\tcase wm_mymessage:\n\t\tonmymessage(hwnd, wparam, lparam);\n\t\tbreak;\n\tcase wm_size:\n\t\tonsize(hwnd, lparam);\n\t\tbreak;\n\tcase wm_create:\n\t\toncreate(hwnd, lparam);\n\t\tbreak;\n\tcase wm_destroy:\n\t\tpostquitmessage(0);//可以使getmessage函数返回0\n\t\tbreak;\n\tcase wm_syscommand:\n\t\tif (wparam == sc_close) {\n\t\t\tint nret = messagebox(hwnd, "是否退出", "info", mb_yesno);\n\t\t\tif (nret == idyes) {\n\t\t\t\t// 什么都不写，执行defwindowproc\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn 0; // 无法关闭\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\treturn defwindowproc(hwnd, msgid, wparam, lparam);\n}\n\n//入口函数\nint callback winmain(hinstance hinstance, hinstance hpreinstance, lpstr lpcmdline, int ncmdshow) {\n\t//增加dos\n\tallocconsole();\n\tg_houtput = getstdhandle(std_output_handle);\n\t// 注册窗口类\n\twndclass wc = { 0 };\n\twc.cbclsextra = 0;\n\twc.cbwndextra = 0;\n\twc.hbrbackground = (hbrush)(color_window + 1);\n\twc.hcursor = null;\n\twc.hicon = null;\n\twc.hinstance = hinstance;\n\twc.lpfnwndproc = wndproc;\n\twc.lpszclassname = "main";\n\twc.lpszmenuname = null;\n\twc.style = cs_hredraw | cs_vredraw;\n\n\tregisterclass(&wc);\n\n\t//在内存中创建窗口\n\tchar* psztext = (char*)"hello data";\n\thwnd hwnd = createwindowex(0, "main", "window", ws_overlappedwindow, 100, 100, 500, 500, null, null, hinstance, psztext);\n\t//显示窗口\n\tshowwindow(hwnd, sw_show);\n\tupdatewindow(hwnd);\n\t// 消息循环，避免窗口消失\n\tmsg nmsg = { 0 };\n\twhile (getmessage(&nmsg, null, 0, 0))\n\t{\n\t\ttranslatemessage(&nmsg);\n\t\t//将消息交给窗口处理函数\n\t\tdispatchmessage(&nmsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"键盘消息",frontmatter:{title:"键盘消息",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/key/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/04.%E9%94%AE%E7%9B%98%E6%B6%88%E6%81%AF.html",relativePath:"06.软件开发/11.Win32/04.键盘消息.md",key:"v-6c03cabc",path:"/soft/win32/key/",headers:[{level:2,title:"键盘消息分类",slug:"键盘消息分类",normalizedTitle:"键盘消息分类",charIndex:2},{level:2,title:"字符消息",slug:"字符消息",normalizedTitle:"字符消息",charIndex:173},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:302}],headersStr:"键盘消息分类 字符消息 代码",content:'# 键盘消息分类\n\n * WM_KEYDOWN-按键被按下时产生\n\n * WM_KEYUP-按键被放开时产生\n\n * WM_SYSKEYDOWN-系统键按下时产生 比如，ALT，F10\n\n * WM_SYSKEYUP-系统键放开时产生\n\n * 附带信息：WPARAM-按键的Virtual Key，LPARAM-按键的参数，例如按下次数\n\n\n# 字符消息\n\nWM_CHAR\n\nTranslateMessage在转换WM_KEYDOWN消息时，杜宇可见字符可以产生WM_CHAR，不可见字符无此消息。\n\n附带信息：WPARAM-输入字符的ASCII字符编码，LPARAM-按键的参数，例如按下次数\n\n\n# 代码\n\n//\n// Created by JS-001 on 2022/10/26 0026.\n//\n#include <Windows.h>\n#include <stdio.h>\n\nHANDLE g_hOutput = 0;//接收标准输出句柄\n\nvoid OnKeyDown(HWND hWnd, WPARAM wParam) {\n\tchar szText[256] = { 0 };\n\tsprintf_s(szText, "WM_KEYDOWN:键码值=%d\\n", wParam);\n\tWriteConsole(g_hOutput, szText, strlen(szText), NULL, NULL);\n}\nvoid OnKeyUp(HWND hWnd, WPARAM wParam) {\n\tchar szText[256] = { 0 };\n\tsprintf_s(szText, "WM_KEYUP:键码值=%d\\n", wParam);\n\tWriteConsole(g_hOutput, szText, strlen(szText), NULL, NULL);\n}\nvoid OnChar(HWND hWnd, WPARAM wParam) {\n\tchar szText[256] = { 0 };\n\tsprintf_s(szText, "WM_CHAR:wParam=%d\\n", wParam);\n\tWriteConsole(g_hOutput, szText, strlen(szText), NULL, NULL);\n}\n\n//窗口处理函数\nLRESULT CALLBACK WndProc(HWND hWnd, UINT msgID, WPARAM wParam, LPARAM lParam) {\n\tswitch (msgID)\n\t{\n\tcase WM_CHAR:\n\t\tOnChar(hWnd, wParam);\n\t\tbreak;\n\tcase WM_KEYDOWN:\n\t\tOnKeyDown(hWnd, wParam);\n\t\tbreak;\n\tcase WM_KEYUP:\n\t\tOnKeyUp(hWnd, wParam);\n\t\tbreak;\n\tcase WM_DESTROY:\n\t\tPostQuitMessage(0);//可以使GetMessage函数返回0\n\t\tbreak;\n\t}\n\treturn DefWindowProc(hWnd, msgID, wParam, lParam);\n}\n\n//入口函数\nint CALLBACK WinMain(HINSTANCE hInstance, HINSTANCE hPreInstance, LPSTR lpCmdLine, int nCmdShow) {\n\t//增加DOS\n\tAllocConsole();\n\tg_hOutput = GetStdHandle(STD_OUTPUT_HANDLE);\n\t// 注册窗口类\n\tWNDCLASS wc = { 0 };\n\twc.cbClsExtra = 0;\n\twc.cbWndExtra = 0;\n\twc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n\twc.hCursor = NULL;\n\twc.hIcon = NULL;\n\twc.hInstance = hInstance;\n\twc.lpfnWndProc = WndProc;\n\twc.lpszClassName = "Main";\n\twc.lpszMenuName = NULL;\n\twc.style = CS_HREDRAW | CS_VREDRAW;\n\n\tRegisterClass(&wc);\n\n\t//在内存中创建窗口\n\tchar* pszText = (char*)"hello data";\n\tHWND hWnd = CreateWindowEx(0, "Main", "Window", WS_OVERLAPPEDWINDOW, 100, 100, 500, 500, NULL, NULL, hInstance, pszText);\n\t//显示窗口\n\tShowWindow(hWnd, SW_SHOW);\n\tUpdateWindow(hWnd);\n\t// 消息循环，避免窗口消失\n\tMSG nMsg = { 0 };\n\twhile (GetMessage(&nMsg, NULL, 0, 0))\n\t{\n\t\tTranslateMessage(&nMsg);\n\t\t//将消息交给窗口处理函数\n\t\tDispatchMessage(&nMsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n',normalizedContent:'# 键盘消息分类\n\n * wm_keydown-按键被按下时产生\n\n * wm_keyup-按键被放开时产生\n\n * wm_syskeydown-系统键按下时产生 比如，alt，f10\n\n * wm_syskeyup-系统键放开时产生\n\n * 附带信息：wparam-按键的virtual key，lparam-按键的参数，例如按下次数\n\n\n# 字符消息\n\nwm_char\n\ntranslatemessage在转换wm_keydown消息时，杜宇可见字符可以产生wm_char，不可见字符无此消息。\n\n附带信息：wparam-输入字符的ascii字符编码，lparam-按键的参数，例如按下次数\n\n\n# 代码\n\n//\n// created by js-001 on 2022/10/26 0026.\n//\n#include <windows.h>\n#include <stdio.h>\n\nhandle g_houtput = 0;//接收标准输出句柄\n\nvoid onkeydown(hwnd hwnd, wparam wparam) {\n\tchar sztext[256] = { 0 };\n\tsprintf_s(sztext, "wm_keydown:键码值=%d\\n", wparam);\n\twriteconsole(g_houtput, sztext, strlen(sztext), null, null);\n}\nvoid onkeyup(hwnd hwnd, wparam wparam) {\n\tchar sztext[256] = { 0 };\n\tsprintf_s(sztext, "wm_keyup:键码值=%d\\n", wparam);\n\twriteconsole(g_houtput, sztext, strlen(sztext), null, null);\n}\nvoid onchar(hwnd hwnd, wparam wparam) {\n\tchar sztext[256] = { 0 };\n\tsprintf_s(sztext, "wm_char:wparam=%d\\n", wparam);\n\twriteconsole(g_houtput, sztext, strlen(sztext), null, null);\n}\n\n//窗口处理函数\nlresult callback wndproc(hwnd hwnd, uint msgid, wparam wparam, lparam lparam) {\n\tswitch (msgid)\n\t{\n\tcase wm_char:\n\t\tonchar(hwnd, wparam);\n\t\tbreak;\n\tcase wm_keydown:\n\t\tonkeydown(hwnd, wparam);\n\t\tbreak;\n\tcase wm_keyup:\n\t\tonkeyup(hwnd, wparam);\n\t\tbreak;\n\tcase wm_destroy:\n\t\tpostquitmessage(0);//可以使getmessage函数返回0\n\t\tbreak;\n\t}\n\treturn defwindowproc(hwnd, msgid, wparam, lparam);\n}\n\n//入口函数\nint callback winmain(hinstance hinstance, hinstance hpreinstance, lpstr lpcmdline, int ncmdshow) {\n\t//增加dos\n\tallocconsole();\n\tg_houtput = getstdhandle(std_output_handle);\n\t// 注册窗口类\n\twndclass wc = { 0 };\n\twc.cbclsextra = 0;\n\twc.cbwndextra = 0;\n\twc.hbrbackground = (hbrush)(color_window + 1);\n\twc.hcursor = null;\n\twc.hicon = null;\n\twc.hinstance = hinstance;\n\twc.lpfnwndproc = wndproc;\n\twc.lpszclassname = "main";\n\twc.lpszmenuname = null;\n\twc.style = cs_hredraw | cs_vredraw;\n\n\tregisterclass(&wc);\n\n\t//在内存中创建窗口\n\tchar* psztext = (char*)"hello data";\n\thwnd hwnd = createwindowex(0, "main", "window", ws_overlappedwindow, 100, 100, 500, 500, null, null, hinstance, psztext);\n\t//显示窗口\n\tshowwindow(hwnd, sw_show);\n\tupdatewindow(hwnd);\n\t// 消息循环，避免窗口消失\n\tmsg nmsg = { 0 };\n\twhile (getmessage(&nmsg, null, 0, 0))\n\t{\n\t\ttranslatemessage(&nmsg);\n\t\t//将消息交给窗口处理函数\n\t\tdispatchmessage(&nmsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"定时器消息",frontmatter:{title:"定时器消息",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/clock/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/06.%E5%AE%9A%E6%97%B6%E5%99%A8%E6%B6%88%E6%81%AF.html",relativePath:"06.软件开发/11.Win32/06.定时器消息.md",key:"v-42e5bfe4",path:"/soft/win32/clock/",headers:[{level:2,title:"定时器消息介绍",slug:"定时器消息介绍",normalizedTitle:"定时器消息介绍",charIndex:2},{level:2,title:"创建和销毁定时器",slug:"创建和销毁定时器",normalizedTitle:"创建和销毁定时器",charIndex:164},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:442}],headersStr:"定时器消息介绍 创建和销毁定时器 代码",content:'# 定时器消息介绍\n\n * 产生时间-在程序中创建定时器，当到达时间间隔时，定时器会向程序发送一个WM_TIMER消息。定时器的精度时ms，但是准确度很低。\n   \n   例如设置时间间隔为1000ms，但是会在非1000ms到达消息。\n\n * 附带信息-wParam:定时器ID，lParam:定时器处理函数的指针。\n\n\n# 创建和销毁定时器\n\n// 创建定时器\nUINT_PTR SetTimer(\n\tHWND hWnd,\t\t\t//窗口句柄\n    UINT_PTR nIDEvent,\t//定时器ID\n    UINT uElapse,\t\t//时间间隔ms\n    TIMERPROC lpTimerFunc\t//定时器处理函数指针，一般不用，为NULL\n);\t//创建成功，返回非0\n// 关闭定时器\nBOOL KillTimer(\n\tHWND hWnd,\n    UINT_PTR uIDEvent\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 代码\n\n/**\n*   Author:icaiwei\n*   Date:2022/11/6 0006\n*/\n\n#include <Windows.h>\n#include <cstdio>\n\nHANDLE g_hOutput = nullptr;//接收标准输出句柄\n\nvoid OnTimer(HWND pHwnd, WPARAM param);\n\n//窗口处理函数\nLRESULT CALLBACK WndProc(HWND hWnd, UINT msgID, WPARAM wParam, LPARAM lParam) {\n    switch (msgID)\n    {\n        case WM_CREATE:\n            SetTimer(hWnd,1,1000,nullptr);\n            SetTimer(hWnd,2,2000,nullptr);\n            break;\n        case WM_TIMER:\n            OnTimer(hWnd,wParam);\n            break;\n        case WM_DESTROY:\n            PostQuitMessage(0);//可以使GetMessage函数返回0\n            break;\n        default:\n            break;\n    }\n    return DefWindowProc(hWnd, msgID, wParam, lParam);\n}\n\nvoid OnTimer(HWND hWnd, WPARAM wParam) {\n    char szText[256];\n    sprintf_s(szText,"WM_TIMER:定时器ID=%d\\n",wParam);\n    WriteConsole(g_hOutput,szText, strlen(szText),nullptr, nullptr);\n}\n\n//入口函数\nint CALLBACK WinMain(HINSTANCE hInstance, HINSTANCE hPreInstance, LPSTR lpCmdLine, int nCmdShow) {\n    //增加DOS\n    AllocConsole();\n    g_hOutput = GetStdHandle(STD_OUTPUT_HANDLE);\n    // 注册窗口类\n    WNDCLASS wc = { 0 };\n    wc.cbClsExtra = 0;\n    wc.cbWndExtra = 0;\n    wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n    wc.hCursor = nullptr;\n    wc.hIcon = nullptr;\n    wc.hInstance = hInstance;\n    wc.lpfnWndProc = WndProc;\n    wc.lpszClassName = "Main";\n    wc.lpszMenuName = nullptr;\n    wc.style = CS_HREDRAW | CS_VREDRAW | CS_DBLCLKS;\n\n    RegisterClass(&wc);\n\n    //在内存中创建窗口\n    char* pszText = (char*)"hello data";\n    HWND hWnd = CreateWindowEx(0, "Main", "Window", WS_OVERLAPPEDWINDOW, 100, 100, 500, 500, nullptr, nullptr, hInstance, pszText);\n    //显示窗口\n    ShowWindow(hWnd, SW_SHOW);\n    UpdateWindow(hWnd);\n    // 消息循环，避免窗口消失\n    MSG nMsg = { nullptr };\n    while (GetMessage(&nMsg, nullptr, 0, 0))\n    {\n        TranslateMessage(&nMsg);\n        //将消息交给窗口处理函数\n        DispatchMessage(&nMsg);\n    }\n    return 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n',normalizedContent:'# 定时器消息介绍\n\n * 产生时间-在程序中创建定时器，当到达时间间隔时，定时器会向程序发送一个wm_timer消息。定时器的精度时ms，但是准确度很低。\n   \n   例如设置时间间隔为1000ms，但是会在非1000ms到达消息。\n\n * 附带信息-wparam:定时器id，lparam:定时器处理函数的指针。\n\n\n# 创建和销毁定时器\n\n// 创建定时器\nuint_ptr settimer(\n\thwnd hwnd,\t\t\t//窗口句柄\n    uint_ptr nidevent,\t//定时器id\n    uint uelapse,\t\t//时间间隔ms\n    timerproc lptimerfunc\t//定时器处理函数指针，一般不用，为null\n);\t//创建成功，返回非0\n// 关闭定时器\nbool killtimer(\n\thwnd hwnd,\n    uint_ptr uidevent\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 代码\n\n/**\n*   author:icaiwei\n*   date:2022/11/6 0006\n*/\n\n#include <windows.h>\n#include <cstdio>\n\nhandle g_houtput = nullptr;//接收标准输出句柄\n\nvoid ontimer(hwnd phwnd, wparam param);\n\n//窗口处理函数\nlresult callback wndproc(hwnd hwnd, uint msgid, wparam wparam, lparam lparam) {\n    switch (msgid)\n    {\n        case wm_create:\n            settimer(hwnd,1,1000,nullptr);\n            settimer(hwnd,2,2000,nullptr);\n            break;\n        case wm_timer:\n            ontimer(hwnd,wparam);\n            break;\n        case wm_destroy:\n            postquitmessage(0);//可以使getmessage函数返回0\n            break;\n        default:\n            break;\n    }\n    return defwindowproc(hwnd, msgid, wparam, lparam);\n}\n\nvoid ontimer(hwnd hwnd, wparam wparam) {\n    char sztext[256];\n    sprintf_s(sztext,"wm_timer:定时器id=%d\\n",wparam);\n    writeconsole(g_houtput,sztext, strlen(sztext),nullptr, nullptr);\n}\n\n//入口函数\nint callback winmain(hinstance hinstance, hinstance hpreinstance, lpstr lpcmdline, int ncmdshow) {\n    //增加dos\n    allocconsole();\n    g_houtput = getstdhandle(std_output_handle);\n    // 注册窗口类\n    wndclass wc = { 0 };\n    wc.cbclsextra = 0;\n    wc.cbwndextra = 0;\n    wc.hbrbackground = (hbrush)(color_window + 1);\n    wc.hcursor = nullptr;\n    wc.hicon = nullptr;\n    wc.hinstance = hinstance;\n    wc.lpfnwndproc = wndproc;\n    wc.lpszclassname = "main";\n    wc.lpszmenuname = nullptr;\n    wc.style = cs_hredraw | cs_vredraw | cs_dblclks;\n\n    registerclass(&wc);\n\n    //在内存中创建窗口\n    char* psztext = (char*)"hello data";\n    hwnd hwnd = createwindowex(0, "main", "window", ws_overlappedwindow, 100, 100, 500, 500, nullptr, nullptr, hinstance, psztext);\n    //显示窗口\n    showwindow(hwnd, sw_show);\n    updatewindow(hwnd);\n    // 消息循环，避免窗口消失\n    msg nmsg = { nullptr };\n    while (getmessage(&nmsg, nullptr, 0, 0))\n    {\n        translatemessage(&nmsg);\n        //将消息交给窗口处理函数\n        dispatchmessage(&nmsg);\n    }\n    return 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"鼠标消息",frontmatter:{title:"鼠标消息",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/mouse/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/05.%E9%BC%A0%E6%A0%87%E6%B6%88%E6%81%AF.html",relativePath:"06.软件开发/11.Win32/05.鼠标消息.md",key:"v-151dade6",path:"/soft/win32/mouse/",headers:[{level:2,title:"鼠标消息分类",slug:"鼠标消息分类",normalizedTitle:"鼠标消息分类",charIndex:2},{level:2,title:"鼠标双击消息",slug:"鼠标双击消息",normalizedTitle:"鼠标双击消息",charIndex:336},{level:2,title:"鼠标滚轮消息",slug:"鼠标滚轮消息",normalizedTitle:"鼠标滚轮消息",charIndex:546},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:713}],headersStr:"鼠标消息分类 鼠标双击消息 鼠标滚轮消息 代码",content:'# 鼠标消息分类\n\n * 基本鼠标消息\n   * WM_LBUTTONDOWN\n   * WM_LBUTTONUP\n   * WM_RBUTTONDOWN\n   * WM_RBUTNUP\n   * WMMOUSEMOVE\n * 双击消息\n   * WM_LBUTTONDBLCLK\n   * WM_RBUTTONDBLCLK\n * 滚轮消息\n   * WM_MOUSEWHEEL\n * 附带信息\n\nwParam-其他按键状态，例如Ctrl/Shift\n\nlParam-鼠标的位置，窗口客户区坐标系，LOWORD X坐标位置；HIWORD Y坐标位置\n\n * 一般情况鼠标按下/抬起成对出现，在鼠标移动过程中，会根据移动速度产生一系列WM_MOUSEMOVE消息。\n\n\n# 鼠标双击消息\n\n * 附带信息\n\nwParam-其他按键状态，例如Ctrl/Shift\n\nlParam-鼠标的位置，窗口客户区坐标系，LOWORD X坐标位置；HIWORD Y坐标位置\n\n * 消息产生顺序\n\n以左键双击为例：\n\nWM_LBUTTONDOWN\n\nWM_LBUTTON_UP\n\nWM_LBUTTONBLCLK\n\nWM_LBUTTONUP\n\n使用时需要在注册窗口类的时候添加CS_DBLCLKS风格\n\n\n# 鼠标滚轮消息\n\n * 附带信息\n\nwParam-\n\nLOWORD-其他按键状态，例如Ctrl/Shift\n\nHIWORD-滚轮偏移量，通过正负值表示滚动方向，正：向前滚动，负：向后滚动\n\nlParam-鼠标的位置，窗口客户区坐标系，LOWORD X坐标位置；HIWORD Y坐标位置\n\n * 通过偏移量，获取滚动的方向和距离\n\n\n# 代码\n\n//\n// Created by JS-001 on 2022/10/26 0026.\n//\n#include <Windows.h>\n#include <stdio.h>\n\nHANDLE g_hOutput = 0;//接收标准输出句柄\nvoid OnLButtonDown(HWND hWnd, WPARAM wParam, LPARAM lParam) {\n\tchar szText[256] = { 0 };\n\tsprintf_s(szText, "WM_LBUTTONDOWN:其他按键状态：%d,X=%d,Y=%d\\n", wParam, LOWORD(lParam), HIWORD(lParam));\n\tWriteConsole(g_hOutput, szText, strlen(szText), NULL, NULL);\n}\nvoid OnLButtonUp(HWND hWnd, WPARAM wParam, LPARAM lParam) {\n\tchar szText[256] = { 0 };\n\tsprintf_s(szText, "WM_LBUTTONUP:其他按键状态：%d,X=%d,Y=%d\\n", wParam, LOWORD(lParam), HIWORD(lParam));\n\tWriteConsole(g_hOutput, szText, strlen(szText), NULL, NULL);\n}\nvoid OnMouseMove(HWND hWnd, WPARAM wParam, LPARAM lParam) {\n\tchar szText[256] = { 0 };\n\tsprintf_s(szText, "WM_MOUSEMOVE:其他按键状态：%d,X=%d,Y=%d\\n", wParam, LOWORD(lParam), HIWORD(lParam));\n\t// WriteConsole(g_hOutput, szText, strlen(szText), NULL, NULL);\n}\nvoid OnLButtonDbClk(HWND hWnd, WPARAM wParam, LPARAM lParam) {\n\tchar szText[256] = { 0 };\n\tsprintf_s(szText, "WM_LBUTTONDBLCLK:其他按键状态：%d,X=%d,Y=%d\\n", wParam, LOWORD(lParam), HIWORD(lParam));\n\tWriteConsole(g_hOutput, szText, strlen(szText), NULL, NULL);\n}\n\nvoid OnMouseWheel(HWND hWnd, WPARAM wParam) {\n\tshort nDelta = HIWORD(wParam);\n\tchar szText[256] = { 0 };\n\tsprintf_s(szText, "WM_MOUSEHWHEEL:偏移量=%d\\n", nDelta);\n\tWriteConsole(g_hOutput, szText, strlen(szText), NULL, NULL);\n}\n\n//窗口处理函数\nLRESULT CALLBACK WndProc(HWND hWnd, UINT msgID, WPARAM wParam, LPARAM lParam) {\n\tswitch (msgID)\n\t{\n\tcase WM_MOUSEHWHEEL:\n\t\tOnMouseWheel(hWnd, wParam);\n\t\tbreak;\n\tcase WM_LBUTTONDBLCLK:\n\t\tOnLButtonDbClk(hWnd, wParam, lParam);\n\t\tbreak;\n\tcase WM_MOUSEMOVE:\n\t\tOnMouseMove(hWnd, wParam, lParam);\n\t\tbreak;\n\tcase WM_LBUTTONDOWN:\n\t\tOnLButtonDown(hWnd, wParam, lParam);\n\t\tbreak;\n\tcase WM_LBUTTONUP:\n\t\tOnLButtonUp(hWnd, wParam, lParam);\n\t\tbreak;\n\tcase WM_DESTROY:\n\t\tPostQuitMessage(0);//可以使GetMessage函数返回0\n\t\tbreak;\n\t}\n\treturn DefWindowProc(hWnd, msgID, wParam, lParam);\n}\n\n//入口函数\nint CALLBACK WinMain(HINSTANCE hInstance, HINSTANCE hPreInstance, LPSTR lpCmdLine, int nCmdShow) {\n\t//增加DOS\n\tAllocConsole();\n\tg_hOutput = GetStdHandle(STD_OUTPUT_HANDLE);\n\t// 注册窗口类\n\tWNDCLASS wc = { 0 };\n\twc.cbClsExtra = 0;\n\twc.cbWndExtra = 0;\n\twc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n\twc.hCursor = NULL;\n\twc.hIcon = NULL;\n\twc.hInstance = hInstance;\n\twc.lpfnWndProc = WndProc;\n\twc.lpszClassName = "Main";\n\twc.lpszMenuName = NULL;\n\twc.style = CS_HREDRAW | CS_VREDRAW | CS_DBLCLKS;\n\n\tRegisterClass(&wc);\n\n\t//在内存中创建窗口\n\tchar* pszText = (char*)"hello data";\n\tHWND hWnd = CreateWindowEx(0, "Main", "Window", WS_OVERLAPPEDWINDOW, 100, 100, 500, 500, NULL, NULL, hInstance, pszText);\n\t//显示窗口\n\tShowWindow(hWnd, SW_SHOW);\n\tUpdateWindow(hWnd);\n\t// 消息循环，避免窗口消失\n\tMSG nMsg = { 0 };\n\twhile (GetMessage(&nMsg, NULL, 0, 0))\n\t{\n\t\tTranslateMessage(&nMsg);\n\t\t//将消息交给窗口处理函数\n\t\tDispatchMessage(&nMsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n',normalizedContent:'# 鼠标消息分类\n\n * 基本鼠标消息\n   * wm_lbuttondown\n   * wm_lbuttonup\n   * wm_rbuttondown\n   * wm_rbutnup\n   * wmmousemove\n * 双击消息\n   * wm_lbuttondblclk\n   * wm_rbuttondblclk\n * 滚轮消息\n   * wm_mousewheel\n * 附带信息\n\nwparam-其他按键状态，例如ctrl/shift\n\nlparam-鼠标的位置，窗口客户区坐标系，loword x坐标位置；hiword y坐标位置\n\n * 一般情况鼠标按下/抬起成对出现，在鼠标移动过程中，会根据移动速度产生一系列wm_mousemove消息。\n\n\n# 鼠标双击消息\n\n * 附带信息\n\nwparam-其他按键状态，例如ctrl/shift\n\nlparam-鼠标的位置，窗口客户区坐标系，loword x坐标位置；hiword y坐标位置\n\n * 消息产生顺序\n\n以左键双击为例：\n\nwm_lbuttondown\n\nwm_lbutton_up\n\nwm_lbuttonblclk\n\nwm_lbuttonup\n\n使用时需要在注册窗口类的时候添加cs_dblclks风格\n\n\n# 鼠标滚轮消息\n\n * 附带信息\n\nwparam-\n\nloword-其他按键状态，例如ctrl/shift\n\nhiword-滚轮偏移量，通过正负值表示滚动方向，正：向前滚动，负：向后滚动\n\nlparam-鼠标的位置，窗口客户区坐标系，loword x坐标位置；hiword y坐标位置\n\n * 通过偏移量，获取滚动的方向和距离\n\n\n# 代码\n\n//\n// created by js-001 on 2022/10/26 0026.\n//\n#include <windows.h>\n#include <stdio.h>\n\nhandle g_houtput = 0;//接收标准输出句柄\nvoid onlbuttondown(hwnd hwnd, wparam wparam, lparam lparam) {\n\tchar sztext[256] = { 0 };\n\tsprintf_s(sztext, "wm_lbuttondown:其他按键状态：%d,x=%d,y=%d\\n", wparam, loword(lparam), hiword(lparam));\n\twriteconsole(g_houtput, sztext, strlen(sztext), null, null);\n}\nvoid onlbuttonup(hwnd hwnd, wparam wparam, lparam lparam) {\n\tchar sztext[256] = { 0 };\n\tsprintf_s(sztext, "wm_lbuttonup:其他按键状态：%d,x=%d,y=%d\\n", wparam, loword(lparam), hiword(lparam));\n\twriteconsole(g_houtput, sztext, strlen(sztext), null, null);\n}\nvoid onmousemove(hwnd hwnd, wparam wparam, lparam lparam) {\n\tchar sztext[256] = { 0 };\n\tsprintf_s(sztext, "wm_mousemove:其他按键状态：%d,x=%d,y=%d\\n", wparam, loword(lparam), hiword(lparam));\n\t// writeconsole(g_houtput, sztext, strlen(sztext), null, null);\n}\nvoid onlbuttondbclk(hwnd hwnd, wparam wparam, lparam lparam) {\n\tchar sztext[256] = { 0 };\n\tsprintf_s(sztext, "wm_lbuttondblclk:其他按键状态：%d,x=%d,y=%d\\n", wparam, loword(lparam), hiword(lparam));\n\twriteconsole(g_houtput, sztext, strlen(sztext), null, null);\n}\n\nvoid onmousewheel(hwnd hwnd, wparam wparam) {\n\tshort ndelta = hiword(wparam);\n\tchar sztext[256] = { 0 };\n\tsprintf_s(sztext, "wm_mousehwheel:偏移量=%d\\n", ndelta);\n\twriteconsole(g_houtput, sztext, strlen(sztext), null, null);\n}\n\n//窗口处理函数\nlresult callback wndproc(hwnd hwnd, uint msgid, wparam wparam, lparam lparam) {\n\tswitch (msgid)\n\t{\n\tcase wm_mousehwheel:\n\t\tonmousewheel(hwnd, wparam);\n\t\tbreak;\n\tcase wm_lbuttondblclk:\n\t\tonlbuttondbclk(hwnd, wparam, lparam);\n\t\tbreak;\n\tcase wm_mousemove:\n\t\tonmousemove(hwnd, wparam, lparam);\n\t\tbreak;\n\tcase wm_lbuttondown:\n\t\tonlbuttondown(hwnd, wparam, lparam);\n\t\tbreak;\n\tcase wm_lbuttonup:\n\t\tonlbuttonup(hwnd, wparam, lparam);\n\t\tbreak;\n\tcase wm_destroy:\n\t\tpostquitmessage(0);//可以使getmessage函数返回0\n\t\tbreak;\n\t}\n\treturn defwindowproc(hwnd, msgid, wparam, lparam);\n}\n\n//入口函数\nint callback winmain(hinstance hinstance, hinstance hpreinstance, lpstr lpcmdline, int ncmdshow) {\n\t//增加dos\n\tallocconsole();\n\tg_houtput = getstdhandle(std_output_handle);\n\t// 注册窗口类\n\twndclass wc = { 0 };\n\twc.cbclsextra = 0;\n\twc.cbwndextra = 0;\n\twc.hbrbackground = (hbrush)(color_window + 1);\n\twc.hcursor = null;\n\twc.hicon = null;\n\twc.hinstance = hinstance;\n\twc.lpfnwndproc = wndproc;\n\twc.lpszclassname = "main";\n\twc.lpszmenuname = null;\n\twc.style = cs_hredraw | cs_vredraw | cs_dblclks;\n\n\tregisterclass(&wc);\n\n\t//在内存中创建窗口\n\tchar* psztext = (char*)"hello data";\n\thwnd hwnd = createwindowex(0, "main", "window", ws_overlappedwindow, 100, 100, 500, 500, null, null, hinstance, psztext);\n\t//显示窗口\n\tshowwindow(hwnd, sw_show);\n\tupdatewindow(hwnd);\n\t// 消息循环，避免窗口消失\n\tmsg nmsg = { 0 };\n\twhile (getmessage(&nmsg, null, 0, 0))\n\t{\n\t\ttranslatemessage(&nmsg);\n\t\t//将消息交给窗口处理函数\n\t\tdispatchmessage(&nmsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"菜单资源",frontmatter:{title:"菜单资源",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/menu/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/07.%E8%8F%9C%E5%8D%95%E8%B5%84%E6%BA%90.html",relativePath:"06.软件开发/11.Win32/07.菜单资源.md",key:"v-39f3f63b",path:"/soft/win32/menu/",headers:[{level:2,title:"菜单分类",slug:"菜单分类",normalizedTitle:"菜单分类",charIndex:2},{level:2,title:"资源相关",slug:"资源相关",normalizedTitle:"资源相关",charIndex:62},{level:2,title:"菜单资源的使用",slug:"菜单资源的使用",normalizedTitle:"菜单资源的使用",charIndex:102},{level:2,title:"命令消息处理",slug:"命令消息处理",normalizedTitle:"命令消息处理",charIndex:318},{level:2,title:"上下文菜单",slug:"上下文菜单",normalizedTitle:"上下文菜单",charIndex:385},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:823}],headersStr:"菜单分类 资源相关 菜单资源的使用 命令消息处理 上下文菜单 代码",content:'# 菜单分类\n\n * 窗口的顶层菜单\n * 弹出式菜单\n * 系统菜单\n\nHMENU类型表示菜单，ID表示菜单项。\n\n\n# 资源相关\n\n * 资源脚本文件：*rc文件\n * 编译器：RC.exe\n\n\n# 菜单资源的使用\n\n * 添加菜单资源\n\n * 加载菜单资源\n   \n   * 注册窗口类时设置菜单\n   \n   * 创建窗口传参设置菜单\n   \n   * 在主窗口WM_CREATE消息中利用SetMenu函数设置菜单\n   \n   * HMENU LoadMenu(\n     \n     HINSTANCE hInstance,\n     \n     LPCTSTR lpMenuName\n     \n     );\n\n\n# 命令消息处理\n\nwParam:\n\nHIWORD-对于菜单为0\n\nLOWORD-菜单项的ID\n\nlParam:\n\n对于菜单为0\n\n\n# 上下文菜单\n\n * 显示上下文菜单\n\nBOOL TrackPopupMenu(\n\tHMENU hMenu,\t\t\t//菜单句柄\n    UINT uFlags,\t\t\t//显示方式\n    int x,\t\t\t\t\t//水平位置，屏幕坐标系\n    int y,\t\t\t\t\t//垂直位置，屏幕坐标系\n    int nReserved,\t\t\t//保留，必须为0\n    HWND hWnd,\t\t\t\t//句柄\n    CONST RECT *prcRect\t\t//NULL，忽略\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n * WM_RBUTTONUP\n\n鼠标右键弹起消息为窗口坐标系坐标，将其转换为屏幕坐标系ClientToScreen\n\n * WM_CONTEXTMENU\n\nwParam:右键点击的窗口句柄\n\nlParam:LOWROD X坐标，屏幕坐标系，HIWORD Y坐标，屏幕坐标系\n\nWM_CONTEXTMENU消息是在WM_RBUTTONUP消息之后产生\n\n\n# 代码\n\n//\n// Created by JS-001 on 2022/10/26 0026.\n//\n#include <Windows.h>\n#include <stdio.h>\n#include "resource.h"\n\nHANDLE g_hOutput = 0;//接收标准输出句柄\nHINSTANCE g_hInstance = 0;//接收标准输出句柄\n\nvoid OnCommand(HWND hWnd, WPARAM wParam) {\n\tswitch (LOWORD(wParam))\n\t{\n\tcase ID_NEW:\n\t\tMessageBox(hWnd, "新建被点击", "info", MB_OK);\n\t\tbreak;\n\tcase ID_EXIT:\n\t\tMessageBox(hWnd, "退出被点击", "info", MB_OK);\n\t\tbreak;\n\tcase ID_ABOUT:\n\t\tMessageBox(hWnd, "关于被点击", "info", MB_OK);\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n\t}\n}\nvoid OnContextMenu(HWND hWnd, LPARAM lParam) {\n\tHMENU hMain = LoadMenu(g_hInstance, (CHAR*)IDR_MENU1);\n\tHMENU hPopup = GetSubMenu(hMain,0);\n\tTrackPopupMenu(hPopup, TPM_LEFTALIGN | TPM_TOPALIGN, \n\t\t\t\t\tLOWORD(lParam),HIWORD(lParam),0,hWnd,NULL);\n}\n\n//窗口处理函数\nLRESULT CALLBACK WndProc(HWND hWnd, UINT msgID, WPARAM wParam, LPARAM lParam) {\n\tswitch (msgID)\n\t{\n\tcase WM_CONTEXTMENU:\n\t\tOnContextMenu(hWnd,lParam);\n\t\tbreak;\n\tcase WM_COMMAND:\n\t\tOnCommand(hWnd, wParam);\n\t\tbreak;\n\tcase WM_DESTROY:\n\t\tPostQuitMessage(0);//可以使GetMessage函数返回0\n\t\tbreak;\n\t}\n\treturn DefWindowProc(hWnd, msgID, wParam, lParam);\n}\n\n//入口函数\nint CALLBACK WinMain(HINSTANCE hInstance, HINSTANCE hPreInstance, LPSTR lpCmdLine, int nCmdShow) {\n\t//增加DOS\n\tAllocConsole();\n\tg_hOutput = GetStdHandle(STD_OUTPUT_HANDLE);\n\t// 注册窗口类\n\tWNDCLASS wc = { 0 };\n\twc.cbClsExtra = 0;\n\twc.cbWndExtra = 0;\n\twc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n\twc.hCursor = NULL;\n\twc.hIcon = NULL;\n\twc.hInstance = hInstance;\n\twc.lpfnWndProc = WndProc;\n\twc.lpszClassName = "Main";\n\t//wc.lpszMenuName = (char*)IDR_MENU1;\n\twc.lpszMenuName = NULL;\n\twc.style = CS_HREDRAW | CS_VREDRAW;\n\n\tRegisterClass(&wc);\n\n\t//在内存中创建窗口\n\tchar* pszText = (char*)"hello data";\n\tHMENU hMenu = LoadMenu(hInstance, (char*)IDR_MENU1);\n\tHWND hWnd = CreateWindowEx(0, "Main", "Window", WS_OVERLAPPEDWINDOW, 100, 100, 500, 500,NULL, hMenu, hInstance, pszText);\n\t//显示窗口\n\tShowWindow(hWnd, SW_SHOW);\n\tUpdateWindow(hWnd);\n\t// 消息循环，避免窗口消失\n\tMSG nMsg = { 0 };\n\twhile (GetMessage(&nMsg, NULL, 0, 0))\n\t{\n\t\tTranslateMessage(&nMsg);\n\t\t//将消息交给窗口处理函数\n\t\tDispatchMessage(&nMsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n',normalizedContent:'# 菜单分类\n\n * 窗口的顶层菜单\n * 弹出式菜单\n * 系统菜单\n\nhmenu类型表示菜单，id表示菜单项。\n\n\n# 资源相关\n\n * 资源脚本文件：*rc文件\n * 编译器：rc.exe\n\n\n# 菜单资源的使用\n\n * 添加菜单资源\n\n * 加载菜单资源\n   \n   * 注册窗口类时设置菜单\n   \n   * 创建窗口传参设置菜单\n   \n   * 在主窗口wm_create消息中利用setmenu函数设置菜单\n   \n   * hmenu loadmenu(\n     \n     hinstance hinstance,\n     \n     lpctstr lpmenuname\n     \n     );\n\n\n# 命令消息处理\n\nwparam:\n\nhiword-对于菜单为0\n\nloword-菜单项的id\n\nlparam:\n\n对于菜单为0\n\n\n# 上下文菜单\n\n * 显示上下文菜单\n\nbool trackpopupmenu(\n\thmenu hmenu,\t\t\t//菜单句柄\n    uint uflags,\t\t\t//显示方式\n    int x,\t\t\t\t\t//水平位置，屏幕坐标系\n    int y,\t\t\t\t\t//垂直位置，屏幕坐标系\n    int nreserved,\t\t\t//保留，必须为0\n    hwnd hwnd,\t\t\t\t//句柄\n    const rect *prcrect\t\t//null，忽略\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n * wm_rbuttonup\n\n鼠标右键弹起消息为窗口坐标系坐标，将其转换为屏幕坐标系clienttoscreen\n\n * wm_contextmenu\n\nwparam:右键点击的窗口句柄\n\nlparam:lowrod x坐标，屏幕坐标系，hiword y坐标，屏幕坐标系\n\nwm_contextmenu消息是在wm_rbuttonup消息之后产生\n\n\n# 代码\n\n//\n// created by js-001 on 2022/10/26 0026.\n//\n#include <windows.h>\n#include <stdio.h>\n#include "resource.h"\n\nhandle g_houtput = 0;//接收标准输出句柄\nhinstance g_hinstance = 0;//接收标准输出句柄\n\nvoid oncommand(hwnd hwnd, wparam wparam) {\n\tswitch (loword(wparam))\n\t{\n\tcase id_new:\n\t\tmessagebox(hwnd, "新建被点击", "info", mb_ok);\n\t\tbreak;\n\tcase id_exit:\n\t\tmessagebox(hwnd, "退出被点击", "info", mb_ok);\n\t\tbreak;\n\tcase id_about:\n\t\tmessagebox(hwnd, "关于被点击", "info", mb_ok);\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n\t}\n}\nvoid oncontextmenu(hwnd hwnd, lparam lparam) {\n\thmenu hmain = loadmenu(g_hinstance, (char*)idr_menu1);\n\thmenu hpopup = getsubmenu(hmain,0);\n\ttrackpopupmenu(hpopup, tpm_leftalign | tpm_topalign, \n\t\t\t\t\tloword(lparam),hiword(lparam),0,hwnd,null);\n}\n\n//窗口处理函数\nlresult callback wndproc(hwnd hwnd, uint msgid, wparam wparam, lparam lparam) {\n\tswitch (msgid)\n\t{\n\tcase wm_contextmenu:\n\t\toncontextmenu(hwnd,lparam);\n\t\tbreak;\n\tcase wm_command:\n\t\toncommand(hwnd, wparam);\n\t\tbreak;\n\tcase wm_destroy:\n\t\tpostquitmessage(0);//可以使getmessage函数返回0\n\t\tbreak;\n\t}\n\treturn defwindowproc(hwnd, msgid, wparam, lparam);\n}\n\n//入口函数\nint callback winmain(hinstance hinstance, hinstance hpreinstance, lpstr lpcmdline, int ncmdshow) {\n\t//增加dos\n\tallocconsole();\n\tg_houtput = getstdhandle(std_output_handle);\n\t// 注册窗口类\n\twndclass wc = { 0 };\n\twc.cbclsextra = 0;\n\twc.cbwndextra = 0;\n\twc.hbrbackground = (hbrush)(color_window + 1);\n\twc.hcursor = null;\n\twc.hicon = null;\n\twc.hinstance = hinstance;\n\twc.lpfnwndproc = wndproc;\n\twc.lpszclassname = "main";\n\t//wc.lpszmenuname = (char*)idr_menu1;\n\twc.lpszmenuname = null;\n\twc.style = cs_hredraw | cs_vredraw;\n\n\tregisterclass(&wc);\n\n\t//在内存中创建窗口\n\tchar* psztext = (char*)"hello data";\n\thmenu hmenu = loadmenu(hinstance, (char*)idr_menu1);\n\thwnd hwnd = createwindowex(0, "main", "window", ws_overlappedwindow, 100, 100, 500, 500,null, hmenu, hinstance, psztext);\n\t//显示窗口\n\tshowwindow(hwnd, sw_show);\n\tupdatewindow(hwnd);\n\t// 消息循环，避免窗口消失\n\tmsg nmsg = { 0 };\n\twhile (getmessage(&nmsg, null, 0, 0))\n\t{\n\t\ttranslatemessage(&nmsg);\n\t\t//将消息交给窗口处理函数\n\t\tdispatchmessage(&nmsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"08-图标资源",frontmatter:{title:"08-图标资源",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/icon/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/08.%E5%9B%BE%E6%A0%87%E8%B5%84%E6%BA%90.html",relativePath:"06.软件开发/11.Win32/08.图标资源.md",key:"v-05b43567",path:"/soft/win32/icon/",headers:[{level:2,title:"添加资源",slug:"添加资源",normalizedTitle:"添加资源",charIndex:2},{level:2,title:"加载",slug:"加载",normalizedTitle:"加载",charIndex:40},{level:2,title:"设置",slug:"设置",normalizedTitle:"设置",charIndex:109},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:123}],headersStr:"添加资源 加载 设置 代码",content:'# 添加资源\n\n注意图标大小，一个图标文件中，可以有多个不同大小的图标\n\n\n# 加载\n\nHICON LoadIcon(HINSTANCE hInstance,LPCTSTR lpIconName);\n\n\n1\n\n\n\n# 设置\n\n注册窗口类\n\n\n# 代码\n\n//\n// Created by JS-001 on 2022/10/26 0026.\n//\n#include <Windows.h>\n#include <stdio.h>\n#include "resource.h"\n\nHANDLE g_hOutput = 0;//接收标准输出句柄\n\n//窗口处理函数\nLRESULT CALLBACK WndProc(HWND hWnd, UINT msgID, WPARAM wParam, LPARAM lParam) {\n\tswitch (msgID)\n\t{\n\tcase WM_DESTROY:\n\t\tPostQuitMessage(0);//可以使GetMessage函数返回0\n\t\tbreak;\n\t}\n\treturn DefWindowProc(hWnd, msgID, wParam, lParam);\n}\n\n//入口函数\nint CALLBACK WinMain(HINSTANCE hInstance, HINSTANCE hPreInstance, LPSTR lpCmdLine, int nCmdShow) {\n\t//增加DOS\n\tAllocConsole();\n\tg_hOutput = GetStdHandle(STD_OUTPUT_HANDLE);\n\t// 注册窗口类\n\tWNDCLASS wc = { 0 };\n\twc.cbClsExtra = 0;\n\twc.cbWndExtra = 0;\n\twc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n\twc.hCursor = NULL;\n\twc.hIcon = LoadIcon(hInstance,(char*)IDI_ICON1);\n\twc.hInstance = hInstance;\n\twc.lpfnWndProc = WndProc;\n\twc.lpszClassName = "Main";\n\twc.lpszMenuName = NULL;\n\twc.style = CS_HREDRAW | CS_VREDRAW;\n\n\tRegisterClass(&wc);\n\n\t//在内存中创建窗口\n\tchar* pszText = (char*)"hello data";\n\tHWND hWnd = CreateWindowEx(0, "Main", "Window", WS_OVERLAPPEDWINDOW, 100, 100, 500, 500, NULL, NULL, hInstance, pszText);\n\t//显示窗口\n\tShowWindow(hWnd, SW_SHOW);\n\tUpdateWindow(hWnd);\n\t// 消息循环，避免窗口消失\n\tMSG nMsg = { 0 };\n\twhile (GetMessage(&nMsg, NULL, 0, 0))\n\t{\n\t\tTranslateMessage(&nMsg);\n\t\t//将消息交给窗口处理函数\n\t\tDispatchMessage(&nMsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n',normalizedContent:'# 添加资源\n\n注意图标大小，一个图标文件中，可以有多个不同大小的图标\n\n\n# 加载\n\nhicon loadicon(hinstance hinstance,lpctstr lpiconname);\n\n\n1\n\n\n\n# 设置\n\n注册窗口类\n\n\n# 代码\n\n//\n// created by js-001 on 2022/10/26 0026.\n//\n#include <windows.h>\n#include <stdio.h>\n#include "resource.h"\n\nhandle g_houtput = 0;//接收标准输出句柄\n\n//窗口处理函数\nlresult callback wndproc(hwnd hwnd, uint msgid, wparam wparam, lparam lparam) {\n\tswitch (msgid)\n\t{\n\tcase wm_destroy:\n\t\tpostquitmessage(0);//可以使getmessage函数返回0\n\t\tbreak;\n\t}\n\treturn defwindowproc(hwnd, msgid, wparam, lparam);\n}\n\n//入口函数\nint callback winmain(hinstance hinstance, hinstance hpreinstance, lpstr lpcmdline, int ncmdshow) {\n\t//增加dos\n\tallocconsole();\n\tg_houtput = getstdhandle(std_output_handle);\n\t// 注册窗口类\n\twndclass wc = { 0 };\n\twc.cbclsextra = 0;\n\twc.cbwndextra = 0;\n\twc.hbrbackground = (hbrush)(color_window + 1);\n\twc.hcursor = null;\n\twc.hicon = loadicon(hinstance,(char*)idi_icon1);\n\twc.hinstance = hinstance;\n\twc.lpfnwndproc = wndproc;\n\twc.lpszclassname = "main";\n\twc.lpszmenuname = null;\n\twc.style = cs_hredraw | cs_vredraw;\n\n\tregisterclass(&wc);\n\n\t//在内存中创建窗口\n\tchar* psztext = (char*)"hello data";\n\thwnd hwnd = createwindowex(0, "main", "window", ws_overlappedwindow, 100, 100, 500, 500, null, null, hinstance, psztext);\n\t//显示窗口\n\tshowwindow(hwnd, sw_show);\n\tupdatewindow(hwnd);\n\t// 消息循环，避免窗口消失\n\tmsg nmsg = { 0 };\n\twhile (getmessage(&nmsg, null, 0, 0))\n\t{\n\t\ttranslatemessage(&nmsg);\n\t\t//将消息交给窗口处理函数\n\t\tdispatchmessage(&nmsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"09-光标资源",frontmatter:{title:"09-光标资源",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/cursor/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/09.%E5%85%89%E6%A0%87%E8%B5%84%E6%BA%90.html",relativePath:"06.软件开发/11.Win32/09.光标资源.md",key:"v-86a3fac4",path:"/soft/win32/cursor/",headers:[{level:2,title:"添加光标资源",slug:"添加光标资源",normalizedTitle:"添加光标资源",charIndex:2},{level:2,title:"加载资源",slug:"加载资源",normalizedTitle:"加载资源",charIndex:52},{level:2,title:"设置资源",slug:"设置资源",normalizedTitle:"设置资源",charIndex:160},{level:2,title:"WM_SETCURSOR消息参数",slug:"wm-setcursor消息参数",normalizedTitle:"wm_setcursor消息参数",charIndex:236}],headersStr:"添加光标资源 加载资源 设置资源 WM_SETCURSOR消息参数",content:"# 添加光标资源\n\n光标的大小默认是32x32像素，每个光标有HotSpot，是当前鼠标的热点\n\n\n# 加载资源\n\nHCURSOR LoadCursor(HINSTANCE hInstance,LPCTSTR lpCursorName);//hInstance可以为NULL，获取系统默认Cursor\n\n\n1\n\n\n\n# 设置资源\n\n在注册窗口时，设置光标；\n\n使用SetCursor设置光标，HCURSOR SetCursor(HCURSOR hCursor);\n\n\n# WM_SETCURSOR消息参数\n\nwParam-当前使用的光标句柄\n\nlParam-LOWORD当前区域的代码，HTCLIENT/HTCAPTION\n\n-HIWORD当前鼠标消息ID\n\n\n1\n",normalizedContent:"# 添加光标资源\n\n光标的大小默认是32x32像素，每个光标有hotspot，是当前鼠标的热点\n\n\n# 加载资源\n\nhcursor loadcursor(hinstance hinstance,lpctstr lpcursorname);//hinstance可以为null，获取系统默认cursor\n\n\n1\n\n\n\n# 设置资源\n\n在注册窗口时，设置光标；\n\n使用setcursor设置光标，hcursor setcursor(hcursor hcursor);\n\n\n# wm_setcursor消息参数\n\nwparam-当前使用的光标句柄\n\nlparam-loword当前区域的代码，htclient/htcaption\n\n-hiword当前鼠标消息id\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"10-字符串加速键资源",frontmatter:{title:"10-字符串加速键资源",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/string/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/10.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8A%A0%E9%80%9F%E9%94%AE%E8%B5%84%E6%BA%90.html",relativePath:"06.软件开发/11.Win32/10.字符串加速键资源.md",key:"v-36b8aba4",path:"/soft/win32/string/",headers:[{level:2,title:"字符串资源",slug:"字符串资源",normalizedTitle:"字符串资源",charIndex:2},{level:2,title:"加速键资源",slug:"加速键资源",normalizedTitle:"加速键资源",charIndex:164}],headersStr:"字符串资源 加速键资源",content:"# 字符串资源\n\n * 添加字符串资源\n\n添加字符串表，在表中增加字符串\n\n * 字符串资源的使用\n\nint LoadString(\n\tHINSTANCE hInstance,\n    UINT uID,\n    LPTSTR lpBuffer,\n    int nBuferMax\n);\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 加速键资源\n\n * 添加加速键资源\n\n增加命令ID对应的加速键\n\n * 使用\n\n// 加载加速键表\nHACCEL LoadAccelerators(\n\tHINSTANCE hInstance,\n    LPCTSTR lpTableName\n);\n// 翻译加速键\nint TranslateAccelerator(\n\tHWND hWnd,\t//处理消息的窗口句柄\n    HACCEL hAccTable,\t//加速键句柄\n    LPMSG lpMsg //消息\n); // 如果是加速键，返回非零\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n根据nMsg.wParam获知哪些按键被按下\n\n在WM_COMMAND中相应消息，消息参数：\n\nwParam:HIWORD 为1表示加速键，为0表示菜单\n\nLOWORD 为命令ID\n\nlParam 为0",normalizedContent:"# 字符串资源\n\n * 添加字符串资源\n\n添加字符串表，在表中增加字符串\n\n * 字符串资源的使用\n\nint loadstring(\n\thinstance hinstance,\n    uint uid,\n    lptstr lpbuffer,\n    int nbufermax\n);\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 加速键资源\n\n * 添加加速键资源\n\n增加命令id对应的加速键\n\n * 使用\n\n// 加载加速键表\nhaccel loadaccelerators(\n\thinstance hinstance,\n    lpctstr lptablename\n);\n// 翻译加速键\nint translateaccelerator(\n\thwnd hwnd,\t//处理消息的窗口句柄\n    haccel hacctable,\t//加速键句柄\n    lpmsg lpmsg //消息\n); // 如果是加速键，返回非零\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n根据nmsg.wparam获知哪些按键被按下\n\n在wm_command中相应消息，消息参数：\n\nwparam:hiword 为1表示加速键，为0表示菜单\n\nloword 为命令id\n\nlparam 为0",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"绘图编程",frontmatter:{title:"绘图编程",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/graphic/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/11.%E7%BB%98%E5%9B%BE%E7%BC%96%E7%A8%8B.html",relativePath:"06.软件开发/11.Win32/11.绘图编程.md",key:"v-63c8adb6",path:"/soft/win32/graphic/",headers:[{level:2,title:"绘图基础",slug:"绘图基础",normalizedTitle:"绘图基础",charIndex:2},{level:2,title:"基本图形绘制",slug:"基本图形绘制",normalizedTitle:"基本图形绘制",charIndex:397},{level:3,title:"绘制点",slug:"绘制点",normalizedTitle:"绘制点",charIndex:408},{level:3,title:"绘制线",slug:"绘制线",normalizedTitle:"绘制线",charIndex:566},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:720}],headersStr:"绘图基础 基本图形绘制 绘制点 绘制线 代码",content:'# 绘图基础\n\n * 绘图设备DC（Device Context），绘图上下文/绘图描述表\n\n * HDC-DC句柄，表示绘图设备\n\n * GDI-Windows Graphics Device Interface (Win32提供的绘图API)\n\n * 颜色\n   \n   计算机使用RGB，每一个点颜色是3个字节24位保存 0-2^24-1\n   \n   16位：5,5,6\n   \n   32位：8,8,8,8绘图或透明度\n\n * 颜色的使用\n   \n   COLORREF-实际DWORD\n   \n   例如：COLORREF nColor=0;\n\n * 赋值使用RGB宏\n\n例如：nColor=RGB(0,0,255);\n\n * 获取RGB值\n\nGetRValue/GetGValue/GetBValue\n\n例如：BYTE nRed = GetRValue(nColor);\n\n\n# 基本图形绘制\n\n\n# 绘制点\n\nSetPixel设置指定点的颜色\n\nCOLORREF SetPixel(\n\tHDC hdc,\t//HDC句柄\n    int X,\t\t//X坐标\n    int Y,\t\t//Y坐标\n    COLORREF crColor\t//设置的颜色\n);\t//返回点原来的颜色\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 绘制线\n\n * 线的使用（直线、弧线）\n   \n   MoveToEx-指明窗口当前点\n   \n   LineTo-从窗口当前点到指定点绘制一条直线\n   \n   当前点：上一次绘图时的最后一点，初始为（0,0）点\n\n * 封闭图形：能够用画刷填充\n   \n   Rectangle/Ellipse\n\n\n# 代码\n\n#include <Windows.h>\n#include <stdio.h>\n\n#define WM_MYMESSAGE WM_USER+1001\n\nHANDLE g_hOutput = 0;//接收标准输出句柄\n\nvoid DrawPit(HDC hdc) {\n\tfor (int i = 0; i < 256; i++) {\n\t\tfor (int j = 0; j < 256; j++) {\n\t\t\tSetPixel(hdc, i, j, RGB(i, j, 0));\n\t\t}\n\t}\n}\nvoid DrawLine(HDC hdc) {\n\tMoveToEx(hdc, 100, 100, NULL);\n\tLineTo(hdc,300,300);\n\tLineTo(hdc, 0, 300);\n}\nvoid DrawRectangle(HDC hdc) {\n\tRectangle(hdc, 100, 100, 300, 300);\n}\nvoid DrawEllipse(HDC hdc) {\n\tEllipse(hdc, 100, 100, 400, 300);\n\tEllipse(hdc, 100, 100, 200, 200);\n}\nvoid OnPaint(HWND hWnd) {\n\tPAINTSTRUCT ps = { 0 };\n\tHDC hdc = BeginPaint(hWnd, &ps);\n\n\t//绘制点\n\t//DrawPit(hdc);\n\t//绘制线\n\t//DrawLine(hdc);\n\t//绘制矩形\n\t//DrawRectangle(hdc);\n\t//绘制椭圆\n\tDrawEllipse(hdc);\n\tEndPaint(hWnd, &ps);\n}\n\n//窗口处理函数\nLRESULT CALLBACK WndProc(HWND hWnd, UINT msgID, WPARAM wParam, LPARAM lParam) {\n\tswitch (msgID)\n\t{\n\tcase WM_PAINT:\n\t\tOnPaint(hWnd);\n\t\tbreak;\n\tcase WM_DESTROY:\n\t\tPostQuitMessage(0);//可以使GetMessage函数返回0\n\t\tbreak;\n\t}\n\treturn DefWindowProc(hWnd, msgID, wParam, lParam);\n}\n\n//入口函数\nint CALLBACK WinMain(HINSTANCE hInstance, HINSTANCE hPreInstance, LPSTR lpCmdLine, int nCmdShow) {\n\t//增加DOS\n\tAllocConsole();\n\tg_hOutput = GetStdHandle(STD_OUTPUT_HANDLE);\n\t// 注册窗口类\n\tWNDCLASS wc = { 0 };\n\twc.cbClsExtra = 0;\n\twc.cbWndExtra = 0;\n\twc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n\twc.hCursor = NULL;\n\twc.hIcon = NULL;\n\twc.hInstance = hInstance;\n\twc.lpfnWndProc = WndProc;\n\twc.lpszClassName = "Main";\n\twc.lpszMenuName = NULL;\n\twc.style = CS_HREDRAW | CS_VREDRAW;\n\n\tRegisterClass(&wc);\n\n\t//在内存中创建窗口\n\tchar* pszText = (char*)"hello data";\n\tHWND hWnd = CreateWindowEx(0, "Main", "Window", WS_OVERLAPPEDWINDOW, 100, 100, 500, 500, NULL, NULL, hInstance, pszText);\n\t//显示窗口\n\tShowWindow(hWnd, SW_SHOW);\n\tUpdateWindow(hWnd);\n\t// 消息循环，避免窗口消失\n\tMSG nMsg = { 0 };\n\twhile (GetMessage(&nMsg, NULL, 0, 0))\n\t{\n\t\tTranslateMessage(&nMsg);\n\t\t//将消息交给窗口处理函数\n\t\tDispatchMessage(&nMsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n',normalizedContent:'# 绘图基础\n\n * 绘图设备dc（device context），绘图上下文/绘图描述表\n\n * hdc-dc句柄，表示绘图设备\n\n * gdi-windows graphics device interface (win32提供的绘图api)\n\n * 颜色\n   \n   计算机使用rgb，每一个点颜色是3个字节24位保存 0-2^24-1\n   \n   16位：5,5,6\n   \n   32位：8,8,8,8绘图或透明度\n\n * 颜色的使用\n   \n   colorref-实际dword\n   \n   例如：colorref ncolor=0;\n\n * 赋值使用rgb宏\n\n例如：ncolor=rgb(0,0,255);\n\n * 获取rgb值\n\ngetrvalue/getgvalue/getbvalue\n\n例如：byte nred = getrvalue(ncolor);\n\n\n# 基本图形绘制\n\n\n# 绘制点\n\nsetpixel设置指定点的颜色\n\ncolorref setpixel(\n\thdc hdc,\t//hdc句柄\n    int x,\t\t//x坐标\n    int y,\t\t//y坐标\n    colorref crcolor\t//设置的颜色\n);\t//返回点原来的颜色\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 绘制线\n\n * 线的使用（直线、弧线）\n   \n   movetoex-指明窗口当前点\n   \n   lineto-从窗口当前点到指定点绘制一条直线\n   \n   当前点：上一次绘图时的最后一点，初始为（0,0）点\n\n * 封闭图形：能够用画刷填充\n   \n   rectangle/ellipse\n\n\n# 代码\n\n#include <windows.h>\n#include <stdio.h>\n\n#define wm_mymessage wm_user+1001\n\nhandle g_houtput = 0;//接收标准输出句柄\n\nvoid drawpit(hdc hdc) {\n\tfor (int i = 0; i < 256; i++) {\n\t\tfor (int j = 0; j < 256; j++) {\n\t\t\tsetpixel(hdc, i, j, rgb(i, j, 0));\n\t\t}\n\t}\n}\nvoid drawline(hdc hdc) {\n\tmovetoex(hdc, 100, 100, null);\n\tlineto(hdc,300,300);\n\tlineto(hdc, 0, 300);\n}\nvoid drawrectangle(hdc hdc) {\n\trectangle(hdc, 100, 100, 300, 300);\n}\nvoid drawellipse(hdc hdc) {\n\tellipse(hdc, 100, 100, 400, 300);\n\tellipse(hdc, 100, 100, 200, 200);\n}\nvoid onpaint(hwnd hwnd) {\n\tpaintstruct ps = { 0 };\n\thdc hdc = beginpaint(hwnd, &ps);\n\n\t//绘制点\n\t//drawpit(hdc);\n\t//绘制线\n\t//drawline(hdc);\n\t//绘制矩形\n\t//drawrectangle(hdc);\n\t//绘制椭圆\n\tdrawellipse(hdc);\n\tendpaint(hwnd, &ps);\n}\n\n//窗口处理函数\nlresult callback wndproc(hwnd hwnd, uint msgid, wparam wparam, lparam lparam) {\n\tswitch (msgid)\n\t{\n\tcase wm_paint:\n\t\tonpaint(hwnd);\n\t\tbreak;\n\tcase wm_destroy:\n\t\tpostquitmessage(0);//可以使getmessage函数返回0\n\t\tbreak;\n\t}\n\treturn defwindowproc(hwnd, msgid, wparam, lparam);\n}\n\n//入口函数\nint callback winmain(hinstance hinstance, hinstance hpreinstance, lpstr lpcmdline, int ncmdshow) {\n\t//增加dos\n\tallocconsole();\n\tg_houtput = getstdhandle(std_output_handle);\n\t// 注册窗口类\n\twndclass wc = { 0 };\n\twc.cbclsextra = 0;\n\twc.cbwndextra = 0;\n\twc.hbrbackground = (hbrush)(color_window + 1);\n\twc.hcursor = null;\n\twc.hicon = null;\n\twc.hinstance = hinstance;\n\twc.lpfnwndproc = wndproc;\n\twc.lpszclassname = "main";\n\twc.lpszmenuname = null;\n\twc.style = cs_hredraw | cs_vredraw;\n\n\tregisterclass(&wc);\n\n\t//在内存中创建窗口\n\tchar* psztext = (char*)"hello data";\n\thwnd hwnd = createwindowex(0, "main", "window", ws_overlappedwindow, 100, 100, 500, 500, null, null, hinstance, psztext);\n\t//显示窗口\n\tshowwindow(hwnd, sw_show);\n\tupdatewindow(hwnd);\n\t// 消息循环，避免窗口消失\n\tmsg nmsg = { 0 };\n\twhile (getmessage(&nmsg, null, 0, 0))\n\t{\n\t\ttranslatemessage(&nmsg);\n\t\t//将消息交给窗口处理函数\n\t\tdispatchmessage(&nmsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"GDI绘图对象",frontmatter:{title:"GDI绘图对象",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/gdi/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/12.GDI%E7%BB%98%E5%9B%BE%E5%AF%B9%E8%B1%A1.html",relativePath:"06.软件开发/11.Win32/12.GDI绘图对象.md",key:"v-5aed3d2d",path:"/soft/win32/gdi/",headers:[{level:2,title:"画笔",slug:"画笔",normalizedTitle:"画笔",charIndex:2},{level:3,title:"画笔的作用",slug:"画笔的作用",normalizedTitle:"画笔的作用",charIndex:9},{level:3,title:"画笔的使用",slug:"画笔的使用",normalizedTitle:"画笔的使用",charIndex:42},{level:4,title:"1 创建画笔",slug:"_1-创建画笔",normalizedTitle:"1 创建画笔",charIndex:51},{level:4,title:"2 江画笔应用到DC中",slug:"_2-江画笔应用到dc中",normalizedTitle:"2 江画笔应用到dc中",charIndex:221},{level:4,title:"3 绘图",slug:"_3-绘图",normalizedTitle:"3 绘图",charIndex:360},{level:4,title:"4 去除DC中的画笔",slug:"_4-去除dc中的画笔",normalizedTitle:"4 去除dc中的画笔",charIndex:368},{level:4,title:"5 释放画笔",slug:"_5-释放画笔",normalizedTitle:"5 释放画笔",charIndex:429},{level:2,title:"画刷",slug:"画刷",normalizedTitle:"画刷",charIndex:540},{level:3,title:"画刷相关",slug:"画刷相关",normalizedTitle:"画刷相关",charIndex:547},{level:3,title:"画刷的使用",slug:"画刷的使用",normalizedTitle:"画刷的使用",charIndex:586},{level:4,title:"1 创建画刷",slug:"_1-创建画刷",normalizedTitle:"1 创建画刷",charIndex:595},{level:4,title:"2 将画刷应用到DC中",slug:"_2-将画刷应用到dc中",normalizedTitle:"2 将画刷应用到dc中",charIndex:655},{level:4,title:"3 绘图",slug:"_3-绘图-2",normalizedTitle:"3 绘图",charIndex:360},{level:4,title:"4 将画刷从DC中取出",slug:"_4-将画刷从dc中取出",normalizedTitle:"4 将画刷从dc中取出",charIndex:692},{level:4,title:"5 删除画刷",slug:"_5-删除画刷",normalizedTitle:"5 删除画刷",charIndex:721},{level:2,title:"其它",slug:"其它",normalizedTitle:"其它",charIndex:205},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:861}],headersStr:"画笔 画笔的作用 画笔的使用 1 创建画笔 2 江画笔应用到DC中 3 绘图 4 去除DC中的画笔 5 释放画笔 画刷 画刷相关 画刷的使用 1 创建画刷 2 将画刷应用到DC中 3 绘图 4 将画刷从DC中取出 5 删除画刷 其它 代码",content:'# 画笔\n\n\n# 画笔的作用\n\n显得颜色、线型、线粗\n\nHPEN、画笔句柄\n\n\n# 画笔的使用\n\n# 1 创建画笔\n\nHPEN CreatePen(\n    int fnPenStyle,\t//画笔样式\n    int nWidth,\t\t//画笔粗细\n    COLORREF crColor\t//画笔颜色\n); //创建成功返回句柄\n\n\n1\n2\n3\n4\n5\n\n\nPS_SOLID 实心线，可以支持多个像素宽，其它线型只能是一个像素宽\n\n# 2 江画笔应用到DC中\n\nHGDIOBJ SelectObject(\n\tHDC hdc,\t//绘图设备句柄\n    HGDIOBJ hjdiobj\t//GDI绘图对象句柄，画笔句柄\n);//返回原来的GDI绘图对象句柄\n\n\n1\n2\n3\n4\n\n\n注意保存原来DC当中的画笔\n\n# 3 绘图\n\n# 4 去除DC中的画笔\n\n将原来的画笔，使用SelectObject函数，放入到设备DC中，就会将我们创建的画笔取出\n\n# 5 释放画笔\n\nBOOL DeleteObject(\n\tHGDIOBJ hObject\t//GDI绘图对象句柄，画笔句柄\n);\n\n\n1\n2\n3\n\n\n只能删除不被DC使用的画笔，所以在释放前，必须将画笔从DC中取出\n\n\n# 画刷\n\n\n# 画刷相关\n\n画刷-封闭图形的填充颜色、图案\n\nHBRUSH 画刷句柄\n\n\n# 画刷的使用\n\n# 1 创建画刷\n\nCreateSolidBrush-创建实心画刷\n\nCreateHatchBrush-创建纹理画刷\n\n# 2 将画刷应用到DC中\n\nSelectObject\n\n# 3 绘图\n\n# 4 将画刷从DC中取出\n\nSelectObject\n\n# 5 删除画刷\n\nDeleteObject\n\n\n# 其它\n\n可以使用GetStockObject函数获取系统维护的画刷、画笔等\n\n如果不使用画刷填充，需要使用NULL_BRUSH参数，获取不填充的画刷\n\nGetStockObject返回的画刷不需要DeleteObject\n\n\n# 代码\n\n//\n// Created by JS-001 on 2022/10/26 0026.\n//\n#include <Windows.h>\n#include <stdio.h>\n\n#define WM_MYMESSAGE WM_USER+1001\n\nHANDLE g_hOutput = 0;//接收标准输出句柄\n\nvoid DrawPit(HDC hdc) {\n\tfor (int i = 0; i < 256; i++) {\n\t\tfor (int j = 0; j < 256; j++) {\n\t\t\tSetPixel(hdc, i, j, RGB(i, j, 0));\n\t\t}\n\t}\n}\nvoid DrawLine(HDC hdc) {\n\tMoveToEx(hdc, 100, 100, NULL);\n\tLineTo(hdc,300,300);\n\tLineTo(hdc, 0, 300);\n}\nvoid DrawRectangle(HDC hdc) {\n\tRectangle(hdc, 100, 100, 300, 300);\n}\nvoid DrawEllipse(HDC hdc) {\n\tEllipse(hdc, 100, 100, 400, 300);\n\tEllipse(hdc, 100, 100, 200, 200);\n}\nvoid OnPaint(HWND hWnd) {\n\tPAINTSTRUCT ps = { 0 };\n\tHDC hdc = BeginPaint(hWnd, &ps);\n\n\tHPEN hPen = CreatePen(PS_SOLID, 10, RGB(255, 0, 0));\n\tHGDIOBJ nOldPen = SelectObject(hdc, hPen);\n\n\t//HBRUSH hBrush = CreateSolidBrush(RGB(0, 255, 0));\n\t//HBRUSH hBrush = CreateHatchBrush(HS_CROSS, RGB(0, 255, 0));\n\t//透明画刷\n\tHGDIOBJ hBrush = GetStockObject(NULL_BRUSH);\n\tHGDIOBJ nOldBrush = SelectObject(hdc, hBrush);\n\n\t//绘制点\n\t//DrawPit(hdc);\n\t//绘制线\n\t//DrawLine(hdc);\n\t//绘制矩形\n\t//DrawRectangle(hdc);\n\t//绘制椭圆\n\tDrawEllipse(hdc);\n\n\tSelectObject(hdc, nOldBrush);\n\t//DeleteObject(hBrush);\n\n\tSelectObject(hdc, nOldPen);\n\tDeleteObject(hPen);\n\n\tEndPaint(hWnd, &ps);\n}\n\n//窗口处理函数\nLRESULT CALLBACK WndProc(HWND hWnd, UINT msgID, WPARAM wParam, LPARAM lParam) {\n\tswitch (msgID)\n\t{\n\tcase WM_PAINT:\n\t\tOnPaint(hWnd);\n\t\tbreak;\n\tcase WM_DESTROY:\n\t\tPostQuitMessage(0);//可以使GetMessage函数返回0\n\t\tbreak;\n\t}\n\treturn DefWindowProc(hWnd, msgID, wParam, lParam);\n}\n\n//入口函数\nint CALLBACK WinMain(HINSTANCE hInstance, HINSTANCE hPreInstance, LPSTR lpCmdLine, int nCmdShow) {\n\t//增加DOS\n\tAllocConsole();\n\tg_hOutput = GetStdHandle(STD_OUTPUT_HANDLE);\n\t// 注册窗口类\n\tWNDCLASS wc = { 0 };\n\twc.cbClsExtra = 0;\n\twc.cbWndExtra = 0;\n\twc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n\twc.hCursor = NULL;\n\twc.hIcon = NULL;\n\twc.hInstance = hInstance;\n\twc.lpfnWndProc = WndProc;\n\twc.lpszClassName = "Main";\n\twc.lpszMenuName = NULL;\n\twc.style = CS_HREDRAW | CS_VREDRAW;\n\n\tRegisterClass(&wc);\n\n\t//在内存中创建窗口\n\tchar* pszText = (char*)"hello data";\n\tHWND hWnd = CreateWindowEx(0, "Main", "Window", WS_OVERLAPPEDWINDOW, 100, 100, 500, 500, NULL, NULL, hInstance, pszText);\n\t//显示窗口\n\tShowWindow(hWnd, SW_SHOW);\n\tUpdateWindow(hWnd);\n\t// 消息循环，避免窗口消失\n\tMSG nMsg = { 0 };\n\twhile (GetMessage(&nMsg, NULL, 0, 0))\n\t{\n\t\tTranslateMessage(&nMsg);\n\t\t//将消息交给窗口处理函数\n\t\tDispatchMessage(&nMsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n',normalizedContent:'# 画笔\n\n\n# 画笔的作用\n\n显得颜色、线型、线粗\n\nhpen、画笔句柄\n\n\n# 画笔的使用\n\n# 1 创建画笔\n\nhpen createpen(\n    int fnpenstyle,\t//画笔样式\n    int nwidth,\t\t//画笔粗细\n    colorref crcolor\t//画笔颜色\n); //创建成功返回句柄\n\n\n1\n2\n3\n4\n5\n\n\nps_solid 实心线，可以支持多个像素宽，其它线型只能是一个像素宽\n\n# 2 江画笔应用到dc中\n\nhgdiobj selectobject(\n\thdc hdc,\t//绘图设备句柄\n    hgdiobj hjdiobj\t//gdi绘图对象句柄，画笔句柄\n);//返回原来的gdi绘图对象句柄\n\n\n1\n2\n3\n4\n\n\n注意保存原来dc当中的画笔\n\n# 3 绘图\n\n# 4 去除dc中的画笔\n\n将原来的画笔，使用selectobject函数，放入到设备dc中，就会将我们创建的画笔取出\n\n# 5 释放画笔\n\nbool deleteobject(\n\thgdiobj hobject\t//gdi绘图对象句柄，画笔句柄\n);\n\n\n1\n2\n3\n\n\n只能删除不被dc使用的画笔，所以在释放前，必须将画笔从dc中取出\n\n\n# 画刷\n\n\n# 画刷相关\n\n画刷-封闭图形的填充颜色、图案\n\nhbrush 画刷句柄\n\n\n# 画刷的使用\n\n# 1 创建画刷\n\ncreatesolidbrush-创建实心画刷\n\ncreatehatchbrush-创建纹理画刷\n\n# 2 将画刷应用到dc中\n\nselectobject\n\n# 3 绘图\n\n# 4 将画刷从dc中取出\n\nselectobject\n\n# 5 删除画刷\n\ndeleteobject\n\n\n# 其它\n\n可以使用getstockobject函数获取系统维护的画刷、画笔等\n\n如果不使用画刷填充，需要使用null_brush参数，获取不填充的画刷\n\ngetstockobject返回的画刷不需要deleteobject\n\n\n# 代码\n\n//\n// created by js-001 on 2022/10/26 0026.\n//\n#include <windows.h>\n#include <stdio.h>\n\n#define wm_mymessage wm_user+1001\n\nhandle g_houtput = 0;//接收标准输出句柄\n\nvoid drawpit(hdc hdc) {\n\tfor (int i = 0; i < 256; i++) {\n\t\tfor (int j = 0; j < 256; j++) {\n\t\t\tsetpixel(hdc, i, j, rgb(i, j, 0));\n\t\t}\n\t}\n}\nvoid drawline(hdc hdc) {\n\tmovetoex(hdc, 100, 100, null);\n\tlineto(hdc,300,300);\n\tlineto(hdc, 0, 300);\n}\nvoid drawrectangle(hdc hdc) {\n\trectangle(hdc, 100, 100, 300, 300);\n}\nvoid drawellipse(hdc hdc) {\n\tellipse(hdc, 100, 100, 400, 300);\n\tellipse(hdc, 100, 100, 200, 200);\n}\nvoid onpaint(hwnd hwnd) {\n\tpaintstruct ps = { 0 };\n\thdc hdc = beginpaint(hwnd, &ps);\n\n\thpen hpen = createpen(ps_solid, 10, rgb(255, 0, 0));\n\thgdiobj noldpen = selectobject(hdc, hpen);\n\n\t//hbrush hbrush = createsolidbrush(rgb(0, 255, 0));\n\t//hbrush hbrush = createhatchbrush(hs_cross, rgb(0, 255, 0));\n\t//透明画刷\n\thgdiobj hbrush = getstockobject(null_brush);\n\thgdiobj noldbrush = selectobject(hdc, hbrush);\n\n\t//绘制点\n\t//drawpit(hdc);\n\t//绘制线\n\t//drawline(hdc);\n\t//绘制矩形\n\t//drawrectangle(hdc);\n\t//绘制椭圆\n\tdrawellipse(hdc);\n\n\tselectobject(hdc, noldbrush);\n\t//deleteobject(hbrush);\n\n\tselectobject(hdc, noldpen);\n\tdeleteobject(hpen);\n\n\tendpaint(hwnd, &ps);\n}\n\n//窗口处理函数\nlresult callback wndproc(hwnd hwnd, uint msgid, wparam wparam, lparam lparam) {\n\tswitch (msgid)\n\t{\n\tcase wm_paint:\n\t\tonpaint(hwnd);\n\t\tbreak;\n\tcase wm_destroy:\n\t\tpostquitmessage(0);//可以使getmessage函数返回0\n\t\tbreak;\n\t}\n\treturn defwindowproc(hwnd, msgid, wparam, lparam);\n}\n\n//入口函数\nint callback winmain(hinstance hinstance, hinstance hpreinstance, lpstr lpcmdline, int ncmdshow) {\n\t//增加dos\n\tallocconsole();\n\tg_houtput = getstdhandle(std_output_handle);\n\t// 注册窗口类\n\twndclass wc = { 0 };\n\twc.cbclsextra = 0;\n\twc.cbwndextra = 0;\n\twc.hbrbackground = (hbrush)(color_window + 1);\n\twc.hcursor = null;\n\twc.hicon = null;\n\twc.hinstance = hinstance;\n\twc.lpfnwndproc = wndproc;\n\twc.lpszclassname = "main";\n\twc.lpszmenuname = null;\n\twc.style = cs_hredraw | cs_vredraw;\n\n\tregisterclass(&wc);\n\n\t//在内存中创建窗口\n\tchar* psztext = (char*)"hello data";\n\thwnd hwnd = createwindowex(0, "main", "window", ws_overlappedwindow, 100, 100, 500, 500, null, null, hinstance, psztext);\n\t//显示窗口\n\tshowwindow(hwnd, sw_show);\n\tupdatewindow(hwnd);\n\t// 消息循环，避免窗口消失\n\tmsg nmsg = { 0 };\n\twhile (getmessage(&nmsg, null, 0, 0))\n\t{\n\t\ttranslatemessage(&nmsg);\n\t\t//将消息交给窗口处理函数\n\t\tdispatchmessage(&nmsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"13-位图",frontmatter:{title:"13-位图",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/bitmap/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/13.%E4%BD%8D%E5%9B%BE.html",relativePath:"06.软件开发/11.Win32/13.位图.md",key:"v-401ef41c",path:"/soft/win32/bitmap/",headers:[{level:2,title:"位图相关",slug:"位图相关",normalizedTitle:"位图相关",charIndex:2},{level:2,title:"位图的使用",slug:"位图的使用",normalizedTitle:"位图的使用",charIndex:65},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:1176}],headersStr:"位图相关 位图的使用 代码",content:"# 位图相关\n\n光栅图形-记录图像中每一点的颜色等信息\n\n矢量图形-记录图像算法，绘图指令等\n\nHBITMAP-位图句柄\n\n\n# 位图的使用\n\n 1. 在资源中添加位图资源\n\n 2. 从资源中加载位图LoadBitmap\n\n 3. 创建一个与当前DC相匹配的DC（内存DC）\n    \n    HDC CreateCompatibleDC(\n    \tHDC hdc\t//当前句柄，可以为NULL（使用屏幕DC）\n    );//返回创建好的DC句柄\n    \n    \n    1\n    2\n    3\n    \n\n 4. 将位图放入匹配的DC中，SelectObject\n\n 5. 成像1:1\n    \n    BOOL BitBlt(\n    \tHDC hdcDest,\t//目的DC\n        int nXDest,\t\t//目的左上角X坐标\n        int nYDest,\t\t//目的左上角Y坐标\n        int nWidth,\t\t//目的宽度\n        int nHeight,\t//目的高度\n        HDC hdcSrc,\t\t//源DC\n        int nXSrc,\t\t//源左上X坐标\n        int nYSrc,\t\t//源左上Y坐标\n        DWORD dwRop\t\t//成像方法，SRCCOPY\n    );\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n    \n    缩放成像\n    \n    BOOL StretchBlt(\n    \tHDC hdcDest,\n        int nXOriginDest,\n        int nYOriginDest,\n        int nWidthDest,\n        int nHeightDest,\n        HDC hdcSrc,\n        int nXOriginSrc,\n        int nYOriginSrc,\n        int nWidthSrc,\n        int nHeightSrc,\n        DWORD dwRop\n    )\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    \n\n 6. 取出位图\n    \n    SelectObject\n\n 7. 释放位图\n    \n    DeleteObject\n\n 8. 释放匹配的DC\n    \n    DeleteDC\n\n\n# 代码\n\n//添加位图资源\nHBITMAP hBpm = LoadBitmap(g_Hinstance,(CHAR*)IDB_BITMAP1)\nHDC hMemdc = CreateCompatibleDC(hdc);\n//创建一个内存DC，并构建一个虚拟区域，并且内存DC在虚拟区域中绘图\nHGDIOBJ nOldBmp = SelectObject(hMemdc,hBmp);\n//将位图数据送给内存DC，内存DC在虚拟区域中将位图绘制出来\nBitBlt(hdc,100,100,48,48,hMemdc,0,0,SRCCOPY);\n//缩放成像\nStretchBlt(hdc,200,200,24,24,hMemdc,0,0,48,48,SRCCOPY);\n//将虚拟区域中绘制好的图像成像到窗口\nSelectObject(hMemdc,nOldBmp);\nDeleteObject(hBmp);\nDeleteDC(hMemdc);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n",normalizedContent:"# 位图相关\n\n光栅图形-记录图像中每一点的颜色等信息\n\n矢量图形-记录图像算法，绘图指令等\n\nhbitmap-位图句柄\n\n\n# 位图的使用\n\n 1. 在资源中添加位图资源\n\n 2. 从资源中加载位图loadbitmap\n\n 3. 创建一个与当前dc相匹配的dc（内存dc）\n    \n    hdc createcompatibledc(\n    \thdc hdc\t//当前句柄，可以为null（使用屏幕dc）\n    );//返回创建好的dc句柄\n    \n    \n    1\n    2\n    3\n    \n\n 4. 将位图放入匹配的dc中，selectobject\n\n 5. 成像1:1\n    \n    bool bitblt(\n    \thdc hdcdest,\t//目的dc\n        int nxdest,\t\t//目的左上角x坐标\n        int nydest,\t\t//目的左上角y坐标\n        int nwidth,\t\t//目的宽度\n        int nheight,\t//目的高度\n        hdc hdcsrc,\t\t//源dc\n        int nxsrc,\t\t//源左上x坐标\n        int nysrc,\t\t//源左上y坐标\n        dword dwrop\t\t//成像方法，srccopy\n    );\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n    \n    缩放成像\n    \n    bool stretchblt(\n    \thdc hdcdest,\n        int nxorigindest,\n        int nyorigindest,\n        int nwidthdest,\n        int nheightdest,\n        hdc hdcsrc,\n        int nxoriginsrc,\n        int nyoriginsrc,\n        int nwidthsrc,\n        int nheightsrc,\n        dword dwrop\n    )\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    \n\n 6. 取出位图\n    \n    selectobject\n\n 7. 释放位图\n    \n    deleteobject\n\n 8. 释放匹配的dc\n    \n    deletedc\n\n\n# 代码\n\n//添加位图资源\nhbitmap hbpm = loadbitmap(g_hinstance,(char*)idb_bitmap1)\nhdc hmemdc = createcompatibledc(hdc);\n//创建一个内存dc，并构建一个虚拟区域，并且内存dc在虚拟区域中绘图\nhgdiobj noldbmp = selectobject(hmemdc,hbmp);\n//将位图数据送给内存dc，内存dc在虚拟区域中将位图绘制出来\nbitblt(hdc,100,100,48,48,hmemdc,0,0,srccopy);\n//缩放成像\nstretchblt(hdc,200,200,24,24,hmemdc,0,0,48,48,srccopy);\n//将虚拟区域中绘制好的图像成像到窗口\nselectobject(hmemdc,noldbmp);\ndeleteobject(hbmp);\ndeletedc(hmemdc);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"文本绘制",frontmatter:{title:"文本绘制",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/text/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/14.%E6%96%87%E6%9C%AC%E7%BB%98%E5%88%B6.html",relativePath:"06.软件开发/11.Win32/14.文本绘制.md",key:"v-1beb566c",path:"/soft/win32/text/",headers:[{level:2,title:"文字的绘制",slug:"文字的绘制",normalizedTitle:"文字的绘制",charIndex:2},{level:2,title:"文字颜色和背景",slug:"文字颜色和背景",normalizedTitle:"文字颜色和背景",charIndex:207},{level:2,title:"字体",slug:"字体",normalizedTitle:"字体",charIndex:294},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:1211}],headersStr:"文字的绘制 文字颜色和背景 字体 代码",content:'# 文字的绘制\n\nTextOut-将文字绘制在指定坐标位置\n\nDrawText\n\nint DrawText(\n\tHDC hdc,\t\t\t//DC句柄\n    LPCTSTR lpString,\t//字符串\n    int nCount,\t\t\t//字符数量\n    LPRECT lpRect,\t\t//绘制文字的矩形框\n    UINT uFormat\t\t//绘制方式\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 文字颜色和背景\n\n文字颜色：SetTextColor\n\n文字背景色：SetBkColor\n\n文字背景模式：SetBkMode(OPAQUE/TRANSPARENT)\n\n\n# 字体\n\nWindows常用字体为TrueType格式的字体文件\n\n字体名-标识字体类型\n\nHFONT-字体句柄\n\n 1. 创建字体\n    \n    INGDIAPI HFONT WINAPI CreateFontA(\n        _In_ int cHeight,\t\t\t//字体高度\n        _In_ int cWidth,\t\t\t//字体宽度\n        _In_ int cEscapement,\t\t//字符串倾斜角度\n        _In_ int cOrientation,\t\t//字符串旋转角度\n        _In_ int cWeight,\t\t\t//字体的粗细\n        _In_ DWORD bItalic,\t\t\t//斜体\n        _In_ DWORD bUnderline,\t\t//字符下划线\n        _In_ DWORD bStrikeOut,\t\t//删除线\n        _In_ DWORD iCharSet,\t\t//字符集\n        _In_ DWORD iOutPrecision,\t//输出精度\n        _In_ DWORD iClipPrecision,\t//剪切精度\n        _In_ DWORD iQuality,\t\t//输出质量\n        _In_ DWORD iPitchAndFamily,\t//匹配字体\n        _In_opt_ LPCSTR pszFaceName\t//字体名称\n    );\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    \n\n 2. 应用字体到DC\n    \n    SelectObject\n\n 3. 绘制字体\n    \n    DrawText/TextOut\n\n 4. 取出字体\n    \n    SelectObject\n\n 5. 删除字体\n    \n    DeleteObject\n\n\n# 代码\n\n//\n// Created by JS-001 on 2022/10/26 0026.\n//\n#include <Windows.h>\n#include <stdio.h>\n\n#define WM_MYMESSAGE WM_USER+1001\n\nHANDLE g_hOutput = 0;//接收标准输出句柄\n\nvoid OnPaint(HWND hWnd) {\n\tPAINTSTRUCT ps = { 0 };\n\tHDC hdc = BeginPaint(hWnd, &ps);\n\n\tSetTextColor(hdc, RGB(255, 0, 0));\n\tSetBkColor(hdc,RGB(0,255,0));//只适用于OPAQUE模式\n\tSetBkMode(hdc,TRANSPARENT);\n\n\tHFONT hFont = CreateFont(30, 0, 45, 0, 900, 1, 1, 1, GB2312_CHARSET, 0, 0, 0, 0, "黑体");\n\tHGDIOBJ nOldFont = SelectObject(hdc, hFont);\n\n\tchar szText[] = "Hello txt v";\n\tTextOut(hdc,100,100,szText,strlen(szText));\n\n\tRECT rc;\n\trc.left = 100;\n\trc.top = 150;\n\trc.right = 200;\n\trc.bottom = 200;\n\tRectangle(hdc, 100, 150, 200, 200);\n\tDrawText(hdc, szText, strlen(szText), &rc, DT_LEFT | DT_TOP | DT_WORDBREAK |DT_NOCLIP);\n\n\tSelectObject(hdc, nOldFont);\n\tDeleteObject(hFont);\n\tEndPaint(hWnd, &ps);\n}\n\n//窗口处理函数\nLRESULT CALLBACK WndProc(HWND hWnd, UINT msgID, WPARAM wParam, LPARAM lParam) {\n\tswitch (msgID)\n\t{\n\tcase WM_PAINT:\n\t\tOnPaint(hWnd);\n\t\tbreak;\n\tcase WM_DESTROY:\n\t\tPostQuitMessage(0);//可以使GetMessage函数返回0\n\t\tbreak;\n\t}\n\treturn DefWindowProc(hWnd, msgID, wParam, lParam);\n}\n\n//入口函数\nint CALLBACK WinMain(HINSTANCE hInstance, HINSTANCE hPreInstance, LPSTR lpCmdLine, int nCmdShow) {\n\t//增加DOS\n\tAllocConsole();\n\tg_hOutput = GetStdHandle(STD_OUTPUT_HANDLE);\n\t// 注册窗口类\n\tWNDCLASS wc = { 0 };\n\twc.cbClsExtra = 0;\n\twc.cbWndExtra = 0;\n\twc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n\twc.hCursor = NULL;\n\twc.hIcon = NULL;\n\twc.hInstance = hInstance;\n\twc.lpfnWndProc = WndProc;\n\twc.lpszClassName = "Main";\n\twc.lpszMenuName = NULL;\n\twc.style = CS_HREDRAW | CS_VREDRAW;\n\n\tRegisterClass(&wc);\n\n\t//在内存中创建窗口\n\tchar* pszText = (char*)"hello data";\n\tHWND hWnd = CreateWindowEx(0, "Main", "Window", WS_OVERLAPPEDWINDOW, 100, 100, 500, 500, NULL, NULL, hInstance, pszText);\n\t//显示窗口\n\tShowWindow(hWnd, SW_SHOW);\n\tUpdateWindow(hWnd);\n\t// 消息循环，避免窗口消失\n\tMSG nMsg = { 0 };\n\twhile (GetMessage(&nMsg, NULL, 0, 0))\n\t{\n\t\tTranslateMessage(&nMsg);\n\t\t//将消息交给窗口处理函数\n\t\tDispatchMessage(&nMsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n',normalizedContent:'# 文字的绘制\n\ntextout-将文字绘制在指定坐标位置\n\ndrawtext\n\nint drawtext(\n\thdc hdc,\t\t\t//dc句柄\n    lpctstr lpstring,\t//字符串\n    int ncount,\t\t\t//字符数量\n    lprect lprect,\t\t//绘制文字的矩形框\n    uint uformat\t\t//绘制方式\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 文字颜色和背景\n\n文字颜色：settextcolor\n\n文字背景色：setbkcolor\n\n文字背景模式：setbkmode(opaque/transparent)\n\n\n# 字体\n\nwindows常用字体为truetype格式的字体文件\n\n字体名-标识字体类型\n\nhfont-字体句柄\n\n 1. 创建字体\n    \n    ingdiapi hfont winapi createfonta(\n        _in_ int cheight,\t\t\t//字体高度\n        _in_ int cwidth,\t\t\t//字体宽度\n        _in_ int cescapement,\t\t//字符串倾斜角度\n        _in_ int corientation,\t\t//字符串旋转角度\n        _in_ int cweight,\t\t\t//字体的粗细\n        _in_ dword bitalic,\t\t\t//斜体\n        _in_ dword bunderline,\t\t//字符下划线\n        _in_ dword bstrikeout,\t\t//删除线\n        _in_ dword icharset,\t\t//字符集\n        _in_ dword ioutprecision,\t//输出精度\n        _in_ dword iclipprecision,\t//剪切精度\n        _in_ dword iquality,\t\t//输出质量\n        _in_ dword ipitchandfamily,\t//匹配字体\n        _in_opt_ lpcstr pszfacename\t//字体名称\n    );\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    \n\n 2. 应用字体到dc\n    \n    selectobject\n\n 3. 绘制字体\n    \n    drawtext/textout\n\n 4. 取出字体\n    \n    selectobject\n\n 5. 删除字体\n    \n    deleteobject\n\n\n# 代码\n\n//\n// created by js-001 on 2022/10/26 0026.\n//\n#include <windows.h>\n#include <stdio.h>\n\n#define wm_mymessage wm_user+1001\n\nhandle g_houtput = 0;//接收标准输出句柄\n\nvoid onpaint(hwnd hwnd) {\n\tpaintstruct ps = { 0 };\n\thdc hdc = beginpaint(hwnd, &ps);\n\n\tsettextcolor(hdc, rgb(255, 0, 0));\n\tsetbkcolor(hdc,rgb(0,255,0));//只适用于opaque模式\n\tsetbkmode(hdc,transparent);\n\n\thfont hfont = createfont(30, 0, 45, 0, 900, 1, 1, 1, gb2312_charset, 0, 0, 0, 0, "黑体");\n\thgdiobj noldfont = selectobject(hdc, hfont);\n\n\tchar sztext[] = "hello txt v";\n\ttextout(hdc,100,100,sztext,strlen(sztext));\n\n\trect rc;\n\trc.left = 100;\n\trc.top = 150;\n\trc.right = 200;\n\trc.bottom = 200;\n\trectangle(hdc, 100, 150, 200, 200);\n\tdrawtext(hdc, sztext, strlen(sztext), &rc, dt_left | dt_top | dt_wordbreak |dt_noclip);\n\n\tselectobject(hdc, noldfont);\n\tdeleteobject(hfont);\n\tendpaint(hwnd, &ps);\n}\n\n//窗口处理函数\nlresult callback wndproc(hwnd hwnd, uint msgid, wparam wparam, lparam lparam) {\n\tswitch (msgid)\n\t{\n\tcase wm_paint:\n\t\tonpaint(hwnd);\n\t\tbreak;\n\tcase wm_destroy:\n\t\tpostquitmessage(0);//可以使getmessage函数返回0\n\t\tbreak;\n\t}\n\treturn defwindowproc(hwnd, msgid, wparam, lparam);\n}\n\n//入口函数\nint callback winmain(hinstance hinstance, hinstance hpreinstance, lpstr lpcmdline, int ncmdshow) {\n\t//增加dos\n\tallocconsole();\n\tg_houtput = getstdhandle(std_output_handle);\n\t// 注册窗口类\n\twndclass wc = { 0 };\n\twc.cbclsextra = 0;\n\twc.cbwndextra = 0;\n\twc.hbrbackground = (hbrush)(color_window + 1);\n\twc.hcursor = null;\n\twc.hicon = null;\n\twc.hinstance = hinstance;\n\twc.lpfnwndproc = wndproc;\n\twc.lpszclassname = "main";\n\twc.lpszmenuname = null;\n\twc.style = cs_hredraw | cs_vredraw;\n\n\tregisterclass(&wc);\n\n\t//在内存中创建窗口\n\tchar* psztext = (char*)"hello data";\n\thwnd hwnd = createwindowex(0, "main", "window", ws_overlappedwindow, 100, 100, 500, 500, null, null, hinstance, psztext);\n\t//显示窗口\n\tshowwindow(hwnd, sw_show);\n\tupdatewindow(hwnd);\n\t// 消息循环，避免窗口消失\n\tmsg nmsg = { 0 };\n\twhile (getmessage(&nmsg, null, 0, 0))\n\t{\n\t\ttranslatemessage(&nmsg);\n\t\t//将消息交给窗口处理函数\n\t\tdispatchmessage(&nmsg);\n\t}\n\treturn 0;\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"15-对话框",frontmatter:{title:"15-对话框",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/dialog/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],publish:!0,readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/15.%E5%AF%B9%E8%AF%9D%E6%A1%86.html",relativePath:"06.软件开发/11.Win32/15.对话框.md",key:"v-6509761f",path:"/soft/win32/dialog/",headers:[{level:2,title:"对话框分类",slug:"对话框分类",normalizedTitle:"对话框分类",charIndex:2},{level:2,title:"对话框基本使用",slug:"对话框基本使用",normalizedTitle:"对话框基本使用",charIndex:74},{level:2,title:"模态对话框",slug:"模态对话框",normalizedTitle:"模态对话框",charIndex:9},{level:3,title:"创建对话框",slug:"创建对话框",normalizedTitle:"创建对话框",charIndex:116},{level:3,title:"对话框关闭",slug:"对话框关闭",normalizedTitle:"对话框关闭",charIndex:126},{level:3,title:"对话框消息",slug:"对话框消息",normalizedTitle:"对话框消息",charIndex:559}],headersStr:"对话框分类 对话框基本使用 模态对话框 创建对话框 对话框关闭 对话框消息",content:"# 对话框分类\n\n模态对话框-当对话框显示时，会禁止其他窗口和用户交互操作\n\n非模态对话框-在对话框显示后，其它窗口仍然可以和用户交互操作\n\n\n# 对话框基本使用\n\n 1. 对话框窗口处理函数\n 2. 注册窗口类（不使用）\n 3. 创建对话框\n 4. 对话框关闭\n\n\n# 模态对话框\n\n\n# 创建对话框\n\nINT DialogBox(\n    HINSTANCE hInstance,\t//应用程序实例句柄\n    LPCSTR lpTemplateName,\t//对话框资源ID\n    HWND hWndParent,\t\t//对话框父窗口\n    DLGPROC lpDialogFunc\t//自定义函数\n);\n\n\n1\n2\n3\n4\n5\n6\n\n\nDialogBox是一个阻塞函数，只有当对话框关闭后，才会返回，继续执行后续代码。\n\n返回值是通过EndDialog设置。\n\n\n# 对话框关闭\n\nBOOL EndDialog(\n\tHWND hDlg,\t//关闭的对话框窗口句柄\n    INT_PTR nResult\t//关闭的返回值\n);\n\n\n1\n2\n3\n4\n\n\n关闭模态对话框，只能使用EndDialog，不能使用DestoryWindow等函数。\n\nnResult是DialogBox函数退出时的返回值。\n\n\n# 对话框消息\n\nWM_INITDIALOG-对话框创建之后显示之前，通过对话框窗口处理函数，可以完成自己的初始化相关的操作。",normalizedContent:"# 对话框分类\n\n模态对话框-当对话框显示时，会禁止其他窗口和用户交互操作\n\n非模态对话框-在对话框显示后，其它窗口仍然可以和用户交互操作\n\n\n# 对话框基本使用\n\n 1. 对话框窗口处理函数\n 2. 注册窗口类（不使用）\n 3. 创建对话框\n 4. 对话框关闭\n\n\n# 模态对话框\n\n\n# 创建对话框\n\nint dialogbox(\n    hinstance hinstance,\t//应用程序实例句柄\n    lpcstr lptemplatename,\t//对话框资源id\n    hwnd hwndparent,\t\t//对话框父窗口\n    dlgproc lpdialogfunc\t//自定义函数\n);\n\n\n1\n2\n3\n4\n5\n6\n\n\ndialogbox是一个阻塞函数，只有当对话框关闭后，才会返回，继续执行后续代码。\n\n返回值是通过enddialog设置。\n\n\n# 对话框关闭\n\nbool enddialog(\n\thwnd hdlg,\t//关闭的对话框窗口句柄\n    int_ptr nresult\t//关闭的返回值\n);\n\n\n1\n2\n3\n4\n\n\n关闭模态对话框，只能使用enddialog，不能使用destorywindow等函数。\n\nnresult是dialogbox函数退出时的返回值。\n\n\n# 对话框消息\n\nwm_initdialog-对话框创建之后显示之前，通过对话框窗口处理函数，可以完成自己的初始化相关的操作。",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"16-静态库",frontmatter:{title:"16-静态库",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/staticlib/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/16.%E9%9D%99%E6%80%81%E5%BA%93.html",relativePath:"06.软件开发/11.Win32/16.静态库.md",key:"v-33e2e464",path:"/soft/win32/staticlib/",headers:[{level:2,title:"静态库特点",slug:"静态库特点",normalizedTitle:"静态库特点",charIndex:2},{level:2,title:"C语言静态库",slug:"c语言静态库",normalizedTitle:"c语言静态库",charIndex:51},{level:3,title:"C静态库的创建",slug:"c静态库的创建",normalizedTitle:"c静态库的创建",charIndex:62},{level:3,title:"C静态库的使用",slug:"c静态库的使用",normalizedTitle:"c静态库的使用",charIndex:108},{level:2,title:"C静态库代码",slug:"c静态库代码",normalizedTitle:"c静态库代码",charIndex:184},{level:2,title:"C++语言静态库",slug:"c-语言静态库",normalizedTitle:"c++语言静态库",charIndex:660},{level:3,title:"C++静态库的创建",slug:"c-静态库的创建",normalizedTitle:"c++静态库的创建",charIndex:673},{level:3,title:"C++静态库的使用",slug:"c-静态库的使用",normalizedTitle:"c++静态库的使用",charIndex:723},{level:3,title:"C++静态库代码",slug:"c-静态库代码",normalizedTitle:"c++静态库代码",charIndex:803},{level:2,title:"C++调用C静态库",slug:"c-调用c静态库",normalizedTitle:"c++调用c静态库",charIndex:1297}],headersStr:"静态库特点 C语言静态库 C静态库的创建 C静态库的使用 C静态库代码 C++语言静态库 C++静态库的创建 C++静态库的使用 C++静态库代码 C++调用C静态库",content:'# 静态库特点\n\n * 运行不存在\n * 静态库源码被链接到调用程序中\n * 目标程序的归档\n\n\n# C语言静态库\n\n\n# C静态库的创建\n\n 1. 创建一个静态库项目\n 2. 添加库程序，源文件使用C文件\n\n\n# C静态库的使用\n\n库路径设置：可以使用pragma关键字设置\n\n#pragma comment(lib, "../lib/clib.lib")\n\n\n# C静态库代码\n\n新建工程静态库Clib.c\n\nint Clib_add(int add1, int add2) {\n\treturn add1 + add2;\n}\n\nint Clib_sub(int sub1, int sub2) {\n\treturn sub1 - sub2;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n新建工程ClibUse\n\nClibUse.c\n\n#include "stdio.h"\n#pragma comment(lib,"../Debug/Clib.lib")\nint Clib_add(int add1, int add2);\nint Clib_sub(int sub1, int sub2);\nint main() {\n\tint sum = 0, sub = 0;\n\tsum = Clib_add(5, 3);\n\tsub = Clib_sub(5, 3);\n\n\tprintf("sum=%d,sub=%d\\n",sum,sub);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# C++语言静态库\n\n\n# C++静态库的创建\n\n 1. 创建一个静态库项目\n 2. 添加库文件，源文件使用CPP文件\n\n\n# C++静态库的使用\n\n库路径设置：可以使用pragma关键字设置\n\n#pragma comment(lib, "../lib/cpplib.lib")\n\n\n# C++静态库代码\n\n新建工程静态库\n\nint Cpplib_add(int add1, int add2) {\n\treturn add1 + add2;\n}\nint Cpplib_sub(int sub1, int sub2) {\n\treturn sub1 - sub2;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n新建工程\n\n#include <iostream>\nusing namespace std;\n\n#pragma comment(lib,"../Debug/Cpplib.lib")\n\nint Cpplib_add(int add1, int add2);\nint Cpplib_sub(int sub1, int sub2);\n\nint main() {\n\tint sum = Cpplib_add(5, 4);\n\tint sub = Cpplib_sub(5, 4);\n\tcout << "sum=" << sum << ",sub=" << sub << endl;\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# C++调用C静态库\n\n#include <iostream>\nusing namespace std;\n\n#pragma comment(lib,"../Debug/Cpplib.lib")\nint Cpplib_add(int add1, int add2);\nint Cpplib_sub(int sub1, int sub2);\n\n#pragma comment(lib,"../Debug/Clib.lib")\nextern "C" int Clib_add(int add1, int add2);\nextern "C" int Clib_sub(int sub1, int sub2);\n\nint main() {\n\tint sum = Cpplib_add(5, 4);\n\tint sub = Cpplib_sub(5, 4);\n\tcout << "sum=" << sum << ",sub=" << sub << endl;\n\tsum = Clib_add(7, 4);\n\tsub = Clib_sub(7, 4);\n\tcout << "sum=" << sum << ",sub=" << sub << endl;\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',normalizedContent:'# 静态库特点\n\n * 运行不存在\n * 静态库源码被链接到调用程序中\n * 目标程序的归档\n\n\n# c语言静态库\n\n\n# c静态库的创建\n\n 1. 创建一个静态库项目\n 2. 添加库程序，源文件使用c文件\n\n\n# c静态库的使用\n\n库路径设置：可以使用pragma关键字设置\n\n#pragma comment(lib, "../lib/clib.lib")\n\n\n# c静态库代码\n\n新建工程静态库clib.c\n\nint clib_add(int add1, int add2) {\n\treturn add1 + add2;\n}\n\nint clib_sub(int sub1, int sub2) {\n\treturn sub1 - sub2;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n新建工程clibuse\n\nclibuse.c\n\n#include "stdio.h"\n#pragma comment(lib,"../debug/clib.lib")\nint clib_add(int add1, int add2);\nint clib_sub(int sub1, int sub2);\nint main() {\n\tint sum = 0, sub = 0;\n\tsum = clib_add(5, 3);\n\tsub = clib_sub(5, 3);\n\n\tprintf("sum=%d,sub=%d\\n",sum,sub);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# c++语言静态库\n\n\n# c++静态库的创建\n\n 1. 创建一个静态库项目\n 2. 添加库文件，源文件使用cpp文件\n\n\n# c++静态库的使用\n\n库路径设置：可以使用pragma关键字设置\n\n#pragma comment(lib, "../lib/cpplib.lib")\n\n\n# c++静态库代码\n\n新建工程静态库\n\nint cpplib_add(int add1, int add2) {\n\treturn add1 + add2;\n}\nint cpplib_sub(int sub1, int sub2) {\n\treturn sub1 - sub2;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n新建工程\n\n#include <iostream>\nusing namespace std;\n\n#pragma comment(lib,"../debug/cpplib.lib")\n\nint cpplib_add(int add1, int add2);\nint cpplib_sub(int sub1, int sub2);\n\nint main() {\n\tint sum = cpplib_add(5, 4);\n\tint sub = cpplib_sub(5, 4);\n\tcout << "sum=" << sum << ",sub=" << sub << endl;\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# c++调用c静态库\n\n#include <iostream>\nusing namespace std;\n\n#pragma comment(lib,"../debug/cpplib.lib")\nint cpplib_add(int add1, int add2);\nint cpplib_sub(int sub1, int sub2);\n\n#pragma comment(lib,"../debug/clib.lib")\nextern "c" int clib_add(int add1, int add2);\nextern "c" int clib_sub(int sub1, int sub2);\n\nint main() {\n\tint sum = cpplib_add(5, 4);\n\tint sub = cpplib_sub(5, 4);\n\tcout << "sum=" << sum << ",sub=" << sub << endl;\n\tsum = clib_add(7, 4);\n\tsub = clib_sub(7, 4);\n\tcout << "sum=" << sum << ",sub=" << sub << endl;\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"17-动态库",frontmatter:{title:"17-动态库",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/dynamiclib/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/17.%E5%8A%A8%E6%80%81%E5%BA%93.html",relativePath:"06.软件开发/11.Win32/17.动态库.md",key:"v-3f27ce08",path:"/soft/win32/dynamiclib/",headers:[{level:2,title:"动态库的特点",slug:"动态库的特点",normalizedTitle:"动态库的特点",charIndex:2},{level:3,title:"特点",slug:"特点",normalizedTitle:"特点",charIndex:6},{level:3,title:"与静态库比较",slug:"与静态库比较",normalizedTitle:"与静态库比较",charIndex:74},{level:3,title:"动态库的创建",slug:"动态库的创建",normalizedTitle:"动态库的创建",charIndex:247},{level:2,title:"动态库的使用",slug:"动态库的使用",normalizedTitle:"动态库的使用",charIndex:592},{level:3,title:"显式链接",slug:"显式链接",normalizedTitle:"显式链接",charIndex:603},{level:3,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:93},{level:3,title:"隐式链接",slug:"隐式链接",normalizedTitle:"隐式链接",charIndex:1544},{level:2,title:"动态库中封装类",slug:"动态库中封装类",normalizedTitle:"动态库中封装类",charIndex:2973},{level:4,title:"代码",slug:"代码-2",normalizedTitle:"代码",charIndex:93}],headersStr:"动态库的特点 特点 与静态库比较 动态库的创建 动态库的使用 显式链接 代码 隐式链接 动态库中封装类 代码",content:'# 动态库的特点\n\n\n# 特点\n\n 1. 运行时独立存在\n 2. 源码不会链接到执行程序\n 3. 使用时加载（使用动态库必须是动态库执行）\n\n\n# 与静态库比较\n\n 1. 由于静态库是将代码嵌入到使用程序中，多个程序时使用时，会有多份代码，所以代码体积会增大。动态库的代码只需要存在一份，其他程序通过函数地址使用，所以代码体积小。\n 2. 静态库发生变化后，新的代码需要重新链接嵌入到执行程序中。动态库发生变化后，如果库中函数的定义（或地址）未变化，其它使用DLL的程序不需重新链接。\n\n\n# 动态库的创建\n\n 1. 创建动态库项目\n\n 2. 添加库程序\n\n 3. 库程序导出-提供给使用者库中的函数等信息。\n    \n    1. 声明导出：使用_declspec(dllexport)导出函数\n       \n       注意：动态库编译连接后，也会有LIB文件，是作为动态库函数映射使用，与静态库不完全相同。\n    \n    2. 模块定义文件.def\n       \n       例如：\n       \n       LIBRARY DLLFunc\t//库\n       EXPORTS\t\t\t//库导出表\n       DLL_Mul @1\t\t//导出的函数\n       \n       \n       1\n       2\n       3\n       \n\n\n# 动态库的使用\n\n\n# 显式链接\n\n程序员自己负责使动态库执行\n\n 1. 定义函数指针类型typedef\n\n 2. 加载动态库\n    \n    HMODULE LoadLibrary(\n        LPCTSTR lpFileName\t//动态库文件名或全路径\n    );//返回DLL的实例句柄\n    \n    \n    1\n    2\n    3\n    \n\n 3. 获取函数地址\n    \n    FARPROC GetProcAddress(\n    \tHMODULE hModule,\t//DLL句柄\n        LPCSTR lpProcName\t//函数名称\n    );//成功返回函数地址\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 使用函数\n\n 5. 卸载动态库\n    \n    BOOL FreeLibrary(\n    \tHMODULE hModule\t//DLL句柄\n    );\n    \n    \n    1\n    2\n    3\n    \n\n\n# 代码\n\n#include <iostream>\nusing namespace std;\n\n_declspec(dllimport)int CPPDll_add(int add1, int add2);\n_declspec(dllimport)int CPPDll_sub(int sub1, int sub2);\n_declspec(dllimport)int CPPDll_mul(int mul1, int mul2);\n#pragma comment(lib,"../Debug/CPPDll.lib")\n\nint main() {\n\tint sum = CPPDll_add(5, 4);\n\tint sub = CPPDll_sub(5, 4);\n\tint mul = CPPDll_mul(5, 4);\n\tcout << "sum=" << sum << ",sub=" << sub << ",mul=" << mul << endl;\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 隐式链接\n\n操作系统负责使动态库执行\n\n 1. 头文件和函数原型\n    \n    可以在函数原型的声明前，增加_declspec(dllimport)\n\n 2. 导入动态库的LIB文件\n\n 3. 在程序中使用函数\n\n 4. 隐式链接的情况，dll文件可以存放的路径\n    \n    * 与执行文件中同一个目录下\n    * 当前工作目录\n    * Windows目录\n    * Windows/System32目录\n    * Windows/System目录\n    * 环境变量PATH指定目录\n\n 5. 更改CPPDll\n\nint CPPDll_add(int add1, int add2) {\n\treturn add1 + add2;\n}\n\nint CPPDll_sub(int sub1, int sub2) {\n\treturn sub1 - sub2;\n}\n\n_declspec(dllexport)int CPPDll_mul(int mul1, int mul2) {\n\treturn mul1 * mul2;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n 2. 增模块定义CPPDll.def\n\nLIBRARY CPPDll\nEXPORTS\n\tCPPDll_add @1\n\tCPPDll_sub @2\n\n\n1\n2\n3\n4\n\n 3. 隐式链接使用\n\n#include <Windows.h>\n#include <iostream>\nusing namespace std;\n\ntypedef int(*ADD)(int m, int n);\ntypedef int(*SUB)(int m, int n);\ntypedef int(*MUL)(int m, int n);\nint main() {\n\tHINSTANCE hDll = LoadLibrary("../Debug/CPPDll.dll");\n\tcout << "hDll:" << hDll << endl;\n\n\tADD myAdd = (ADD)GetProcAddress(hDll, "CPPDll_add");\n\tcout << "myAdd:" << myAdd << endl;\n\tint sum = myAdd(5, 4);\n\tcout << "sum=" << sum << endl;\n\n\tSUB mySub = (SUB)GetProcAddress(hDll, "CPPDll_sub");\n\tcout << "mySub:" << mySub << endl;\n\tint sub = mySub(5, 4);\n\tcout << "sub=" << sub << endl;\n\n\tMUL myMul = (MUL)GetProcAddress(hDll, "?CPPDll_mul@@YAHHH@Z");\n\tcout << "myMul:" << myMul << endl;\n\tint mul = myMul(5, 4);\n\tcout << "mul=" << mul << endl;\n\t\n\tFreeLibrary(hDll);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 动态库中封装类\n\n * 在类名称前增加_declspec(dllexport)定义，例如\n\nclass _declspec(dllexport) CMath{\n  ...  \n};\n\n\n1\n2\n3\n\n * 通常使用预编译开关切换类的导入导出定义，例如\n\n#ifdef DLLCLASS_EXPORTS\n#define EXT_CLASS _declspec(dllexport)\n#else\n#define EXT_CLASS _declspec(dllimxport)\n#endif\nclass EXT_CLASS CMath{\n    ...\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 代码\n\n * 新建dll工程\n\nCPPDllClass.h\n\n#ifndef _CPPDLLCLASS_H\n#define _CPPDLLCLASS_H\n\n#ifdef CPPDLLCLASS_EXPORTS\n#define EXT_CLASS _declspec(dllexport)\n#else\n#define EXT_CLASS _declspec(dllimport)\n#endif\n\nclass EXT_CLASS CMath {\npublic:\n\tint Add(int add1, int add2);\n\tint Sub(int sub1, int sub2);\n};\n\n#endif\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\nCPPDllClass.cpp\n\n#define CPPDLLCLASS_EXPORTS\n#include "CPPClassDll.h"\n\nint CMath::Add(int add1, int add2)\n{\n\treturn add1+ add2;\n}\n\nint CMath::Sub(int sub1, int sub2)\n{\n\treturn sub1 - sub2;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n * 新建DLL使用工程\n\n#include <iostream>\n#include "../CPPCLassDll/CPPClassDll.h"\nusing namespace std;\n\n#pragma comment(lib,"../Debug/CPPClassDll.lib")\nint main() {\n\tCMath math;\n\tint sum = math.Add(5, 6);\n\tint sub = math.Sub(5, 6);\n\tcout << "sum=" << sum << ",sub=" << sub << endl;\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',normalizedContent:'# 动态库的特点\n\n\n# 特点\n\n 1. 运行时独立存在\n 2. 源码不会链接到执行程序\n 3. 使用时加载（使用动态库必须是动态库执行）\n\n\n# 与静态库比较\n\n 1. 由于静态库是将代码嵌入到使用程序中，多个程序时使用时，会有多份代码，所以代码体积会增大。动态库的代码只需要存在一份，其他程序通过函数地址使用，所以代码体积小。\n 2. 静态库发生变化后，新的代码需要重新链接嵌入到执行程序中。动态库发生变化后，如果库中函数的定义（或地址）未变化，其它使用dll的程序不需重新链接。\n\n\n# 动态库的创建\n\n 1. 创建动态库项目\n\n 2. 添加库程序\n\n 3. 库程序导出-提供给使用者库中的函数等信息。\n    \n    1. 声明导出：使用_declspec(dllexport)导出函数\n       \n       注意：动态库编译连接后，也会有lib文件，是作为动态库函数映射使用，与静态库不完全相同。\n    \n    2. 模块定义文件.def\n       \n       例如：\n       \n       library dllfunc\t//库\n       exports\t\t\t//库导出表\n       dll_mul @1\t\t//导出的函数\n       \n       \n       1\n       2\n       3\n       \n\n\n# 动态库的使用\n\n\n# 显式链接\n\n程序员自己负责使动态库执行\n\n 1. 定义函数指针类型typedef\n\n 2. 加载动态库\n    \n    hmodule loadlibrary(\n        lpctstr lpfilename\t//动态库文件名或全路径\n    );//返回dll的实例句柄\n    \n    \n    1\n    2\n    3\n    \n\n 3. 获取函数地址\n    \n    farproc getprocaddress(\n    \thmodule hmodule,\t//dll句柄\n        lpcstr lpprocname\t//函数名称\n    );//成功返回函数地址\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 使用函数\n\n 5. 卸载动态库\n    \n    bool freelibrary(\n    \thmodule hmodule\t//dll句柄\n    );\n    \n    \n    1\n    2\n    3\n    \n\n\n# 代码\n\n#include <iostream>\nusing namespace std;\n\n_declspec(dllimport)int cppdll_add(int add1, int add2);\n_declspec(dllimport)int cppdll_sub(int sub1, int sub2);\n_declspec(dllimport)int cppdll_mul(int mul1, int mul2);\n#pragma comment(lib,"../debug/cppdll.lib")\n\nint main() {\n\tint sum = cppdll_add(5, 4);\n\tint sub = cppdll_sub(5, 4);\n\tint mul = cppdll_mul(5, 4);\n\tcout << "sum=" << sum << ",sub=" << sub << ",mul=" << mul << endl;\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 隐式链接\n\n操作系统负责使动态库执行\n\n 1. 头文件和函数原型\n    \n    可以在函数原型的声明前，增加_declspec(dllimport)\n\n 2. 导入动态库的lib文件\n\n 3. 在程序中使用函数\n\n 4. 隐式链接的情况，dll文件可以存放的路径\n    \n    * 与执行文件中同一个目录下\n    * 当前工作目录\n    * windows目录\n    * windows/system32目录\n    * windows/system目录\n    * 环境变量path指定目录\n\n 5. 更改cppdll\n\nint cppdll_add(int add1, int add2) {\n\treturn add1 + add2;\n}\n\nint cppdll_sub(int sub1, int sub2) {\n\treturn sub1 - sub2;\n}\n\n_declspec(dllexport)int cppdll_mul(int mul1, int mul2) {\n\treturn mul1 * mul2;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n 2. 增模块定义cppdll.def\n\nlibrary cppdll\nexports\n\tcppdll_add @1\n\tcppdll_sub @2\n\n\n1\n2\n3\n4\n\n 3. 隐式链接使用\n\n#include <windows.h>\n#include <iostream>\nusing namespace std;\n\ntypedef int(*add)(int m, int n);\ntypedef int(*sub)(int m, int n);\ntypedef int(*mul)(int m, int n);\nint main() {\n\thinstance hdll = loadlibrary("../debug/cppdll.dll");\n\tcout << "hdll:" << hdll << endl;\n\n\tadd myadd = (add)getprocaddress(hdll, "cppdll_add");\n\tcout << "myadd:" << myadd << endl;\n\tint sum = myadd(5, 4);\n\tcout << "sum=" << sum << endl;\n\n\tsub mysub = (sub)getprocaddress(hdll, "cppdll_sub");\n\tcout << "mysub:" << mysub << endl;\n\tint sub = mysub(5, 4);\n\tcout << "sub=" << sub << endl;\n\n\tmul mymul = (mul)getprocaddress(hdll, "?cppdll_mul@@yahhh@z");\n\tcout << "mymul:" << mymul << endl;\n\tint mul = mymul(5, 4);\n\tcout << "mul=" << mul << endl;\n\t\n\tfreelibrary(hdll);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 动态库中封装类\n\n * 在类名称前增加_declspec(dllexport)定义，例如\n\nclass _declspec(dllexport) cmath{\n  ...  \n};\n\n\n1\n2\n3\n\n * 通常使用预编译开关切换类的导入导出定义，例如\n\n#ifdef dllclass_exports\n#define ext_class _declspec(dllexport)\n#else\n#define ext_class _declspec(dllimxport)\n#endif\nclass ext_class cmath{\n    ...\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 代码\n\n * 新建dll工程\n\ncppdllclass.h\n\n#ifndef _cppdllclass_h\n#define _cppdllclass_h\n\n#ifdef cppdllclass_exports\n#define ext_class _declspec(dllexport)\n#else\n#define ext_class _declspec(dllimport)\n#endif\n\nclass ext_class cmath {\npublic:\n\tint add(int add1, int add2);\n\tint sub(int sub1, int sub2);\n};\n\n#endif\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\ncppdllclass.cpp\n\n#define cppdllclass_exports\n#include "cppclassdll.h"\n\nint cmath::add(int add1, int add2)\n{\n\treturn add1+ add2;\n}\n\nint cmath::sub(int sub1, int sub2)\n{\n\treturn sub1 - sub2;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n * 新建dll使用工程\n\n#include <iostream>\n#include "../cppclassdll/cppclassdll.h"\nusing namespace std;\n\n#pragma comment(lib,"../debug/cppclassdll.lib")\nint main() {\n\tcmath math;\n\tint sum = math.add(5, 6);\n\tint sub = math.sub(5, 6);\n\tcout << "sum=" << sum << ",sub=" << sub << endl;\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"线程",frontmatter:{title:"线程",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/thread/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/18.%E7%BA%BF%E7%A8%8B.html",relativePath:"06.软件开发/11.Win32/18.线程.md",key:"v-a0646db8",path:"/soft/win32/thread/",headers:[{level:2,title:"线程基础",slug:"线程基础",normalizedTitle:"线程基础",charIndex:2},{level:2,title:"创建线程",slug:"创建线程",normalizedTitle:"创建线程",charIndex:234},{level:2,title:"线程挂起/休眠",slug:"线程挂起-休眠",normalizedTitle:"线程挂起/休眠",charIndex:678},{level:3,title:"销毁线程",slug:"销毁线程",normalizedTitle:"销毁线程",charIndex:690},{level:2,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:26}],headersStr:"线程基础 创建线程 线程挂起/休眠 销毁线程 代码",content:'# 线程基础\n\n * Windows线程是可以执行的代码的实例。\n   \n   系统是以线程为单位调度程序。\n   \n   一个程序当中可以有多个线程，实现多任务处理。\n\n * Windows线程的特点\n   \n   * 线程都具有1个ID\n   * 每个线程都具有自己的内存栈\n   * 同一进程中的线程使用同一个地址空间\n\n * 线程的调度\n\n操作系统将CPU的执行时间划分成时间片，依次根据时间片执行不同的线程。\n\n线程轮询：线程A->线程B->线程A\n\n\n# 创建线程\n\n * 创建线程\n\nHANDLE CreateThread(\n\tLPSECURITY_ATTRIBUTES lpThreadAttributes,\t//安全属性\n    SIZE_T dwStackSize,\t\t\t\t\t\t\t//线程栈的大小\n    LPTHREAD_START_ROUTINE lpStartAddress,\t\t//线程处理函数的函数地址\n    LPVOID lpParameter,\t\t\t\t\t\t\t//传递给线程处理函数的参数\n    DWORD dwCreationFlasg,\t\t\t\t\t\t//线程的创建方式\n    LPDWORD lpThreadId\t\t\t\t\t\t\t//创建成功，返回线程的ID\n);//创建成功，返回线程句柄\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 定义线程处理函数\n\nDWORD WINAPI ThreadProc(\n\tLPVOID lpParameter\t//创建线程时，传递给线程处理函数的参数\n);\n\n\n1\n2\n3\n\n\n\n# 线程挂起/休眠\n\n\n# 销毁线程\n\n * 挂起\n\nDWORD SuspendThread(HANDLE hThread);\n\n\n1\n\n * 唤醒\n\nDWORD ResumeThread(HANDLE hThread);\n\n\n1\n\n * 结束指定线程\n\nBOOL TerminateThread(\n\tHANDLE hThread,\n    DWORD dwExitCode\n);\n\n\n1\n2\n3\n4\n\n * 结束函数所在线程\n\nVOID ExitThread(DOWRD dwExitCode);\n\n\n1\n\n * 获取当前线程的ID\n\nGetCurrentThreadId();\n\n\n1\n\n * 获取当前线程的句柄\n\nGetCurrentThread();\n\n\n1\n\n * 等候单个句柄有信号\n\nVOID WaitForSingleObject(\n\tHANDLE handle,\t\t//句柄BUFF的地址\n    DWORD dwMilliseconds\t//等候时间INFINITE\n);\n\n\n1\n2\n3\n4\n\n * 同时等候多个句柄有信号\n\nDWORD WaitForMultipleObjects(\n\tDWORD nCount,\t//句柄数量\n    CONST HANDLE *lpHandles,\t//句柄BUFF的地址\n    BOOL bWaitAll,\t\t//等候方式\n    DWORD dwMilliseconds\t//等候时间INFINITE\n);\n\n\n1\n2\n3\n4\n5\n6\n\n\nbWaitAll-等候方式\n\nTRUE-表示所有句柄都有信号，才结束等候\n\nFALSE-表示句柄中只要有1个有信号，就结束等候\n\n\n# 代码\n\n#include <Windows.h>\n#include <stdio.h>\nDWORD CALLBACK TestProc(LPVOID pParam) {\n\tchar* pszText = (char*)pParam;\n\twhile (1) {\n\t\tprintf("%s\\n", pszText);\n\t\tSleep(1000);\n\t}\n\treturn 0;\n}\n\nDWORD CALLBACK TestProc1(LPVOID pParam) {\n\tchar* pszText = (char*)pParam;\n\twhile (1) {\n\t\tprintf("%s\\n", pszText);\n\t\tSleep(1000);\n\t}\n\treturn 0;\n}\n\nint main() {\n\tDWORD nID = 0;\n\tchar* pszText = "*********";\n\tHANDLE hThread = CreateThread(NULL, 0, TestProc, pszText, 0, &nID);\n\tchar* pszText1 = "---------";\n\tHANDLE hThread1 = CreateThread(NULL, 0, TestProc1, pszText1, CREATE_SUSPENDED, &nID);\n\tgetchar();\n\tSuspendThread(hThread);\n\tResumeThread(hThread1);\n\tgetchar();\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n',normalizedContent:'# 线程基础\n\n * windows线程是可以执行的代码的实例。\n   \n   系统是以线程为单位调度程序。\n   \n   一个程序当中可以有多个线程，实现多任务处理。\n\n * windows线程的特点\n   \n   * 线程都具有1个id\n   * 每个线程都具有自己的内存栈\n   * 同一进程中的线程使用同一个地址空间\n\n * 线程的调度\n\n操作系统将cpu的执行时间划分成时间片，依次根据时间片执行不同的线程。\n\n线程轮询：线程a->线程b->线程a\n\n\n# 创建线程\n\n * 创建线程\n\nhandle createthread(\n\tlpsecurity_attributes lpthreadattributes,\t//安全属性\n    size_t dwstacksize,\t\t\t\t\t\t\t//线程栈的大小\n    lpthread_start_routine lpstartaddress,\t\t//线程处理函数的函数地址\n    lpvoid lpparameter,\t\t\t\t\t\t\t//传递给线程处理函数的参数\n    dword dwcreationflasg,\t\t\t\t\t\t//线程的创建方式\n    lpdword lpthreadid\t\t\t\t\t\t\t//创建成功，返回线程的id\n);//创建成功，返回线程句柄\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 定义线程处理函数\n\ndword winapi threadproc(\n\tlpvoid lpparameter\t//创建线程时，传递给线程处理函数的参数\n);\n\n\n1\n2\n3\n\n\n\n# 线程挂起/休眠\n\n\n# 销毁线程\n\n * 挂起\n\ndword suspendthread(handle hthread);\n\n\n1\n\n * 唤醒\n\ndword resumethread(handle hthread);\n\n\n1\n\n * 结束指定线程\n\nbool terminatethread(\n\thandle hthread,\n    dword dwexitcode\n);\n\n\n1\n2\n3\n4\n\n * 结束函数所在线程\n\nvoid exitthread(dowrd dwexitcode);\n\n\n1\n\n * 获取当前线程的id\n\ngetcurrentthreadid();\n\n\n1\n\n * 获取当前线程的句柄\n\ngetcurrentthread();\n\n\n1\n\n * 等候单个句柄有信号\n\nvoid waitforsingleobject(\n\thandle handle,\t\t//句柄buff的地址\n    dword dwmilliseconds\t//等候时间infinite\n);\n\n\n1\n2\n3\n4\n\n * 同时等候多个句柄有信号\n\ndword waitformultipleobjects(\n\tdword ncount,\t//句柄数量\n    const handle *lphandles,\t//句柄buff的地址\n    bool bwaitall,\t\t//等候方式\n    dword dwmilliseconds\t//等候时间infinite\n);\n\n\n1\n2\n3\n4\n5\n6\n\n\nbwaitall-等候方式\n\ntrue-表示所有句柄都有信号，才结束等候\n\nfalse-表示句柄中只要有1个有信号，就结束等候\n\n\n# 代码\n\n#include <windows.h>\n#include <stdio.h>\ndword callback testproc(lpvoid pparam) {\n\tchar* psztext = (char*)pparam;\n\twhile (1) {\n\t\tprintf("%s\\n", psztext);\n\t\tsleep(1000);\n\t}\n\treturn 0;\n}\n\ndword callback testproc1(lpvoid pparam) {\n\tchar* psztext = (char*)pparam;\n\twhile (1) {\n\t\tprintf("%s\\n", psztext);\n\t\tsleep(1000);\n\t}\n\treturn 0;\n}\n\nint main() {\n\tdword nid = 0;\n\tchar* psztext = "*********";\n\thandle hthread = createthread(null, 0, testproc, psztext, 0, &nid);\n\tchar* psztext1 = "---------";\n\thandle hthread1 = createthread(null, 0, testproc1, psztext1, create_suspended, &nid);\n\tgetchar();\n\tsuspendthread(hthread);\n\tresumethread(hthread1);\n\tgetchar();\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"线程同步",frontmatter:{title:"线程同步",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/threadsync/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/11.Win32/19.%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5.html",relativePath:"06.软件开发/11.Win32/19.线程同步.md",key:"v-0a9ee462",path:"/soft/win32/threadsync/",headers:[{level:2,title:"原子锁",slug:"原子锁",normalizedTitle:"原子锁",charIndex:2},{level:2,title:"互斥",slug:"互斥",normalizedTitle:"互斥",charIndex:1048},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:2568},{level:2,title:"信号量",slug:"信号量",normalizedTitle:"信号量",charIndex:3820}],headersStr:"原子锁 互斥 事件 信号量",content:'# 原子锁\n\n * 相关问题\n\n多个线程对同一个数据进行原子操作，会产生结果丢失。比如执行++运算时。\n\n * 错误代码分析\n\n当线程A执行g_value++时，如果线程切换时间正好是在线程A将值保存到g_value之前，线程B继续执行g_value++，那么当线程A再次被切换回来之后，会将原来线程A保存的值保存到g_value上，线程B进行的加法操作被覆盖。\n\n * 使用原子锁函数\n\nInterlockedIncrement\nInterlockedDecrement\nInterlockedCompareExchange\nInterlockedExchange    \n\n\n1\n2\n3\n4\n\n\n原子锁实现：直接对数据所在的内存操作，并且在任何一个瞬间只能由一个线程访问。\n\n * 代码\n\n#include <Windows.h>\n#include <stdio.h>\nlong g_value = 0;\n\nDWORD CALLBACK TestProc1(LPVOID pParam) {\n\tfor (int i = 0; i < 90000; i++)\n\t{\n\t\t//g_value++;\n\t\tInterlockedIncrement(&g_value);\n\t}\n\treturn 0;\n}\n\nDWORD CALLBACK TestProc2(LPVOID pParam) {\n\tfor (int i = 0; i < 90000; i++)\n\t{\n\t\t//g_value++;\n\t\tInterlockedIncrement(&g_value);\n\t}\n\treturn 0;\n}\n\nint main() {\n\tDWORD nID = 0;\n\tHANDLE hThread[2];\n\thThread[0] = CreateThread(NULL, 0, TestProc1, NULL, 0, &nID);\n\thThread[1] = CreateThread(NULL, 0, TestProc2, NULL, 0, &nID);\n\tWaitForMultipleObjects(2,hThread,TRUE,INFINITE);\n\tprintf("%d\\n",g_value);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# 互斥\n\n * 相关问题\n\n多线程下代码或资源的共享使用\n\n * 互斥使用\n\n 1. 创建互斥\n\nHANDLE CreateMutex(\n\tLPSECURITY_ATTRIBUTES lpMutexAttributes,\t//安全属性\n    BOOL bInitialOwner,\t\t\t//初始拥有者 TRUE/FALSE\n    LPCTSTR lpName\t//命名\n);\n\n\n1\n2\n3\n4\n5\n\n 2. 等候互斥\n\nWaitFor 互斥的等候遵循谁先等候谁先获取\n\n 3. 释放互斥\n\nBOOL ReleaseMutex(HANDLE hMutex);\n\n\n1\n\n\n 4. 关闭互斥句柄\n    \n    CloseHandle\n\n * 代码\n\n#include <Windows.h>\n#include <stdio.h>\nHANDLE g_hMutex = 0;//互斥句柄\nDWORD CALLBACK TestProc(LPVOID pParam) {\n\tchar* pszText = (char*)pParam;\n\twhile (1) {\n\t\t//printf("%s\\n", pszText);\n\t\t//Sleep(1000);\n\t\tWaitForSingleObject(g_hMutex, INFINITE);\n\t\tfor (int i = 0; i < strlen(pszText); i++)\n\t\t{\n\t\t\tprintf("%c", pszText[i]);\n\t\t\tSleep(125);\n\t\t}\n\t\tprintf("\\n");\n\t\tReleaseMutex(g_hMutex);\n\t}\n\treturn 0;\n}\n\nDWORD CALLBACK TestProc1(LPVOID pParam) {\n\tchar* pszText = (char*)pParam;\n\twhile (1) {\n\t\t//printf("%s\\n", pszText);\n\t\t//Sleep(1000);\n\t\tWaitForSingleObject(g_hMutex, INFINITE);\n\t\tfor (int i = 0; i < strlen(pszText); i++)\n\t\t{\n\t\t\tprintf("%c", pszText[i]);\n\t\t\tSleep(125);\n\t\t}\n\t\tprintf("\\n");\n\t\tReleaseMutex(g_hMutex);\n\t}\n\treturn 0;\n}\n\nint main() {\n\tg_hMutex = CreateMutex(NULL, FALSE,NULL);\n\tDWORD nID = 0;\n\tchar* pszText = "*********";\n\tHANDLE hThread = CreateThread(NULL, 0, TestProc, pszText, 0, &nID);\n\tchar* pszText1 = "---------";\n\tHANDLE hThread1 = CreateThread(NULL, 0, TestProc1, pszText1, 0, &nID);\n\tgetchar();\n\tCloseHandle(g_hMutex);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n\n\n\n# 事件\n\n * 相关问题\n\n程序之间的通知的问题\n\n * 事件的使用\n\n 1. 创建事件\n\nHANDLE CreateEvent(\n\tLPSECURITY_ATTRIBUTES lpEventAttributes,\t//安全属性\n    BOOL bManualReset,\t//事件重置（复位）方式，TRUE手动，FALSE自动\n    BOOL bInitialState,\t//事件初始状态，TRUE 有信号\n    LPCTSTR lpName\t//事件命名\n);\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 等候事件\n\nWaitForSingleObject / WaitForMultipleObjects\n\n 3. 触发事件（将事件设置成有信号状态）\n\nBOOL SetEvent(HANDLE hEvent);\n\n\n1\n\n 4. 复位事件（将时间设置成无信号状态）\n\nBOOL ResetEvent(HANDLE hEvent);\n\n\n1\n\n 5. 关闭事件\n\nCloseHandle\n\n * 小心事件的死锁\n\n * 代码\n\n#include <Windows.h>\n#include <stdio.h>\nHANDLE g_hEvent = 0;\t//接收事件句柄\n\nDWORD CALLBACK PrintProc(LPVOID pParam) {\n\twhile (1) {\n\t\t//当事件有信号打印否则无限等待\n\t\tWaitForSingleObject(g_hEvent, INFINITE);\n\t\tprintf("***************\\n");\n\t\t//ResetEvent(g_hEvent);\n\t}\n\treturn 0;\n}\n\nDWORD CALLBACK CtrlProc(LPVOID pParam) {\n\twhile (1) {\n\t\tSleep(1000);\n\t\tSetEvent(g_hEvent);\n\t}\n\treturn 0;\n}\n\nint main() {\n\tg_hEvent = CreateEvent(NULL, FALSE, FALSE, NULL);\n\tDWORD nID = 0;\n\tHANDLE hThread[2] = { 0 };\n\thThread[0] = CreateThread(NULL, 0, PrintProc, NULL,0, &nID);\n\thThread[1] = CreateThread(NULL, 0, CtrlProc, NULL,0, &nID);\n\tWaitForMultipleObjects(2, hThread, TRUE, INFINITE);\n\tCloseHandle(g_hEvent);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# 信号量\n\n * 相关问题\n\n类似于事件，解决通知的相关问题。但提供一个计数器，可以设置次数\n\n * 信号量的使用\n   \n   1. 创建信号量\n   \n   HANDLE CreateSemaphore(\n   \tLPSECURITY_ATTRIBUTES lpSemaphoreAtttributes,\t//安全属性\n       LONG lInitialCount,\t//初始化信号量数量\n       LONG lMaximumCount,\t//信号量的最大值\n       LPCSTSTR lpName\t\t//命名\n   );\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n   \n   2. 等候信号量\n      \n      WaitFor 每等候通过一次，信号量的信号减1，知道为0阻塞\n   \n   3. 给信号量指定计数值\n   \n   BOOL ReleaseSemaphore(\n   \tHANDLE hSemaphore,\t//信号量句柄\n       LONG lReleaseCount,\t//释放数量\n       LPLONG lpPreviousCount\t//释放前原来心好凉的数量，可以为NULL\n   );\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   4. 关闭句柄\n      \n      CloseHandle\n\n * 代码\n   \n   #include <Windows.h>\n   #include <stdio.h>\n   \n   HANDLE g_hSema = 0;\n   \n   DWORD CALLBACK TestProc(LPVOID pParam) {\n   \twhile (1) {\n   \t\tWaitForSingleObject(g_hSema, INFINITE);\n   \t\tprintf("*********\\n");\n   \t}\n   }\n   \n   int main() {\n   \tg_hSema = CreateSemaphore(NULL, 3, 10, NULL);\n   \tDWORD nID = 0;\n   \tHANDLE hThread = CreateThread(NULL,0,TestProc,NULL,0,&nID);\n   \tgetchar();\n   \tReleaseSemaphore(g_hSema, 10, NULL);\n   \tWaitForSingleObject(hThread, INFINITE);\n   \tCloseHandle(g_hSema);\n   \treturn 0;\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   ',normalizedContent:'# 原子锁\n\n * 相关问题\n\n多个线程对同一个数据进行原子操作，会产生结果丢失。比如执行++运算时。\n\n * 错误代码分析\n\n当线程a执行g_value++时，如果线程切换时间正好是在线程a将值保存到g_value之前，线程b继续执行g_value++，那么当线程a再次被切换回来之后，会将原来线程a保存的值保存到g_value上，线程b进行的加法操作被覆盖。\n\n * 使用原子锁函数\n\ninterlockedincrement\ninterlockeddecrement\ninterlockedcompareexchange\ninterlockedexchange    \n\n\n1\n2\n3\n4\n\n\n原子锁实现：直接对数据所在的内存操作，并且在任何一个瞬间只能由一个线程访问。\n\n * 代码\n\n#include <windows.h>\n#include <stdio.h>\nlong g_value = 0;\n\ndword callback testproc1(lpvoid pparam) {\n\tfor (int i = 0; i < 90000; i++)\n\t{\n\t\t//g_value++;\n\t\tinterlockedincrement(&g_value);\n\t}\n\treturn 0;\n}\n\ndword callback testproc2(lpvoid pparam) {\n\tfor (int i = 0; i < 90000; i++)\n\t{\n\t\t//g_value++;\n\t\tinterlockedincrement(&g_value);\n\t}\n\treturn 0;\n}\n\nint main() {\n\tdword nid = 0;\n\thandle hthread[2];\n\ththread[0] = createthread(null, 0, testproc1, null, 0, &nid);\n\ththread[1] = createthread(null, 0, testproc2, null, 0, &nid);\n\twaitformultipleobjects(2,hthread,true,infinite);\n\tprintf("%d\\n",g_value);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# 互斥\n\n * 相关问题\n\n多线程下代码或资源的共享使用\n\n * 互斥使用\n\n 1. 创建互斥\n\nhandle createmutex(\n\tlpsecurity_attributes lpmutexattributes,\t//安全属性\n    bool binitialowner,\t\t\t//初始拥有者 true/false\n    lpctstr lpname\t//命名\n);\n\n\n1\n2\n3\n4\n5\n\n 2. 等候互斥\n\nwaitfor 互斥的等候遵循谁先等候谁先获取\n\n 3. 释放互斥\n\nbool releasemutex(handle hmutex);\n\n\n1\n\n\n 4. 关闭互斥句柄\n    \n    closehandle\n\n * 代码\n\n#include <windows.h>\n#include <stdio.h>\nhandle g_hmutex = 0;//互斥句柄\ndword callback testproc(lpvoid pparam) {\n\tchar* psztext = (char*)pparam;\n\twhile (1) {\n\t\t//printf("%s\\n", psztext);\n\t\t//sleep(1000);\n\t\twaitforsingleobject(g_hmutex, infinite);\n\t\tfor (int i = 0; i < strlen(psztext); i++)\n\t\t{\n\t\t\tprintf("%c", psztext[i]);\n\t\t\tsleep(125);\n\t\t}\n\t\tprintf("\\n");\n\t\treleasemutex(g_hmutex);\n\t}\n\treturn 0;\n}\n\ndword callback testproc1(lpvoid pparam) {\n\tchar* psztext = (char*)pparam;\n\twhile (1) {\n\t\t//printf("%s\\n", psztext);\n\t\t//sleep(1000);\n\t\twaitforsingleobject(g_hmutex, infinite);\n\t\tfor (int i = 0; i < strlen(psztext); i++)\n\t\t{\n\t\t\tprintf("%c", psztext[i]);\n\t\t\tsleep(125);\n\t\t}\n\t\tprintf("\\n");\n\t\treleasemutex(g_hmutex);\n\t}\n\treturn 0;\n}\n\nint main() {\n\tg_hmutex = createmutex(null, false,null);\n\tdword nid = 0;\n\tchar* psztext = "*********";\n\thandle hthread = createthread(null, 0, testproc, psztext, 0, &nid);\n\tchar* psztext1 = "---------";\n\thandle hthread1 = createthread(null, 0, testproc1, psztext1, 0, &nid);\n\tgetchar();\n\tclosehandle(g_hmutex);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n\n\n\n# 事件\n\n * 相关问题\n\n程序之间的通知的问题\n\n * 事件的使用\n\n 1. 创建事件\n\nhandle createevent(\n\tlpsecurity_attributes lpeventattributes,\t//安全属性\n    bool bmanualreset,\t//事件重置（复位）方式，true手动，false自动\n    bool binitialstate,\t//事件初始状态，true 有信号\n    lpctstr lpname\t//事件命名\n);\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 等候事件\n\nwaitforsingleobject / waitformultipleobjects\n\n 3. 触发事件（将事件设置成有信号状态）\n\nbool setevent(handle hevent);\n\n\n1\n\n 4. 复位事件（将时间设置成无信号状态）\n\nbool resetevent(handle hevent);\n\n\n1\n\n 5. 关闭事件\n\nclosehandle\n\n * 小心事件的死锁\n\n * 代码\n\n#include <windows.h>\n#include <stdio.h>\nhandle g_hevent = 0;\t//接收事件句柄\n\ndword callback printproc(lpvoid pparam) {\n\twhile (1) {\n\t\t//当事件有信号打印否则无限等待\n\t\twaitforsingleobject(g_hevent, infinite);\n\t\tprintf("***************\\n");\n\t\t//resetevent(g_hevent);\n\t}\n\treturn 0;\n}\n\ndword callback ctrlproc(lpvoid pparam) {\n\twhile (1) {\n\t\tsleep(1000);\n\t\tsetevent(g_hevent);\n\t}\n\treturn 0;\n}\n\nint main() {\n\tg_hevent = createevent(null, false, false, null);\n\tdword nid = 0;\n\thandle hthread[2] = { 0 };\n\ththread[0] = createthread(null, 0, printproc, null,0, &nid);\n\ththread[1] = createthread(null, 0, ctrlproc, null,0, &nid);\n\twaitformultipleobjects(2, hthread, true, infinite);\n\tclosehandle(g_hevent);\n\treturn 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# 信号量\n\n * 相关问题\n\n类似于事件，解决通知的相关问题。但提供一个计数器，可以设置次数\n\n * 信号量的使用\n   \n   1. 创建信号量\n   \n   handle createsemaphore(\n   \tlpsecurity_attributes lpsemaphoreatttributes,\t//安全属性\n       long linitialcount,\t//初始化信号量数量\n       long lmaximumcount,\t//信号量的最大值\n       lpcststr lpname\t\t//命名\n   );\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n   \n   2. 等候信号量\n      \n      waitfor 每等候通过一次，信号量的信号减1，知道为0阻塞\n   \n   3. 给信号量指定计数值\n   \n   bool releasesemaphore(\n   \thandle hsemaphore,\t//信号量句柄\n       long lreleasecount,\t//释放数量\n       lplong lppreviouscount\t//释放前原来心好凉的数量，可以为null\n   );\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   4. 关闭句柄\n      \n      closehandle\n\n * 代码\n   \n   #include <windows.h>\n   #include <stdio.h>\n   \n   handle g_hsema = 0;\n   \n   dword callback testproc(lpvoid pparam) {\n   \twhile (1) {\n   \t\twaitforsingleobject(g_hsema, infinite);\n   \t\tprintf("*********\\n");\n   \t}\n   }\n   \n   int main() {\n   \tg_hsema = createsemaphore(null, 3, 10, null);\n   \tdword nid = 0;\n   \thandle hthread = createthread(null,0,testproc,null,0,&nid);\n   \tgetchar();\n   \treleasesemaphore(g_hsema, 10, null);\n   \twaitforsingleobject(hthread, infinite);\n   \tclosehandle(g_hsema);\n   \treturn 0;\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   ',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"VBScript调用DLL",frontmatter:{title:"VBScript调用DLL",date:"2023-06-19T23:00:00.000Z",permalink:"/project/cplusplus/com/",private:!0,categories:["C++"],tags:["C++","COM"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/13.COM/01.VBScript%E8%B0%83%E7%94%A8DLL.html",relativePath:"06.软件开发/13.COM/01.VBScript调用DLL.md",key:"v-76c06413",path:"/project/cplusplus/com/",headers:[{level:2,title:"创建DLL",slug:"创建dll",normalizedTitle:"创建dll",charIndex:2},{level:3,title:"VC中创建DLL",slug:"vc中创建dll",normalizedTitle:"vc中创建dll",charIndex:12},{level:3,title:"添加ALT简单对象",slug:"添加alt简单对象",normalizedTitle:"添加alt简单对象",charIndex:31},{level:3,title:"添加方法",slug:"添加方法",normalizedTitle:"添加方法",charIndex:49},{level:2,title:"VBScript调用DLL",slug:"vbscript调用dll",normalizedTitle:"vbscript调用dll",charIndex:519},{level:3,title:"以管理员身份注册dll",slug:"以管理员身份注册dll",normalizedTitle:"以管理员身份注册dll",charIndex:537},{level:3,title:"调用DLL",slug:"调用dll",normalizedTitle:"调用dll",charIndex:527}],headersStr:"创建DLL VC中创建DLL 添加ALT简单对象 添加方法 VBScript调用DLL 以管理员身份注册dll 调用DLL",content:'# 创建DLL\n\n\n# VC中创建DLL\n\n\n\n\n\n\n\n\n# 添加ALT简单对象\n\n\n\n\n\n\n# 添加方法\n\n切换到类视图，在IFirstClass中添加方法\n\n\n\n\n\n可以看到生成方法\n\ninterface IFirstClass : IDispatch\n{\n\t[id(1)] HRESULT AddData([in] LONG num1, [in] LONG num2, [out, retval] LONG* sum);\n};\n\n\n1\n2\n3\n4\n\n\n打开FirstClass，添加实现\n\nSTDMETHODIMP CFirstClass::AddData(LONG num1, LONG num2, LONG* sum)\n{\n    // TODO: 在此处添加实现代码\n    *sum = num1 + num2;\n    return S_OK;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n编译生成DLL，并会自动注册到系统\n\n注意\n\n如果出现错误error MSB8011: 未能注册输出。请尝试启用“逐用户重定向”，或者使用提升的权限从命令提示符处注册该组件，可以忽略或者修改属性\n\n\n\n可以看到生成的dll文件\n\n\n\n\n# VBScript调用DLL\n\n\n# 以管理员身份注册dll\n\nregsvr32 ComTest1.dll\n\n\n# 调用DLL\n\n在64位系统中无法直接调用32位COM，有2种方法，\n\n 1. 在VBS种判断\n    \n    Option Explicit\n    \n    Run32()\n    \n    Dim obj\n    Set obj = CreateObject("COMPROJ.FirstClass")\n    MsgBox "成功创建COMPROJ.FirstClass对象"\n    MsgBox obj.AddData(456,465)\n    Sub Run32()\n        Dim strComputer, objWMIService, colItems, objItem, strSystemType\n        strComputer = "."\n        Set objWMIService = GetObject("winmgmts:\\\\" & strComputer & "\\root\\cimv2")\n        Set colItems = objWMIService.ExecQuery("Select * from Win32_ComputerSystem",,48)\n        \n        For Each objItem in colItems\n            strSystemType = objItem.SystemType\n        Next\n        \n        If InStr(strSystemType, "x64") > 0 Then\n            Dim fso, WshShell, strFullName\n            Set fso = CreateObject("Scripting.FileSystemObject")\n            Set WshShell = CreateObject("WScript.Shell")\n            strFullName = WScript.FullName\n            If InStr(1, strFullName, "system32", 1) > 0 Then\n                strFullName = Replace(strFullName, "system32", "SysWOW64", 1, 1, 1)\n                WshShell.Run strFullName & " " &_\n                    """" & WScript.ScriptFullName & """", 10, False\n                WScript.Quit\n            End If\n        End If\n    End Sub\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    \n\n 2. 生成32位和64位dll，在不同系统中分别调用',normalizedContent:'# 创建dll\n\n\n# vc中创建dll\n\n\n\n\n\n\n\n\n# 添加alt简单对象\n\n\n\n\n\n\n# 添加方法\n\n切换到类视图，在ifirstclass中添加方法\n\n\n\n\n\n可以看到生成方法\n\ninterface ifirstclass : idispatch\n{\n\t[id(1)] hresult adddata([in] long num1, [in] long num2, [out, retval] long* sum);\n};\n\n\n1\n2\n3\n4\n\n\n打开firstclass，添加实现\n\nstdmethodimp cfirstclass::adddata(long num1, long num2, long* sum)\n{\n    // todo: 在此处添加实现代码\n    *sum = num1 + num2;\n    return s_ok;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n编译生成dll，并会自动注册到系统\n\n注意\n\n如果出现错误error msb8011: 未能注册输出。请尝试启用“逐用户重定向”，或者使用提升的权限从命令提示符处注册该组件，可以忽略或者修改属性\n\n\n\n可以看到生成的dll文件\n\n\n\n\n# vbscript调用dll\n\n\n# 以管理员身份注册dll\n\nregsvr32 comtest1.dll\n\n\n# 调用dll\n\n在64位系统中无法直接调用32位com，有2种方法，\n\n 1. 在vbs种判断\n    \n    option explicit\n    \n    run32()\n    \n    dim obj\n    set obj = createobject("comproj.firstclass")\n    msgbox "成功创建comproj.firstclass对象"\n    msgbox obj.adddata(456,465)\n    sub run32()\n        dim strcomputer, objwmiservice, colitems, objitem, strsystemtype\n        strcomputer = "."\n        set objwmiservice = getobject("winmgmts:\\\\" & strcomputer & "\\root\\cimv2")\n        set colitems = objwmiservice.execquery("select * from win32_computersystem",,48)\n        \n        for each objitem in colitems\n            strsystemtype = objitem.systemtype\n        next\n        \n        if instr(strsystemtype, "x64") > 0 then\n            dim fso, wshshell, strfullname\n            set fso = createobject("scripting.filesystemobject")\n            set wshshell = createobject("wscript.shell")\n            strfullname = wscript.fullname\n            if instr(1, strfullname, "system32", 1) > 0 then\n                strfullname = replace(strfullname, "system32", "syswow64", 1, 1, 1)\n                wshshell.run strfullname & " " &_\n                    """" & wscript.scriptfullname & """", 10, false\n                wscript.quit\n            end if\n        end if\n    end sub\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    \n\n 2. 生成32位和64位dll，在不同系统中分别调用',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"待办记录",frontmatter:{title:"待办记录",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/skill/function/",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Allegro"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/15.Allegro%20Skill/00.%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0.html",relativePath:"06.软件开发/15.Allegro Skill/00.常用函数.md",key:"v-949b4824",path:"/soft/skill/function/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2023/11/16, 21:49:06",lastUpdatedTimestamp:1700142546e3},{title:"待办记录",frontmatter:{title:"待办记录",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/skill/todo/",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Allegro"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/15.Allegro%20Skill/01.%E5%BE%85%E5%8A%9E%E8%AE%B0%E5%BD%95.html",relativePath:"06.软件开发/15.Allegro Skill/01.待办记录.md",key:"v-b3e2d766",path:"/soft/skill/todo/",headersStr:null,content:"功能                              状态   备注\n根据实体建封装                         🔲   \n自动创建工艺边，v-cut或邮票孔，添加MARK点与定位孔   🔲   \nTCL语言Swap FPGA                  🔲   \n添加中文                            🔲   ",normalizedContent:"功能                              状态   备注\n根据实体建封装                         🔲   \n自动创建工艺边，v-cut或邮票孔，添加mark点与定位孔   🔲   \ntcl语言swap fpga                  🔲   \n添加中文                            🔲   ",charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"改变过孔网络",frontmatter:{title:"改变过孔网络",date:"2023-06-28T22:05:00.000Z",permalink:"/soft/skill/changevianet/",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Allegro"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/15.Allegro%20Skill/03.%E6%94%B9%E5%8F%98%E8%BF%87%E5%AD%94%E7%BD%91%E7%BB%9C.html",relativePath:"06.软件开发/15.Allegro Skill/03.改变过孔网络.md",key:"v-20808e0c",path:"/soft/skill/changevianet/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"源码",slug:"源码",normalizedTitle:"源码",charIndex:20}],headersStr:"说明 源码",content:'# 说明\n\n可批量改变过孔网络\n\n\n# 源码\n\naxlCmdRegister("changevianet" \'changevianet)\nprocedure(changevianet()\n\taxlClearSelSet()\n\taxlSetFindFilter(?enabled list("noall" "vias") ?onButtons list("noall" "vias"))\n\twhile(axlSelect()\n\t\tvia_dbid_list = axlGetSelSet()\n\t\taxlSetFindFilter(?enabled \'("noall" "Vias" "Shapes" "Pins" "Clines") ?onButtons \'("Vias" "Shapes" "Pins" "Clines"))\n\t\tnet_name = car(axlGetSelSet(axlSingleSelectPoint()))->net->name\n\t\taxlDBAssignNet(via_dbid_list net_name t t)\n\t)\n\t\n\taxlClearSelSet()\n)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n',normalizedContent:'# 说明\n\n可批量改变过孔网络\n\n\n# 源码\n\naxlcmdregister("changevianet" \'changevianet)\nprocedure(changevianet()\n\taxlclearselset()\n\taxlsetfindfilter(?enabled list("noall" "vias") ?onbuttons list("noall" "vias"))\n\twhile(axlselect()\n\t\tvia_dbid_list = axlgetselset()\n\t\taxlsetfindfilter(?enabled \'("noall" "vias" "shapes" "pins" "clines") ?onbuttons \'("vias" "shapes" "pins" "clines"))\n\t\tnet_name = car(axlgetselset(axlsingleselectpoint()))->net->name\n\t\taxldbassignnet(via_dbid_list net_name t t)\n\t)\n\t\n\taxlclearselset()\n)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"阵列对象",frontmatter:{title:"阵列对象",date:"2023-06-28T22:05:00.000Z",permalink:"/project/skill/arrayobject/",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Allegro"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/15.Allegro%20Skill/04.%E9%98%B5%E5%88%97%E5%AF%B9%E8%B1%A1.html",relativePath:"06.软件开发/15.Allegro Skill/04.阵列对象.md",key:"v-12507005",path:"/project/skill/arrayobject/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"源码",slug:"源码",normalizedTitle:"源码",charIndex:39}],headersStr:"说明 源码",content:'# 说明\n\n可以阵列放置器件，添加带网络的shape及带网络的via\n\n\n# 源码\n\n;###########################################################\n;#                         程序入口                         #\n;###########################################################\nprocedure(W_ArrayObject_Main()\n    CreateArrayObjectForm()\n    array_object_form = axlFormCreate( (gensym) array_object_form_file nil \'ArrayObjectAction t)\n    ArrayObjectFormInit(array_object_form)\n    axlFormDisplay(array_object_form)\n    axlTempFileRemove(array_object_form_file)\n);end-procedure\n\n;###########################################################\n;#                    窗口初始化                            #\n;###########################################################\ndefun(ArrayObjectFormInit (array_object_form)\n    axlClearSelSet()\n    axlUIWPrint(array_object_form "Author @ wei.")\n    axlFormSetField(array_object_form "orix" 0)\n    axlFormSetFieldEditable(array_object_form "orix" nil)\n    axlFormSetField(array_object_form "oriy" 0)\n    axlFormSetFieldEditable(array_object_form "oriy" nil)\n    axlFormSetField(array_object_form "order" "0")\n    axlFormSetField(array_object_form "numx" 1)\n    axlFormSetField(array_object_form "numy" 1)\n    axlFormSetField(array_object_form "stepx" 0)\n    axlFormSetField(array_object_form "stepy" 0)\n    axlFormSetField(array_object_form "oddmi" t)\n    axlFormSetField(array_object_form "oddro" "0")\n    axlFormSetField(array_object_form "evenmi" t)\n    axlFormSetField(array_object_form "evenro" "2")\n\n    axlFormSetField(array_object_form "porix" 0)\n    axlFormSetFieldEditable(array_object_form "porix" nil)\n    axlFormSetField(array_object_form "poriy" 0)\n    axlFormSetFieldEditable(array_object_form "poriy" nil)\n    axlFormSetField(array_object_form "pradius" 0)\n    axlFormSetField(array_object_form "pnum" 1)\n    axlFormSetField(array_object_form "porder" "0")\n    axlFormSetField(array_object_form "poddmi" t)\n    axlFormSetField(array_object_form "pevenmi" t)\n\n    ;axlFormSetField(array_object_form "unit" "0")\n    axlFormSetField(array_object_form "type" "0")\n    axlFormSetField(array_object_form "reffilter" "*")\n\n    ;type_str = axlFormGetField(array_object_form "type")\n    filter_str = axlFormGetField(array_object_form "reffilter")\n    ref_list = GetAllRef(filter_str)\n    axlFormSetField(array_object_form "allref" ref_list)\n    axlClearSelSet()\n);end-defun\n\n;###########################################################\n;#                    创建窗口                              #\n;###########################################################\ndefun(CreateArrayObjectForm ()\n    array_object_form_file = "array.form"\n    array_object_form_port = outfile(array_object_form_file "w")\n    fprintf(array_object_form_port "FILE_TYPE=FORM_DEFN VERSION=2\\n")\n    fprintf(array_object_form_port "FORM AUTOGREYTEXT\\n")\n    fprintf(array_object_form_port "FIXED\\n")\n    fprintf(array_object_form_port "PORT 78 32\\n")\n\n    fprintf(array_object_form_port "HEADER \\"Array Place Object Tools v1.0\\"\\n\\n")\n    fprintf(array_object_form_port "POPUP <order>\\"Left to Right,Up to Down\\"\\"0\\",\\"Left to Right,Down to Up\\"\\"1\\",\\"Right to Left,Up to Down\\"\\"2\\",\\"Right to Left,Down to Up\\"\\"3\\".\\n\\n")\n    fprintf(array_object_form_port "POPUP <oddro>\\"0\\"\\"0\\",\\"90\\"\\"1\\",\\"180\\"\\"2\\",\\"270\\"\\"3\\".\\n\\n")\n    fprintf(array_object_form_port "POPUP <evenro>\\"0\\"\\"0\\",\\"90\\"\\"1\\",\\"180\\"\\"2\\",\\"270\\"\\"3\\".\\n\\n")\n    fprintf(array_object_form_port "POPUP <porder>\\"clock\\"\\"0\\",\\"anti-clock\\"\\"1\\".\\n\\n")\n    ;fprintf(array_object_form_port "POPUP <unit>\\"mm\\"\\"0\\",\\"mils\\"\\"1\\".\\n\\n")\n    ;fprintf(array_object_form_port "POPUP <type>\\"Symbol\\"\\"0\\",\\"Pin\\"\\"1\\".\\n\\n")\n    fprintf(array_object_form_port "TILE\\n\\n")\n\n    ;Setting\n    fprintf(array_object_form_port "TABSET \\"tab\\"\\n")\n    fprintf(array_object_form_port "OPTIONS tabsetDispatch\\n")\n    fprintf(array_object_form_port "FLOC 1 1\\n")\n    fprintf(array_object_form_port "FSIZE 32 30\\n\\n")\n\n    fprintf(array_object_form_port "TAB \\"Rectangle\\"\\n\\n")\n\n    fprintf(array_object_form_port "GROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "FLOC 1 0\\n")\n    fprintf(array_object_form_port "FSIZE 30 21\\n")\n    fprintf(array_object_form_port "ENDGROUP\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"X-Ori:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 3\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD orix\\n")\n    fprintf(array_object_form_port "FLOC 8 3\\n")\n    fprintf(array_object_form_port "REALFILLIN 5 10\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Y-Ori:\\"\\n")\n    fprintf(array_object_form_port "FLOC 16 3\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD oriy\\n")\n    fprintf(array_object_form_port "FLOC 22 3\\n")\n    fprintf(array_object_form_port "REALFILLIN 5 10\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"X-Num:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 6\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD numx\\n")\n    fprintf(array_object_form_port "FLOC 8 6\\n")\n    fprintf(array_object_form_port "INTFILLIN 5 10\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Y-Num:\\"\\n")\n    fprintf(array_object_form_port "FLOC 16 6\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD numy\\n")\n    fprintf(array_object_form_port "FLOC 22 6\\n")\n    fprintf(array_object_form_port "INTFILLIN 5 10\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"X-Step:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 9\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD stepx\\n")\n    fprintf(array_object_form_port "FLOC 8 9\\n")\n    fprintf(array_object_form_port "REALFILLIN 5 50\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Y-Step:\\"\\n")\n    fprintf(array_object_form_port "FLOC 16 9\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD stepy\\n")\n    fprintf(array_object_form_port "FLOC 22 9\\n")\n    fprintf(array_object_form_port "REALFILLIN 5 10\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Order:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 12\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD order\\n")\n    fprintf(array_object_form_port "FLOC 8 12\\n")\n    fprintf(array_object_form_port "ENUMSET 18\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "POP \\"order\\"\\n") \n    fprintf(array_object_form_port "ENDFIELD\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Odd:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 15\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD oddmi\\n")\n    fprintf(array_object_form_port "FLOC 8 15\\n")\n    fprintf(array_object_form_port "CHECKLIST \\"Mirror\\"\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD oddro\\n")\n    fprintf(array_object_form_port "FLOC 16 15\\n")\n    fprintf(array_object_form_port "ENUMSET 10\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "POP \\"oddro\\"\\n") \n    fprintf(array_object_form_port "ENDFIELD\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Even:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 18\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD evenmi\\n")\n    fprintf(array_object_form_port "FLOC 8 18\\n")\n    fprintf(array_object_form_port "CHECKLIST \\"Mirror\\"\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD evenro\\n")\n    fprintf(array_object_form_port "FLOC 16 18\\n")\n    fprintf(array_object_form_port "ENUMSET 10\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "POP \\"evenro\\"\\n") \n    fprintf(array_object_form_port "ENDFIELD\\n\\n")\n\n    fprintf(array_object_form_port "FIELD pickori\\n")\n    fprintf(array_object_form_port "FLOC 2 22\\n")\n    fprintf(array_object_form_port "MENUBUTTON \\"Pick Origin\\" 12 3\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD placesym\\n")\n    fprintf(array_object_form_port "FLOC 16 22\\n")\n    fprintf(array_object_form_port "MENUBUTTON \\"Place Symbol\\" 12 3\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD addshape\\n")\n    fprintf(array_object_form_port "FLOC 2 25\\n")\n    fprintf(array_object_form_port "MENUBUTTON \\"Add Shape\\" 12 3\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD addvia\\n")\n    fprintf(array_object_form_port "FLOC 16 25\\n")\n    fprintf(array_object_form_port "MENUBUTTON \\"Add Via\\" 12 3\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "ENDTAB\\n\\n")\n\n    fprintf(array_object_form_port "TAB \\"Polar\\"\\n")\n\n    fprintf(array_object_form_port "GROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "FLOC 1 0\\n")\n    fprintf(array_object_form_port "FSIZE 30 21\\n")\n    fprintf(array_object_form_port "ENDGROUP\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"X-Ori:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 3\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD porix\\n")\n    fprintf(array_object_form_port "FLOC 8 3\\n")\n    fprintf(array_object_form_port "REALFILLIN 5 10\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Y-Ori:\\"\\n")\n    fprintf(array_object_form_port "FLOC 16 3\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD poriy\\n")\n    fprintf(array_object_form_port "FLOC 22 3\\n")\n    fprintf(array_object_form_port "REALFILLIN 4 10\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Radius:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 6\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD pradius\\n")\n    fprintf(array_object_form_port "FLOC 8 6\\n")\n    fprintf(array_object_form_port "REALFILLIN 7 15\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Num:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 9\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD pnum\\n")\n    fprintf(array_object_form_port "FLOC 8 9\\n")\n    fprintf(array_object_form_port "INTFILLIN 7 15\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Order:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 12\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD porder\\n")\n    fprintf(array_object_form_port "FLOC 8 12\\n")\n    fprintf(array_object_form_port "ENUMSET 10\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "POP \\"porder\\"\\n") \n    fprintf(array_object_form_port "ENDFIELD\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Odd:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 15\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD poddmi\\n")\n    fprintf(array_object_form_port "FLOC 8 15\\n")\n    fprintf(array_object_form_port "CHECKLIST \\"Mirror\\"\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Even:\\"\\n")\n    fprintf(array_object_form_port "FLOC 2 18\\n")\n    fprintf(array_object_form_port "TGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD pevenmi\\n")\n    fprintf(array_object_form_port "FLOC 8 18\\n")\n    fprintf(array_object_form_port "CHECKLIST \\"Mirror\\"\\n")\n    fprintf(array_object_form_port "FGROUP \\"Setting\\"\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD ppickori\\n")\n    fprintf(array_object_form_port "FLOC 2 22\\n")\n    fprintf(array_object_form_port "MENUBUTTON \\"Pick Origin\\" 12 3\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD pplacesym\\n")\n    fprintf(array_object_form_port "FLOC 16 22\\n")\n    fprintf(array_object_form_port "MENUBUTTON \\"Place Symbol\\" 12 3\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD paddshape\\n")\n    fprintf(array_object_form_port "FLOC 2 25\\n")\n    fprintf(array_object_form_port "MENUBUTTON \\"Add Shape\\" 12 3\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD paddvia\\n")\n    fprintf(array_object_form_port "FLOC 16 25\\n")\n    fprintf(array_object_form_port "MENUBUTTON \\"Add Via\\" 12 3\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "ENDTAB \\n\\n")\n\n    fprintf(array_object_form_port "ENDTABSET\\n\\n")\n\n    /*fprintf(array_object_form_port "FIELD unit\\n")\n    fprintf(array_object_form_port "FLOC 22 1\\n")\n    fprintf(array_object_form_port "ENUMSET 8\\n")\n    fprintf(array_object_form_port "POP \\"unit\\"\\n") \n    fprintf(array_object_form_port "ENDFIELD\\n\\n")*/\n\n    ;select\n    /*fprintf(array_object_form_port "FIELD type\\n")\n    fprintf(array_object_form_port "FLOC 35 1\\n")\n    fprintf(array_object_form_port "ENUMSET 8\\n")\n    fprintf(array_object_form_port "POP \\"type\\"\\n") \n    fprintf(array_object_form_port "ENDFIELD\\n\\n")*/\n\n    fprintf(array_object_form_port "FIELD reffilter\\n")\n    fprintf(array_object_form_port "FLOC 35 1\\n")\n    fprintf(array_object_form_port "STRFILLIN 8 50\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Pin:\\"\\n")\n    fprintf(array_object_form_port "FLOC 45 1\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD pinfilter\\n")\n    fprintf(array_object_form_port "FLOC 48 1\\n")\n    fprintf(array_object_form_port "STRFILLIN 6 50\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n\\n")\n\n    fprintf(array_object_form_port "FIELD allref\\n")\n    fprintf(array_object_form_port "FLOC 35 4\\n")\n    fprintf(array_object_form_port "LIST \\" \\" 18 12\\n")\n    fprintf(array_object_form_port "OPTIONS multiselect\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD rightall\\n")\n    fprintf(array_object_form_port "FLOC 54 10\\n")\n    fprintf(array_object_form_port "MENUBUTTON \\">>\\" 4 4\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD leftall\\n")\n    fprintf(array_object_form_port "FLOC 54 17\\n")\n    fprintf(array_object_form_port "MENUBUTTON \\"<<\\" 4 4\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "TEXT \\"Selected:\\"\\n")\n    fprintf(array_object_form_port "FLOC 59 2\\n")\n    fprintf(array_object_form_port "ENDTEXT\\n\\n")\n\n    fprintf(array_object_form_port "FIELD selref\\n")\n    fprintf(array_object_form_port "FLOC 59 4\\n")\n    fprintf(array_object_form_port "LIST \\" \\" 18 12\\n")\n    fprintf(array_object_form_port "OPTIONS multiselect\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "FIELD close\\n")\n    fprintf(array_object_form_port "FLOC 67 28\\n")\n    fprintf(array_object_form_port "MENUBUTTON \\"Close\\" 10 3\\n")\n    fprintf(array_object_form_port "ENDFIELD \\n\\n")\n\n    fprintf(array_object_form_port "ENDTILE\\n\\n")\n    fprintf(array_object_form_port "ENDFORM\\n\\n")\n\n    close(array_object_form_port)\n);end-defun\n;###########################################################\n;#                    回调函数                              #\n;###########################################################\ndefun(ArrayObjectAction (array_object_form)\n    orix = axlFormGetField(array_object_form "orix")\n    oriy = axlFormGetField(array_object_form "oriy")\n    numx = axlFormGetField(array_object_form "numx")\n    numy = axlFormGetField(array_object_form "numy")\n    stepx = axlFormGetField(array_object_form "stepx")\n    stepy = axlFormGetField(array_object_form "stepy")\n    order = axlFormGetField(array_object_form "order")\n    oddmi = axlFormGetField(array_object_form "oddmi")\n    oddro = axlFormGetField(array_object_form "oddro")\n    evenmi = axlFormGetField(array_object_form "evenmi")\n    evenro = axlFormGetField(array_object_form "evenro")\n    case(oddro\n        ("0" oddro_value = 0);case\n        ("1" oddro_value = 90);case\n        ("2" oddro_value = 180);case\n        ("3" oddro_value = 270);case\n    );end-case\n    case(evenro\n        ("0" evenro_value = 0);case\n        ("1" evenro_value = 90);case\n        ("2" evenro_value = 180);case\n        ("3" evenro_value = 270);case\n    );end-case\n    pin_filter_str = axlFormGetField(array_object_form "pinfilter")\n\n    case(array_object_form->curField\n        ;rectangle\n        ("pickori"\n            pt = axlEnterPoint()\n            ptx = car(pt)\n            pty = cadr(pt)\n            axlFormSetField(array_object_form "orix" ptx)\n            axlFormSetField(array_object_form "oriy" pty)\n        );case\n        ("placesym"\n            axlFormListSelAll(array_object_form "selref" t)\n            selected_ref_list = reverse(axlFormListGetSelItems(array_object_form "selref"))\n            axlFormListSelAll(array_object_form "selref" nil)\n            yushu = mod(length(selected_ref_list) numx * numy)\n            if(yushu == 0 then\n                n = 1\n                for(i 1 numy\n                    for(j 1 numx\n                        axlClearSelSet()\n                        selected_ref_dbid = car(axlSelectByName("REFDES" nthelem(n selected_ref_list)))\n                        if(axlDBIsFixed(selected_ref_dbid) then\n                            axlDBIgnoreFixed(t)\n                        )\n                        \n                        x = car(selected_ref_dbid->xy)\n                        y = cadr(selected_ref_dbid->xy)\n                        mi = selected_ref_dbid->isMirrored\n\n                        dx = orix - x + stepx * (j-1)\n                        dy = oriy - y - stepy * (i-1)\n                        \n                        if(oddp(i) then\n                            if(oddmi == t then\n                                if(mi == t then mirror = nil else mirror = t)\n                            else\n                                if(mi == t then mirror = t else mirror = nil)\n                            )\n                            angle = GetAngle(selected_ref_dbid->rotation oddro_value)\n                        )\n                        \n                        if(evenp(i) then\n                            if(evenmi == t then\n                                if(mi == t then mirror = nil else mirror = t)\n                            else\n                                if(mi == t then mirror = t else mirror = nil)\n                            )\n                            angle = GetAngle(selected_ref_dbid->rotation evenro_value)\n                        )\n\n                        axlTransformObject(selected_ref_dbid ?move list(dx dy) ?mirror mirror ?angle angle)\n                        axlClearSelSet()\n                        n++\n                    )\n                )\n            else\n                axlUIConfirm("Selected Number not matched." )\n            )\n        )\n        ("addshape"\n            axlUIWPrint(array_object_form "Please select a shape.")\n            axlClearSelSet()\n            axlSetFindFilter(?enabled list("shapes") ?onButtons list("shapes"))\n            shape_dbid = car(axlGetSelSet(axlSingleSelectPoint()))\n            shape_old_dbid = car(axlPolyFromDB(shape_dbid))\n            last_point = axlGetLastEnterPoint()\n            axlFormListSelAll(array_object_form "selref" t)\n            selected_ref_list = reverse(axlFormListGetSelItems(array_object_form "selref"))\n            axlFormListSelAll(array_object_form "selref" nil)\n            yushu = mod(length(selected_ref_list) numx * numy)\n            if(yushu == 0 then\n                if(pin_filter_str != "" then\n                    pin_net_list = GetPinNetListByRefList(selected_ref_list pin_filter_str)\n                    n = 1\n                    for(i 1 numy\n                        for(j 1 numx\n                            x = car(last_point)\n                            y = cadr(last_point)\n\n                            dx = stepx * (j-1)\n                            dy = - stepy * (i-1)\n\n                            shape_create_dbid = car(axlDBCreateShape(shape_old_dbid t axlGetActiveLayer() nthelem(n pin_net_list)))\n                            shape_dyn_dbid = axlShapeChangeDynamicType(shape_create_dbid t t)\n                            axlTransformObject(shape_dyn_dbid ?move list(dx dy) )\n                            n++\n                        )\n                    )\n                else\n                    axlUIWPrint(array_object_form "Pin number not found.")\n                );end-if\n            else\n                axlUIConfirm("Selected Number not matched." )\n            )            \n            axlClearSelSet()\n            axlDeleteObject(shape_dbid)\n        )\n\n        ("addvia"\n            axlUIWPrint(array_object_form "Please select a via.")\n            axlClearSelSet()\n            axlSetFindFilter(?enabled list("vias") ?onButtons list("vias"))\n            via_dbid = car(axlGetSelSet(axlSingleSelectPoint()))\n\n            axlFormListSelAll(array_object_form "selref" t)\n            selected_ref_list = reverse(axlFormListGetSelItems(array_object_form "selref"))\n            axlFormListSelAll(array_object_form "selref" nil)\n            yushu = mod(length(selected_ref_list) numx * numy)\n            if(yushu == 0 then\n                if(pin_filter_str != "" then\n                    pin_net_list = GetPinNetListByRefList(selected_ref_list pin_filter_str)\n                    n = 1\n                    for(i 1 numy\n                        for(j 1 numx\n                            x = car(via_dbid->xy)\n                            y = cadr(via_dbid->xy)\n\n                            dx = x + stepx * (j-1)\n                            dy = y - stepy * (i-1)\n\n                            via_create_dbid = car(axlDBCreateVia(via_dbid->name dx:dy nthelem(n pin_net_list) via_dbid->isMirrored via_dbid->rotation))\n                            n++\n                        )\n                    )\n                else\n                    axlUIWPrint(array_object_form "Pin number not found.")\n                );end-if\n            else\n                axlUIConfirm("Selected Number not matched." )\n            )            \n            axlClearSelSet()\n            axlDeleteObject(via_dbid)\n        )\n\n        ;polar\n        ("ppickori"\n            pt = axlEnterPoint()\n            ptx = car(pt)\n            pty = cadr(pt)\n            axlFormSetField(array_object_form "porix" ptx)\n            axlFormSetField(array_object_form "poriy" pty)\n        );case\n\n        ("allref"\n            selected_ref_list = axlFormListGetSelItems(array_object_form "allref")\n\t\t\taxlFormListAddItem(array_object_form "selref" selected_ref_list -1)\n\t\t\taxlFormListDeleteItem(array_object_form "allref" selected_ref_list)\n        )\n        ("selref"\n            selected_ref_list = axlFormListGetSelItems(array_object_form "selref")\n\t\t\taxlFormListAddItem(array_object_form "allref" selected_ref_list -1)\n\t\t\taxlFormListDeleteItem(array_object_form "selref" selected_ref_list)\n        )\n        ("rightall"\n            axlFormListDeleteAll(array_object_form "selref")\n\t\t\taxlFormSetField(array_object_form "selref" ref_list)\n\t\t\taxlFormListDeleteAll(array_object_form "allref")\n        )\n        ("leftall"\n            axlFormListDeleteAll(array_object_form "allref")\n\t\t\taxlFormSetField(array_object_form "allref" ref_list)\n\t\t\taxlFormListDeleteAll(array_object_form "selref")\n        )\n        ("reffilter"\n\t\t\tref_filter = axlFormGetField(array_object_form "reffilter")\n\t\t\tref_filter_list = GetAllRef(ref_filter)\n\t\t\t\n\t\t\taxlFormListDeleteAll(array_object_form "allref")\n\t\t\taxlFormSetField(array_object_form "allref" ref_filter_list)\n\t\t)\n        ("close"\n            axlFormClose(array_object_form)\n            axlCancelEnterFun()\n\t\t);case\n    );end-case\n);end-defun\n\n;###########################################################\n;#                    获取所有位号                          #\n;###########################################################\ndefun(GetAllRef (filter_str)\n    refdes_dbids = axlSelectByName("REFDES" filter_str t)\n\tref_list = nil\n\tforeach(dbid refdes_dbids\n\t\tref_list = append1(ref_list dbid->refdes)\n\t)\n\tref_list = sort(ref_list \'axlStrcmpAlpNum)\n\n);end-defun\n\n;###########################################################\n;#                    判断器件需旋转角度                     #\n;dbid = car(axlSelectByName("REFDES" "C1"))                \n;###########################################################\ndefun(GetAngle (ori_ro cur_ro)\n    case(cur_ro\n        (0\n            case(ori_ro\n                (0.0 angle = 0 );case\n                (90.0 angle = -90 );case\n                (180.0 angle = -180 );case\n                (270.0 angle = -270 );case\n            );end-case\n        );case\n        (90\n            case(ori_ro\n                (0.0 angle = 90 );case\n                (90.0 angle = 0 );case\n                (180.0 angle = -90 );case\n                (270.0 angle = -180 );case\n            );end-case\n        );case\n        (180\n            case(ori_ro\n                (0.0 angle = 180 );case\n                (90.0 angle = 90 );case\n                (180.0 angle = 0 );case\n                (270.0 angle = -90 );case\n            );end-case\n        );case\n        (270\n            case(ori_ro\n                (0.0 angle = 270 );case\n                (90.0 angle = 180 );case\n                (180.0 angle = 90 );case\n                (270.0 angle = 0 );case\n            );end-case\n        );case\n);end-let\n);end-defun\n\n;###########################################################\n;#                    遍历器件获取对应pin的net               #\n;###########################################################\ndefun(GetPinNetListByRefList (ref_list pin_number)\n    ;获取pin对应net\n    pin_net_list = list()\n    foreach(ref ref_list\n        ref_dbid = car(axlGetSelSet(axlSelectByName("REFDES" ref)))\n        foreach(pin_dbid ref_dbid->pins\n            if(pin_dbid->number == pin_number then \n                pin_net_list = append1(pin_net_list pin_dbid->net->name)\n            )\n        );end-foreach\n    );end-foreach\n    pin_net_list = pin_net_list\n);end-defun\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n',normalizedContent:'# 说明\n\n可以阵列放置器件，添加带网络的shape及带网络的via\n\n\n# 源码\n\n;###########################################################\n;#                         程序入口                         #\n;###########################################################\nprocedure(w_arrayobject_main()\n    createarrayobjectform()\n    array_object_form = axlformcreate( (gensym) array_object_form_file nil \'arrayobjectaction t)\n    arrayobjectforminit(array_object_form)\n    axlformdisplay(array_object_form)\n    axltempfileremove(array_object_form_file)\n);end-procedure\n\n;###########################################################\n;#                    窗口初始化                            #\n;###########################################################\ndefun(arrayobjectforminit (array_object_form)\n    axlclearselset()\n    axluiwprint(array_object_form "author @ wei.")\n    axlformsetfield(array_object_form "orix" 0)\n    axlformsetfieldeditable(array_object_form "orix" nil)\n    axlformsetfield(array_object_form "oriy" 0)\n    axlformsetfieldeditable(array_object_form "oriy" nil)\n    axlformsetfield(array_object_form "order" "0")\n    axlformsetfield(array_object_form "numx" 1)\n    axlformsetfield(array_object_form "numy" 1)\n    axlformsetfield(array_object_form "stepx" 0)\n    axlformsetfield(array_object_form "stepy" 0)\n    axlformsetfield(array_object_form "oddmi" t)\n    axlformsetfield(array_object_form "oddro" "0")\n    axlformsetfield(array_object_form "evenmi" t)\n    axlformsetfield(array_object_form "evenro" "2")\n\n    axlformsetfield(array_object_form "porix" 0)\n    axlformsetfieldeditable(array_object_form "porix" nil)\n    axlformsetfield(array_object_form "poriy" 0)\n    axlformsetfieldeditable(array_object_form "poriy" nil)\n    axlformsetfield(array_object_form "pradius" 0)\n    axlformsetfield(array_object_form "pnum" 1)\n    axlformsetfield(array_object_form "porder" "0")\n    axlformsetfield(array_object_form "poddmi" t)\n    axlformsetfield(array_object_form "pevenmi" t)\n\n    ;axlformsetfield(array_object_form "unit" "0")\n    axlformsetfield(array_object_form "type" "0")\n    axlformsetfield(array_object_form "reffilter" "*")\n\n    ;type_str = axlformgetfield(array_object_form "type")\n    filter_str = axlformgetfield(array_object_form "reffilter")\n    ref_list = getallref(filter_str)\n    axlformsetfield(array_object_form "allref" ref_list)\n    axlclearselset()\n);end-defun\n\n;###########################################################\n;#                    创建窗口                              #\n;###########################################################\ndefun(createarrayobjectform ()\n    array_object_form_file = "array.form"\n    array_object_form_port = outfile(array_object_form_file "w")\n    fprintf(array_object_form_port "file_type=form_defn version=2\\n")\n    fprintf(array_object_form_port "form autogreytext\\n")\n    fprintf(array_object_form_port "fixed\\n")\n    fprintf(array_object_form_port "port 78 32\\n")\n\n    fprintf(array_object_form_port "header \\"array place object tools v1.0\\"\\n\\n")\n    fprintf(array_object_form_port "popup <order>\\"left to right,up to down\\"\\"0\\",\\"left to right,down to up\\"\\"1\\",\\"right to left,up to down\\"\\"2\\",\\"right to left,down to up\\"\\"3\\".\\n\\n")\n    fprintf(array_object_form_port "popup <oddro>\\"0\\"\\"0\\",\\"90\\"\\"1\\",\\"180\\"\\"2\\",\\"270\\"\\"3\\".\\n\\n")\n    fprintf(array_object_form_port "popup <evenro>\\"0\\"\\"0\\",\\"90\\"\\"1\\",\\"180\\"\\"2\\",\\"270\\"\\"3\\".\\n\\n")\n    fprintf(array_object_form_port "popup <porder>\\"clock\\"\\"0\\",\\"anti-clock\\"\\"1\\".\\n\\n")\n    ;fprintf(array_object_form_port "popup <unit>\\"mm\\"\\"0\\",\\"mils\\"\\"1\\".\\n\\n")\n    ;fprintf(array_object_form_port "popup <type>\\"symbol\\"\\"0\\",\\"pin\\"\\"1\\".\\n\\n")\n    fprintf(array_object_form_port "tile\\n\\n")\n\n    ;setting\n    fprintf(array_object_form_port "tabset \\"tab\\"\\n")\n    fprintf(array_object_form_port "options tabsetdispatch\\n")\n    fprintf(array_object_form_port "floc 1 1\\n")\n    fprintf(array_object_form_port "fsize 32 30\\n\\n")\n\n    fprintf(array_object_form_port "tab \\"rectangle\\"\\n\\n")\n\n    fprintf(array_object_form_port "group \\"setting\\"\\n")\n    fprintf(array_object_form_port "floc 1 0\\n")\n    fprintf(array_object_form_port "fsize 30 21\\n")\n    fprintf(array_object_form_port "endgroup\\n\\n")\n\n    fprintf(array_object_form_port "text \\"x-ori:\\"\\n")\n    fprintf(array_object_form_port "floc 2 3\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field orix\\n")\n    fprintf(array_object_form_port "floc 8 3\\n")\n    fprintf(array_object_form_port "realfillin 5 10\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "text \\"y-ori:\\"\\n")\n    fprintf(array_object_form_port "floc 16 3\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field oriy\\n")\n    fprintf(array_object_form_port "floc 22 3\\n")\n    fprintf(array_object_form_port "realfillin 5 10\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "text \\"x-num:\\"\\n")\n    fprintf(array_object_form_port "floc 2 6\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field numx\\n")\n    fprintf(array_object_form_port "floc 8 6\\n")\n    fprintf(array_object_form_port "intfillin 5 10\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "text \\"y-num:\\"\\n")\n    fprintf(array_object_form_port "floc 16 6\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field numy\\n")\n    fprintf(array_object_form_port "floc 22 6\\n")\n    fprintf(array_object_form_port "intfillin 5 10\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "text \\"x-step:\\"\\n")\n    fprintf(array_object_form_port "floc 2 9\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field stepx\\n")\n    fprintf(array_object_form_port "floc 8 9\\n")\n    fprintf(array_object_form_port "realfillin 5 50\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "text \\"y-step:\\"\\n")\n    fprintf(array_object_form_port "floc 16 9\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field stepy\\n")\n    fprintf(array_object_form_port "floc 22 9\\n")\n    fprintf(array_object_form_port "realfillin 5 10\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "text \\"order:\\"\\n")\n    fprintf(array_object_form_port "floc 2 12\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field order\\n")\n    fprintf(array_object_form_port "floc 8 12\\n")\n    fprintf(array_object_form_port "enumset 18\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "pop \\"order\\"\\n") \n    fprintf(array_object_form_port "endfield\\n\\n")\n\n    fprintf(array_object_form_port "text \\"odd:\\"\\n")\n    fprintf(array_object_form_port "floc 2 15\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field oddmi\\n")\n    fprintf(array_object_form_port "floc 8 15\\n")\n    fprintf(array_object_form_port "checklist \\"mirror\\"\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field oddro\\n")\n    fprintf(array_object_form_port "floc 16 15\\n")\n    fprintf(array_object_form_port "enumset 10\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "pop \\"oddro\\"\\n") \n    fprintf(array_object_form_port "endfield\\n\\n")\n\n    fprintf(array_object_form_port "text \\"even:\\"\\n")\n    fprintf(array_object_form_port "floc 2 18\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field evenmi\\n")\n    fprintf(array_object_form_port "floc 8 18\\n")\n    fprintf(array_object_form_port "checklist \\"mirror\\"\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field evenro\\n")\n    fprintf(array_object_form_port "floc 16 18\\n")\n    fprintf(array_object_form_port "enumset 10\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "pop \\"evenro\\"\\n") \n    fprintf(array_object_form_port "endfield\\n\\n")\n\n    fprintf(array_object_form_port "field pickori\\n")\n    fprintf(array_object_form_port "floc 2 22\\n")\n    fprintf(array_object_form_port "menubutton \\"pick origin\\" 12 3\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field placesym\\n")\n    fprintf(array_object_form_port "floc 16 22\\n")\n    fprintf(array_object_form_port "menubutton \\"place symbol\\" 12 3\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field addshape\\n")\n    fprintf(array_object_form_port "floc 2 25\\n")\n    fprintf(array_object_form_port "menubutton \\"add shape\\" 12 3\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field addvia\\n")\n    fprintf(array_object_form_port "floc 16 25\\n")\n    fprintf(array_object_form_port "menubutton \\"add via\\" 12 3\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "endtab\\n\\n")\n\n    fprintf(array_object_form_port "tab \\"polar\\"\\n")\n\n    fprintf(array_object_form_port "group \\"setting\\"\\n")\n    fprintf(array_object_form_port "floc 1 0\\n")\n    fprintf(array_object_form_port "fsize 30 21\\n")\n    fprintf(array_object_form_port "endgroup\\n\\n")\n\n    fprintf(array_object_form_port "text \\"x-ori:\\"\\n")\n    fprintf(array_object_form_port "floc 2 3\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field porix\\n")\n    fprintf(array_object_form_port "floc 8 3\\n")\n    fprintf(array_object_form_port "realfillin 5 10\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "text \\"y-ori:\\"\\n")\n    fprintf(array_object_form_port "floc 16 3\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field poriy\\n")\n    fprintf(array_object_form_port "floc 22 3\\n")\n    fprintf(array_object_form_port "realfillin 4 10\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "text \\"radius:\\"\\n")\n    fprintf(array_object_form_port "floc 2 6\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field pradius\\n")\n    fprintf(array_object_form_port "floc 8 6\\n")\n    fprintf(array_object_form_port "realfillin 7 15\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "text \\"num:\\"\\n")\n    fprintf(array_object_form_port "floc 2 9\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field pnum\\n")\n    fprintf(array_object_form_port "floc 8 9\\n")\n    fprintf(array_object_form_port "intfillin 7 15\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "text \\"order:\\"\\n")\n    fprintf(array_object_form_port "floc 2 12\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field porder\\n")\n    fprintf(array_object_form_port "floc 8 12\\n")\n    fprintf(array_object_form_port "enumset 10\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "pop \\"porder\\"\\n") \n    fprintf(array_object_form_port "endfield\\n\\n")\n\n    fprintf(array_object_form_port "text \\"odd:\\"\\n")\n    fprintf(array_object_form_port "floc 2 15\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field poddmi\\n")\n    fprintf(array_object_form_port "floc 8 15\\n")\n    fprintf(array_object_form_port "checklist \\"mirror\\"\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "text \\"even:\\"\\n")\n    fprintf(array_object_form_port "floc 2 18\\n")\n    fprintf(array_object_form_port "tgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field pevenmi\\n")\n    fprintf(array_object_form_port "floc 8 18\\n")\n    fprintf(array_object_form_port "checklist \\"mirror\\"\\n")\n    fprintf(array_object_form_port "fgroup \\"setting\\"\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field ppickori\\n")\n    fprintf(array_object_form_port "floc 2 22\\n")\n    fprintf(array_object_form_port "menubutton \\"pick origin\\" 12 3\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field pplacesym\\n")\n    fprintf(array_object_form_port "floc 16 22\\n")\n    fprintf(array_object_form_port "menubutton \\"place symbol\\" 12 3\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field paddshape\\n")\n    fprintf(array_object_form_port "floc 2 25\\n")\n    fprintf(array_object_form_port "menubutton \\"add shape\\" 12 3\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field paddvia\\n")\n    fprintf(array_object_form_port "floc 16 25\\n")\n    fprintf(array_object_form_port "menubutton \\"add via\\" 12 3\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "endtab \\n\\n")\n\n    fprintf(array_object_form_port "endtabset\\n\\n")\n\n    /*fprintf(array_object_form_port "field unit\\n")\n    fprintf(array_object_form_port "floc 22 1\\n")\n    fprintf(array_object_form_port "enumset 8\\n")\n    fprintf(array_object_form_port "pop \\"unit\\"\\n") \n    fprintf(array_object_form_port "endfield\\n\\n")*/\n\n    ;select\n    /*fprintf(array_object_form_port "field type\\n")\n    fprintf(array_object_form_port "floc 35 1\\n")\n    fprintf(array_object_form_port "enumset 8\\n")\n    fprintf(array_object_form_port "pop \\"type\\"\\n") \n    fprintf(array_object_form_port "endfield\\n\\n")*/\n\n    fprintf(array_object_form_port "field reffilter\\n")\n    fprintf(array_object_form_port "floc 35 1\\n")\n    fprintf(array_object_form_port "strfillin 8 50\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "text \\"pin:\\"\\n")\n    fprintf(array_object_form_port "floc 45 1\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field pinfilter\\n")\n    fprintf(array_object_form_port "floc 48 1\\n")\n    fprintf(array_object_form_port "strfillin 6 50\\n")\n    fprintf(array_object_form_port "endfield \\n\\n\\n")\n\n    fprintf(array_object_form_port "field allref\\n")\n    fprintf(array_object_form_port "floc 35 4\\n")\n    fprintf(array_object_form_port "list \\" \\" 18 12\\n")\n    fprintf(array_object_form_port "options multiselect\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field rightall\\n")\n    fprintf(array_object_form_port "floc 54 10\\n")\n    fprintf(array_object_form_port "menubutton \\">>\\" 4 4\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field leftall\\n")\n    fprintf(array_object_form_port "floc 54 17\\n")\n    fprintf(array_object_form_port "menubutton \\"<<\\" 4 4\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "text \\"selected:\\"\\n")\n    fprintf(array_object_form_port "floc 59 2\\n")\n    fprintf(array_object_form_port "endtext\\n\\n")\n\n    fprintf(array_object_form_port "field selref\\n")\n    fprintf(array_object_form_port "floc 59 4\\n")\n    fprintf(array_object_form_port "list \\" \\" 18 12\\n")\n    fprintf(array_object_form_port "options multiselect\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "field close\\n")\n    fprintf(array_object_form_port "floc 67 28\\n")\n    fprintf(array_object_form_port "menubutton \\"close\\" 10 3\\n")\n    fprintf(array_object_form_port "endfield \\n\\n")\n\n    fprintf(array_object_form_port "endtile\\n\\n")\n    fprintf(array_object_form_port "endform\\n\\n")\n\n    close(array_object_form_port)\n);end-defun\n;###########################################################\n;#                    回调函数                              #\n;###########################################################\ndefun(arrayobjectaction (array_object_form)\n    orix = axlformgetfield(array_object_form "orix")\n    oriy = axlformgetfield(array_object_form "oriy")\n    numx = axlformgetfield(array_object_form "numx")\n    numy = axlformgetfield(array_object_form "numy")\n    stepx = axlformgetfield(array_object_form "stepx")\n    stepy = axlformgetfield(array_object_form "stepy")\n    order = axlformgetfield(array_object_form "order")\n    oddmi = axlformgetfield(array_object_form "oddmi")\n    oddro = axlformgetfield(array_object_form "oddro")\n    evenmi = axlformgetfield(array_object_form "evenmi")\n    evenro = axlformgetfield(array_object_form "evenro")\n    case(oddro\n        ("0" oddro_value = 0);case\n        ("1" oddro_value = 90);case\n        ("2" oddro_value = 180);case\n        ("3" oddro_value = 270);case\n    );end-case\n    case(evenro\n        ("0" evenro_value = 0);case\n        ("1" evenro_value = 90);case\n        ("2" evenro_value = 180);case\n        ("3" evenro_value = 270);case\n    );end-case\n    pin_filter_str = axlformgetfield(array_object_form "pinfilter")\n\n    case(array_object_form->curfield\n        ;rectangle\n        ("pickori"\n            pt = axlenterpoint()\n            ptx = car(pt)\n            pty = cadr(pt)\n            axlformsetfield(array_object_form "orix" ptx)\n            axlformsetfield(array_object_form "oriy" pty)\n        );case\n        ("placesym"\n            axlformlistselall(array_object_form "selref" t)\n            selected_ref_list = reverse(axlformlistgetselitems(array_object_form "selref"))\n            axlformlistselall(array_object_form "selref" nil)\n            yushu = mod(length(selected_ref_list) numx * numy)\n            if(yushu == 0 then\n                n = 1\n                for(i 1 numy\n                    for(j 1 numx\n                        axlclearselset()\n                        selected_ref_dbid = car(axlselectbyname("refdes" nthelem(n selected_ref_list)))\n                        if(axldbisfixed(selected_ref_dbid) then\n                            axldbignorefixed(t)\n                        )\n                        \n                        x = car(selected_ref_dbid->xy)\n                        y = cadr(selected_ref_dbid->xy)\n                        mi = selected_ref_dbid->ismirrored\n\n                        dx = orix - x + stepx * (j-1)\n                        dy = oriy - y - stepy * (i-1)\n                        \n                        if(oddp(i) then\n                            if(oddmi == t then\n                                if(mi == t then mirror = nil else mirror = t)\n                            else\n                                if(mi == t then mirror = t else mirror = nil)\n                            )\n                            angle = getangle(selected_ref_dbid->rotation oddro_value)\n                        )\n                        \n                        if(evenp(i) then\n                            if(evenmi == t then\n                                if(mi == t then mirror = nil else mirror = t)\n                            else\n                                if(mi == t then mirror = t else mirror = nil)\n                            )\n                            angle = getangle(selected_ref_dbid->rotation evenro_value)\n                        )\n\n                        axltransformobject(selected_ref_dbid ?move list(dx dy) ?mirror mirror ?angle angle)\n                        axlclearselset()\n                        n++\n                    )\n                )\n            else\n                axluiconfirm("selected number not matched." )\n            )\n        )\n        ("addshape"\n            axluiwprint(array_object_form "please select a shape.")\n            axlclearselset()\n            axlsetfindfilter(?enabled list("shapes") ?onbuttons list("shapes"))\n            shape_dbid = car(axlgetselset(axlsingleselectpoint()))\n            shape_old_dbid = car(axlpolyfromdb(shape_dbid))\n            last_point = axlgetlastenterpoint()\n            axlformlistselall(array_object_form "selref" t)\n            selected_ref_list = reverse(axlformlistgetselitems(array_object_form "selref"))\n            axlformlistselall(array_object_form "selref" nil)\n            yushu = mod(length(selected_ref_list) numx * numy)\n            if(yushu == 0 then\n                if(pin_filter_str != "" then\n                    pin_net_list = getpinnetlistbyreflist(selected_ref_list pin_filter_str)\n                    n = 1\n                    for(i 1 numy\n                        for(j 1 numx\n                            x = car(last_point)\n                            y = cadr(last_point)\n\n                            dx = stepx * (j-1)\n                            dy = - stepy * (i-1)\n\n                            shape_create_dbid = car(axldbcreateshape(shape_old_dbid t axlgetactivelayer() nthelem(n pin_net_list)))\n                            shape_dyn_dbid = axlshapechangedynamictype(shape_create_dbid t t)\n                            axltransformobject(shape_dyn_dbid ?move list(dx dy) )\n                            n++\n                        )\n                    )\n                else\n                    axluiwprint(array_object_form "pin number not found.")\n                );end-if\n            else\n                axluiconfirm("selected number not matched." )\n            )            \n            axlclearselset()\n            axldeleteobject(shape_dbid)\n        )\n\n        ("addvia"\n            axluiwprint(array_object_form "please select a via.")\n            axlclearselset()\n            axlsetfindfilter(?enabled list("vias") ?onbuttons list("vias"))\n            via_dbid = car(axlgetselset(axlsingleselectpoint()))\n\n            axlformlistselall(array_object_form "selref" t)\n            selected_ref_list = reverse(axlformlistgetselitems(array_object_form "selref"))\n            axlformlistselall(array_object_form "selref" nil)\n            yushu = mod(length(selected_ref_list) numx * numy)\n            if(yushu == 0 then\n                if(pin_filter_str != "" then\n                    pin_net_list = getpinnetlistbyreflist(selected_ref_list pin_filter_str)\n                    n = 1\n                    for(i 1 numy\n                        for(j 1 numx\n                            x = car(via_dbid->xy)\n                            y = cadr(via_dbid->xy)\n\n                            dx = x + stepx * (j-1)\n                            dy = y - stepy * (i-1)\n\n                            via_create_dbid = car(axldbcreatevia(via_dbid->name dx:dy nthelem(n pin_net_list) via_dbid->ismirrored via_dbid->rotation))\n                            n++\n                        )\n                    )\n                else\n                    axluiwprint(array_object_form "pin number not found.")\n                );end-if\n            else\n                axluiconfirm("selected number not matched." )\n            )            \n            axlclearselset()\n            axldeleteobject(via_dbid)\n        )\n\n        ;polar\n        ("ppickori"\n            pt = axlenterpoint()\n            ptx = car(pt)\n            pty = cadr(pt)\n            axlformsetfield(array_object_form "porix" ptx)\n            axlformsetfield(array_object_form "poriy" pty)\n        );case\n\n        ("allref"\n            selected_ref_list = axlformlistgetselitems(array_object_form "allref")\n\t\t\taxlformlistadditem(array_object_form "selref" selected_ref_list -1)\n\t\t\taxlformlistdeleteitem(array_object_form "allref" selected_ref_list)\n        )\n        ("selref"\n            selected_ref_list = axlformlistgetselitems(array_object_form "selref")\n\t\t\taxlformlistadditem(array_object_form "allref" selected_ref_list -1)\n\t\t\taxlformlistdeleteitem(array_object_form "selref" selected_ref_list)\n        )\n        ("rightall"\n            axlformlistdeleteall(array_object_form "selref")\n\t\t\taxlformsetfield(array_object_form "selref" ref_list)\n\t\t\taxlformlistdeleteall(array_object_form "allref")\n        )\n        ("leftall"\n            axlformlistdeleteall(array_object_form "allref")\n\t\t\taxlformsetfield(array_object_form "allref" ref_list)\n\t\t\taxlformlistdeleteall(array_object_form "selref")\n        )\n        ("reffilter"\n\t\t\tref_filter = axlformgetfield(array_object_form "reffilter")\n\t\t\tref_filter_list = getallref(ref_filter)\n\t\t\t\n\t\t\taxlformlistdeleteall(array_object_form "allref")\n\t\t\taxlformsetfield(array_object_form "allref" ref_filter_list)\n\t\t)\n        ("close"\n            axlformclose(array_object_form)\n            axlcancelenterfun()\n\t\t);case\n    );end-case\n);end-defun\n\n;###########################################################\n;#                    获取所有位号                          #\n;###########################################################\ndefun(getallref (filter_str)\n    refdes_dbids = axlselectbyname("refdes" filter_str t)\n\tref_list = nil\n\tforeach(dbid refdes_dbids\n\t\tref_list = append1(ref_list dbid->refdes)\n\t)\n\tref_list = sort(ref_list \'axlstrcmpalpnum)\n\n);end-defun\n\n;###########################################################\n;#                    判断器件需旋转角度                     #\n;dbid = car(axlselectbyname("refdes" "c1"))                \n;###########################################################\ndefun(getangle (ori_ro cur_ro)\n    case(cur_ro\n        (0\n            case(ori_ro\n                (0.0 angle = 0 );case\n                (90.0 angle = -90 );case\n                (180.0 angle = -180 );case\n                (270.0 angle = -270 );case\n            );end-case\n        );case\n        (90\n            case(ori_ro\n                (0.0 angle = 90 );case\n                (90.0 angle = 0 );case\n                (180.0 angle = -90 );case\n                (270.0 angle = -180 );case\n            );end-case\n        );case\n        (180\n            case(ori_ro\n                (0.0 angle = 180 );case\n                (90.0 angle = 90 );case\n                (180.0 angle = 0 );case\n                (270.0 angle = -90 );case\n            );end-case\n        );case\n        (270\n            case(ori_ro\n                (0.0 angle = 270 );case\n                (90.0 angle = 180 );case\n                (180.0 angle = 90 );case\n                (270.0 angle = 0 );case\n            );end-case\n        );case\n);end-let\n);end-defun\n\n;###########################################################\n;#                    遍历器件获取对应pin的net               #\n;###########################################################\ndefun(getpinnetlistbyreflist (ref_list pin_number)\n    ;获取pin对应net\n    pin_net_list = list()\n    foreach(ref ref_list\n        ref_dbid = car(axlgetselset(axlselectbyname("refdes" ref)))\n        foreach(pin_dbid ref_dbid->pins\n            if(pin_dbid->number == pin_number then \n                pin_net_list = append1(pin_net_list pin_dbid->net->name)\n            )\n        );end-foreach\n    );end-foreach\n    pin_net_list = pin_net_list\n);end-defun\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"Shape批量赋网络",frontmatter:{title:"Shape批量赋网络",date:"2023-06-28T22:05:00.000Z",permalink:"/soft/skill/shapeassignnet/",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Allegro"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/15.Allegro%20Skill/05.Shape%E6%89%B9%E9%87%8F%E8%B5%8B%E7%BD%91%E7%BB%9C.html",relativePath:"06.软件开发/15.Allegro Skill/05.Shape批量赋网络.md",key:"v-ce467878",path:"/soft/skill/shapeassignnet/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"源码",slug:"源码",normalizedTitle:"源码",charIndex:58}],headersStr:"说明 源码",content:'# 说明\n\n微波板经常碰到很多铜皮，如果一个个指定网络需要花费很长时间，现二次开发出小程序，可批量指定网络\n\n\n# 源码\n\naxlCmdRegister("san" \'W_ShapeANet_Main)\nprocedure(W_ShapeANet_Main()\n\tCreateShapeANetForm()\n\tsan_form=axlFormCreate( (gensym) san_form_file nil \'SanFormAction t)\n\tSanFormInit(san_form)\n\taxlFormDisplay(san_form)\n\taxlTempFileRemove(san_form_file)\n)\n\ndefun(SanFormInit (san_form)\n\taxlClearSelSet()\n\taxlUIWPrint(san_form "Shape Assign Net Tool by wei.")\n\t;获取所有网络\n\taxlFormSetField(san_form "filter" "*")\n\tnet_filter = axlFormGetField(san_form "filter")\n\tnet_list = GetAllNets(net_filter)\n\t;设置所有网络到field\n\taxlFormSetField(san_form "allnet" net_list)\n\t\n\taxlFormColorize(san_form "info" \'text \'red)\n\taxlClearSelSet()\n)\n\ndefun(CreateShapeANetForm ()\n\tsan_form_file = "san.form"\n\tsan_form_port = outfile(san_form_file "w")\n\t\n\tfprintf(san_form_port "FILE_TYPE=FORM_DEFN VERSION=2\\n")\n\tfprintf(san_form_port "FORM AUTOGREYTEXT\\n")\n\tfprintf(san_form_port "FIXED\\n")\n\tfprintf(san_form_port "PORT 52 35\\n")\n\tfprintf(san_form_port "HEADER \\"Shape Assign Net\\"\\n")\n\t\n\tfprintf(san_form_port "TILE\\n\\n")\n\t\n\tfprintf(san_form_port "FIELD select\\n")\n\tfprintf(san_form_port "FLOC 2 1\\n")\n\tfprintf(san_form_port "MENUBUTTON \\"Select Shape\\" 12 3\\n")\n\tfprintf(san_form_port "ENDFIELD \\n")\n\t\n\t;注:所选网络应按从左到右,从上到下的顺序\n\t;fprintf(san_form_port "TEXT \\"info:Select nets assigned from down to up,left to right.\\" info\\n")\n\t;fprintf(san_form_port "TEXT \\"\\327\\242:\\313\\371\\321\\241\\315\\370\\302\\347\\323\\246\\260\\264\\321\\241\\266\\250Shape\\264\\323\\317\\302\\265\\275\\311\\317\\243\\254\\264\\323\\327\\363\\265\\275\\323\\322\\" info\\n")\n\t;fprintf(san_form_port "FLOC 16 1\\n")\n\t;fprintf(san_form_port "ENDTEXT\\n")\n\t\n\tfprintf(san_form_port "TEXT \\"All Nets:\\"\\n")\n\tfprintf(san_form_port "FLOC 3 4\\n")\n\tfprintf(san_form_port "ENDTEXT\\n\\n")\n\t\n\tfprintf(san_form_port "FIELD filter\\n")\n\tfprintf(san_form_port "FLOC 10 4\\n")\n\tfprintf(san_form_port "STRFILLIN 8 10\\n")\n\tfprintf(san_form_port "ENDFIELD \\n\\n")\n\t\n\tfprintf(san_form_port "FIELD allnet\\n")\n\tfprintf(san_form_port "FLOC 3 6\\n")\n\tfprintf(san_form_port "LIST \\" \\" 20 10\\n")\n\tfprintf(san_form_port "OPTIONS multiselect\\n")\n\tfprintf(san_form_port "ENDFIELD \\n")\n\t\n\tfprintf(san_form_port "TEXT \\"Selected Assign Nets:\\"\\n")\n\tfprintf(san_form_port "FLOC 29 4\\n")\n\tfprintf(san_form_port "ENDTEXT\\n\\n")\n\t\n\tfprintf(san_form_port "FIELD selnet\\n")\n\tfprintf(san_form_port "FLOC 29 6\\n")\n\tfprintf(san_form_port "LIST \\" \\" 20 10\\n")\n\tfprintf(san_form_port "OPTIONS multiselect\\n")\n\tfprintf(san_form_port "ENDFIELD \\n")\n\t\n\tfprintf(san_form_port "FIELD rightall\\n")\n\tfprintf(san_form_port "FLOC 24 12\\n")\n\tfprintf(san_form_port "MENUBUTTON \\">>\\" 4 4\\n")\n\tfprintf(san_form_port "ENDFIELD \\n")\n\t\n\tfprintf(san_form_port "FIELD leftall\\n")\n\tfprintf(san_form_port "FLOC 24 16\\n")\n\tfprintf(san_form_port "MENUBUTTON \\"<<\\" 4 4\\n")\n\tfprintf(san_form_port "ENDFIELD \\n")\n\t\n\tfprintf(san_form_port "FIELD assign\\n")\n\tfprintf(san_form_port "FLOC 10 26\\n")\n\tfprintf(san_form_port "MENUBUTTON \\"Assign\\" 12 3\\n")\n\tfprintf(san_form_port "ENDFIELD \\n")\n\t\n\tfprintf(san_form_port "FIELD close\\n")\n\tfprintf(san_form_port "FLOC 29 26\\n")\n\tfprintf(san_form_port "MENUBUTTON \\"Close\\" 12 3\\n")\n\tfprintf(san_form_port "ENDFIELD \\n")\n\t\n\tfprintf(san_form_port "ENDTILE\\n")\n\tfprintf(san_form_port "ENDFORM\\n")\n\t\n\tclose(san_form_port)\n)\n\n\ndefun(SanFormAction (san_form)\n\tcase(san_form->curField\n\t\t("select"\n\t\t\taxlClearSelSet()\n\t\t\taxlSetFindFilter(?enabled list("shapes") ?onButtons list("shapes"))\n\t\t\t;获取所选shape dbid\n\t\t\tshape_dbid_list = axlGetSelSet(axlAddSelectBox())\n\t\t)\n\t\t("allnet"\n\t\t\tselected_net_list = axlFormListGetSelItems(san_form "allnet")\n\t\t\taxlFormListAddItem(san_form "selnet" selected_net_list -1)\n\t\t\taxlFormListDeleteItem(san_form "allnet" selected_net_list)\n\t\t)\n\t\t("selnet"\n\t\t\tselected_net_list = axlFormListGetSelItems(san_form "selnet")\n\t\t\taxlFormListAddItem(san_form "allnet" selected_net_list -1)\n\t\t\taxlFormListDeleteItem(san_form "selnet" selected_net_list)\n\t\t)\n\t\t("filter"\n\t\t\tnet_filter = axlFormGetField(san_form "filter")\n\t\t\tnet_filter_list = GetAllNets(net_filter)\n\t\t\t\n\t\t\taxlFormListDeleteAll(san_form "allnet")\n\t\t\taxlFormSetField(san_form "allnet" net_filter_list)\n\t\t)\n\t\t("rightall"\n\t\t\taxlFormListDeleteAll(san_form "selnet")\n\t\t\taxlFormSetField(san_form "selnet" net_list)\n\t\t\taxlFormListDeleteAll(san_form "allnet")\n\t\t)\n\t\t("leftall"\n\t\t\taxlFormListDeleteAll(san_form "allnet")\n\t\t\taxlFormSetField(san_form "allnet" net_list)\n\t\t\taxlFormListDeleteAll(san_form "selnet")\n\t\t)\n\t\t("assign"\n\t\t\tshape_num = length(shape_dbid_list)\n\t\t\taxlFormListSelAll(san_form "selnet" t)\n\t\t\tselected_net_list_num = axlFormListGetSelCount(san_form "selnet")\n\t\t\tselected_net_list = axlFormListGetSelItems(san_form "selnet")\n\t\t\tif(shape_num == selected_net_list_num then\n\t\t\t\tfor(i 1 shape_num\n\t\t\t\t\t\taxlChangeNet(nthelem(i shape_dbid_list) nthelem(i selected_net_list))\n\t\t\t\t\t\taxlUIWPrint(san_form "Shape assigning %s." nthelem(i selected_net_list))\n\t\t\t\t)\n\t\t\t\taxlUIWPrint(san_form "Shape assign completed.")\n\t\t\telse\n\t\t\t\taxlUIWPrint(san_form "Shape and net number does not match.")\n\t\t\t)\n\t\t\taxlFormListSelAll(san_form "selnet" nil)\n\t\t\taxlClearSelSet()\n\t\t)\n\t\t("close"\n\t\t\taxlFormClose(san_form)\n\t\t\taxlCancelEnterFun()\n\t\t)\n\t\t\n\t)\n)\n\n;获取所有网络名\ndefun(GetAllNets (filter_str)\n\tnet_dbids = axlSelectByName("NET" filter_str t)\n\tnet_list = nil\n\tforeach(dbid net_dbids\n\t\tnet_list = append1(net_list dbid->name)\n\t)\n\tnet_list = sort(net_list nil)\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n',normalizedContent:'# 说明\n\n微波板经常碰到很多铜皮，如果一个个指定网络需要花费很长时间，现二次开发出小程序，可批量指定网络\n\n\n# 源码\n\naxlcmdregister("san" \'w_shapeanet_main)\nprocedure(w_shapeanet_main()\n\tcreateshapeanetform()\n\tsan_form=axlformcreate( (gensym) san_form_file nil \'sanformaction t)\n\tsanforminit(san_form)\n\taxlformdisplay(san_form)\n\taxltempfileremove(san_form_file)\n)\n\ndefun(sanforminit (san_form)\n\taxlclearselset()\n\taxluiwprint(san_form "shape assign net tool by wei.")\n\t;获取所有网络\n\taxlformsetfield(san_form "filter" "*")\n\tnet_filter = axlformgetfield(san_form "filter")\n\tnet_list = getallnets(net_filter)\n\t;设置所有网络到field\n\taxlformsetfield(san_form "allnet" net_list)\n\t\n\taxlformcolorize(san_form "info" \'text \'red)\n\taxlclearselset()\n)\n\ndefun(createshapeanetform ()\n\tsan_form_file = "san.form"\n\tsan_form_port = outfile(san_form_file "w")\n\t\n\tfprintf(san_form_port "file_type=form_defn version=2\\n")\n\tfprintf(san_form_port "form autogreytext\\n")\n\tfprintf(san_form_port "fixed\\n")\n\tfprintf(san_form_port "port 52 35\\n")\n\tfprintf(san_form_port "header \\"shape assign net\\"\\n")\n\t\n\tfprintf(san_form_port "tile\\n\\n")\n\t\n\tfprintf(san_form_port "field select\\n")\n\tfprintf(san_form_port "floc 2 1\\n")\n\tfprintf(san_form_port "menubutton \\"select shape\\" 12 3\\n")\n\tfprintf(san_form_port "endfield \\n")\n\t\n\t;注:所选网络应按从左到右,从上到下的顺序\n\t;fprintf(san_form_port "text \\"info:select nets assigned from down to up,left to right.\\" info\\n")\n\t;fprintf(san_form_port "text \\"\\327\\242:\\313\\371\\321\\241\\315\\370\\302\\347\\323\\246\\260\\264\\321\\241\\266\\250shape\\264\\323\\317\\302\\265\\275\\311\\317\\243\\254\\264\\323\\327\\363\\265\\275\\323\\322\\" info\\n")\n\t;fprintf(san_form_port "floc 16 1\\n")\n\t;fprintf(san_form_port "endtext\\n")\n\t\n\tfprintf(san_form_port "text \\"all nets:\\"\\n")\n\tfprintf(san_form_port "floc 3 4\\n")\n\tfprintf(san_form_port "endtext\\n\\n")\n\t\n\tfprintf(san_form_port "field filter\\n")\n\tfprintf(san_form_port "floc 10 4\\n")\n\tfprintf(san_form_port "strfillin 8 10\\n")\n\tfprintf(san_form_port "endfield \\n\\n")\n\t\n\tfprintf(san_form_port "field allnet\\n")\n\tfprintf(san_form_port "floc 3 6\\n")\n\tfprintf(san_form_port "list \\" \\" 20 10\\n")\n\tfprintf(san_form_port "options multiselect\\n")\n\tfprintf(san_form_port "endfield \\n")\n\t\n\tfprintf(san_form_port "text \\"selected assign nets:\\"\\n")\n\tfprintf(san_form_port "floc 29 4\\n")\n\tfprintf(san_form_port "endtext\\n\\n")\n\t\n\tfprintf(san_form_port "field selnet\\n")\n\tfprintf(san_form_port "floc 29 6\\n")\n\tfprintf(san_form_port "list \\" \\" 20 10\\n")\n\tfprintf(san_form_port "options multiselect\\n")\n\tfprintf(san_form_port "endfield \\n")\n\t\n\tfprintf(san_form_port "field rightall\\n")\n\tfprintf(san_form_port "floc 24 12\\n")\n\tfprintf(san_form_port "menubutton \\">>\\" 4 4\\n")\n\tfprintf(san_form_port "endfield \\n")\n\t\n\tfprintf(san_form_port "field leftall\\n")\n\tfprintf(san_form_port "floc 24 16\\n")\n\tfprintf(san_form_port "menubutton \\"<<\\" 4 4\\n")\n\tfprintf(san_form_port "endfield \\n")\n\t\n\tfprintf(san_form_port "field assign\\n")\n\tfprintf(san_form_port "floc 10 26\\n")\n\tfprintf(san_form_port "menubutton \\"assign\\" 12 3\\n")\n\tfprintf(san_form_port "endfield \\n")\n\t\n\tfprintf(san_form_port "field close\\n")\n\tfprintf(san_form_port "floc 29 26\\n")\n\tfprintf(san_form_port "menubutton \\"close\\" 12 3\\n")\n\tfprintf(san_form_port "endfield \\n")\n\t\n\tfprintf(san_form_port "endtile\\n")\n\tfprintf(san_form_port "endform\\n")\n\t\n\tclose(san_form_port)\n)\n\n\ndefun(sanformaction (san_form)\n\tcase(san_form->curfield\n\t\t("select"\n\t\t\taxlclearselset()\n\t\t\taxlsetfindfilter(?enabled list("shapes") ?onbuttons list("shapes"))\n\t\t\t;获取所选shape dbid\n\t\t\tshape_dbid_list = axlgetselset(axladdselectbox())\n\t\t)\n\t\t("allnet"\n\t\t\tselected_net_list = axlformlistgetselitems(san_form "allnet")\n\t\t\taxlformlistadditem(san_form "selnet" selected_net_list -1)\n\t\t\taxlformlistdeleteitem(san_form "allnet" selected_net_list)\n\t\t)\n\t\t("selnet"\n\t\t\tselected_net_list = axlformlistgetselitems(san_form "selnet")\n\t\t\taxlformlistadditem(san_form "allnet" selected_net_list -1)\n\t\t\taxlformlistdeleteitem(san_form "selnet" selected_net_list)\n\t\t)\n\t\t("filter"\n\t\t\tnet_filter = axlformgetfield(san_form "filter")\n\t\t\tnet_filter_list = getallnets(net_filter)\n\t\t\t\n\t\t\taxlformlistdeleteall(san_form "allnet")\n\t\t\taxlformsetfield(san_form "allnet" net_filter_list)\n\t\t)\n\t\t("rightall"\n\t\t\taxlformlistdeleteall(san_form "selnet")\n\t\t\taxlformsetfield(san_form "selnet" net_list)\n\t\t\taxlformlistdeleteall(san_form "allnet")\n\t\t)\n\t\t("leftall"\n\t\t\taxlformlistdeleteall(san_form "allnet")\n\t\t\taxlformsetfield(san_form "allnet" net_list)\n\t\t\taxlformlistdeleteall(san_form "selnet")\n\t\t)\n\t\t("assign"\n\t\t\tshape_num = length(shape_dbid_list)\n\t\t\taxlformlistselall(san_form "selnet" t)\n\t\t\tselected_net_list_num = axlformlistgetselcount(san_form "selnet")\n\t\t\tselected_net_list = axlformlistgetselitems(san_form "selnet")\n\t\t\tif(shape_num == selected_net_list_num then\n\t\t\t\tfor(i 1 shape_num\n\t\t\t\t\t\taxlchangenet(nthelem(i shape_dbid_list) nthelem(i selected_net_list))\n\t\t\t\t\t\taxluiwprint(san_form "shape assigning %s." nthelem(i selected_net_list))\n\t\t\t\t)\n\t\t\t\taxluiwprint(san_form "shape assign completed.")\n\t\t\telse\n\t\t\t\taxluiwprint(san_form "shape and net number does not match.")\n\t\t\t)\n\t\t\taxlformlistselall(san_form "selnet" nil)\n\t\t\taxlclearselset()\n\t\t)\n\t\t("close"\n\t\t\taxlformclose(san_form)\n\t\t\taxlcancelenterfun()\n\t\t)\n\t\t\n\t)\n)\n\n;获取所有网络名\ndefun(getallnets (filter_str)\n\tnet_dbids = axlselectbyname("net" filter_str t)\n\tnet_list = nil\n\tforeach(dbid net_dbids\n\t\tnet_list = append1(net_list dbid->name)\n\t)\n\tnet_list = sort(net_list nil)\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"脚本使用",frontmatter:{title:"脚本使用",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/use",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/17.Mentor%20VBS/01.%E8%84%9A%E6%9C%AC%E4%BD%BF%E7%94%A8.html",relativePath:"06.软件开发/17.Mentor VBS/01.脚本使用.md",key:"v-c9a153b2",path:"/soft/mentor/use/",headers:[{level:2,title:"控制台调用",slug:"控制台调用",normalizedTitle:"控制台调用",charIndex:2},{level:2,title:"帮助参数",slug:"帮助参数",normalizedTitle:"帮助参数",charIndex:80},{level:2,title:"运行",slug:"运行",normalizedTitle:"运行",charIndex:304},{level:2,title:"效果",slug:"效果",normalizedTitle:"效果",charIndex:356}],headersStr:"控制台调用 帮助参数 运行 效果",content:"# 控制台调用\n\nmgcscript <name_of_the_script_file> <optional_arguments_list>\n\n\n1\n\n\n\n# 帮助参数\n\nSet ScriptArgs = ScriptHelper.Arguments\narg1 = ScriptArgs.Item(3) \n' The first argument is the third item in the collection\narg2 = ScriptArgs.Item(4)\n\nScriptHelper.Echo arg1\nScriptHelper.Echo arg2\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 运行\n\nmgcscript test1.vbs firstArg secondArg\n\n\n1\n\n\n\n# 效果\n\n",normalizedContent:"# 控制台调用\n\nmgcscript <name_of_the_script_file> <optional_arguments_list>\n\n\n1\n\n\n\n# 帮助参数\n\nset scriptargs = scripthelper.arguments\narg1 = scriptargs.item(3) \n' the first argument is the third item in the collection\narg2 = scriptargs.item(4)\n\nscripthelper.echo arg1\nscripthelper.echo arg2\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 运行\n\nmgcscript test1.vbs firstarg secondarg\n\n\n1\n\n\n\n# 效果\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"获取license",frontmatter:{title:"获取license",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/license",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/17.Mentor%20VBS/02.%E8%8E%B7%E5%8F%96license.html",relativePath:"06.软件开发/17.Mentor VBS/02.获取license.md",key:"v-09604e86",path:"/soft/mentor/license/",headers:[{level:2,title:"获取license步骤",slug:"获取license步骤",normalizedTitle:"获取license步骤",charIndex:2},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:442}],headersStr:"获取license步骤 示例",content:"# 获取license步骤\n\n使用document时需要从服务器获取license，否则不能调用方法和属性。步骤如下：\n\n 1. 检索当前document\n    \n    Set docObj = app.ActiveDocument\n\n 2. 生成验证key\n    \n    key = docobj.Validate(0)\n\n 3. 创建实例\n    \n    Set licenseServer = CreateObject(\"MGCPCBAutomationLicensing.Application\")\n\n 4. 生成license token\n    \n    licenseToken = licenseServer.GetToken(key)\n\n 5. 使用token验证对象\n    \n    docObj.Validate(licenseToken)\n\n 6. 没有错误可以正确调用，否则返回错误epcbErrCodeValidationFailed\n\n\n# 示例\n\nOption Explicit\n'\n' This function retrieves an automation license for a document\n'\n' Returns: \n'   - 'Nothing' if licensing failed . \n'   - A reference to the active document of the application if \n'     licensing succeeded. \n'\nPublic Function GetLicensedDoc(app)\n    On Error Resume next\n    Dim key,licenseServer,licenseToken,docObj\n\n    Set GetLicensedDoc = Nothing\n\n    ' collect the active document\n    Set docObj = app.ActiveDocument\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' Ask Expedition�s document for the key\n    key = docObj.Validate(0)\n\n    ' Get token from license server\n    Set licenseServer = CreateObject(\"MGCPCBAutomationLicensing.Application\")\n    licenseToken = licenseServer.GetToken(key)\n    Set licenseServer = Nothing\n\n    ' Ask the document to validate the license token\n    Err.Clear \n    docObj.Validate(licenseToken)\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document license: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' everything is OK, return document\n    Set GetLicensedDoc = docObj \nEnd Function\n\n' In order to exit the script you can put the main portion\n' of your script in a function called main and then \n' use Exit Sub to exit the script early.\nMain\n\nSub Main()\n\t'\n\t' Testing code for the getlicenced function\n\t'\n\tDim app \n\tDim docObj\n\tSet app = GetObject(,\"MGCPCB.Application\")\n\n\t' get the document\n\tSet docObj = GetLicensedDoc(app)\n\tIf (docObj Is Nothing) Then Exit Sub ' failure to get document\n\n\n\t' perform document operations\n\tDim name \n\tname = docObj.name\n\tMsgBox name\nEnd Sub\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n",normalizedContent:"# 获取license步骤\n\n使用document时需要从服务器获取license，否则不能调用方法和属性。步骤如下：\n\n 1. 检索当前document\n    \n    set docobj = app.activedocument\n\n 2. 生成验证key\n    \n    key = docobj.validate(0)\n\n 3. 创建实例\n    \n    set licenseserver = createobject(\"mgcpcbautomationlicensing.application\")\n\n 4. 生成license token\n    \n    licensetoken = licenseserver.gettoken(key)\n\n 5. 使用token验证对象\n    \n    docobj.validate(licensetoken)\n\n 6. 没有错误可以正确调用，否则返回错误epcberrcodevalidationfailed\n\n\n# 示例\n\noption explicit\n'\n' this function retrieves an automation license for a document\n'\n' returns: \n'   - 'nothing' if licensing failed . \n'   - a reference to the active document of the application if \n'     licensing succeeded. \n'\npublic function getlicenseddoc(app)\n    on error resume next\n    dim key,licenseserver,licensetoken,docobj\n\n    set getlicenseddoc = nothing\n\n    ' collect the active document\n    set docobj = app.activedocument\n    if (err) then  \n     call app.gui.statusbartext(\"no active document: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' ask expedition�s document for the key\n    key = docobj.validate(0)\n\n    ' get token from license server\n    set licenseserver = createobject(\"mgcpcbautomationlicensing.application\")\n    licensetoken = licenseserver.gettoken(key)\n    set licenseserver = nothing\n\n    ' ask the document to validate the license token\n    err.clear \n    docobj.validate(licensetoken)\n    if (err) then  \n     call app.gui.statusbartext(\"no active document license: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' everything is ok, return document\n    set getlicenseddoc = docobj \nend function\n\n' in order to exit the script you can put the main portion\n' of your script in a function called main and then \n' use exit sub to exit the script early.\nmain\n\nsub main()\n\t'\n\t' testing code for the getlicenced function\n\t'\n\tdim app \n\tdim docobj\n\tset app = getobject(,\"mgcpcb.application\")\n\n\t' get the document\n\tset docobj = getlicenseddoc(app)\n\tif (docobj is nothing) then exit sub ' failure to get document\n\n\n\t' perform document operations\n\tdim name \n\tname = docobj.name\n\tmsgbox name\nend sub\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"调用Command",frontmatter:{title:"调用Command",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/command",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/17.Mentor%20VBS/03.%E8%B0%83%E7%94%A8Command.html",relativePath:"06.软件开发/17.Mentor VBS/03.调用Command.md",key:"v-32de3740",path:"/soft/mentor/command/",headers:[{level:2,title:"步骤",slug:"步骤",normalizedTitle:"步骤",charIndex:2},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:510}],headersStr:"步骤 示例",content:"# 步骤\n\n使用document时需要从服务器获取license，否则不能调用方法和属性。步骤如下：\n\n 1. 使用Gui.ProcessCommand(“<command_name>”)\n 2. 如果步骤1显示了窗口，调用Gui.FindDialog(\"<caption of dialog>\")，查找到窗口后调用窗口对象的方法\n 3. 如果窗口有自己的菜单，调用Gui.ProcessCommand(\"<command_name>\"\") ，重复步骤2\n 4. 查找按钮 Dialog.FindButton(\"<button_caption>\")或者复选框Dialog.FindCheckBox(\"<caption>\")\n 5. 调用按钮方法 Button.Click，验证复选框CheckBox.Checked\n 6. （可选）控制台交互 Gui.TerminateCommand\n\n注意\n\n * 不是所有窗口可以被控制。\n * 一些命令显示确认窗口或者完成后显示记事本。可以使用 Gui.SuppressNotepadDialogs 和 Gui.SuppressTrivialDialogs控制是否显示。\n\n\n# 示例\n\nOption Explicit\n'\n' This function retrieves an automation license for a document\n'\n' Returns: \n'   - 'Nothing' if licensing failed . \n'   - A reference to the active document of the application if \n'     licensing succeeded. \n'\nPublic Function GetLicensedDoc(app)\n    On Error Resume next\n    Dim key,licenseServer,licenseToken,docObj\n\n    Set GetLicensedDoc = Nothing\n\n    ' collect the active document\n    Set docObj = app.ActiveDocument\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' Ask Expedition�s document for the key\n    key = docObj.Validate(0)\n\n    ' Get token from license server\n    Set licenseServer = CreateObject(\"MGCPCBAutomationLicensing.Application\")\n    licenseToken = licenseServer.GetToken(key)\n    Set licenseServer = Nothing\n\n    ' Ask the document to validate the license token\n    Err.Clear \n    docObj.Validate(licenseToken)\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document license: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' everything is OK, return document\n    Set GetLicensedDoc = docObj \nEnd Function\n\n' In order to exit the script you can put the main portion\n' of your script in a function called main and then \n' use Exit Sub to exit the script early.\nMain\n\nSub Main()\n\t'\n\t' Testing code for the getlicenced function\n\t'\n\tDim app \n\tDim docObj\n\tSet app = GetObject(,\"MGCPCB.Application\")\n\n\t' get the document\n\tSet docObj = GetLicensedDoc(app)\n\tIf (docObj Is Nothing) Then Exit Sub ' failure to get document\n\n\n\t' perform document operations\n\tDim name \n\tname = docObj.name\n\tMsgBox name\nEnd Sub\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n",normalizedContent:"# 步骤\n\n使用document时需要从服务器获取license，否则不能调用方法和属性。步骤如下：\n\n 1. 使用gui.processcommand(“<command_name>”)\n 2. 如果步骤1显示了窗口，调用gui.finddialog(\"<caption of dialog>\")，查找到窗口后调用窗口对象的方法\n 3. 如果窗口有自己的菜单，调用gui.processcommand(\"<command_name>\"\") ，重复步骤2\n 4. 查找按钮 dialog.findbutton(\"<button_caption>\")或者复选框dialog.findcheckbox(\"<caption>\")\n 5. 调用按钮方法 button.click，验证复选框checkbox.checked\n 6. （可选）控制台交互 gui.terminatecommand\n\n注意\n\n * 不是所有窗口可以被控制。\n * 一些命令显示确认窗口或者完成后显示记事本。可以使用 gui.suppressnotepaddialogs 和 gui.suppresstrivialdialogs控制是否显示。\n\n\n# 示例\n\noption explicit\n'\n' this function retrieves an automation license for a document\n'\n' returns: \n'   - 'nothing' if licensing failed . \n'   - a reference to the active document of the application if \n'     licensing succeeded. \n'\npublic function getlicenseddoc(app)\n    on error resume next\n    dim key,licenseserver,licensetoken,docobj\n\n    set getlicenseddoc = nothing\n\n    ' collect the active document\n    set docobj = app.activedocument\n    if (err) then  \n     call app.gui.statusbartext(\"no active document: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' ask expedition�s document for the key\n    key = docobj.validate(0)\n\n    ' get token from license server\n    set licenseserver = createobject(\"mgcpcbautomationlicensing.application\")\n    licensetoken = licenseserver.gettoken(key)\n    set licenseserver = nothing\n\n    ' ask the document to validate the license token\n    err.clear \n    docobj.validate(licensetoken)\n    if (err) then  \n     call app.gui.statusbartext(\"no active document license: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' everything is ok, return document\n    set getlicenseddoc = docobj \nend function\n\n' in order to exit the script you can put the main portion\n' of your script in a function called main and then \n' use exit sub to exit the script early.\nmain\n\nsub main()\n\t'\n\t' testing code for the getlicenced function\n\t'\n\tdim app \n\tdim docobj\n\tset app = getobject(,\"mgcpcb.application\")\n\n\t' get the document\n\tset docobj = getlicenseddoc(app)\n\tif (docobj is nothing) then exit sub ' failure to get document\n\n\n\t' perform document operations\n\tdim name \n\tname = docobj.name\n\tmsgbox name\nend sub\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"定义新Command",frontmatter:{title:"定义新Command",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/newcommand",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/17.Mentor%20VBS/04.%E5%AE%9A%E4%B9%89%E6%96%B0Command.html",relativePath:"06.软件开发/17.Mentor VBS/04.定义新Command.md",key:"v-4619bc18",path:"/soft/mentor/newcommand/",headers:[{level:2,title:"注册命令",slug:"注册命令",normalizedTitle:"注册命令",charIndex:2},{level:2,title:"定义事件接口",slug:"定义事件接口",normalizedTitle:"定义事件接口",charIndex:108},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:257}],headersStr:"注册命令 定义事件接口 示例",content:"# 注册命令\n\n唤醒服务创建命令\n\nDim ccmd \nDim app\nSet ccmd = app.Gui.RegisterCommand(\"<command_name>\", True)\n\n\n1\n2\n3\n\n\n\n# 定义事件接口\n\n如果定义了一个变量作为接收命令，需要调用Scripting.AttachEvents绑定事件\n\nCall Scripting.AttachEvents(<object_reference_variable>,\"<event_function_prefix>\") \n\n\n1\n\n\n\n# 示例\n\nOption Explicit\n'\n' The example below shows the framework to create a new command\n' - In the Form_Load routine all references to the server are set up.\n'   The command is started with RegisterCommand\n' - The ccmd_OnMouseClk routine handles left click mouse entries. \n'   On every click the motion graphics attached to the cursor gets changed.\n' - Motion graphics is defined with the MotionGFX_Show routine\n'   \n' Typically, this code can be found in the startup form of a Visual Basic \n' application\n' \n\n' ==============================\n' Declaration section\n' ==============================\nDim ccmd\n\nDim appPCB \nDim docPCB\nDim tagID \nDim delta\n\nDim clickCount\n\nDim bDocEventsAttached : bDocEventsAttached = False\nDim bCmdEventsAttached : bCmdEventsAttached = False\n\n\n\nSet cCmd = Nothing\nCall Form_Load()\n'An infinite loop to prevent script from exiting\n\n \n\n\n' =================================\n' Form load\n' =================================\nPrivate Sub Form_Load()\n\n   ' Set up the objects during form load\n   Set appPCB = GetObject(, \"MGCPCB.ExpeditionPCBApplication\")\n   If (appPCB Is Nothing) Then Exit Sub\n   \n\tCall Scripting.AttachEvents(appPCB, \"appPCB\")\n   Set docPCB = appPCB.ActiveDocument\n   ValidateServer(docPCB)\n   tagID = -1\n   delta = 200\n\n   ' Start the command\n   Set ccmd = appPCB.Gui.RegisterCommand(\"Showing motion graphics\", True)\n   ccmd.Unit = docPCB.CurrentUnit\n   If Not bCmdEventsAttached Then\n      Call Scripting.AttachEvents(cCmd, \"cCmd\")\n      bCmdEventsAttached = True\n   End If\n   Scripting.DontExit = True\n\nEnd Sub\n\n' =================================\n' Form unload\n' =================================\nPrivate Sub Form_QueryUnload(Cancel, UnloadMode)\n\n  ' Clear motion graphics\n  Call MotionGFX_Clear\n\n  ' Make sure all objects are released\n  If (Not ccmd Is Nothing) Then\n   Call appPCB.Gui.TerminateCommand\n  End If\n\n  Set ccmd = Nothing\n  Set docPCB = Nothing\n  Set appPCB = Nothing\n\nEnd Sub\n\n\n\n' =================================\n' Event handler for a mouse click\n' =================================\nFunction ccmd_OnMouseClk(eButton, eFlags ,dX ,dY )\n  ' switch the motion graphics on every mouse click\n  If (eButton = epcbMouseButtonLeft) Then\n   clickCount = clickCount + 1\n   Call MotionGFX_Show(clickCount, dX, dY)\n   If (clickCount >= 3) Then clickCount = 0\n   ccmd_OnMouseClk = True ' return True to indicate \n  else \n    ccmd_OnMouseClk = False\n  End If\nEnd Function\n\n' ==========================================\n' Event handler for terminating the command\n' ==========================================\nFunction ccmd_OnTerminate()\n  ' terminate the command\n  MsgBox(\"Terminated command\")\n  Call MotionGFX_Clear\n  Set ccmd = Nothing\n  ' exit the infinite loop\n\n\nEnd Function\n\n' ==============================\n' Clearing the motion graphics\n' ==============================\nPublic Sub MotionGFX_Clear()\n  If (tagID < 0) Then Exit Sub\n  If (docPCB Is Nothing) Then Exit Sub\n\n  Call docPCB.ActiveView.MotionGfxDeleteByTag(tagID)\n  tagID = -1\n\nEnd Sub\n\n' ========================================\n' Showing/switching the motion graphics\n' ========================================\nPublic Sub MotionGFX_Show(mode, pntX , pntY )\n'On Error Resume Next\n\nDim v, width\nDim delta2 : delta2 = delta / 2\n\nSet v = docPCB.ActiveView\n\n\nwidth = 20\n\n' clear the graphics\nCall MotionGFX_Clear\n\n\nIf (mode = 1) Then\n ' Draw a rectangle around the cursor\n tagID = v.MotionGfxGetTag\n Call v.MotionGfxPutRect(pntX - delta2, pntY - delta2, epcbMotionGfxPointMoveXY, _\n                        pntX + delta2, pntY + delta2, epcbMotionGfxPointMoveXY, tagID, width, Nothing)\nElseIf (mode = 2) Then\n ' Draw a circle around the cursor\n tagID = v.MotionGfxGetTag\n Call v.MotionGfxPutArcByCenter(pntX - delta2, pntY, _\n                               pntX, pntY, epcbMotionGfxPointMoveXY, pntX + delta2, _\n                               pntY, epcbMotionGfxPointMoveXY, _\n                               True, tagID, width, Nothing)\nElseIf (mode = 3) Then\n ' Draw a  line at 45 degrees\n tagID = v.MotionGfxGetTag\n Call v.MotionGfxPutLine(pntX - delta2, pntY - delta2, epcbMotionGfxPointMoveXY, _\n                        pntX + delta2, pntY + delta2, epcbMotionGfxPointMoveXY, tagID, width, Nothing)\nEnd If\n\nEnd Sub\n\n\n'=========================================================================\n' Validate the server with given Document object\n'=========================================================================\nPrivate Function ValidateServer(doc)\n    dim key, licenseServer, licenseToken\n    key = doc.Validate(0)\n    Set licenseServer = CreateObject(\"MGCPCBAutomationLicensing.Application\")\n    licenseToken = licenseServer.GetToken(key)\n    Set licenseServer = nothing\n    On Error Resume Next\n    Err.Clear\n    doc.Validate(licenseToken)\n    If Err Then\n        ValidateServer = 0    \n    Else\n        ValidateServer = 1\n    End If\nEnd Function\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n",normalizedContent:"# 注册命令\n\n唤醒服务创建命令\n\ndim ccmd \ndim app\nset ccmd = app.gui.registercommand(\"<command_name>\", true)\n\n\n1\n2\n3\n\n\n\n# 定义事件接口\n\n如果定义了一个变量作为接收命令，需要调用scripting.attachevents绑定事件\n\ncall scripting.attachevents(<object_reference_variable>,\"<event_function_prefix>\") \n\n\n1\n\n\n\n# 示例\n\noption explicit\n'\n' the example below shows the framework to create a new command\n' - in the form_load routine all references to the server are set up.\n'   the command is started with registercommand\n' - the ccmd_onmouseclk routine handles left click mouse entries. \n'   on every click the motion graphics attached to the cursor gets changed.\n' - motion graphics is defined with the motiongfx_show routine\n'   \n' typically, this code can be found in the startup form of a visual basic \n' application\n' \n\n' ==============================\n' declaration section\n' ==============================\ndim ccmd\n\ndim apppcb \ndim docpcb\ndim tagid \ndim delta\n\ndim clickcount\n\ndim bdoceventsattached : bdoceventsattached = false\ndim bcmdeventsattached : bcmdeventsattached = false\n\n\n\nset ccmd = nothing\ncall form_load()\n'an infinite loop to prevent script from exiting\n\n \n\n\n' =================================\n' form load\n' =================================\nprivate sub form_load()\n\n   ' set up the objects during form load\n   set apppcb = getobject(, \"mgcpcb.expeditionpcbapplication\")\n   if (apppcb is nothing) then exit sub\n   \n\tcall scripting.attachevents(apppcb, \"apppcb\")\n   set docpcb = apppcb.activedocument\n   validateserver(docpcb)\n   tagid = -1\n   delta = 200\n\n   ' start the command\n   set ccmd = apppcb.gui.registercommand(\"showing motion graphics\", true)\n   ccmd.unit = docpcb.currentunit\n   if not bcmdeventsattached then\n      call scripting.attachevents(ccmd, \"ccmd\")\n      bcmdeventsattached = true\n   end if\n   scripting.dontexit = true\n\nend sub\n\n' =================================\n' form unload\n' =================================\nprivate sub form_queryunload(cancel, unloadmode)\n\n  ' clear motion graphics\n  call motiongfx_clear\n\n  ' make sure all objects are released\n  if (not ccmd is nothing) then\n   call apppcb.gui.terminatecommand\n  end if\n\n  set ccmd = nothing\n  set docpcb = nothing\n  set apppcb = nothing\n\nend sub\n\n\n\n' =================================\n' event handler for a mouse click\n' =================================\nfunction ccmd_onmouseclk(ebutton, eflags ,dx ,dy )\n  ' switch the motion graphics on every mouse click\n  if (ebutton = epcbmousebuttonleft) then\n   clickcount = clickcount + 1\n   call motiongfx_show(clickcount, dx, dy)\n   if (clickcount >= 3) then clickcount = 0\n   ccmd_onmouseclk = true ' return true to indicate \n  else \n    ccmd_onmouseclk = false\n  end if\nend function\n\n' ==========================================\n' event handler for terminating the command\n' ==========================================\nfunction ccmd_onterminate()\n  ' terminate the command\n  msgbox(\"terminated command\")\n  call motiongfx_clear\n  set ccmd = nothing\n  ' exit the infinite loop\n\n\nend function\n\n' ==============================\n' clearing the motion graphics\n' ==============================\npublic sub motiongfx_clear()\n  if (tagid < 0) then exit sub\n  if (docpcb is nothing) then exit sub\n\n  call docpcb.activeview.motiongfxdeletebytag(tagid)\n  tagid = -1\n\nend sub\n\n' ========================================\n' showing/switching the motion graphics\n' ========================================\npublic sub motiongfx_show(mode, pntx , pnty )\n'on error resume next\n\ndim v, width\ndim delta2 : delta2 = delta / 2\n\nset v = docpcb.activeview\n\n\nwidth = 20\n\n' clear the graphics\ncall motiongfx_clear\n\n\nif (mode = 1) then\n ' draw a rectangle around the cursor\n tagid = v.motiongfxgettag\n call v.motiongfxputrect(pntx - delta2, pnty - delta2, epcbmotiongfxpointmovexy, _\n                        pntx + delta2, pnty + delta2, epcbmotiongfxpointmovexy, tagid, width, nothing)\nelseif (mode = 2) then\n ' draw a circle around the cursor\n tagid = v.motiongfxgettag\n call v.motiongfxputarcbycenter(pntx - delta2, pnty, _\n                               pntx, pnty, epcbmotiongfxpointmovexy, pntx + delta2, _\n                               pnty, epcbmotiongfxpointmovexy, _\n                               true, tagid, width, nothing)\nelseif (mode = 3) then\n ' draw a  line at 45 degrees\n tagid = v.motiongfxgettag\n call v.motiongfxputline(pntx - delta2, pnty - delta2, epcbmotiongfxpointmovexy, _\n                        pntx + delta2, pnty + delta2, epcbmotiongfxpointmovexy, tagid, width, nothing)\nend if\n\nend sub\n\n\n'=========================================================================\n' validate the server with given document object\n'=========================================================================\nprivate function validateserver(doc)\n    dim key, licenseserver, licensetoken\n    key = doc.validate(0)\n    set licenseserver = createobject(\"mgcpcbautomationlicensing.application\")\n    licensetoken = licenseserver.gettoken(key)\n    set licenseserver = nothing\n    on error resume next\n    err.clear\n    doc.validate(licensetoken)\n    if err then\n        validateserver = 0    \n    else\n        validateserver = 1\n    end if\nend function\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"编辑图形",frontmatter:{title:"编辑图形",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/graphics",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/17.Mentor%20VBS/05.%E7%BC%96%E8%BE%91%E5%9B%BE%E5%BD%A2.html",relativePath:"06.软件开发/17.Mentor VBS/05.编辑图形.md",key:"v-49d34983",path:"/soft/mentor/graphics/",headers:[{level:2,title:"原理",slug:"原理",normalizedTitle:"原理",charIndex:2},{level:2,title:"替换layer text",slug:"替换layer-text",normalizedTitle:"替换layer text",charIndex:38},{level:2,title:"移动user layer图形",slug:"移动user-layer图形",normalizedTitle:"移动user layer图形",charIndex:2531}],headersStr:"原理 替换layer text 移动user layer图形",content:"# 原理\n\n创建图形用Put方法，编辑图形用添加新图形，删除原图形\n\n\n# 替换layer text\n\n'\n'The example below demonstrates the element manipulations \n'on a fabrication layer text. \n'It changes the text string of the incoming element 'orgTextObj’ \n'to 'newTextString’ by creating a new text element. \n'The new element is placed in the design. The original element is deleted.\n'==================================================================== \nSub FabTextReplace  (orgTextObj,newTextString)\n\nDim docObj,resultMess\nDim newTextObj\n\n'collect document object\nSet docObj = GetLicensedDoc(app)\nIf (docObj Is Nothing) Then Exit Sub\n\n'if the incoming element is empty then exit \nIf (orgTextObj Is Nothing) Then Exit Sub\n\n'create the new text element \nIf (app.LockServer(True)) Then\n Set newTextObj = docObj.PutFabricationLayerText( newTextString, _ \n                   \torgTextObj.PositionX ,orgTextObj.PositionY, _ \n\t\t\t\t\torgTextObj.Type,orgTextObj.Side,orgTextObj.Format.Height,_ \n\t\t\t\t\torgTextObj.Format.Orientation,orgTextObj.Format.PenWidth, _\n                   \torgTextObj.Format.Font,orgTextObj.Format.Attributes, _  \n\t\t\t\t\torgTextObj.Format.HorizontalJust,orgTextObj.Format.VerticalJust, _ \n\t\t\t\t\torgTextObj.Component,epcbUnitCurrent,epcbAngleUnitDegrees)\n\n If (Err) Then \n  Call app.Gui.StatusBarText(\"An error occured while creating new text : \" + _ \n                              vbNewLine + Err.Description,epcbStatusFieldError)\n  app.UnlockServer(False)\n  Exit Sub\n Else \n  'delete the original text\n  orgTextObj.Delete\n  If (Err) Then \n   Call app.Gui.StatusBarText(\"Could not delete original text : \" + _ \n                              vbNewLine + Err.Description,epcbStatusFieldError)\n   app.UnlockServer(False)\n   Exit Sub\n  End if\n  resultMess = \"Fabrication text change was successfull\"\n\n  'select the new text object and fit it on the board\n  newTextObj.selected = True\n  docObj.ActiveView.SetExtentsToSelection\n\n  'Update status bar\n  Call app.Gui.StatusBarText(resultMess,epcbStatusField1)\n End If\n app.UnlockServer(True)\nEnd if \n\nEnd Sub\n'\n'Testing code for the sample\n'\nDim app \nSet app = GetObject(,\"MGCPCB.Application\")\nDim textObj \n\n'Code to retrieve or create a fabrication text object goes here\n  '....\n  '....\n\n'Execute text replacement on the textObject (uncomment the line below)\n'Call FabTextReplace  (textObj,\"Text String was replaced\") \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n\n\n\n# 移动user layer图形\n\n' The example below moves all user layer graphics objects on \n' user layer 'Reserved_Area’ with a deltaX and deltaY\n' (graphics inside the components is not included\n'\n\nFunction  Move_UserGfx(gfxObj,deltaX,deltaY)\n' \n=========================================================================\n====\n' Description : Move a graphics object. This will recreate the graphics \nobject \n'               in its new location\n'\n' Parameters:\n'    - deltaX : Displacement in X\n'    - deltaY : Displacement in Y\n' \n' Return values 1: If success\n'               -1: If failure \n'\n' \n=========================================================================\n====\non error resume next\nDim retValue:retValue = 0\n\nDim docObj,resultMess,geomObj,pntsArr,i,numPoints,newObj,layerObj \n\n' collect document object\nSet docObj = GetLicensedDoc(app)\nIf (docObj Is Nothing) Then Exit Function\n\n' collect the points array of the user layer gfx\nSet geomObj = gfxObj.Geometry\npntsArr = geomObj.PointsArray\nnumPoints = UBound(pntsArr,2) +1\n\n' displace the points array in x and y\nFor i = 0 To numPoints - 1\n pntsArr(0,i) = pntsArr(0,i) + deltaX\n pntsArr(1,i) = pntsArr(1,i) + deltaY\nNext\n\n' recreate the element in the document\nSet layerObj = docObj.UserLayers.Item(gfxObj.LayerName)\nSet newObj = docObj.PutUserLayerGfx( layerObj,geomObj.LineWidth, _ \n                                     numPoints,pntsArr, _ \n                                     geomObj.DisplayFilled,gfxObj.Component)\n\nIf (Err) Then \n  Call app.Gui.StatusBarText(\"An error occured while creating a user layer \ngraphics element: \" + _ \n                              vbNewLine + Err.Description,epcbStatusFieldError)\n  Move_UserGfx = -1\nElse \n  ' delete the original object\n  gfxObj.Delete   \n  Move_UserGfx = 1\nEnd if  \n\nEnd Function\n\nSub Move_UserLayer(layerName,deltaX,deltaY)\n' \n=========================================================================\n====\n' Description : Move a user layer \n'               in its new location\n'\n' Parameters:\n'    - layerName : the name of the user layer to move\n'    - deltaX    : Displacement in X\n'    - deltaY    : Displacement in Y\n' \n' Return values 1: If success\n'               -1: If failure \n' \n=========================================================================\n====\n\nDim docObj,resultMess,gfxColl,i,gfxObj,retVal\n\n' collect document object\nSet docObj = GetLicensedDoc(app)\nIf (docObj Is Nothing) Then Exit Sub\n\n' Collect the user layer graphics elements\nIf (app.LockServer(True) = True ) Then\n Set gfxColl = docObj.UserLayerGfxs(epcbSelectAll,layerName,False) \n\n If (Err) Then \n   Call app.Gui.StatusBarText(\"An error occured while collecting user \nlayer graphics: \" + _ \n                              vbNewLine + Err.Description,epcbStatusFieldError)\n   app.UnlockServer False\n   Exit Sub\n Else \n\n  ' Translate the elements \n  ' \n  For i =1 To gfxColl.Count\n   Set gfxObj = gfxColl.Item(i)\n   retVal = Move_UserGfx(gfxObj,deltaX,deltaY)\n  Next\n\n  ' unlock the server\n  app.UnlockServer True\n\nEnd if \n\n\n\nEnd if\n\nEnd Sub\n'\n' Testing code for the sample\n'\nDim app \nSet app = GetObject(,\"MGCPCB.Application\")\nCall Move_UserLayer(\"Reserved Area\",100,100)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n",normalizedContent:"# 原理\n\n创建图形用put方法，编辑图形用添加新图形，删除原图形\n\n\n# 替换layer text\n\n'\n'the example below demonstrates the element manipulations \n'on a fabrication layer text. \n'it changes the text string of the incoming element 'orgtextobj’ \n'to 'newtextstring’ by creating a new text element. \n'the new element is placed in the design. the original element is deleted.\n'==================================================================== \nsub fabtextreplace  (orgtextobj,newtextstring)\n\ndim docobj,resultmess\ndim newtextobj\n\n'collect document object\nset docobj = getlicenseddoc(app)\nif (docobj is nothing) then exit sub\n\n'if the incoming element is empty then exit \nif (orgtextobj is nothing) then exit sub\n\n'create the new text element \nif (app.lockserver(true)) then\n set newtextobj = docobj.putfabricationlayertext( newtextstring, _ \n                   \torgtextobj.positionx ,orgtextobj.positiony, _ \n\t\t\t\t\torgtextobj.type,orgtextobj.side,orgtextobj.format.height,_ \n\t\t\t\t\torgtextobj.format.orientation,orgtextobj.format.penwidth, _\n                   \torgtextobj.format.font,orgtextobj.format.attributes, _  \n\t\t\t\t\torgtextobj.format.horizontaljust,orgtextobj.format.verticaljust, _ \n\t\t\t\t\torgtextobj.component,epcbunitcurrent,epcbangleunitdegrees)\n\n if (err) then \n  call app.gui.statusbartext(\"an error occured while creating new text : \" + _ \n                              vbnewline + err.description,epcbstatusfielderror)\n  app.unlockserver(false)\n  exit sub\n else \n  'delete the original text\n  orgtextobj.delete\n  if (err) then \n   call app.gui.statusbartext(\"could not delete original text : \" + _ \n                              vbnewline + err.description,epcbstatusfielderror)\n   app.unlockserver(false)\n   exit sub\n  end if\n  resultmess = \"fabrication text change was successfull\"\n\n  'select the new text object and fit it on the board\n  newtextobj.selected = true\n  docobj.activeview.setextentstoselection\n\n  'update status bar\n  call app.gui.statusbartext(resultmess,epcbstatusfield1)\n end if\n app.unlockserver(true)\nend if \n\nend sub\n'\n'testing code for the sample\n'\ndim app \nset app = getobject(,\"mgcpcb.application\")\ndim textobj \n\n'code to retrieve or create a fabrication text object goes here\n  '....\n  '....\n\n'execute text replacement on the textobject (uncomment the line below)\n'call fabtextreplace  (textobj,\"text string was replaced\") \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n\n\n\n# 移动user layer图形\n\n' the example below moves all user layer graphics objects on \n' user layer 'reserved_area’ with a deltax and deltay\n' (graphics inside the components is not included\n'\n\nfunction  move_usergfx(gfxobj,deltax,deltay)\n' \n=========================================================================\n====\n' description : move a graphics object. this will recreate the graphics \nobject \n'               in its new location\n'\n' parameters:\n'    - deltax : displacement in x\n'    - deltay : displacement in y\n' \n' return values 1: if success\n'               -1: if failure \n'\n' \n=========================================================================\n====\non error resume next\ndim retvalue:retvalue = 0\n\ndim docobj,resultmess,geomobj,pntsarr,i,numpoints,newobj,layerobj \n\n' collect document object\nset docobj = getlicenseddoc(app)\nif (docobj is nothing) then exit function\n\n' collect the points array of the user layer gfx\nset geomobj = gfxobj.geometry\npntsarr = geomobj.pointsarray\nnumpoints = ubound(pntsarr,2) +1\n\n' displace the points array in x and y\nfor i = 0 to numpoints - 1\n pntsarr(0,i) = pntsarr(0,i) + deltax\n pntsarr(1,i) = pntsarr(1,i) + deltay\nnext\n\n' recreate the element in the document\nset layerobj = docobj.userlayers.item(gfxobj.layername)\nset newobj = docobj.putuserlayergfx( layerobj,geomobj.linewidth, _ \n                                     numpoints,pntsarr, _ \n                                     geomobj.displayfilled,gfxobj.component)\n\nif (err) then \n  call app.gui.statusbartext(\"an error occured while creating a user layer \ngraphics element: \" + _ \n                              vbnewline + err.description,epcbstatusfielderror)\n  move_usergfx = -1\nelse \n  ' delete the original object\n  gfxobj.delete   \n  move_usergfx = 1\nend if  \n\nend function\n\nsub move_userlayer(layername,deltax,deltay)\n' \n=========================================================================\n====\n' description : move a user layer \n'               in its new location\n'\n' parameters:\n'    - layername : the name of the user layer to move\n'    - deltax    : displacement in x\n'    - deltay    : displacement in y\n' \n' return values 1: if success\n'               -1: if failure \n' \n=========================================================================\n====\n\ndim docobj,resultmess,gfxcoll,i,gfxobj,retval\n\n' collect document object\nset docobj = getlicenseddoc(app)\nif (docobj is nothing) then exit sub\n\n' collect the user layer graphics elements\nif (app.lockserver(true) = true ) then\n set gfxcoll = docobj.userlayergfxs(epcbselectall,layername,false) \n\n if (err) then \n   call app.gui.statusbartext(\"an error occured while collecting user \nlayer graphics: \" + _ \n                              vbnewline + err.description,epcbstatusfielderror)\n   app.unlockserver false\n   exit sub\n else \n\n  ' translate the elements \n  ' \n  for i =1 to gfxcoll.count\n   set gfxobj = gfxcoll.item(i)\n   retval = move_usergfx(gfxobj,deltax,deltay)\n  next\n\n  ' unlock the server\n  app.unlockserver true\n\nend if \n\n\n\nend if\n\nend sub\n'\n' testing code for the sample\n'\ndim app \nset app = getobject(,\"mgcpcb.application\")\ncall move_userlayer(\"reserved area\",100,100)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"对象集合",frontmatter:{title:"对象集合",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/object",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/17.Mentor%20VBS/06.%E5%AF%B9%E8%B1%A1%E9%9B%86%E5%90%88.html",relativePath:"06.软件开发/17.Mentor VBS/06.对象集合.md",key:"v-08e95cbb",path:"/soft/mentor/object/",headers:[{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:2}],headersStr:"示例",content:"# 示例\n\nOption Explicit\n'\n' The example below verifies all objects that are \n' connected to a pin\n' \nPublic Sub CheckConnectedObjects(pinObj)\n\nDim connObjsColl          ' The connected objects collection\nDim tempObj , condGfxObj\nDim objClType             ' The class type of the object\nDim i \n\nSet connObjsColl = pinObj.ConnectedObjects\n\nFor i = 1 To connObjsColl.Count\n   Set tempObj = connObjsColl.Item(i)\n\n   '\n   ' Check if we have an element that is conductor graphics \n   ' (check the object class)\n   If (tempObj.ObjectClass = epcbObjectClassConductorLayerGfx) Then \n   ' 'cast’ to a conductor layer graphics parent object\n   Set condGfxObj = tempObj\n\n   Select Case condGfxObj.Type2\n\n      Case epcbGfxGeneratedPlane \n         Dim genPlaneObj \n         Set genPlaneObj = condGfxObj\n         app.Gui.Display \"Generated plane connected to \" +_\n            genPlaneObj.Net.Name\n\n      Case epcbGfxBoardOutline\n         Dim boutlineObj \n         Set boutlineObj = condGfxObj\n         app.Gui.Display \"Board outline element \"\n      End Select\n   End If\nNext\nEnd Sub\n\n'\n' The multiple use of variables \n' can be avoided    \n' The routine below shows the reduced use of variables\n'\nPublic Sub CheckConnectedObjects(pinObj)\n\nDim objType,tempObj  \n\nFor Each tempObj In pinObj.ConnectedObjects\n   ' we immediately check for the object type.\n   ' However , there may by objects which do not \n   ' have the Type2 property so one must check for\n   ' error \n   On Error Resume next\n   objType = tempObj.Type2\n   If (Err = 0) Then  \n      Select Case objType\n         Case epcbGfxGeneratedPlane\n            app.Gui.Display \"Generated plane connected to \" +_\n               tempObj.Net.Name\n      \n         Case epcbGfxBoardOutline\n            app.Gui.Display \"Board outline element \"\n      End Select\n   End If\nNext\nEnd Sub\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n",normalizedContent:"# 示例\n\noption explicit\n'\n' the example below verifies all objects that are \n' connected to a pin\n' \npublic sub checkconnectedobjects(pinobj)\n\ndim connobjscoll          ' the connected objects collection\ndim tempobj , condgfxobj\ndim objcltype             ' the class type of the object\ndim i \n\nset connobjscoll = pinobj.connectedobjects\n\nfor i = 1 to connobjscoll.count\n   set tempobj = connobjscoll.item(i)\n\n   '\n   ' check if we have an element that is conductor graphics \n   ' (check the object class)\n   if (tempobj.objectclass = epcbobjectclassconductorlayergfx) then \n   ' 'cast’ to a conductor layer graphics parent object\n   set condgfxobj = tempobj\n\n   select case condgfxobj.type2\n\n      case epcbgfxgeneratedplane \n         dim genplaneobj \n         set genplaneobj = condgfxobj\n         app.gui.display \"generated plane connected to \" +_\n            genplaneobj.net.name\n\n      case epcbgfxboardoutline\n         dim boutlineobj \n         set boutlineobj = condgfxobj\n         app.gui.display \"board outline element \"\n      end select\n   end if\nnext\nend sub\n\n'\n' the multiple use of variables \n' can be avoided    \n' the routine below shows the reduced use of variables\n'\npublic sub checkconnectedobjects(pinobj)\n\ndim objtype,tempobj  \n\nfor each tempobj in pinobj.connectedobjects\n   ' we immediately check for the object type.\n   ' however , there may by objects which do not \n   ' have the type2 property so one must check for\n   ' error \n   on error resume next\n   objtype = tempobj.type2\n   if (err = 0) then  \n      select case objtype\n         case epcbgfxgeneratedplane\n            app.gui.display \"generated plane connected to \" +_\n               tempobj.net.name\n      \n         case epcbgfxboardoutline\n            app.gui.display \"board outline element \"\n      end select\n   end if\nnext\nend sub\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"修改器件",frontmatter:{title:"修改器件",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/component",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/17.Mentor%20VBS/07.%E4%BF%AE%E6%94%B9%E5%99%A8%E4%BB%B6.html",relativePath:"06.软件开发/17.Mentor VBS/07.修改器件.md",key:"v-b3ba68dc",path:"/soft/mentor/component/",headers:[{level:2,title:"器件方法",slug:"器件方法",normalizedTitle:"器件方法",charIndex:2},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:281},{level:3,title:"放置一个器件",slug:"放置一个器件",normalizedTitle:"放置一个器件",charIndex:36},{level:3,title:"交互式放置器件",slug:"交互式放置器件",normalizedTitle:"交互式放置器件",charIndex:118},{level:3,title:"改变器件的层面",slug:"改变器件的层面",normalizedTitle:"改变器件的层面",charIndex:6471},{level:3,title:"删除器件",slug:"删除器件",normalizedTitle:"删除器件",charIndex:9534}],headersStr:"器件方法 示例 放置一个器件 交互式放置器件 改变器件的层面 删除器件",content:"# 器件方法\n\n * 放置器件\n\nComponent.Place方法可以放置一个器件，通过参数例如，X, Y, rotation and side\n\n通常用于未被放置的器件，如果器件已放，则返回False或者重新按新参数放置。\n\n * 交互式放置器件\n\nepcbCompPlaceMethodOneAtATime\n\n * 移动已放置器件\n\nComponent.Move，参数X，Y\n\n * 旋转角度\n\nComponent.Orientation\n\n * 改变层\n\nComponent.Place\n\n * 取消放置器件\n\nComponent.Delete\n\n\n# 示例\n\n\n# 放置一个器件\n\nOption Explicit\n\n'\n' This function retrieves an automation license for a document\n'\n' Returns: \n'   - 'Nothing' if licensing failed . \n'   - A reference to the active document of the application if \n'     licensing succeeded. \n'\nPublic Function GetLicensedDoc(app)\n    On Error Resume next\n    Dim key,licenseServer,licenseToken,docObj\n\n    Set GetLicensedDoc = Nothing\n\n    ' collect the active document\n    Set docObj = app.ActiveDocument\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' Ask Expedition�s document for the key\n    key = docObj.Validate(0)\n\n    ' Get token from license server\n    Set licenseServer = CreateObject(\"MGCPCBAutomationLicensing.Application\")\n    licenseToken = licenseServer.GetToken(key)\n    Set licenseServer = Nothing\n\n    ' Ask the document to validate the license token\n    Err.Clear \n    docObj.Validate(licenseToken)\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document license: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' everything is OK, return document\n    Set GetLicensedDoc = docObj \nEnd Function\n\n\n'\n' The example below places a component with the supplied positional \n' parameters :\n'  Refdes   : The reference designator of the component to place\n'  X,Y      : The X and Y coordinates of the component.\n'  Angle    : The angle of the component.\n'  topSide  : Flag indicating if the component must be pushed to the bottom side.\n'\nSub Component_Place (Refdes,X,Y,Angle,topSide)\n\nDim docObj,resultMess\nDim compObj \n\n' collect document object\nSet docObj = GetLicensedDoc(app)\nIf (docObj Is Nothing) Then Exit Sub\n\n' Find the component in the components collection\nSet compObj = docObj.FindComponent(Refdes)\nIf (compObj Is Nothing) Then  \n  Call app.Gui.StatusBarText(\"Could not locate component : \" + RefDes _  \n                              ,epcbStatusFieldError)\n  Exit Sub\nEnd If\n\n' Place the component in the correct location\nCall compObj.Place( X,Y,Angle,topSide,epcbAnchorNone, _ \n                   epcbUnitCurrent,epcbAngleUnitDegrees)   \nIf (Err) Then \n  Call app.Gui.StatusBarText(\"An error occured while placing \" + Refdes +  _ \n                              vbNewLine + Err.Description,epcbStatusFieldError)\n  Exit Sub\nElse \n resultMess = \"Component '\" + Refdes + \"' was placed\"  \n\n ' select the collection and fit it on the board\n compObj.selected = True\n docObj.ActiveView.SetExtentsToSelection\n\n ' Update status bar\n Call app.Gui.StatusBarText(resultMess,epcbStatusField1)\n\nEnd if\n\nEnd Sub\n'\n' Testing code for the sample\n'\nDim app \nSet app = GetObject(,\"MGCPCB.Application\")\nCall Component_Place  (\"R1\",0.0,-700.0,120.0,True)\nCall Component_Place  (\"R1\",0.0,-700.0,90.0,False)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n\n\n\n# 交互式放置器件\n\nOption Explicit\n\n'\n' This function retrieves an automation license for a document\n'\n' Returns: \n'   - 'Nothing' if licensing failed . \n'   - A reference to the active document of the application if \n'     licensing succeeded. \n'\nPublic Function GetLicensedDoc(app)\n    On Error Resume next\n    Dim key,licenseServer,licenseToken,docObj\n\n    Set GetLicensedDoc = Nothing\n\n    ' collect the active document\n    Set docObj = app.ActiveDocument\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' Ask Expedition�s document for the key\n    key = docObj.Validate(0)\n\n    ' Get token from license server\n    Set licenseServer = CreateObject(\"MGCPCBAutomationLicensing.Application\")\n    licenseToken = licenseServer.GetToken(key)\n    Set licenseServer = Nothing\n\n    ' Ask the document to validate the license token\n    Err.Clear \n    docObj.Validate(licenseToken)\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document license: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' everything is OK, return document\n    Set GetLicensedDoc = docObj \nEnd Function\n\n\n'\n' The example below interactively places all components that match \n' regular expression 'RefdesExpr'\n' The components are attached one by one to the cursor for placement\n'   \n' parameters :\n'  RefdesExpr : A regular expression defining the components that \n'               must be placed interactively\n'\nSub Component_Place_Interactive (RefdesExpr)\n\nDim docObj,resultMess\nDim compColl \n\n' collect document object\nSet docObj = GetLicensedDoc(app)\nIf (docObj Is Nothing) Then Exit Sub\n\n' Find the component in the components collection\nSet compColl = docObj.Components(epcbSelectAll,epcbCompAll, _ \n                                epcbCelltypePackage,RefdesExpr)\nIf (compColl Is Nothing) Then  \n  Call app.Gui.StatusBarText(\"An error occured while collecting components: \" + vbNewLine + _\n                             Err.Description,epcbStatusFieldError)\n  Exit Sub\nEnd If\n\n\n' Unplace the components that were collected\ncompColl.Sort\nCall compColl.Place(epcbCompPlaceMethodOneAtATime)\n\nIf (Err) Then \n  Call app.Gui.StatusBarText(\"An error occured while placing \" + RefdesExpr +  _ \n                              vbNewLine + Err.Description,epcbStatusFieldError)\n  Exit Sub\nElse \n resultMess = \"Placing '\" + RefdesExpr + \"' ...\"  \n\n ' Update status bar\n Call app.Gui.StatusBarText(resultMess,epcbStatusField1)\n\nEnd if\n\nEnd Sub\n'\n' Testing code for the sample\n'\nDim app \nSet app = GetObject(,\"MGCPCB.Application\")\nCall Component_Place_Interactive(\"R1\")\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n\n\n\n# 改变器件的层面\n\nOption Explicit\n\n'\n' This function retrieves an automation license for a document\n'\n' Returns: \n'   - 'Nothing' if licensing failed . \n'   - A reference to the active document of the application if \n'     licensing succeeded. \n'\nPublic Function GetLicensedDoc(app)\n    On Error Resume next\n    Dim key,licenseServer,licenseToken,docObj\n\n    Set GetLicensedDoc = Nothing\n\n    ' collect the active document\n    Set docObj = app.ActiveDocument\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' Ask Expedition�s document for the key\n    key = docObj.Validate(0)\n\n    ' Get token from license server\n    Set licenseServer = CreateObject(\"MGCPCBAutomationLicensing.Application\")\n    licenseToken = licenseServer.GetToken(key)\n    Set licenseServer = Nothing\n\n    ' Ask the document to validate the license token\n    Err.Clear \n    docObj.Validate(licenseToken)\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document license: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' everything is OK, return document\n    Set GetLicensedDoc = docObj \nEnd Function\n\n\n'\n' The example below pushes a component to the opposite side \n' Refdes   : The component to push\n'\nSub Component_Push (Refdes)\n\nDim docObj,resultMess\nDim compObj,topFlag \n\n' collect document object\nSet docObj = GetLicensedDoc(app)\nIf (docObj Is Nothing) Then Exit Sub\n\n' Find the component in the components collection\nSet compObj = docObj.FindComponent(Refdes)\nIf (compObj Is Nothing) Then  \n  Call app.Gui.StatusBarText(\"Could not locate component : \" + RefDes _  \n                              ,epcbStatusFieldError)\n  Exit Sub\nEnd If\n\n'\n' To push the component we collect the previous \n' settings and flip the top/bottom flag\n'\nIf (compObj.Layer = 1) Then \n topFlag = False\nElse\n topFlag = True\nEnd if  \n\n\nCall compObj.Place( compObj.PositionX,compObj.PositionY, _ \n                   compObj.Orientation,topFlag,compObj.Anchor, _ \n                   epcbUnitCurrent,epcbAngleUnitDegrees)   \nIf (Err) Then \n  Call app.Gui.StatusBarText(\"An error occured while pushing \" + Refdes +  _ \n                              vbNewLine + Err.Description,epcbStatusFieldError)\n  Exit Sub\nElse \n resultMess = \"Component '\" + Refdes + \"' was pushed\"  \n\n ' select the collection and fit it on the board\n compObj.selected = True\n docObj.ActiveView.SetExtentsToSelection\n\n ' Update status bar\n Call app.Gui.StatusBarText(resultMess,epcbStatusField1)\n\nEnd if\n\nEnd Sub\n'\n' Testing code for the sample\n'\nDim app \nSet app = GetObject(,\"MGCPCB.Application\")\nCall Component_Push   (\"R1\")\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n\n\n\n# 删除器件\n\nOption Explicit\n\n'\n' This function retrieves an automation license for a document\n'\n' Returns: \n'   - 'Nothing' if licensing failed . \n'   - A reference to the active document of the application if \n'     licensing succeeded. \n'\nPublic Function GetLicensedDoc(app)\n    On Error Resume next\n    Dim key,licenseServer,licenseToken,docObj\n\n    Set GetLicensedDoc = Nothing\n\n    ' collect the active document\n    Set docObj = app.ActiveDocument\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' Ask Expedition�s document for the key\n    key = docObj.Validate(0)\n\n    ' Get token from license server\n    Set licenseServer = CreateObject(\"MGCPCBAutomationLicensing.Application\")\n    licenseToken = licenseServer.GetToken(key)\n    Set licenseServer = Nothing\n\n    ' Ask the document to validate the license token\n    Err.Clear \n    docObj.Validate(licenseToken)\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document license: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' everything is OK, return document\n    Set GetLicensedDoc = docObj \nEnd Function\n\n\n'\n' The example below unplaces all components that match the regular \n' expression 'RefdesExpr'  \n' parameters :\n'  RefdesExpr : A regular expression defining the components that \n'               must be unplaced\n'\nSub Component_Unplace (RefdesExpr)\n\nDim docObj,resultMess\nDim compColl\n\n' collect document object\nSet docObj = GetLicensedDoc(app)\nIf (docObj Is Nothing) Then Exit Sub\n\n' Find the component in the components collection\nSet compColl = docObj.Components(epcbSelectAll,epcbCompAll, _ \n                                epcbCelltypePackage,RefdesExpr)\nIf (compColl Is Nothing) Then  \n  Call app.Gui.StatusBarText(\"An error occured while collecting components: \" + vbNewLine + _\n                             Err.Description,epcbStatusFieldError)\n  Exit Sub\nEnd If\n\n' Unplace the components that were collected\nCall compColl.Delete\n\nIf (Err) Then \n  Call app.Gui.StatusBarText(\"An error occured while unplacing \" + RefdesExpr +  _ \n                              vbNewLine + Err.Description,epcbStatusFieldError)\n  Exit Sub\nElse \n resultMess = \"Component set '\" + RefdesExpr + \"' was removed\"  \n\n ' Update status bar\n Call app.Gui.StatusBarText(resultMess,epcbStatusField1)\n\nEnd if\n\nEnd Sub\n'\n' Testing code for the sample\n'\nDim app \nSet app = GetObject(,\"MGCPCB.Application\")\n Call Component_Unplace(\"R1\")\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n",normalizedContent:"# 器件方法\n\n * 放置器件\n\ncomponent.place方法可以放置一个器件，通过参数例如，x, y, rotation and side\n\n通常用于未被放置的器件，如果器件已放，则返回false或者重新按新参数放置。\n\n * 交互式放置器件\n\nepcbcompplacemethodoneatatime\n\n * 移动已放置器件\n\ncomponent.move，参数x，y\n\n * 旋转角度\n\ncomponent.orientation\n\n * 改变层\n\ncomponent.place\n\n * 取消放置器件\n\ncomponent.delete\n\n\n# 示例\n\n\n# 放置一个器件\n\noption explicit\n\n'\n' this function retrieves an automation license for a document\n'\n' returns: \n'   - 'nothing' if licensing failed . \n'   - a reference to the active document of the application if \n'     licensing succeeded. \n'\npublic function getlicenseddoc(app)\n    on error resume next\n    dim key,licenseserver,licensetoken,docobj\n\n    set getlicenseddoc = nothing\n\n    ' collect the active document\n    set docobj = app.activedocument\n    if (err) then  \n     call app.gui.statusbartext(\"no active document: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' ask expedition�s document for the key\n    key = docobj.validate(0)\n\n    ' get token from license server\n    set licenseserver = createobject(\"mgcpcbautomationlicensing.application\")\n    licensetoken = licenseserver.gettoken(key)\n    set licenseserver = nothing\n\n    ' ask the document to validate the license token\n    err.clear \n    docobj.validate(licensetoken)\n    if (err) then  \n     call app.gui.statusbartext(\"no active document license: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' everything is ok, return document\n    set getlicenseddoc = docobj \nend function\n\n\n'\n' the example below places a component with the supplied positional \n' parameters :\n'  refdes   : the reference designator of the component to place\n'  x,y      : the x and y coordinates of the component.\n'  angle    : the angle of the component.\n'  topside  : flag indicating if the component must be pushed to the bottom side.\n'\nsub component_place (refdes,x,y,angle,topside)\n\ndim docobj,resultmess\ndim compobj \n\n' collect document object\nset docobj = getlicenseddoc(app)\nif (docobj is nothing) then exit sub\n\n' find the component in the components collection\nset compobj = docobj.findcomponent(refdes)\nif (compobj is nothing) then  \n  call app.gui.statusbartext(\"could not locate component : \" + refdes _  \n                              ,epcbstatusfielderror)\n  exit sub\nend if\n\n' place the component in the correct location\ncall compobj.place( x,y,angle,topside,epcbanchornone, _ \n                   epcbunitcurrent,epcbangleunitdegrees)   \nif (err) then \n  call app.gui.statusbartext(\"an error occured while placing \" + refdes +  _ \n                              vbnewline + err.description,epcbstatusfielderror)\n  exit sub\nelse \n resultmess = \"component '\" + refdes + \"' was placed\"  \n\n ' select the collection and fit it on the board\n compobj.selected = true\n docobj.activeview.setextentstoselection\n\n ' update status bar\n call app.gui.statusbartext(resultmess,epcbstatusfield1)\n\nend if\n\nend sub\n'\n' testing code for the sample\n'\ndim app \nset app = getobject(,\"mgcpcb.application\")\ncall component_place  (\"r1\",0.0,-700.0,120.0,true)\ncall component_place  (\"r1\",0.0,-700.0,90.0,false)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n\n\n\n# 交互式放置器件\n\noption explicit\n\n'\n' this function retrieves an automation license for a document\n'\n' returns: \n'   - 'nothing' if licensing failed . \n'   - a reference to the active document of the application if \n'     licensing succeeded. \n'\npublic function getlicenseddoc(app)\n    on error resume next\n    dim key,licenseserver,licensetoken,docobj\n\n    set getlicenseddoc = nothing\n\n    ' collect the active document\n    set docobj = app.activedocument\n    if (err) then  \n     call app.gui.statusbartext(\"no active document: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' ask expedition�s document for the key\n    key = docobj.validate(0)\n\n    ' get token from license server\n    set licenseserver = createobject(\"mgcpcbautomationlicensing.application\")\n    licensetoken = licenseserver.gettoken(key)\n    set licenseserver = nothing\n\n    ' ask the document to validate the license token\n    err.clear \n    docobj.validate(licensetoken)\n    if (err) then  \n     call app.gui.statusbartext(\"no active document license: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' everything is ok, return document\n    set getlicenseddoc = docobj \nend function\n\n\n'\n' the example below interactively places all components that match \n' regular expression 'refdesexpr'\n' the components are attached one by one to the cursor for placement\n'   \n' parameters :\n'  refdesexpr : a regular expression defining the components that \n'               must be placed interactively\n'\nsub component_place_interactive (refdesexpr)\n\ndim docobj,resultmess\ndim compcoll \n\n' collect document object\nset docobj = getlicenseddoc(app)\nif (docobj is nothing) then exit sub\n\n' find the component in the components collection\nset compcoll = docobj.components(epcbselectall,epcbcompall, _ \n                                epcbcelltypepackage,refdesexpr)\nif (compcoll is nothing) then  \n  call app.gui.statusbartext(\"an error occured while collecting components: \" + vbnewline + _\n                             err.description,epcbstatusfielderror)\n  exit sub\nend if\n\n\n' unplace the components that were collected\ncompcoll.sort\ncall compcoll.place(epcbcompplacemethodoneatatime)\n\nif (err) then \n  call app.gui.statusbartext(\"an error occured while placing \" + refdesexpr +  _ \n                              vbnewline + err.description,epcbstatusfielderror)\n  exit sub\nelse \n resultmess = \"placing '\" + refdesexpr + \"' ...\"  \n\n ' update status bar\n call app.gui.statusbartext(resultmess,epcbstatusfield1)\n\nend if\n\nend sub\n'\n' testing code for the sample\n'\ndim app \nset app = getobject(,\"mgcpcb.application\")\ncall component_place_interactive(\"r1\")\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n\n\n\n# 改变器件的层面\n\noption explicit\n\n'\n' this function retrieves an automation license for a document\n'\n' returns: \n'   - 'nothing' if licensing failed . \n'   - a reference to the active document of the application if \n'     licensing succeeded. \n'\npublic function getlicenseddoc(app)\n    on error resume next\n    dim key,licenseserver,licensetoken,docobj\n\n    set getlicenseddoc = nothing\n\n    ' collect the active document\n    set docobj = app.activedocument\n    if (err) then  \n     call app.gui.statusbartext(\"no active document: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' ask expedition�s document for the key\n    key = docobj.validate(0)\n\n    ' get token from license server\n    set licenseserver = createobject(\"mgcpcbautomationlicensing.application\")\n    licensetoken = licenseserver.gettoken(key)\n    set licenseserver = nothing\n\n    ' ask the document to validate the license token\n    err.clear \n    docobj.validate(licensetoken)\n    if (err) then  \n     call app.gui.statusbartext(\"no active document license: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' everything is ok, return document\n    set getlicenseddoc = docobj \nend function\n\n\n'\n' the example below pushes a component to the opposite side \n' refdes   : the component to push\n'\nsub component_push (refdes)\n\ndim docobj,resultmess\ndim compobj,topflag \n\n' collect document object\nset docobj = getlicenseddoc(app)\nif (docobj is nothing) then exit sub\n\n' find the component in the components collection\nset compobj = docobj.findcomponent(refdes)\nif (compobj is nothing) then  \n  call app.gui.statusbartext(\"could not locate component : \" + refdes _  \n                              ,epcbstatusfielderror)\n  exit sub\nend if\n\n'\n' to push the component we collect the previous \n' settings and flip the top/bottom flag\n'\nif (compobj.layer = 1) then \n topflag = false\nelse\n topflag = true\nend if  \n\n\ncall compobj.place( compobj.positionx,compobj.positiony, _ \n                   compobj.orientation,topflag,compobj.anchor, _ \n                   epcbunitcurrent,epcbangleunitdegrees)   \nif (err) then \n  call app.gui.statusbartext(\"an error occured while pushing \" + refdes +  _ \n                              vbnewline + err.description,epcbstatusfielderror)\n  exit sub\nelse \n resultmess = \"component '\" + refdes + \"' was pushed\"  \n\n ' select the collection and fit it on the board\n compobj.selected = true\n docobj.activeview.setextentstoselection\n\n ' update status bar\n call app.gui.statusbartext(resultmess,epcbstatusfield1)\n\nend if\n\nend sub\n'\n' testing code for the sample\n'\ndim app \nset app = getobject(,\"mgcpcb.application\")\ncall component_push   (\"r1\")\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n\n\n\n# 删除器件\n\noption explicit\n\n'\n' this function retrieves an automation license for a document\n'\n' returns: \n'   - 'nothing' if licensing failed . \n'   - a reference to the active document of the application if \n'     licensing succeeded. \n'\npublic function getlicenseddoc(app)\n    on error resume next\n    dim key,licenseserver,licensetoken,docobj\n\n    set getlicenseddoc = nothing\n\n    ' collect the active document\n    set docobj = app.activedocument\n    if (err) then  \n     call app.gui.statusbartext(\"no active document: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' ask expedition�s document for the key\n    key = docobj.validate(0)\n\n    ' get token from license server\n    set licenseserver = createobject(\"mgcpcbautomationlicensing.application\")\n    licensetoken = licenseserver.gettoken(key)\n    set licenseserver = nothing\n\n    ' ask the document to validate the license token\n    err.clear \n    docobj.validate(licensetoken)\n    if (err) then  \n     call app.gui.statusbartext(\"no active document license: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' everything is ok, return document\n    set getlicenseddoc = docobj \nend function\n\n\n'\n' the example below unplaces all components that match the regular \n' expression 'refdesexpr'  \n' parameters :\n'  refdesexpr : a regular expression defining the components that \n'               must be unplaced\n'\nsub component_unplace (refdesexpr)\n\ndim docobj,resultmess\ndim compcoll\n\n' collect document object\nset docobj = getlicenseddoc(app)\nif (docobj is nothing) then exit sub\n\n' find the component in the components collection\nset compcoll = docobj.components(epcbselectall,epcbcompall, _ \n                                epcbcelltypepackage,refdesexpr)\nif (compcoll is nothing) then  \n  call app.gui.statusbartext(\"an error occured while collecting components: \" + vbnewline + _\n                             err.description,epcbstatusfielderror)\n  exit sub\nend if\n\n' unplace the components that were collected\ncall compcoll.delete\n\nif (err) then \n  call app.gui.statusbartext(\"an error occured while unplacing \" + refdesexpr +  _ \n                              vbnewline + err.description,epcbstatusfielderror)\n  exit sub\nelse \n resultmess = \"component set '\" + refdesexpr + \"' was removed\"  \n\n ' update status bar\n call app.gui.statusbartext(resultmess,epcbstatusfield1)\n\nend if\n\nend sub\n'\n' testing code for the sample\n'\ndim app \nset app = getobject(,\"mgcpcb.application\")\n call component_unplace(\"r1\")\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"Contour",frontmatter:{title:"Contour",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/contour",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/17.Mentor%20VBS/09.Contour.html",relativePath:"06.软件开发/17.Mentor VBS/09.Contour.md",key:"v-287c7bfa",path:"/soft/mentor/contour/",headers:[{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:2}],headersStr:"示例",content:"# 示例\n\nOption Explicit\n\n'\n' This function retrieves an automation license for a document\n'\n' Returns: \n'   - 'Nothing' if licensing failed . \n'   - A reference to the active document of the application if \n'     licensing succeeded. \n'\nPublic Function GetLicensedDoc(app)\n    On Error Resume next\n    Dim key,licenseServer,licenseToken,docObj\n\n    Set GetLicensedDoc = Nothing\n\n    ' collect the active document\n    Set docObj = app.ActiveDocument\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' Ask Expedition�s document for the key\n    key = docObj.Validate(0)\n\n    ' Get token from license server\n    Set licenseServer = CreateObject(\"MGCPCBAutomationLicensing.Application\")\n    licenseToken = licenseServer.GetToken(key)\n    Set licenseServer = Nothing\n\n    ' Ask the document to validate the license token\n    Err.Clear \n    docObj.Validate(licenseToken)\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document license: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' everything is OK, return document\n    Set GetLicensedDoc = docObj \nEnd Function\n\n\n'\n' The example below collects all plane and trace obstructs on layer 1 \n' and selects them\n' \nSub Document_Obstructs()\n\nDim docObj,resultMess,obsColl\n\n' collect document object\nSet docObj = GetLicensedDoc(app)\nIf (docObj Is Nothing) Then Exit Sub\n\n' Collect the trace and plane obstructs for layer one\nSet obsColl = docObj.Obstructs(epcbObstructPlane Or epcbObstructTrace,epcbSelectAll,1)   \n\nIf (Err) Then \n  Call app.Gui.StatusBarText(\"An error occured while collecting obstructs: \" + _ \n                              vbNewLine + Err.Description,epcbStatusFieldError)\n  Exit Sub\nElse \n resultMess = \"There are \" + CStr(obsColl.Count) + \" trace and plane obstructs on layer 1\"\n\n ' select the collection and fit it on the board\n obsColl.selected = True\n docObj.ActiveView.SetExtentsToSelection\n\n ' Update status bar\n Call app.Gui.StatusBarText(resultMess,epcbStatusField1)\n\nEnd if\n\nEnd Sub\n'\n' Testing code for the sample\n'\nDim app \nSet app = GetObject(,\"MGCPCB.Application\")\nCall Document_Obstructs\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n",normalizedContent:"# 示例\n\noption explicit\n\n'\n' this function retrieves an automation license for a document\n'\n' returns: \n'   - 'nothing' if licensing failed . \n'   - a reference to the active document of the application if \n'     licensing succeeded. \n'\npublic function getlicenseddoc(app)\n    on error resume next\n    dim key,licenseserver,licensetoken,docobj\n\n    set getlicenseddoc = nothing\n\n    ' collect the active document\n    set docobj = app.activedocument\n    if (err) then  \n     call app.gui.statusbartext(\"no active document: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' ask expedition�s document for the key\n    key = docobj.validate(0)\n\n    ' get token from license server\n    set licenseserver = createobject(\"mgcpcbautomationlicensing.application\")\n    licensetoken = licenseserver.gettoken(key)\n    set licenseserver = nothing\n\n    ' ask the document to validate the license token\n    err.clear \n    docobj.validate(licensetoken)\n    if (err) then  \n     call app.gui.statusbartext(\"no active document license: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' everything is ok, return document\n    set getlicenseddoc = docobj \nend function\n\n\n'\n' the example below collects all plane and trace obstructs on layer 1 \n' and selects them\n' \nsub document_obstructs()\n\ndim docobj,resultmess,obscoll\n\n' collect document object\nset docobj = getlicenseddoc(app)\nif (docobj is nothing) then exit sub\n\n' collect the trace and plane obstructs for layer one\nset obscoll = docobj.obstructs(epcbobstructplane or epcbobstructtrace,epcbselectall,1)   \n\nif (err) then \n  call app.gui.statusbartext(\"an error occured while collecting obstructs: \" + _ \n                              vbnewline + err.description,epcbstatusfielderror)\n  exit sub\nelse \n resultmess = \"there are \" + cstr(obscoll.count) + \" trace and plane obstructs on layer 1\"\n\n ' select the collection and fit it on the board\n obscoll.selected = true\n docobj.activeview.setextentstoselection\n\n ' update status bar\n call app.gui.statusbartext(resultmess,epcbstatusfield1)\n\nend if\n\nend sub\n'\n' testing code for the sample\n'\ndim app \nset app = getobject(,\"mgcpcb.application\")\ncall document_obstructs\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 18:22:51",lastUpdatedTimestamp:1687947771e3},{title:"点",frontmatter:{title:"点",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/point",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/17.Mentor%20VBS/08.%E7%82%B9.html",relativePath:"06.软件开发/17.Mentor VBS/08.点.md",key:"v-bb9cfae8",path:"/soft/mentor/point/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:207}],headersStr:"说明 示例",content:"# 说明\n\n所有的图形由点组成，点由X，Y和R组成。\n\n * 直线-有X，Y和R组成，R为0；\n\n * 弧线-有X，Y，和R，R为半径，第一点为弧线起始点，R为0，第二点为弧线圆心，R为弧线半径，第三点为弧线终点，R为0\n\n * 圆-由3个点组成，类似于弧线，起点和终点相同，可用方法Utility.CreateCircleXYR\n\n * 矩形-Utility.CreateRectXYR\n   \n   \n\n\n# 示例\n\nOption Explicit\n\n'\n' This function retrieves an automation license for a document\n'\n' Returns: \n'   - 'Nothing' if licensing failed . \n'   - A reference to the active document of the application if \n'     licensing succeeded. \n'\nPublic Function GetLicensedDoc(app)\n    On Error Resume next\n    Dim key,licenseServer,licenseToken,docObj\n\n    Set GetLicensedDoc = Nothing\n\n    ' collect the active document\n    Set docObj = app.ActiveDocument\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' Ask Expedition�s document for the key\n    key = docObj.Validate(0)\n\n    ' Get token from license server\n    Set licenseServer = CreateObject(\"MGCPCBAutomationLicensing.Application\")\n    licenseToken = licenseServer.GetToken(key)\n    Set licenseServer = Nothing\n\n    ' Ask the document to validate the license token\n    Err.Clear \n    docObj.Validate(licenseToken)\n    If (Err) Then  \n     Call app.Gui.StatusBarText(\"No active document license: \" + _\n                                 Err.Description,epcbStatusFieldError)\n     Exit Function\n    End If\n\n    ' everything is OK, return document\n    Set GetLicensedDoc = docObj \nEnd Function\n\n\n' \n' The example below shows how to define the points array for the \n' the element shown in the drawing. It is placed in the design as a \n' Assembly layer top element\n'  \n' \nSub Document_PutFabricationLayerGfx  ()\n\nDim docObj,resultMess\nDim pntsArr(),numPoints\nDim fabGfxObj\n\n' collect document object\nSet docObj = GetLicensedDoc(app)\nIf (docObj Is Nothing) Then Exit Sub\n\n' fill the array with points\nReDim pntsArr(2,8)\nnumPoints = 9\npntsArr(0,0) = 0.0   :pntsArr(1,0) = 0.0   :pntsArr(2,0) =    0.0\npntsArr(0,1) = 200.0 :pntsArr(1,1) = 0.0   :pntsArr(2,1) =    0.0\npntsArr(0,2) = 200.0 :pntsArr(1,2) = 100.0 :pntsArr(2,2) =    0.0\npntsArr(0,3) = 400.0 :pntsArr(1,3) = 100.0 :pntsArr(2,3) =  200.0\npntsArr(0,4) = 400.0 :pntsArr(1,4) = 300.0 :pntsArr(2,4) =    0.0\npntsArr(0,5) = 500.0 :pntsArr(1,5) = 300.0 :pntsArr(2,5) =    0.0\npntsArr(0,6) = 500.0 :pntsArr(1,6) = 500.0 :pntsArr(2,6) = -200.0\npntsArr(0,7) = 700.0 :pntsArr(1,7) = 500.0 :pntsArr(2,7) =    0.0\npntsArr(0,8) = 700.0 :pntsArr(1,8) = 700.0 :pntsArr(2,8) =    0.0\n\nset fabGfxObj = docObj.PutFabricationLayerGfx( epcbFabAssembly, _ \n                              epcbSideTop,4.0,numPoints,pntsArr, _ \n                              False,Nothing,epcbUnitCurrent) \n\nIf (Err) Then \n  Call app.Gui.StatusBarText(\"An error occured while creating the the object: \" + _ \n                              vbNewLine + Err.Description,epcbStatusFieldError)\n  Exit Sub\nElse \n resultMess = \"Fabrication layer element was created\"\n\n ' select the object and fit it on the board\n fabGfxObj.selected = True\n docObj.ActiveView.SetExtentsToSelection\n\n ' Update status bar\n Call app.Gui.StatusBarText(resultMess,epcbStatusField1)\n\nEnd if\n\nEnd Sub\n'\n' Testing code for the sample\n'\nDim app \nSet app = GetObject(,\"MGCPCB.Application\")\nCall Document_PutFabricationLayerGfx\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n",normalizedContent:"# 说明\n\n所有的图形由点组成，点由x，y和r组成。\n\n * 直线-有x，y和r组成，r为0；\n\n * 弧线-有x，y，和r，r为半径，第一点为弧线起始点，r为0，第二点为弧线圆心，r为弧线半径，第三点为弧线终点，r为0\n\n * 圆-由3个点组成，类似于弧线，起点和终点相同，可用方法utility.createcirclexyr\n\n * 矩形-utility.createrectxyr\n   \n   \n\n\n# 示例\n\noption explicit\n\n'\n' this function retrieves an automation license for a document\n'\n' returns: \n'   - 'nothing' if licensing failed . \n'   - a reference to the active document of the application if \n'     licensing succeeded. \n'\npublic function getlicenseddoc(app)\n    on error resume next\n    dim key,licenseserver,licensetoken,docobj\n\n    set getlicenseddoc = nothing\n\n    ' collect the active document\n    set docobj = app.activedocument\n    if (err) then  \n     call app.gui.statusbartext(\"no active document: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' ask expedition�s document for the key\n    key = docobj.validate(0)\n\n    ' get token from license server\n    set licenseserver = createobject(\"mgcpcbautomationlicensing.application\")\n    licensetoken = licenseserver.gettoken(key)\n    set licenseserver = nothing\n\n    ' ask the document to validate the license token\n    err.clear \n    docobj.validate(licensetoken)\n    if (err) then  \n     call app.gui.statusbartext(\"no active document license: \" + _\n                                 err.description,epcbstatusfielderror)\n     exit function\n    end if\n\n    ' everything is ok, return document\n    set getlicenseddoc = docobj \nend function\n\n\n' \n' the example below shows how to define the points array for the \n' the element shown in the drawing. it is placed in the design as a \n' assembly layer top element\n'  \n' \nsub document_putfabricationlayergfx  ()\n\ndim docobj,resultmess\ndim pntsarr(),numpoints\ndim fabgfxobj\n\n' collect document object\nset docobj = getlicenseddoc(app)\nif (docobj is nothing) then exit sub\n\n' fill the array with points\nredim pntsarr(2,8)\nnumpoints = 9\npntsarr(0,0) = 0.0   :pntsarr(1,0) = 0.0   :pntsarr(2,0) =    0.0\npntsarr(0,1) = 200.0 :pntsarr(1,1) = 0.0   :pntsarr(2,1) =    0.0\npntsarr(0,2) = 200.0 :pntsarr(1,2) = 100.0 :pntsarr(2,2) =    0.0\npntsarr(0,3) = 400.0 :pntsarr(1,3) = 100.0 :pntsarr(2,3) =  200.0\npntsarr(0,4) = 400.0 :pntsarr(1,4) = 300.0 :pntsarr(2,4) =    0.0\npntsarr(0,5) = 500.0 :pntsarr(1,5) = 300.0 :pntsarr(2,5) =    0.0\npntsarr(0,6) = 500.0 :pntsarr(1,6) = 500.0 :pntsarr(2,6) = -200.0\npntsarr(0,7) = 700.0 :pntsarr(1,7) = 500.0 :pntsarr(2,7) =    0.0\npntsarr(0,8) = 700.0 :pntsarr(1,8) = 700.0 :pntsarr(2,8) =    0.0\n\nset fabgfxobj = docobj.putfabricationlayergfx( epcbfabassembly, _ \n                              epcbsidetop,4.0,numpoints,pntsarr, _ \n                              false,nothing,epcbunitcurrent) \n\nif (err) then \n  call app.gui.statusbartext(\"an error occured while creating the the object: \" + _ \n                              vbnewline + err.description,epcbstatusfielderror)\n  exit sub\nelse \n resultmess = \"fabrication layer element was created\"\n\n ' select the object and fit it on the board\n fabgfxobj.selected = true\n docobj.activeview.setextentstoselection\n\n ' update status bar\n call app.gui.statusbartext(resultmess,epcbstatusfield1)\n\nend if\n\nend sub\n'\n' testing code for the sample\n'\ndim app \nset app = getobject(,\"mgcpcb.application\")\ncall document_putfabricationlayergfx\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"ObjectArx版本01",frontmatter:{title:"ObjectArx版本01",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/version",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/19.ObjectArx%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/01.ObjectArx%E7%89%88%E6%9C%AC01.html",relativePath:"06.软件开发/19.ObjectArx二次开发/01.ObjectArx版本01.md",key:"v-340e7f47",path:"/soft/objectarx/version/",headersStr:null,content:"[最新的api下载地址 ： https://www.autodesk.com/developer-network/platform-technologies/autocad/objectarx-download\n\n",normalizedContent:"[最新的api下载地址 ： https://www.autodesk.com/developer-network/platform-technologies/autocad/objectarx-download\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"ObjectArx软件配置02",frontmatter:{title:"ObjectArx软件配置02",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/config",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/19.ObjectArx%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/02.ObjectArx%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE02.html",relativePath:"06.软件开发/19.ObjectArx二次开发/02.ObjectArx软件配置02.md",key:"v-58ee8145",path:"/soft/objectarx/config/",headers:[{level:2,title:"软件选择",slug:"软件选择",normalizedTitle:"软件选择",charIndex:2},{level:2,title:"SDK包",slug:"sdk包",normalizedTitle:"sdk包",charIndex:113}],headersStr:"软件选择 SDK包",content:"# 软件选择\n\n根据之前版本对应，选择了 VS2022和 AutoCAD2021，电脑上已经安装的，正好适用\n\nobjectarx_for_autocad_2021_win_64bit_dlm.sfx.exe，AutoCAD的SDK包，解压到对应路径\n\nobjectarxwizard2024，VS创建ObjectArx工程的插件，安装并选择之前解压的SDK路径\n\n\n# SDK包\n\n * classmap：object的类图（dwg格式）\n * docs：开发文本指南\n * inc：头文件\n * inc-x64：面向64位PC开发的头文件\n * lib-x64：面向64位PC开发的库函数\n * samples：样例\n * utils：专用程序（影像、三维实体等）",normalizedContent:"# 软件选择\n\n根据之前版本对应，选择了 vs2022和 autocad2021，电脑上已经安装的，正好适用\n\nobjectarx_for_autocad_2021_win_64bit_dlm.sfx.exe，autocad的sdk包，解压到对应路径\n\nobjectarxwizard2024，vs创建objectarx工程的插件，安装并选择之前解压的sdk路径\n\n\n# sdk包\n\n * classmap：object的类图（dwg格式）\n * docs：开发文本指南\n * inc：头文件\n * inc-x64：面向64位pc开发的头文件\n * lib-x64：面向64位pc开发的库函数\n * samples：样例\n * utils：专用程序（影像、三维实体等）",charsets:{cjk:!0},lastUpdated:"2023/10/30, 19:09:46",lastUpdatedTimestamp:1698664186e3},{title:"ObjectArx术语04",frontmatter:{title:"ObjectArx术语04",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/term",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/19.ObjectArx%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/04.ObjectArx%E6%9C%AF%E8%AF%AD04.html",relativePath:"06.软件开发/19.ObjectArx二次开发/04.ObjectArx术语04.md",key:"v-2ce9e498",path:"/soft/objectarx/term/",headers:[{level:2,title:"数据库",slug:"数据库",normalizedTitle:"数据库",charIndex:2}],headersStr:"数据库",content:"# 数据库\n\nCAD本质是一个数据库\n\n\n\n简单理解：\n\n创建，CAD中的线或矩形是实体，打开CAD，获取块表和块表记录，创建一个实体，添加进块表记录，上传实体到数据库，在当前模型空间中显示",normalizedContent:"# 数据库\n\ncad本质是一个数据库\n\n\n\n简单理解：\n\n创建，cad中的线或矩形是实体，打开cad，获取块表和块表记录，创建一个实体，添加进块表记录，上传实体到数据库，在当前模型空间中显示",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"ObjectArx体验03",frontmatter:{title:"ObjectArx体验03",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/hello",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/19.ObjectArx%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/03.ObjectArx%E4%BD%93%E9%AA%8C03.html",relativePath:"06.软件开发/19.ObjectArx二次开发/03.ObjectArx体验03.md",key:"v-75189a88",path:"/soft/objectarx/hello/",headers:[{level:2,title:"新建工程",slug:"新建工程",normalizedTitle:"新建工程",charIndex:2},{level:2,title:"添加命令",slug:"添加命令",normalizedTitle:"添加命令",charIndex:27},{level:3,title:"在acrxEntryPoint.cpp中修改宏注册命令",slug:"在acrxentrypoint-cpp中修改宏注册命令",normalizedTitle:"在acrxentrypoint.cpp中修改宏注册命令",charIndex:36},{level:3,title:"编辑函数主体",slug:"编辑函数主体",normalizedTitle:"编辑函数主体",charIndex:1241},{level:3,title:"生成arx",slug:"生成arx",normalizedTitle:"生成arx",charIndex:1381},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:1408}],headersStr:"新建工程 添加命令 在acrxEntryPoint.cpp中修改宏注册命令 编辑函数主体 生成arx 测试",content:'# 新建工程\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 添加命令\n\n\n# 在acrxEntryPoint.cpp中修改宏注册命令\n\nACED_ARXCOMMAND_ENTRY_AUTO(CHelloApp, CwMyGroup, MyCommand, hello, ACRX_CMD_MODAL, NULL)\n\n\n1\n\n\n###################################################################\nACED_ARXCOMMAND_ENTRY_AUTO(CHelloApp,   \t\t// 项目名\n                            MyGroup,        \t// 组名\n                            MyCommand,          // 全局命令名\n                            MyCommandLocal,     // 本地命令名\n                            ACRX_CMD_MODAL,     // 命令参数\n                            NULL)               // 调用函数，为空时即为根据名字匹配的void MyGrouphello()\n    \n###################################################################\n命令参数\t\t\t\t\t  解释\nACRX_CMD_MODAL\t\t\t\t其他命令执行期间该命令不可执行\nACRX_CMD_TRANSPARENT\t\t其他命令执行期间该命令可执行，但ads_sssetfirst()不可使用\nACRX_CMD_USEPICKSET\t\t\t命令可以得到、设置pickfirst集，但命令结束后就销毁\nACRX_CMD_REDRAW\t\t\t\t和ACRX_CMD_USEPICKSET标志位一样，实体会重新绘制\nACRX_CMD_NOPERSPECTIVE\t\t命令不能使用在当前视口为正交模式时\nACRX_CMD_SESSION\t\t\t多文档命令，使用该命令时必须锁定文档，因其操作非当前文档，否则块表打不开\nACRX_CMD_NOTILEMODE\t\t\t命令不能使用在模型空间中\nACRX_CMD_NOPAPERSPACE\t\t命令不能使用在图纸空间中\nACRX_CMD_UNDEFINED\t\t\t命令调用必须加命令组名\nACRX_CMD_DEFUN\t\t\t\t命令使用在lisp中\nACRX_CMD_NOHISTORY\t\t\t命令不会保存在最近使用命令列表中\nACRX_CMD_NO_UNDO_MARKER\t\t命令不设置undo标志\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 编辑函数主体\n\nstatic void CwMyGroupMyCommand () {\n\t// Put your command code here\n\tacutPrintf(TEXT("Hello AutoCAD ObjectArx~~"));\n}\n\n\n1\n2\n3\n4\n\n\n\n# 生成arx\n\n右键工程生成Hello.arx\n\n\n# 测试\n\n打开AutoCAD软件，输入命令appload，选择刚才生成的arx文件\n\n输入命令hello就可以看到结果\n\n',normalizedContent:'# 新建工程\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 添加命令\n\n\n# 在acrxentrypoint.cpp中修改宏注册命令\n\naced_arxcommand_entry_auto(chelloapp, cwmygroup, mycommand, hello, acrx_cmd_modal, null)\n\n\n1\n\n\n###################################################################\naced_arxcommand_entry_auto(chelloapp,   \t\t// 项目名\n                            mygroup,        \t// 组名\n                            mycommand,          // 全局命令名\n                            mycommandlocal,     // 本地命令名\n                            acrx_cmd_modal,     // 命令参数\n                            null)               // 调用函数，为空时即为根据名字匹配的void mygrouphello()\n    \n###################################################################\n命令参数\t\t\t\t\t  解释\nacrx_cmd_modal\t\t\t\t其他命令执行期间该命令不可执行\nacrx_cmd_transparent\t\t其他命令执行期间该命令可执行，但ads_sssetfirst()不可使用\nacrx_cmd_usepickset\t\t\t命令可以得到、设置pickfirst集，但命令结束后就销毁\nacrx_cmd_redraw\t\t\t\t和acrx_cmd_usepickset标志位一样，实体会重新绘制\nacrx_cmd_noperspective\t\t命令不能使用在当前视口为正交模式时\nacrx_cmd_session\t\t\t多文档命令，使用该命令时必须锁定文档，因其操作非当前文档，否则块表打不开\nacrx_cmd_notilemode\t\t\t命令不能使用在模型空间中\nacrx_cmd_nopaperspace\t\t命令不能使用在图纸空间中\nacrx_cmd_undefined\t\t\t命令调用必须加命令组名\nacrx_cmd_defun\t\t\t\t命令使用在lisp中\nacrx_cmd_nohistory\t\t\t命令不会保存在最近使用命令列表中\nacrx_cmd_no_undo_marker\t\t命令不设置undo标志\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 编辑函数主体\n\nstatic void cwmygroupmycommand () {\n\t// put your command code here\n\tacutprintf(text("hello autocad objectarx~~"));\n}\n\n\n1\n2\n3\n4\n\n\n\n# 生成arx\n\n右键工程生成hello.arx\n\n\n# 测试\n\n打开autocad软件，输入命令appload，选择刚才生成的arx文件\n\n输入命令hello就可以看到结果\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"ObjectArx数据库操作05",frontmatter:{title:"ObjectArx数据库操作05",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/database",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/19.ObjectArx%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/05.ObjectArx%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C05.html",relativePath:"06.软件开发/19.ObjectArx二次开发/05.ObjectArx数据库操作05.md",key:"v-2d433717",path:"/soft/objectarx/database/",headers:[{level:2,title:"操作类型",slug:"操作类型",normalizedTitle:"操作类型",charIndex:2},{level:3,title:"数据库读写",slug:"数据库读写",normalizedTitle:"数据库读写",charIndex:11},{level:2,title:"命令添加",slug:"命令添加",normalizedTitle:"命令添加",charIndex:1786}],headersStr:"操作类型 数据库读写 命令添加",content:'# 操作类型\n\n\n# 数据库读写\n\n新建类CwDatabase\n\nCwDatabase.h\n\n#pragma once\nclass CwDatabase\n{\npublic:\n\t/// <summary>\n\t/// 向模型空间添加实体\n\t/// </summary>\n\t/// <param name="pEnt"></param>\n\t/// <param name="pDb"></param>\n\t/// <returns></returns>\n\tstatic AcDbObjectId PostToModelSpace(AcDbEntity* pEnt, AcDbDatabase* pDb = acdbHostApplicationServices()->workingDatabase());\n\t/// <summary>\n    /// 获取指定层的所有实体\n    /// </summary>\n    /// <param name="layer"></param>\n    /// <param name="pDb"></param>\n    /// <returns></returns>\n\tstatic AcDbObjectIdArray GetAllEntIds(const ACHAR* layer = NULL, AcDbDatabase* pDb = acdbHostApplicationServices()->workingDatabase());\n};\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\nDatabase.cpp\n\nAcDbObjectId CwDatabase::PostToModelSpace(AcDbEntity* pEnt, AcDbDatabase* pDb)\n{\n    AcDbBlockTable* pBlkTbl = NULL;\n    Acad::ErrorStatus es;\n    es = pDb->getBlockTable(pBlkTbl, AcDb::kForRead);\n    if (es != Acad::eOk)\n    {\n        acutPrintf(TEXT("\\n块表打开失败，错误代码:%s"), acadErrorStatusText(es));\n        return AcDbObjectId::kNull;\n    }\n    AcDbBlockTableRecord* pBlkTblRcd = NULL;\n    es = pBlkTbl->getAt(ACDB_MODEL_SPACE, pBlkTblRcd, AcDb::kForWrite);\n    if (es != Acad::eOk)\n    {\n        acutPrintf(TEXT("\\n模块空间块表记录打开失败，错误代码:%s"), acadErrorStatusText(es));\n        pBlkTbl->close();\n        return AcDbObjectId::kNull;\n    }\n\n    pBlkTbl->close();\n    AcDbObjectId outId;\n    es = pBlkTblRcd->appendAcDbEntity(outId, pEnt);\n    if (es != Acad::eOk)\n    {\n        acutPrintf(TEXT("\\n无法添加实体到模块空间，错误代码:%s"), acadErrorStatusText(es));\n        pBlkTblRcd->close();\n        return AcDbObjectId::kNull;\n    }\n    pEnt->close();\n    pBlkTblRcd->close();\n    return outId;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# 命令添加\n\n/// <summary>\n/// 添加命令\n/// </summary>\n/// <param name="cmdName"></param>\n/// <param name="cmdFlags"></param>\n/// <param name="functionPtr"></param>\nstatic void AddCommand(const ACHAR* cmdName, Adesk::Int32 cmdFlags, AcRxFunctionPtr functionPtr);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nvoid CwDatabase::AddCommand(const ACHAR* cmdName, Adesk::Int32 cmdFlags, AcRxFunctionPtr functionPtr)\n{\n    acedRegCmds->addCommand(TEXT("CwTool"), cmdName, cmdName, cmdFlags, functionPtr);\n}\n\n\n1\n2\n3\n4\n',normalizedContent:'# 操作类型\n\n\n# 数据库读写\n\n新建类cwdatabase\n\ncwdatabase.h\n\n#pragma once\nclass cwdatabase\n{\npublic:\n\t/// <summary>\n\t/// 向模型空间添加实体\n\t/// </summary>\n\t/// <param name="pent"></param>\n\t/// <param name="pdb"></param>\n\t/// <returns></returns>\n\tstatic acdbobjectid posttomodelspace(acdbentity* pent, acdbdatabase* pdb = acdbhostapplicationservices()->workingdatabase());\n\t/// <summary>\n    /// 获取指定层的所有实体\n    /// </summary>\n    /// <param name="layer"></param>\n    /// <param name="pdb"></param>\n    /// <returns></returns>\n\tstatic acdbobjectidarray getallentids(const achar* layer = null, acdbdatabase* pdb = acdbhostapplicationservices()->workingdatabase());\n};\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\ndatabase.cpp\n\nacdbobjectid cwdatabase::posttomodelspace(acdbentity* pent, acdbdatabase* pdb)\n{\n    acdbblocktable* pblktbl = null;\n    acad::errorstatus es;\n    es = pdb->getblocktable(pblktbl, acdb::kforread);\n    if (es != acad::eok)\n    {\n        acutprintf(text("\\n块表打开失败，错误代码:%s"), acaderrorstatustext(es));\n        return acdbobjectid::knull;\n    }\n    acdbblocktablerecord* pblktblrcd = null;\n    es = pblktbl->getat(acdb_model_space, pblktblrcd, acdb::kforwrite);\n    if (es != acad::eok)\n    {\n        acutprintf(text("\\n模块空间块表记录打开失败，错误代码:%s"), acaderrorstatustext(es));\n        pblktbl->close();\n        return acdbobjectid::knull;\n    }\n\n    pblktbl->close();\n    acdbobjectid outid;\n    es = pblktblrcd->appendacdbentity(outid, pent);\n    if (es != acad::eok)\n    {\n        acutprintf(text("\\n无法添加实体到模块空间，错误代码:%s"), acaderrorstatustext(es));\n        pblktblrcd->close();\n        return acdbobjectid::knull;\n    }\n    pent->close();\n    pblktblrcd->close();\n    return outid;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# 命令添加\n\n/// <summary>\n/// 添加命令\n/// </summary>\n/// <param name="cmdname"></param>\n/// <param name="cmdflags"></param>\n/// <param name="functionptr"></param>\nstatic void addcommand(const achar* cmdname, adesk::int32 cmdflags, acrxfunctionptr functionptr);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nvoid cwdatabase::addcommand(const achar* cmdname, adesk::int32 cmdflags, acrxfunctionptr functionptr)\n{\n    acedregcmds->addcommand(text("cwtool"), cmdname, cmdname, cmdflags, functionptr);\n}\n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},lastUpdated:"2023/10/30, 19:09:46",lastUpdatedTimestamp:1698664186e3},{title:"ObjectArx修改线段样式07",frontmatter:{title:"ObjectArx修改线段样式07",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/entity/line/modify",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/19.ObjectArx%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/07.ObjectArx%E4%BF%AE%E6%94%B9%E7%BA%BF%E6%AE%B5%E6%A0%B7%E5%BC%8F07.html",relativePath:"06.软件开发/19.ObjectArx二次开发/07.ObjectArx修改线段样式07.md",key:"v-ce084c72",path:"/soft/objectarx/entity/line/modify/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"修改颜色",slug:"修改颜色",normalizedTitle:"修改颜色",charIndex:148},{level:2,title:"修改层",slug:"修改层",normalizedTitle:"修改层",charIndex:1155},{level:2,title:"修改线型",slug:"修改线型",normalizedTitle:"修改线型",charIndex:1709},{level:2,title:"效果",slug:"效果",normalizedTitle:"效果",charIndex:2270}],headersStr:"说明 修改颜色 修改层 修改线型 效果",content:'# 说明\n\n实体创建过程中是在内存中创建，通过PostToModelSpace显示到视图中，\n\n并不是每一次都可以在创建对象时将其特性设置到合适的状态，相反，更多的时候可能在创建对象之后才修改其特性\n\n新建类CwModify，以下分别对应头文件与实现，前提是修改的样式存在，否则修改失败\n\n\n# 修改颜色\n\nCOLORS 1 THROUGH 7   \nColor number         Color name\n1                    Red\n2                    Yellow\n3                    Green\n4                    Cyan\n5                    Blue\n6                    Magenta\n7                    Black/White\n\nColors 8 through 255 must be assigned by a number or by selecting the color in a dialog box.\n\nThe default color (7) is either white or black, depending on your background color.\n\n/// <summary>\n/// 改变颜色\n/// </summary>\n/// <param name="entId"></param>\n/// <param name="colorIndex"></param>\n/// <returns></returns>\nstatic Acad::ErrorStatus ChangeColor(AcDbObjectId entId, Adesk::UInt16 colorIndex);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nAcad::ErrorStatus CwModify::ChangeColor(AcDbObjectId entId, Adesk::UInt16 colorIndex)\n{\n\tAcDbEntity* pEnt;\n\tif (acdbOpenObject(pEnt, entId, AcDb::kForWrite) == Acad::eOk)\n\t{\n\t\tpEnt->setColorIndex(colorIndex);\n\t\tpEnt->close();\n\t\treturn Acad::eOk;\n\t}\n\telse\n\t{\n\t\treturn Acad::eIllegalEntityType;\n\t}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 修改层\n\n/// <summary>\n/// 改变层\n/// </summary>\n/// <param name="entId"></param>\n/// <param name="layerName"></param>\n/// <returns></returns>\nstatic Acad::ErrorStatus ChangeLayer(AcDbObjectId entId, ACHAR* layerName);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nAcad::ErrorStatus CwModify::ChangeLayer(AcDbObjectId entId, ACHAR* layerName)\n{\n\tAcDbEntity* pEnt;\n\tif (acdbOpenObject(pEnt, entId, AcDb::kForWrite) == Acad::eOk)\n\t{\n\t\tpEnt->setLayer(layerName);\n\t\tpEnt->close();\n\t\treturn Acad::eOk;\n\t}\n\telse\n\t{\n\t\treturn Acad::eIllegalEntityType;\n\t}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 修改线型\n\n/// <summary>\n/// 改变线型\n/// </summary>\n/// <param name="entId"></param>\n/// <param name="lineType"></param>\n/// <returns></returns>\nstatic Acad::ErrorStatus ChangeLineType(AcDbObjectId entId, ACHAR* lineType);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nAcad::ErrorStatus CwModify::ChangeLineType(AcDbObjectId entId, ACHAR* lineType)\n{\n\tAcDbEntity* pEnt;\n\tif (acdbOpenObject(pEnt, entId, AcDb::kForWrite) == Acad::eOk)\n\t{\n\t\tpEnt->setLinetype(lineType);\n\t\tpEnt->close();\n\t\treturn Acad::eOk;\n\t}\n\telse\n\t{\n\t\treturn Acad::eIllegalEntityType;\n\t}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 效果\n\n',normalizedContent:'# 说明\n\n实体创建过程中是在内存中创建，通过posttomodelspace显示到视图中，\n\n并不是每一次都可以在创建对象时将其特性设置到合适的状态，相反，更多的时候可能在创建对象之后才修改其特性\n\n新建类cwmodify，以下分别对应头文件与实现，前提是修改的样式存在，否则修改失败\n\n\n# 修改颜色\n\ncolors 1 through 7   \ncolor number         color name\n1                    red\n2                    yellow\n3                    green\n4                    cyan\n5                    blue\n6                    magenta\n7                    black/white\n\ncolors 8 through 255 must be assigned by a number or by selecting the color in a dialog box.\n\nthe default color (7) is either white or black, depending on your background color.\n\n/// <summary>\n/// 改变颜色\n/// </summary>\n/// <param name="entid"></param>\n/// <param name="colorindex"></param>\n/// <returns></returns>\nstatic acad::errorstatus changecolor(acdbobjectid entid, adesk::uint16 colorindex);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nacad::errorstatus cwmodify::changecolor(acdbobjectid entid, adesk::uint16 colorindex)\n{\n\tacdbentity* pent;\n\tif (acdbopenobject(pent, entid, acdb::kforwrite) == acad::eok)\n\t{\n\t\tpent->setcolorindex(colorindex);\n\t\tpent->close();\n\t\treturn acad::eok;\n\t}\n\telse\n\t{\n\t\treturn acad::eillegalentitytype;\n\t}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 修改层\n\n/// <summary>\n/// 改变层\n/// </summary>\n/// <param name="entid"></param>\n/// <param name="layername"></param>\n/// <returns></returns>\nstatic acad::errorstatus changelayer(acdbobjectid entid, achar* layername);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nacad::errorstatus cwmodify::changelayer(acdbobjectid entid, achar* layername)\n{\n\tacdbentity* pent;\n\tif (acdbopenobject(pent, entid, acdb::kforwrite) == acad::eok)\n\t{\n\t\tpent->setlayer(layername);\n\t\tpent->close();\n\t\treturn acad::eok;\n\t}\n\telse\n\t{\n\t\treturn acad::eillegalentitytype;\n\t}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 修改线型\n\n/// <summary>\n/// 改变线型\n/// </summary>\n/// <param name="entid"></param>\n/// <param name="linetype"></param>\n/// <returns></returns>\nstatic acad::errorstatus changelinetype(acdbobjectid entid, achar* linetype);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nacad::errorstatus cwmodify::changelinetype(acdbobjectid entid, achar* linetype)\n{\n\tacdbentity* pent;\n\tif (acdbopenobject(pent, entid, acdb::kforwrite) == acad::eok)\n\t{\n\t\tpent->setlinetype(linetype);\n\t\tpent->close();\n\t\treturn acad::eok;\n\t}\n\telse\n\t{\n\t\treturn acad::eillegalentitytype;\n\t}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 效果\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"ObjectArx创建线段06",frontmatter:{title:"ObjectArx创建线段06",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/entity/line",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/19.ObjectArx%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/06.ObjectArx%E5%88%9B%E5%BB%BA%E7%BA%BF%E6%AE%B506.html",relativePath:"06.软件开发/19.ObjectArx二次开发/06.ObjectArx创建线段06.md",key:"v-196f7a9e",path:"/soft/objectarx/entity/line/",headers:[{level:2,title:"实现",slug:"实现",normalizedTitle:"实现",charIndex:22},{level:2,title:"效果",slug:"效果",normalizedTitle:"效果",charIndex:1304}],headersStr:"实现 效果",content:'新建类CwEntity，以下分别对应头文件与实现\n\n\n# 实现\n\n#pragma once\nclass CwEntity\n{\npublic:\n\t/// <summary>\n\t/// 根据坐标创建线段\n\t/// </summary>\n\t/// <param name="ptStart"></param>\n\t/// <param name="ptEnd"></param>\n\t/// <returns></returns>\n\tstatic AcDbObjectId CreateLine(AcGePoint3d ptStart, AcGePoint3d ptEnd);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n#include "stdafx.h"\n#include "CwEntity.h"\n#include "CwDatabase.h"\n\nAcDbObjectId CwEntity::CreateLine(AcGePoint3d ptStart, AcGePoint3d ptEnd)\n{\n    AcDbLine* pLine = new AcDbLine(ptStart, ptEnd);\n\tAcDbObjectId lineId = CwDatabase::PostToModelSpace(pLine);\n\treturn lineId;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n在入口函数acrxEntryPoint.cpp初始化中添加命令的加载及卸载，记得添加头文件\n\nvirtual AcRx::AppRetCode On_kInitAppMsg (void *pkt) {\n\t// TODO: Load dependencies here\n\tCwCmd::AddCommands();\n\n\t// You *must* call On_kInitAppMsg here\n\tAcRx::AppRetCode retCode =AcRxArxApp::On_kInitAppMsg (pkt) ;\n\t\n\t// TODO: Add your initialization code here\n\n\treturn (retCode) ;\n}\n\nvirtual AcRx::AppRetCode On_kUnloadAppMsg (void *pkt) {\n\t// TODO: Add your code here\n\tacedRegCmds->removeGroup(TEXT("CwTools"));\n\t// You *must* call On_kUnloadAppMsg here\n\tAcRx::AppRetCode retCode =AcRxArxApp::On_kUnloadAppMsg (pkt) ;\n\n\t// TODO: Unload dependencies here\n\n\treturn (retCode) ;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 效果\n\n',normalizedContent:'新建类cwentity，以下分别对应头文件与实现\n\n\n# 实现\n\n#pragma once\nclass cwentity\n{\npublic:\n\t/// <summary>\n\t/// 根据坐标创建线段\n\t/// </summary>\n\t/// <param name="ptstart"></param>\n\t/// <param name="ptend"></param>\n\t/// <returns></returns>\n\tstatic acdbobjectid createline(acgepoint3d ptstart, acgepoint3d ptend);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n#include "stdafx.h"\n#include "cwentity.h"\n#include "cwdatabase.h"\n\nacdbobjectid cwentity::createline(acgepoint3d ptstart, acgepoint3d ptend)\n{\n    acdbline* pline = new acdbline(ptstart, ptend);\n\tacdbobjectid lineid = cwdatabase::posttomodelspace(pline);\n\treturn lineid;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n在入口函数acrxentrypoint.cpp初始化中添加命令的加载及卸载，记得添加头文件\n\nvirtual acrx::appretcode on_kinitappmsg (void *pkt) {\n\t// todo: load dependencies here\n\tcwcmd::addcommands();\n\n\t// you *must* call on_kinitappmsg here\n\tacrx::appretcode retcode =acrxarxapp::on_kinitappmsg (pkt) ;\n\t\n\t// todo: add your initialization code here\n\n\treturn (retcode) ;\n}\n\nvirtual acrx::appretcode on_kunloadappmsg (void *pkt) {\n\t// todo: add your code here\n\tacedregcmds->removegroup(text("cwtools"));\n\t// you *must* call on_kunloadappmsg here\n\tacrx::appretcode retcode =acrxarxapp::on_kunloadappmsg (pkt) ;\n\n\t// todo: unload dependencies here\n\n\treturn (retcode) ;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 效果\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"ObjectArx创建圆",frontmatter:{title:"ObjectArx创建圆",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/entity/circle",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/19.ObjectArx%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/08.ObjectArx%E5%88%9B%E5%BB%BA%E5%9C%8608.html",relativePath:"06.软件开发/19.ObjectArx二次开发/08.ObjectArx创建圆08.md",key:"v-8c442c42",path:"/soft/objectarx/entity/circle/",headers:[{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2},{level:2,title:"实现",slug:"实现",normalizedTitle:"实现",charIndex:67},{level:3,title:"CwCalculation",slug:"cwcalculation",normalizedTitle:"cwcalculation",charIndex:74},{level:3,title:"CwEntity",slug:"cwentity",normalizedTitle:"cwentity",charIndex:5255},{level:3,title:"CwCmd",slug:"cwcmd",normalizedTitle:"cwcmd",charIndex:7488},{level:3,title:"添加命令",slug:"添加命令",normalizedTitle:"添加命令",charIndex:8105},{level:2,title:"效果",slug:"效果",normalizedTitle:"效果",charIndex:8340}],headersStr:"说明 实现 CwCalculation CwEntity CwCmd 添加命令 效果",content:'# 说明\n\n创建圆有3种方式，需要已知参数\n\n * 圆心和半径\n\n * 直径的2个端点\n\n * 直径上三个点\n   \n   \n\n\n# 实现\n\n\n# CwCalculation\n\n作为计算坐标及其它数据类\n\n#pragma once\nclass CwCalculation\n{\npublic:\n\t/// <summary>\n\t/// 求两个坐标中间值\n\t/// </summary>\n\t/// <param name="pt1"></param>\n\t/// <param name="pt2"></param>\n\t/// <returns></returns>\n\tstatic AcGePoint2d MiddlePoint(AcGePoint2d pt1, AcGePoint2d pt2);\n\n\tstatic AcGePoint3d MiddlePoint(AcGePoint3d pt1, AcGePoint3d pt2);\n\n\t/// <summary>\n\t/// 根据三点求出中心\n\t/// </summary>\n\t/// <param name="pt1"></param>\n\t/// <param name="pt2"></param>\n\t/// <param name="pt3"></param>\n\t/// <returns></returns>\n\tstatic AcGePoint2d CenterPoint(AcGePoint2d pt1, AcGePoint2d pt2, AcGePoint2d pt3);\n\n\t/// <summary>\n\t/// 根据圆心和圆上任意一点，求半径\n\t/// </summary>\n\t/// <param name="ptCenter"></param>\n\t/// <param name="pt"></param>\n\t/// <returns></returns>\n\tstatic double GetRadius(AcGePoint2d ptCenter, AcGePoint2d pt);\n\n\t/// <summary>\n\t/// 二维坐标转三维坐标\n\t/// </summary>\n\t/// <param name="pt"></param>\n\t/// <returns></returns>\n\tstatic AcGePoint3d Pt2dto3d(AcGePoint2d pt);\n\tstatic AcGePoint2d Pt3dto2d(const AcGePoint3d& pt);\n\n\t/// <summary>\n\t/// 计算π\n\t/// </summary>\n\t/// <returns></returns>\n\tstatic double PI();\n\n\t/// <summary>\n\t/// 半径转弧度\n\t/// </summary>\n\t/// <param name="radian"></param>\n\t/// <returns></returns>\n\tstatic double RtoA(double radian);\n\t/// <summary>\n\t/// 弧度转半径\n\t/// </summary>\n\t/// <param name="angle"></param>\n\t/// <returns></returns>\n\tstatic double AtoR(double angle);\n\n\t/// <summary>\n\t/// 极坐标\n\t/// </summary>\n\t/// <param name="pt"></param>\n\t/// <param name="angle"></param>\n\t/// <param name="distance"></param>\n\t/// <returns></returns>\n\tstatic AcGePoint3d PolarPoint(const AcGePoint3d& pt, double angle, double distance);\n\t/// <summary>\n\t/// 相对坐标\n\t/// </summary>\n\t/// <param name="pt"></param>\n\t/// <param name="x"></param>\n\t/// <param name="y"></param>\n\t/// <returns></returns>\n\tstatic AcGePoint3d RelativePoint(AcGePoint3d& pt, double x, double y);\n\t/// <summary>\n\t/// 英寸转mm\n\t/// </summary>\n\t/// <param name="mil"></param>\n\t/// <returns></returns>\n\tstatic double Mil2MM(double mil);\n\t/// <summary>\n\t/// 求最大值\n\t/// </summary>\n\t/// <param name="a"></param>\n\t/// <param name="b"></param>\n\t/// <returns></returns>\n\tstatic double Max(double a, double b);\n\t/// <summary>\n\t/// 求最小值\n\t/// </summary>\n\t/// <param name="a"></param>\n\t/// <param name="b"></param>\n\t/// <returns></returns>\n\tstatic double Min(double a, double b);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n\n\n#include "stdafx.h"\n#include "CwCalculation.h"\n\nAcGePoint2d CwCalculation::MiddlePoint(AcGePoint2d pt1, AcGePoint2d pt2)\n{\n\tAcGePoint2d pt;\n\tpt[X] = (pt1[X] + pt2[X]) / 2;\n\tpt[Y] = (pt1[Y] + pt2[Y]) / 2;\n\treturn pt;\n}\n\nAcGePoint3d CwCalculation::MiddlePoint(AcGePoint3d pt1, AcGePoint3d pt2)\n{\n\tAcGePoint3d pt;\n\tpt[X] = (pt1[X] + pt2[X]) / 2;\n\tpt[Y] = (pt1[Y] + pt2[Y]) / 2;\n\tpt[Z] = (pt1[Z] + pt2[Z]) / 2;\n\treturn pt;\n}\n\nAcGePoint2d CwCalculation::CenterPoint(AcGePoint2d pt1, AcGePoint2d pt2, AcGePoint2d pt3)\n{\n\tAcGePoint2d ptCenter;\n\tdouble a = pt1[X] - pt2[X];\n\tdouble b = pt1[Y] - pt2[Y];\n\tdouble c = pt1[X] - pt3[X];\n\tdouble d = pt1[Y] - pt3[Y];\n\tdouble e = ((pow(pt1[X], 2) - pow(pt2[X], 2)) - (pow(pt2[Y], 2) - pow(pt1[Y], 2))) / 2;\n\tdouble f = ((pow(pt1[X], 2) - pow(pt3[X], 2)) - (pow(pt3[Y], 2) - pow(pt1[Y], 2))) / 2;\n\tptCenter[X] = (e * d - b * f) / (a * d - b * c);\n\tptCenter[Y] = (a * f - e * c) / (a * d - b * c);\n\treturn ptCenter;\n}\n\ndouble CwCalculation::GetRadius(AcGePoint2d ptCenter, AcGePoint2d pt)\n{\n\tdouble radius = abs(sqrt(pow(ptCenter[X] - pt[X], 2) + pow(ptCenter[Y] - pt[Y], 2)));\n\treturn radius;\n}\n\nAcGePoint3d CwCalculation::Pt2dto3d(AcGePoint2d pt)\n{\n\tAcGePoint3d ptTemp(pt.x, pt.y, 0);\n\treturn ptTemp;\n}\n\nAcGePoint2d CwCalculation::Pt3dto2d(const AcGePoint3d& pt)\n{\n\treturn AcGePoint2d(pt.x, pt.y);\n}\n\ndouble CwCalculation::PI()\n{\n\treturn 4 * atan(1.0);\n}\n\ndouble CwCalculation::RtoA(double radian)\n{\n\treturn radian * 180 / CwCalculation::PI();\n}\n\ndouble CwCalculation::AtoR(double angle)\n{\n\treturn angle * CwCalculation::PI() / 180;\n}\n\nAcGePoint3d CwCalculation::PolarPoint(const AcGePoint3d& pt, double angle, double distance)\n{\n\tads_point ptFrom, ptTo;\n\tptFrom[X] = pt.x;\n\tptFrom[Y] = pt.y;\n\tptFrom[Z] = pt.z;\n\tacutPolar(ptFrom, angle, distance, ptTo);\n\treturn asPnt3d(ptTo);\n}\n\nAcGePoint3d CwCalculation::RelativePoint(AcGePoint3d& pt, double x, double y)\n{\n\tAcGePoint3d ptTemp(pt.x + x, pt.y + y, pt.z);\n\treturn ptTemp;\n}\n\ndouble CwCalculation::Mil2MM(double mil)\n{\n\treturn mil * 0.0254;\n}\n\ndouble CwCalculation::Max(double a, double b)\n{\n\tif (a > b)\n\t{\n\t\treturn a;\n\t}\n\telse\n\t{\n\t\treturn b;\n\t}\n}\n\ndouble CwCalculation::Min(double a, double b)\n{\n\tif (a < b)\n\t{\n\t\treturn a;\n\t}\n\telse\n\t{\n\t\treturn b;\n\t}\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n\n\n\n# CwEntity\n\n添加创建圆\n\n/// <summary>\n/// 根据圆心，所在平面，半径创建圆\n/// </summary>\n/// <param name="ptCenter"></param>\n/// <param name="vec"></param>\n/// <param name="radius"></param>\n/// <returns></returns>\nstatic AcDbObjectId CreateCircle(AcGePoint3d ptCenter, AcGeVector3d vec, double radius);\n\n/// <summary>\n/// 根据圆心，半径创建圆\n/// </summary>\n/// <param name="ptCenter"></param>\n/// <param name="radius"></param>\n/// <returns></returns>\nstatic AcDbObjectId CreateCircle(AcGePoint3d ptCenter, double radius);\n\n/// <summary>\n/// 根据直径上两点创建圆\n/// </summary>\n/// <param name="pt1"></param>\n/// <param name="pt2"></param>\n/// <returns></returns>\nstatic AcDbObjectId CreateCircle(AcGePoint2d pt1, AcGePoint2d pt2);\n\n/// <summary>\n/// 根据圆上三点创建圆\n/// </summary>\n/// <param name="pt1"></param>\n/// <param name="pt2"></param>\n/// <param name="pt3"></param>\n/// <returns></returns>\nstatic AcDbObjectId CreateCircle(AcGePoint2d pt1, AcGePoint2d pt2, AcGePoint2d pt3);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\nAcDbObjectId CwEntity::CreateCircle(AcGePoint3d ptCenter, AcGeVector3d vec, double radius)\n{\n\tAcDbCircle* pCircle = new AcDbCircle(ptCenter, vec, radius);\n\tAcDbObjectId circleId = CwDatabase::PostToModelSpace(pCircle);\n\treturn circleId;\n}\n\nAcDbObjectId CwEntity::CreateCircle(AcGePoint3d ptCenter, double radius)\n{\n\tAcGeVector3d vec(0, 0, 1);\n\treturn CwEntity::CreateCircle(ptCenter, vec, radius);\n}\n\nAcDbObjectId CwEntity::CreateCircle(AcGePoint2d pt1, AcGePoint2d pt2)\n{\n\t//计算圆心和半径\n\tAcGePoint2d pt = CwCalculation::MiddlePoint(pt1, pt2);\n\tAcGePoint3d ptCenter(pt[X], pt[Y], 0);\n\tdouble radius = (pt1.distanceTo(pt2)) / 2;\n\treturn CwEntity::CreateCircle(ptCenter, radius);\n}\n\nAcDbObjectId CwEntity::CreateCircle(AcGePoint2d pt1, AcGePoint2d pt2, AcGePoint2d pt3)\n{\n\tAcGePoint2d ptCenter2d = CwCalculation::CenterPoint(pt1, pt2, pt3);\n\tdouble radius = CwCalculation::GetRadius(ptCenter2d, pt1);\n\tAcGePoint3d ptCenter = CwCalculation::Pt2dto3d(ptCenter2d);\n\tif (radius < 0.000001)\n\t{\n\t\tMessageBox(NULL, TEXT("半径过小!"), TEXT("错误"), MB_OK);\n\t\treturn 0;\n\t}\n\treturn CwEntity::CreateCircle(ptCenter, radius);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n\n# CwCmd\n\n/// <summary>\n/// 添加圆命令\n/// </summary>\nstatic void AddCircle1();\nstatic void AddCircle2();\nstatic void AddCircle3();\n\n\n1\n2\n3\n4\n5\n6\n\n\nvoid CwCmd::AddCircle1()\n{\n\t// 圆心半径创建圆\n\tAcGePoint3d ptCenter(100, 100, 0);\n\tCwEntity::CreateCircle(ptCenter, 20);\n}\n\nvoid CwCmd::AddCircle2()\n{\n\t// 两点法创建圆\n\tAcGePoint2d pt1(100, 100);\n\tAcGePoint2d pt2(150, 150);\n\tCwEntity::CreateCircle(pt1,pt2);\n}\n\nvoid CwCmd::AddCircle3()\n{\n\t// 三点法创建圆\n\tAcGePoint2d pt1(60, 100);\n\tAcGePoint2d pt2(140, 150);\n\tAcGePoint2d pt3(100, 60);\n\tCwEntity::CreateCircle(pt1, pt2, pt3);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 添加命令\n\nCwDatabase::AddCommand(TEXT("AddCircle1"), ACRX_CMD_MODAL, AddCircle1);\nCwDatabase::AddCommand(TEXT("AddCircle2"), ACRX_CMD_MODAL, AddCircle2);\nCwDatabase::AddCommand(TEXT("AddCircle3"), ACRX_CMD_MODAL, AddCircle3);\n\n\n1\n2\n3\n\n\n\n# 效果\n\n',normalizedContent:'# 说明\n\n创建圆有3种方式，需要已知参数\n\n * 圆心和半径\n\n * 直径的2个端点\n\n * 直径上三个点\n   \n   \n\n\n# 实现\n\n\n# cwcalculation\n\n作为计算坐标及其它数据类\n\n#pragma once\nclass cwcalculation\n{\npublic:\n\t/// <summary>\n\t/// 求两个坐标中间值\n\t/// </summary>\n\t/// <param name="pt1"></param>\n\t/// <param name="pt2"></param>\n\t/// <returns></returns>\n\tstatic acgepoint2d middlepoint(acgepoint2d pt1, acgepoint2d pt2);\n\n\tstatic acgepoint3d middlepoint(acgepoint3d pt1, acgepoint3d pt2);\n\n\t/// <summary>\n\t/// 根据三点求出中心\n\t/// </summary>\n\t/// <param name="pt1"></param>\n\t/// <param name="pt2"></param>\n\t/// <param name="pt3"></param>\n\t/// <returns></returns>\n\tstatic acgepoint2d centerpoint(acgepoint2d pt1, acgepoint2d pt2, acgepoint2d pt3);\n\n\t/// <summary>\n\t/// 根据圆心和圆上任意一点，求半径\n\t/// </summary>\n\t/// <param name="ptcenter"></param>\n\t/// <param name="pt"></param>\n\t/// <returns></returns>\n\tstatic double getradius(acgepoint2d ptcenter, acgepoint2d pt);\n\n\t/// <summary>\n\t/// 二维坐标转三维坐标\n\t/// </summary>\n\t/// <param name="pt"></param>\n\t/// <returns></returns>\n\tstatic acgepoint3d pt2dto3d(acgepoint2d pt);\n\tstatic acgepoint2d pt3dto2d(const acgepoint3d& pt);\n\n\t/// <summary>\n\t/// 计算π\n\t/// </summary>\n\t/// <returns></returns>\n\tstatic double pi();\n\n\t/// <summary>\n\t/// 半径转弧度\n\t/// </summary>\n\t/// <param name="radian"></param>\n\t/// <returns></returns>\n\tstatic double rtoa(double radian);\n\t/// <summary>\n\t/// 弧度转半径\n\t/// </summary>\n\t/// <param name="angle"></param>\n\t/// <returns></returns>\n\tstatic double ator(double angle);\n\n\t/// <summary>\n\t/// 极坐标\n\t/// </summary>\n\t/// <param name="pt"></param>\n\t/// <param name="angle"></param>\n\t/// <param name="distance"></param>\n\t/// <returns></returns>\n\tstatic acgepoint3d polarpoint(const acgepoint3d& pt, double angle, double distance);\n\t/// <summary>\n\t/// 相对坐标\n\t/// </summary>\n\t/// <param name="pt"></param>\n\t/// <param name="x"></param>\n\t/// <param name="y"></param>\n\t/// <returns></returns>\n\tstatic acgepoint3d relativepoint(acgepoint3d& pt, double x, double y);\n\t/// <summary>\n\t/// 英寸转mm\n\t/// </summary>\n\t/// <param name="mil"></param>\n\t/// <returns></returns>\n\tstatic double mil2mm(double mil);\n\t/// <summary>\n\t/// 求最大值\n\t/// </summary>\n\t/// <param name="a"></param>\n\t/// <param name="b"></param>\n\t/// <returns></returns>\n\tstatic double max(double a, double b);\n\t/// <summary>\n\t/// 求最小值\n\t/// </summary>\n\t/// <param name="a"></param>\n\t/// <param name="b"></param>\n\t/// <returns></returns>\n\tstatic double min(double a, double b);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n\n\n#include "stdafx.h"\n#include "cwcalculation.h"\n\nacgepoint2d cwcalculation::middlepoint(acgepoint2d pt1, acgepoint2d pt2)\n{\n\tacgepoint2d pt;\n\tpt[x] = (pt1[x] + pt2[x]) / 2;\n\tpt[y] = (pt1[y] + pt2[y]) / 2;\n\treturn pt;\n}\n\nacgepoint3d cwcalculation::middlepoint(acgepoint3d pt1, acgepoint3d pt2)\n{\n\tacgepoint3d pt;\n\tpt[x] = (pt1[x] + pt2[x]) / 2;\n\tpt[y] = (pt1[y] + pt2[y]) / 2;\n\tpt[z] = (pt1[z] + pt2[z]) / 2;\n\treturn pt;\n}\n\nacgepoint2d cwcalculation::centerpoint(acgepoint2d pt1, acgepoint2d pt2, acgepoint2d pt3)\n{\n\tacgepoint2d ptcenter;\n\tdouble a = pt1[x] - pt2[x];\n\tdouble b = pt1[y] - pt2[y];\n\tdouble c = pt1[x] - pt3[x];\n\tdouble d = pt1[y] - pt3[y];\n\tdouble e = ((pow(pt1[x], 2) - pow(pt2[x], 2)) - (pow(pt2[y], 2) - pow(pt1[y], 2))) / 2;\n\tdouble f = ((pow(pt1[x], 2) - pow(pt3[x], 2)) - (pow(pt3[y], 2) - pow(pt1[y], 2))) / 2;\n\tptcenter[x] = (e * d - b * f) / (a * d - b * c);\n\tptcenter[y] = (a * f - e * c) / (a * d - b * c);\n\treturn ptcenter;\n}\n\ndouble cwcalculation::getradius(acgepoint2d ptcenter, acgepoint2d pt)\n{\n\tdouble radius = abs(sqrt(pow(ptcenter[x] - pt[x], 2) + pow(ptcenter[y] - pt[y], 2)));\n\treturn radius;\n}\n\nacgepoint3d cwcalculation::pt2dto3d(acgepoint2d pt)\n{\n\tacgepoint3d pttemp(pt.x, pt.y, 0);\n\treturn pttemp;\n}\n\nacgepoint2d cwcalculation::pt3dto2d(const acgepoint3d& pt)\n{\n\treturn acgepoint2d(pt.x, pt.y);\n}\n\ndouble cwcalculation::pi()\n{\n\treturn 4 * atan(1.0);\n}\n\ndouble cwcalculation::rtoa(double radian)\n{\n\treturn radian * 180 / cwcalculation::pi();\n}\n\ndouble cwcalculation::ator(double angle)\n{\n\treturn angle * cwcalculation::pi() / 180;\n}\n\nacgepoint3d cwcalculation::polarpoint(const acgepoint3d& pt, double angle, double distance)\n{\n\tads_point ptfrom, ptto;\n\tptfrom[x] = pt.x;\n\tptfrom[y] = pt.y;\n\tptfrom[z] = pt.z;\n\tacutpolar(ptfrom, angle, distance, ptto);\n\treturn aspnt3d(ptto);\n}\n\nacgepoint3d cwcalculation::relativepoint(acgepoint3d& pt, double x, double y)\n{\n\tacgepoint3d pttemp(pt.x + x, pt.y + y, pt.z);\n\treturn pttemp;\n}\n\ndouble cwcalculation::mil2mm(double mil)\n{\n\treturn mil * 0.0254;\n}\n\ndouble cwcalculation::max(double a, double b)\n{\n\tif (a > b)\n\t{\n\t\treturn a;\n\t}\n\telse\n\t{\n\t\treturn b;\n\t}\n}\n\ndouble cwcalculation::min(double a, double b)\n{\n\tif (a < b)\n\t{\n\t\treturn a;\n\t}\n\telse\n\t{\n\t\treturn b;\n\t}\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n\n\n\n# cwentity\n\n添加创建圆\n\n/// <summary>\n/// 根据圆心，所在平面，半径创建圆\n/// </summary>\n/// <param name="ptcenter"></param>\n/// <param name="vec"></param>\n/// <param name="radius"></param>\n/// <returns></returns>\nstatic acdbobjectid createcircle(acgepoint3d ptcenter, acgevector3d vec, double radius);\n\n/// <summary>\n/// 根据圆心，半径创建圆\n/// </summary>\n/// <param name="ptcenter"></param>\n/// <param name="radius"></param>\n/// <returns></returns>\nstatic acdbobjectid createcircle(acgepoint3d ptcenter, double radius);\n\n/// <summary>\n/// 根据直径上两点创建圆\n/// </summary>\n/// <param name="pt1"></param>\n/// <param name="pt2"></param>\n/// <returns></returns>\nstatic acdbobjectid createcircle(acgepoint2d pt1, acgepoint2d pt2);\n\n/// <summary>\n/// 根据圆上三点创建圆\n/// </summary>\n/// <param name="pt1"></param>\n/// <param name="pt2"></param>\n/// <param name="pt3"></param>\n/// <returns></returns>\nstatic acdbobjectid createcircle(acgepoint2d pt1, acgepoint2d pt2, acgepoint2d pt3);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\nacdbobjectid cwentity::createcircle(acgepoint3d ptcenter, acgevector3d vec, double radius)\n{\n\tacdbcircle* pcircle = new acdbcircle(ptcenter, vec, radius);\n\tacdbobjectid circleid = cwdatabase::posttomodelspace(pcircle);\n\treturn circleid;\n}\n\nacdbobjectid cwentity::createcircle(acgepoint3d ptcenter, double radius)\n{\n\tacgevector3d vec(0, 0, 1);\n\treturn cwentity::createcircle(ptcenter, vec, radius);\n}\n\nacdbobjectid cwentity::createcircle(acgepoint2d pt1, acgepoint2d pt2)\n{\n\t//计算圆心和半径\n\tacgepoint2d pt = cwcalculation::middlepoint(pt1, pt2);\n\tacgepoint3d ptcenter(pt[x], pt[y], 0);\n\tdouble radius = (pt1.distanceto(pt2)) / 2;\n\treturn cwentity::createcircle(ptcenter, radius);\n}\n\nacdbobjectid cwentity::createcircle(acgepoint2d pt1, acgepoint2d pt2, acgepoint2d pt3)\n{\n\tacgepoint2d ptcenter2d = cwcalculation::centerpoint(pt1, pt2, pt3);\n\tdouble radius = cwcalculation::getradius(ptcenter2d, pt1);\n\tacgepoint3d ptcenter = cwcalculation::pt2dto3d(ptcenter2d);\n\tif (radius < 0.000001)\n\t{\n\t\tmessagebox(null, text("半径过小!"), text("错误"), mb_ok);\n\t\treturn 0;\n\t}\n\treturn cwentity::createcircle(ptcenter, radius);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n\n# cwcmd\n\n/// <summary>\n/// 添加圆命令\n/// </summary>\nstatic void addcircle1();\nstatic void addcircle2();\nstatic void addcircle3();\n\n\n1\n2\n3\n4\n5\n6\n\n\nvoid cwcmd::addcircle1()\n{\n\t// 圆心半径创建圆\n\tacgepoint3d ptcenter(100, 100, 0);\n\tcwentity::createcircle(ptcenter, 20);\n}\n\nvoid cwcmd::addcircle2()\n{\n\t// 两点法创建圆\n\tacgepoint2d pt1(100, 100);\n\tacgepoint2d pt2(150, 150);\n\tcwentity::createcircle(pt1,pt2);\n}\n\nvoid cwcmd::addcircle3()\n{\n\t// 三点法创建圆\n\tacgepoint2d pt1(60, 100);\n\tacgepoint2d pt2(140, 150);\n\tacgepoint2d pt3(100, 60);\n\tcwentity::createcircle(pt1, pt2, pt3);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 添加命令\n\ncwdatabase::addcommand(text("addcircle1"), acrx_cmd_modal, addcircle1);\ncwdatabase::addcommand(text("addcircle2"), acrx_cmd_modal, addcircle2);\ncwdatabase::addcommand(text("addcircle3"), acrx_cmd_modal, addcircle3);\n\n\n1\n2\n3\n\n\n\n# 效果\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"ObjectArx创建弧09",frontmatter:{title:"ObjectArx创建弧09",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/entity/arc",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/19.ObjectArx%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/09.ObjectArx%E5%88%9B%E5%BB%BA%E5%BC%A709.html",relativePath:"06.软件开发/19.ObjectArx二次开发/09.ObjectArx创建弧09.md",key:"v-248924dd",path:"/soft/objectarx/entity/arc/",headers:[{level:2,title:"实现",slug:"实现",normalizedTitle:"实现",charIndex:2},{level:3,title:"CwEntity",slug:"cwentity",normalizedTitle:"cwentity",charIndex:9},{level:3,title:"CwCmd",slug:"cwcmd",normalizedTitle:"cwcmd",charIndex:3650},{level:3,title:"添加命令",slug:"添加命令",normalizedTitle:"添加命令",charIndex:4400},{level:2,title:"效果",slug:"效果",normalizedTitle:"效果",charIndex:4617}],headersStr:"实现 CwEntity CwCmd 添加命令 效果",content:'# 实现\n\n\n# CwEntity\n\n/// <summary>\n/// 创建圆弧，根据圆心，所在面，半径，起始点角度，结束点角度\n/// </summary>\n/// <param name="ptCenter"></param>\n/// <param name="vec"></param>\n/// <param name="radius"></param>\n/// <param name="startAngle"></param>\n/// <param name="endAngle"></param>\n/// <returns></returns>\nstatic AcDbObjectId CreateArc(AcGePoint3d ptCenter, AcGeVector3d vec, double radius, double startAngle, double endAngle);\n\n/// <summary>\n/// 创建圆弧，根据圆心，半径，起始点角度，结束点角度\n/// </summary>\n/// <param name="ptCenter"></param>\n/// <param name="radius"></param>\n/// <param name="startAngle"></param>\n/// <param name="endAngle"></param>\n/// <returns></returns>\nstatic AcDbObjectId CreateArc(AcGePoint2d ptCenter, double radius, double startAngle, double endAngle);\n\n/// <summary>\n/// 创建圆弧，根据圆心，起始点，度数\n/// </summary>\n/// <param name="ptCenter"></param>\n/// <param name="ptStart"></param>\n/// <param name="angle"></param>\n/// <returns></returns>\nstatic AcDbObjectId CreateArc(AcGePoint2d ptCenter, AcGePoint2d ptStart, double angle);\n\n/// <summary>\n/// 创建圆弧，根据起始点，弧上一点，结束点\n/// </summary>\n/// <param name="ptStart"></param>\n/// <param name="ptOnArc"></param>\n/// <param name="ptEnd"></param>\n/// <returns></returns>\nstatic AcDbObjectId CreateArc3Point(AcGePoint2d ptStart, AcGePoint2d ptOnArc, AcGePoint2d ptEnd);\n\n/// <summary>\n/// 创建圆弧，根据圆心，起始点，结束点\n/// </summary>\n/// <param name="ptStart"></param>\n/// <param name="ptCenter"></param>\n/// <param name="ptEnd"></param>\n/// <returns></returns>\nstatic AcDbObjectId CreateArc(AcGePoint2d ptCenter, AcGePoint2d ptStart, AcGePoint2d ptEnd);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\n\nAcDbObjectId CwEntity::CreateArc(AcGePoint3d ptCenter, AcGeVector3d vec, double radius, double startAngle, double endAngle)\n{\n\tAcDbArc* pArc = new AcDbArc(ptCenter, vec, radius, startAngle, endAngle);\n\tAcDbObjectId arcId = CwDatabase::PostToModelSpace(pArc);\n\treturn arcId;\n}\n\nAcDbObjectId CwEntity::CreateArc(AcGePoint2d ptCenter, double radius, double startAngle, double endAngle)\n{\n\tAcGeVector3d vec(0, 0, 1);\n\treturn CwEntity::CreateArc(CwCalculation::Pt2dto3d(ptCenter), vec, radius, startAngle, endAngle);\n}\n\nAcDbObjectId CwEntity::CreateArc(AcGePoint2d ptCenter, AcGePoint2d ptStart, double angle)\n{\n\tdouble radius = ptCenter.distanceTo(ptStart);\n\tAcGeVector2d vecStart(ptStart.x - ptCenter.x, ptStart.y - ptCenter.y);\n\tdouble startAngle = vecStart.angle();\n\tdouble endAngle = startAngle + angle;\n\n\treturn CwEntity::CreateArc(ptCenter, radius, startAngle, endAngle);\n}\n\nAcDbObjectId CwEntity::CreateArc3Point(AcGePoint2d ptStart, AcGePoint2d ptOnArc, AcGePoint2d ptEnd)\n{\n\tAcGeCircArc2d geArc2d(ptStart, ptOnArc, ptEnd);\n\tAcGePoint2d ptCenter = geArc2d.center();\n\tdouble radius = geArc2d.radius();\n\n\tAcGeVector2d vecStart(ptStart.x - ptCenter.x, ptStart.y - ptCenter.y);\n\tAcGeVector2d vecEnd(ptEnd.x - ptCenter.x, ptEnd.y - ptCenter.y);\n\tdouble startAngle = vecStart.angle();\n\tdouble endAngle = vecEnd.angle();\n\n\treturn CwEntity::CreateArc(ptCenter, radius, startAngle, endAngle);\n}\n\nAcDbObjectId CwEntity::CreateArc(AcGePoint2d ptCenter, AcGePoint2d ptStart, AcGePoint2d ptEnd)\n{\n\tdouble radius = ptCenter.distanceTo(ptStart);\n\n\tAcGeVector2d vecStart(ptStart.x - ptCenter.x, ptStart.y - ptCenter.y);\n\tAcGeVector2d vecEnd(ptEnd.x - ptCenter.x, ptEnd.y - ptCenter.y);\n\tdouble startAngle = vecStart.angle();\n\tdouble endAngle = vecEnd.angle();\n\n\treturn CwEntity::CreateArc(ptCenter, radius, startAngle, endAngle);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n\n\n\n# CwCmd\n\n/// <summary>\n/// 添加弧命令\n/// </summary>\nstatic void AddArc1();\nstatic void AddArc2();\nstatic void AddArc3();\n\n\n1\n2\n3\n4\n5\n6\n\n\nvoid CwCmd::AddArc1()\n{\n\t// 创建位于XOY平面上的圆弧\n\tAcGePoint2d ptCenter(50, 50);\n\tCwEntity::CreateArc(ptCenter, 100 * sqrt(2) / 2, 5 * CwCalculation::PI() / 4, 7 * CwCalculation::PI() / 4);\n}\n\nvoid CwCmd::AddArc2()\n{\n\t// 三点法创建圆弧\n\tAcGePoint2d ptStart(100, 0);\n\tAcGePoint2d ptOnArc(120, 50);\n\tAcGePoint2d ptEnd(100, 100);\n\tCwEntity::CreateArc3Point(ptStart, ptOnArc, ptEnd);\n}\n\nvoid CwCmd::AddArc3()\n{\n\t//起点、圆心、终点创建圆弧\n\tAcGePoint2d ptStart(100, 100);\n\tAcGePoint2d ptCenter(50, 50);\n\tAcGePoint2d ptEnd(0, 100);\n\tCwEntity::CreateArc(ptCenter, ptStart, ptEnd);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 添加命令\n\nCwDatabase::AddCommand(TEXT("AddArc1"), ACRX_CMD_MODAL, AddArc1);\nCwDatabase::AddCommand(TEXT("AddArc2"), ACRX_CMD_MODAL, AddArc2);\nCwDatabase::AddCommand(TEXT("AddArc3"), ACRX_CMD_MODAL, AddArc3);\n\n\n1\n2\n3\n\n\n\n# 效果\n\n',normalizedContent:'# 实现\n\n\n# cwentity\n\n/// <summary>\n/// 创建圆弧，根据圆心，所在面，半径，起始点角度，结束点角度\n/// </summary>\n/// <param name="ptcenter"></param>\n/// <param name="vec"></param>\n/// <param name="radius"></param>\n/// <param name="startangle"></param>\n/// <param name="endangle"></param>\n/// <returns></returns>\nstatic acdbobjectid createarc(acgepoint3d ptcenter, acgevector3d vec, double radius, double startangle, double endangle);\n\n/// <summary>\n/// 创建圆弧，根据圆心，半径，起始点角度，结束点角度\n/// </summary>\n/// <param name="ptcenter"></param>\n/// <param name="radius"></param>\n/// <param name="startangle"></param>\n/// <param name="endangle"></param>\n/// <returns></returns>\nstatic acdbobjectid createarc(acgepoint2d ptcenter, double radius, double startangle, double endangle);\n\n/// <summary>\n/// 创建圆弧，根据圆心，起始点，度数\n/// </summary>\n/// <param name="ptcenter"></param>\n/// <param name="ptstart"></param>\n/// <param name="angle"></param>\n/// <returns></returns>\nstatic acdbobjectid createarc(acgepoint2d ptcenter, acgepoint2d ptstart, double angle);\n\n/// <summary>\n/// 创建圆弧，根据起始点，弧上一点，结束点\n/// </summary>\n/// <param name="ptstart"></param>\n/// <param name="ptonarc"></param>\n/// <param name="ptend"></param>\n/// <returns></returns>\nstatic acdbobjectid createarc3point(acgepoint2d ptstart, acgepoint2d ptonarc, acgepoint2d ptend);\n\n/// <summary>\n/// 创建圆弧，根据圆心，起始点，结束点\n/// </summary>\n/// <param name="ptstart"></param>\n/// <param name="ptcenter"></param>\n/// <param name="ptend"></param>\n/// <returns></returns>\nstatic acdbobjectid createarc(acgepoint2d ptcenter, acgepoint2d ptstart, acgepoint2d ptend);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\n\nacdbobjectid cwentity::createarc(acgepoint3d ptcenter, acgevector3d vec, double radius, double startangle, double endangle)\n{\n\tacdbarc* parc = new acdbarc(ptcenter, vec, radius, startangle, endangle);\n\tacdbobjectid arcid = cwdatabase::posttomodelspace(parc);\n\treturn arcid;\n}\n\nacdbobjectid cwentity::createarc(acgepoint2d ptcenter, double radius, double startangle, double endangle)\n{\n\tacgevector3d vec(0, 0, 1);\n\treturn cwentity::createarc(cwcalculation::pt2dto3d(ptcenter), vec, radius, startangle, endangle);\n}\n\nacdbobjectid cwentity::createarc(acgepoint2d ptcenter, acgepoint2d ptstart, double angle)\n{\n\tdouble radius = ptcenter.distanceto(ptstart);\n\tacgevector2d vecstart(ptstart.x - ptcenter.x, ptstart.y - ptcenter.y);\n\tdouble startangle = vecstart.angle();\n\tdouble endangle = startangle + angle;\n\n\treturn cwentity::createarc(ptcenter, radius, startangle, endangle);\n}\n\nacdbobjectid cwentity::createarc3point(acgepoint2d ptstart, acgepoint2d ptonarc, acgepoint2d ptend)\n{\n\tacgecircarc2d gearc2d(ptstart, ptonarc, ptend);\n\tacgepoint2d ptcenter = gearc2d.center();\n\tdouble radius = gearc2d.radius();\n\n\tacgevector2d vecstart(ptstart.x - ptcenter.x, ptstart.y - ptcenter.y);\n\tacgevector2d vecend(ptend.x - ptcenter.x, ptend.y - ptcenter.y);\n\tdouble startangle = vecstart.angle();\n\tdouble endangle = vecend.angle();\n\n\treturn cwentity::createarc(ptcenter, radius, startangle, endangle);\n}\n\nacdbobjectid cwentity::createarc(acgepoint2d ptcenter, acgepoint2d ptstart, acgepoint2d ptend)\n{\n\tdouble radius = ptcenter.distanceto(ptstart);\n\n\tacgevector2d vecstart(ptstart.x - ptcenter.x, ptstart.y - ptcenter.y);\n\tacgevector2d vecend(ptend.x - ptcenter.x, ptend.y - ptcenter.y);\n\tdouble startangle = vecstart.angle();\n\tdouble endangle = vecend.angle();\n\n\treturn cwentity::createarc(ptcenter, radius, startangle, endangle);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n\n\n\n# cwcmd\n\n/// <summary>\n/// 添加弧命令\n/// </summary>\nstatic void addarc1();\nstatic void addarc2();\nstatic void addarc3();\n\n\n1\n2\n3\n4\n5\n6\n\n\nvoid cwcmd::addarc1()\n{\n\t// 创建位于xoy平面上的圆弧\n\tacgepoint2d ptcenter(50, 50);\n\tcwentity::createarc(ptcenter, 100 * sqrt(2) / 2, 5 * cwcalculation::pi() / 4, 7 * cwcalculation::pi() / 4);\n}\n\nvoid cwcmd::addarc2()\n{\n\t// 三点法创建圆弧\n\tacgepoint2d ptstart(100, 0);\n\tacgepoint2d ptonarc(120, 50);\n\tacgepoint2d ptend(100, 100);\n\tcwentity::createarc3point(ptstart, ptonarc, ptend);\n}\n\nvoid cwcmd::addarc3()\n{\n\t//起点、圆心、终点创建圆弧\n\tacgepoint2d ptstart(100, 100);\n\tacgepoint2d ptcenter(50, 50);\n\tacgepoint2d ptend(0, 100);\n\tcwentity::createarc(ptcenter, ptstart, ptend);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 添加命令\n\ncwdatabase::addcommand(text("addarc1"), acrx_cmd_modal, addarc1);\ncwdatabase::addcommand(text("addarc2"), acrx_cmd_modal, addarc2);\ncwdatabase::addcommand(text("addarc3"), acrx_cmd_modal, addarc3);\n\n\n1\n2\n3\n\n\n\n# 效果\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"ObjectArx应用20",frontmatter:{title:"ObjectArx应用20",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/apply",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/19.ObjectArx%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91/20.ObjectArx%E5%BA%94%E7%94%A820.html",relativePath:"06.软件开发/19.ObjectArx二次开发/20.ObjectArx应用20.md",key:"v-fde1a2e6",path:"/soft/objectarx/apply/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"思路",slug:"思路",normalizedTitle:"思路",charIndex:164}],headersStr:"前言 思路",content:"# 前言\n\nAutoCAD ObjectArx实体的创建基本类似，前面讲了线段，圆，弧的创建，\n\n跳过了其它实体创建(你没看错，没有其他创建实体的文章了，感兴趣的可以查看张帆ObjectArx教程)\n\n学习ObjectArx主要是提高工作效率，AutoCAD只是我使用的辅助软件，需要结合自己用的软件格式化输出加工图纸\n\n\n# 思路\n\n设存在一个AutoCAD模板，工作用软件可输出dxf和数据；\n\n使用ObjectArx读取dxf，获取指定层图形，复制到模板，添加标注；\n\n读取数据，添加文字要求",normalizedContent:"# 前言\n\nautocad objectarx实体的创建基本类似，前面讲了线段，圆，弧的创建，\n\n跳过了其它实体创建(你没看错，没有其他创建实体的文章了，感兴趣的可以查看张帆objectarx教程)\n\n学习objectarx主要是提高工作效率，autocad只是我使用的辅助软件，需要结合自己用的软件格式化输出加工图纸\n\n\n# 思路\n\n设存在一个autocad模板，工作用软件可输出dxf和数据；\n\n使用objectarx读取dxf，获取指定层图形，复制到模板，添加标注；\n\n读取数据，添加文字要求",charsets:{cjk:!0},lastUpdated:"2023/10/30, 19:09:46",lastUpdatedTimestamp:1698664186e3},{title:"开发日志",frontmatter:{title:"开发日志",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/record",private:!0,categories:["软件开发"],tags:["软件开发"],readingShow:"top"},regularPath:"/06.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/21.%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/01.%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97.html",relativePath:"06.软件开发/21.开发日志/01.开发日志.md",key:"v-9b16a76c",path:"/soft/record/",headers:[{level:2,title:"Allegro",slug:"allegro",normalizedTitle:"allegro",charIndex:2},{level:3,title:"17.2降版本",slug:"_17-2降版本",normalizedTitle:"17.2降版本",charIndex:14}],headersStr:"Allegro 17.2降版本",content:"# Allegro\n\n\n# 17.2降版本\n\n * 2023-11-08，172导出库，并降为166版本\n * 2023-11-09，172导出网表，导出坐标\n * 2023-11-10，166导入网表\n * 2023-11-13，根据网表生成device文件\n * 2023-11-14，166导入坐标\n * 2023-11-15，导出板框信息，导出基本信息，shape void待优化\n * 2023-11-21，导出text,line基本信息\n * 2023-11-25，166导入参数，层数，颜色，网表，坐标\n * 2023-11-26，166绘制outline，禁布区，规则区域\n * 2023-11-27，166导入规则，绘制cline，shape\n * 2023-11-29，166导入完成",normalizedContent:"# allegro\n\n\n# 17.2降版本\n\n * 2023-11-08，172导出库，并降为166版本\n * 2023-11-09，172导出网表，导出坐标\n * 2023-11-10，166导入网表\n * 2023-11-13，根据网表生成device文件\n * 2023-11-14，166导入坐标\n * 2023-11-15，导出板框信息，导出基本信息，shape void待优化\n * 2023-11-21，导出text,line基本信息\n * 2023-11-25，166导入参数，层数，颜色，网表，坐标\n * 2023-11-26，166绘制outline，禁布区，规则区域\n * 2023-11-27，166导入规则，绘制cline，shape\n * 2023-11-29，166导入完成",charsets:{cjk:!0},lastUpdated:"2023/11/29, 22:22:02",lastUpdatedTimestamp:1701267722e3},{title:"安装配置Docker",frontmatter:{title:"安装配置Docker",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/docker/install/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/01.Docker/01.%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEDocker.html",relativePath:"10.运维管理/01.Docker/01.安装配置Docker.md",key:"v-68f0f323",path:"/operation/docker/install/",headers:[{level:2,title:"概念",slug:"概念",normalizedTitle:"概念",charIndex:3},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:9},{level:2,title:"架构",slug:"架构",normalizedTitle:"架构",charIndex:15},{level:2,title:"配置加速器",slug:"配置加速器",normalizedTitle:"配置加速器",charIndex:21}],headersStr:"概念 安装 架构 配置加速器",content:' * 概念\n * 安装\n * 架构\n * 配置加速器\n\n\n\n黑马程序员Docker容器化技术，从零学会Docker教程\n\n\n# 概念\n\n * Docker是一个开源的应用容器引擎\n * 诞生于2013年初，基于GO语言实现，dotCloud公式出品（后改为Docker Inc）\n * 可以打包到轻量级、可移植容器中，发布到Linux机器上\n * 容器是完全使用沙箱机制，相互隔离\n * 容器性能开销极低\n * Docker从17.03版本后分为CE和EE\n\n\n# 安装\n\n# 1.移除已存在\nyum remove docker*\n# 2.yum包更新到最新\nyum update\n# 3.安装依赖\nyum install -y yum-utils device-mapper-persistent-data lvm2\n# 4.设置yum源\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n# 5.安装docker\nyum install -y docker-ce\n# 6.查看版本\ndocker -v\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 架构\n\n\n\n * 镜像（Images）：相当于一个root系统\n * 容器（Container）：容器是镜像运行时的实体，容器可以被创建，启动，停止，删除，暂停等\n\n\n# 配置加速器\n\n默认情况下，将从docker hub（http://hub.docker.com）下载docker镜像，下载速度慢，需要配置镜像加速器。\n\n * USTC：中科大镜像加速器（https://docker.mirrors.ustc.edu.cn）\n * 阿里云\n * 腾讯云\n * 163 http://hub-mirror.c.163.com/\n\n修改/etc/docker/daemon.json\n\nmkdir -p /etc/docker\ntee /etc/docker/daemon.json <<-\'EOF\'\n{\n\t"registry-mirrors": [\n\t\t"http://hub-mirror.c.163.com/"\n\t]\n}\nEOF\nsystemctl daemon-reload\nsystemctl restart docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',normalizedContent:' * 概念\n * 安装\n * 架构\n * 配置加速器\n\n\n\n黑马程序员docker容器化技术，从零学会docker教程\n\n\n# 概念\n\n * docker是一个开源的应用容器引擎\n * 诞生于2013年初，基于go语言实现，dotcloud公式出品（后改为docker inc）\n * 可以打包到轻量级、可移植容器中，发布到linux机器上\n * 容器是完全使用沙箱机制，相互隔离\n * 容器性能开销极低\n * docker从17.03版本后分为ce和ee\n\n\n# 安装\n\n# 1.移除已存在\nyum remove docker*\n# 2.yum包更新到最新\nyum update\n# 3.安装依赖\nyum install -y yum-utils device-mapper-persistent-data lvm2\n# 4.设置yum源\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n# 5.安装docker\nyum install -y docker-ce\n# 6.查看版本\ndocker -v\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 架构\n\n\n\n * 镜像（images）：相当于一个root系统\n * 容器（container）：容器是镜像运行时的实体，容器可以被创建，启动，停止，删除，暂停等\n\n\n# 配置加速器\n\n默认情况下，将从docker hub（http://hub.docker.com）下载docker镜像，下载速度慢，需要配置镜像加速器。\n\n * ustc：中科大镜像加速器（https://docker.mirrors.ustc.edu.cn）\n * 阿里云\n * 腾讯云\n * 163 http://hub-mirror.c.163.com/\n\n修改/etc/docker/daemon.json\n\nmkdir -p /etc/docker\ntee /etc/docker/daemon.json <<-\'eof\'\n{\n\t"registry-mirrors": [\n\t\t"http://hub-mirror.c.163.com/"\n\t]\n}\neof\nsystemctl daemon-reload\nsystemctl restart docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Docker命令",frontmatter:{title:"Docker命令",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/docker/command/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/01.Docker/02.Docker%E5%91%BD%E4%BB%A4.html",relativePath:"10.运维管理/01.Docker/02.Docker命令.md",key:"v-2ba4f032",path:"/operation/docker/command/",headers:[{level:2,title:"服务相关命令",slug:"服务相关命令",normalizedTitle:"服务相关命令",charIndex:3},{level:2,title:"镜像相关命令",slug:"镜像相关命令",normalizedTitle:"镜像相关命令",charIndex:13},{level:2,title:"容器相关命令",slug:"容器相关命令",normalizedTitle:"容器相关命令",charIndex:23}],headersStr:"服务相关命令 镜像相关命令 容器相关命令",content:" * 服务相关命令\n * 镜像相关命令\n * 容器相关命令\n\n\n\n\n# 服务相关命令\n\n * 启动docker服务\n   \n   systemctl start docker\n   \n   \n   1\n   \n\n * 停止docker服务\n   \n   systemctl stop docker\n   \n   \n   1\n   \n\n * 重启docker服务\n   \n   systemctl restart docker\n   \n   \n   1\n   \n\n * 查看docker服务状态\n   \n   systemctl status docker\n   \n   \n   \n   1\n   2\n   \n\n * 开机启动docker服务\n   \n   systemctl enable docker\n   \n   \n   1\n   \n\n\n# 镜像相关命令\n\n * 查看镜像\n   \n   docker images\n   \n   \n   1\n   \n\n * 搜索镜像\n   \n   docker search redis\n   \n   \n   1\n   \n\n * 拉取镜像\n   \n   docker pull redis\n   docker pull redis:5.0\n   \n   \n   1\n   2\n   \n\n * 删除镜像\n   \n   docker rmi $ID\n   docker rmi redis:5.0\n   \n   \n   1\n   2\n   \n\n * 删除所有镜像\n   \n   docker rmi `docker images -q`\n   \n   \n   1\n   \n\n * 导出镜像\n   \n   docker export f299f501774c > hangger_server.tar\n   \n   \n   1\n   \n\n * 导入镜像\n   \n   docker import - new_hangger_server < hangger_server.tar\n   \n   \n   1\n   \n\n * 保存镜像\n   \n   docker save 0fdf2b4c26d3 > hangge_server.tar\n   \n   \n   1\n   \n\n * 加载镜像\n   \n   docker load < hangge_server.tar\n   \n   \n   1\n   \n\n导出导入与保存加载区别\n\n 1. 文件大小不同：export 导出的镜像文件体积小于 save 保存的镜像\n\n 2. 是否可以对镜像重命名：\n    \n    docker import 可以为镜像指定新名称 docker load 不能对载入的镜像重命名\n\n 3. 是否可以同时将多个镜像打包到一个文件中\n    \n    docker export 不支持 docker save 支持\n\n 4. 是否包含镜像历史\n    \n    export 导出（import 导入）是根据容器拿到的镜像，再导入时会丢失镜像所有的历史记录和元数据信息（即仅保存容器当时的快照状态），所以无法进行回滚操作。 而 save 保存（load 加载）的镜像，没有丢失镜像的历史，可以回滚到之前的层（layer）\n\n 5. 应用场景不同\n    \n    docker export 的应用场景：主要用来制作基础镜像，比如我们从一个 ubuntu 镜像启动一个容器，然后安装一些软件和进行一些设置后，使用 docker export 保存为一个基础镜像。然后，把这个镜像分发给其他人使用，比如作为基础的开发环境。 docker save 的应用场景：如果我们的应用是使用 docker-compose.yml 编排的多个镜像组合，但我们要部署的客户服务器并不能连外网。这时就可以使用 docker save 将用到的镜像打个包，然后拷贝到客户服务器上使用 docker load 载入\n\n\n# 容器相关命令\n\n * 查看容器\n   \n   docker ps\t\t#查看正在运行的容器\n   docker ps -a\t#查看所有容器\n   \n   \n   1\n   2\n   \n\n * 创建容器\n   \n   docker run 参数\n   \n   \n   1\n   \n   \n   参数说明：\n   \n   * -i：保持容器运行。通常与 -t 同时使用。加入 it 这两个参数后，容器创建后自动进入到容器中，退出容器后，容器自动关闭\n   \n   * -t：为容器重新分配一个伪输入终端，通常与 -i 同时使用\n   \n   * -d：以守护（后台）模式运行容器。创建一个容器在后台运行，需要使用docker exec进入容器。退出后，容器不会关闭\n   \n   * -it：创建的容器一般为交互式容器，-id 创建的容器一般为守护式容器\n   \n   * --name：为创建的容器命名\n     \n     docker run -it --name=c1 centos:7 /bin/bash\n     docker run -id --name=c2 centos:7\n     \n     \n     1\n     2\n     \n\n * 进入容器\n   \n   docker exec -it c2 /bin/bash\n   \n   \n   1\n   \n\n * 启动容器\n   \n   docker start c2\n   \n   \n   1\n   \n\n * 停止容器\n   \n   docker stop c2\n   \n   \n   1\n   \n\n * 删除容器，运行状态需要先停止再删除\n   \n   docker rm ID\n   docker rm c1\n   docker rm `docker ps -aq`\n   \n   \n   1\n   2\n   3\n   \n\n * 查看容器信息\n   \n   docker inspect c2\n   \n   \n   1\n   ",normalizedContent:" * 服务相关命令\n * 镜像相关命令\n * 容器相关命令\n\n\n\n\n# 服务相关命令\n\n * 启动docker服务\n   \n   systemctl start docker\n   \n   \n   1\n   \n\n * 停止docker服务\n   \n   systemctl stop docker\n   \n   \n   1\n   \n\n * 重启docker服务\n   \n   systemctl restart docker\n   \n   \n   1\n   \n\n * 查看docker服务状态\n   \n   systemctl status docker\n   \n   \n   \n   1\n   2\n   \n\n * 开机启动docker服务\n   \n   systemctl enable docker\n   \n   \n   1\n   \n\n\n# 镜像相关命令\n\n * 查看镜像\n   \n   docker images\n   \n   \n   1\n   \n\n * 搜索镜像\n   \n   docker search redis\n   \n   \n   1\n   \n\n * 拉取镜像\n   \n   docker pull redis\n   docker pull redis:5.0\n   \n   \n   1\n   2\n   \n\n * 删除镜像\n   \n   docker rmi $id\n   docker rmi redis:5.0\n   \n   \n   1\n   2\n   \n\n * 删除所有镜像\n   \n   docker rmi `docker images -q`\n   \n   \n   1\n   \n\n * 导出镜像\n   \n   docker export f299f501774c > hangger_server.tar\n   \n   \n   1\n   \n\n * 导入镜像\n   \n   docker import - new_hangger_server < hangger_server.tar\n   \n   \n   1\n   \n\n * 保存镜像\n   \n   docker save 0fdf2b4c26d3 > hangge_server.tar\n   \n   \n   1\n   \n\n * 加载镜像\n   \n   docker load < hangge_server.tar\n   \n   \n   1\n   \n\n导出导入与保存加载区别\n\n 1. 文件大小不同：export 导出的镜像文件体积小于 save 保存的镜像\n\n 2. 是否可以对镜像重命名：\n    \n    docker import 可以为镜像指定新名称 docker load 不能对载入的镜像重命名\n\n 3. 是否可以同时将多个镜像打包到一个文件中\n    \n    docker export 不支持 docker save 支持\n\n 4. 是否包含镜像历史\n    \n    export 导出（import 导入）是根据容器拿到的镜像，再导入时会丢失镜像所有的历史记录和元数据信息（即仅保存容器当时的快照状态），所以无法进行回滚操作。 而 save 保存（load 加载）的镜像，没有丢失镜像的历史，可以回滚到之前的层（layer）\n\n 5. 应用场景不同\n    \n    docker export 的应用场景：主要用来制作基础镜像，比如我们从一个 ubuntu 镜像启动一个容器，然后安装一些软件和进行一些设置后，使用 docker export 保存为一个基础镜像。然后，把这个镜像分发给其他人使用，比如作为基础的开发环境。 docker save 的应用场景：如果我们的应用是使用 docker-compose.yml 编排的多个镜像组合，但我们要部署的客户服务器并不能连外网。这时就可以使用 docker save 将用到的镜像打个包，然后拷贝到客户服务器上使用 docker load 载入\n\n\n# 容器相关命令\n\n * 查看容器\n   \n   docker ps\t\t#查看正在运行的容器\n   docker ps -a\t#查看所有容器\n   \n   \n   1\n   2\n   \n\n * 创建容器\n   \n   docker run 参数\n   \n   \n   1\n   \n   \n   参数说明：\n   \n   * -i：保持容器运行。通常与 -t 同时使用。加入 it 这两个参数后，容器创建后自动进入到容器中，退出容器后，容器自动关闭\n   \n   * -t：为容器重新分配一个伪输入终端，通常与 -i 同时使用\n   \n   * -d：以守护（后台）模式运行容器。创建一个容器在后台运行，需要使用docker exec进入容器。退出后，容器不会关闭\n   \n   * -it：创建的容器一般为交互式容器，-id 创建的容器一般为守护式容器\n   \n   * --name：为创建的容器命名\n     \n     docker run -it --name=c1 centos:7 /bin/bash\n     docker run -id --name=c2 centos:7\n     \n     \n     1\n     2\n     \n\n * 进入容器\n   \n   docker exec -it c2 /bin/bash\n   \n   \n   1\n   \n\n * 启动容器\n   \n   docker start c2\n   \n   \n   1\n   \n\n * 停止容器\n   \n   docker stop c2\n   \n   \n   1\n   \n\n * 删除容器，运行状态需要先停止再删除\n   \n   docker rm id\n   docker rm c1\n   docker rm `docker ps -aq`\n   \n   \n   1\n   2\n   3\n   \n\n * 查看容器信息\n   \n   docker inspect c2\n   \n   \n   1\n   ",charsets:{cjk:!0},lastUpdated:"2023/07/04, 09:38:55",lastUpdatedTimestamp:1688434735e3},{title:"Docker容器数据卷",frontmatter:{title:"Docker容器数据卷",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/docker/data/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/01.Docker/03.Docker%E5%AE%B9%E5%99%A8%E6%95%B0%E6%8D%AE%E5%8D%B7.html",relativePath:"10.运维管理/01.Docker/03.Docker容器数据卷.md",key:"v-2136281a",path:"/operation/docker/data/",headers:[{level:2,title:"数据卷",slug:"数据卷",normalizedTitle:"数据卷",charIndex:2},{level:2,title:"数据卷作用",slug:"数据卷作用",normalizedTitle:"数据卷作用",charIndex:102},{level:2,title:"配置数据卷",slug:"配置数据卷",normalizedTitle:"配置数据卷",charIndex:151},{level:2,title:"数据卷容器",slug:"数据卷容器",normalizedTitle:"数据卷容器",charIndex:423},{level:2,title:"配置数据卷容器",slug:"配置数据卷容器",normalizedTitle:"配置数据卷容器",charIndex:470}],headersStr:"数据卷 数据卷作用 配置数据卷 数据卷容器 配置数据卷容器",content:"# 数据卷\n\n * 数据卷是宿主机中的一个目录或文件\n\n * 当容器目录和数据卷目录绑定后，对方的修改会立即同步\n\n * 一个数据卷可以被多个容器同时挂载\n\n * 一个容器也可以被挂载多个数据卷\n\n\n# 数据卷作用\n\n * 容器数据持久化\n * 外部集齐与容器间接通信\n * 容器之间数据交换\n\n\n# 配置数据卷\n\n * 创建启动容器时，使用 -v 参数设置数据卷\n   \n   注意\n   \n   注意事项：\n   \n    * 目录必须是绝对路径\n    * 如果目录不存在，会自动创建\n    * 可以挂在多个数据卷\n   \n   docker run ... -v 书主机目录:容器内目录\n   \n   \n   1\n   \n   \n   docker run -it --name=c1 -v /root/data:/root/data_container centos:7 /bin/bash\n   \n   \n   1\n   \n\n\n# 数据卷容器\n\n多容器数据交换\n\n 1. 多个容器挂载同一个数据卷\n 2. 数据卷容器\n\n\n# 配置数据卷容器\n\n 1. 创建启动c3数据卷容器，使用 -v 参数设置数据卷\n    \n    docker run -it --name=c3 -v /volume centos:7\n    \n    \n    1\n    \n\n 2. 创建启动c1 c2容器，使用 --volumes-from参数 设置数据卷\n    \n    docker run -it --name=c1 --volumes-from c3 centos:7\n    docker run -it --name=c2 --volumes-from c3 centos:7\n    \n    \n    1\n    2\n    ",normalizedContent:"# 数据卷\n\n * 数据卷是宿主机中的一个目录或文件\n\n * 当容器目录和数据卷目录绑定后，对方的修改会立即同步\n\n * 一个数据卷可以被多个容器同时挂载\n\n * 一个容器也可以被挂载多个数据卷\n\n\n# 数据卷作用\n\n * 容器数据持久化\n * 外部集齐与容器间接通信\n * 容器之间数据交换\n\n\n# 配置数据卷\n\n * 创建启动容器时，使用 -v 参数设置数据卷\n   \n   注意\n   \n   注意事项：\n   \n    * 目录必须是绝对路径\n    * 如果目录不存在，会自动创建\n    * 可以挂在多个数据卷\n   \n   docker run ... -v 书主机目录:容器内目录\n   \n   \n   1\n   \n   \n   docker run -it --name=c1 -v /root/data:/root/data_container centos:7 /bin/bash\n   \n   \n   1\n   \n\n\n# 数据卷容器\n\n多容器数据交换\n\n 1. 多个容器挂载同一个数据卷\n 2. 数据卷容器\n\n\n# 配置数据卷容器\n\n 1. 创建启动c3数据卷容器，使用 -v 参数设置数据卷\n    \n    docker run -it --name=c3 -v /volume centos:7\n    \n    \n    1\n    \n\n 2. 创建启动c1 c2容器，使用 --volumes-from参数 设置数据卷\n    \n    docker run -it --name=c1 --volumes-from c3 centos:7\n    docker run -it --name=c2 --volumes-from c3 centos:7\n    \n    \n    1\n    2\n    ",charsets:{cjk:!0},lastUpdated:"2023/06/21, 15:43:04",lastUpdatedTimestamp:1687333384e3},{title:"Docker应用部署",frontmatter:{title:"Docker应用部署",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/docker/deploy/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/01.Docker/04.Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2.html",relativePath:"10.运维管理/01.Docker/04.Docker应用部署.md",key:"v-00aa7218",path:"/operation/docker/deploy/",headers:[{level:2,title:"部署MySQL",slug:"部署mysql",normalizedTitle:"部署mysql",charIndex:2},{level:2,title:"部署Tomcat",slug:"部署tomcat",normalizedTitle:"部署tomcat",charIndex:885},{level:2,title:"部署Nginx",slug:"部署nginx",normalizedTitle:"部署nginx",charIndex:1480},{level:2,title:"部署Redis",slug:"部署redis",normalizedTitle:"部署redis",charIndex:2284}],headersStr:"部署MySQL 部署Tomcat 部署Nginx 部署Redis",content:"# 部署MySQL\n\n 1. 搜索MySQL镜像\n    \n    docker search mysql\n    \n    \n    1\n    \n\n 2. 拉取MySQL镜像\n    \n    docker pull mysql:5.6\n    \n    \n    1\n    \n\n 3. 创建容器，设置端口映射、目录映射\n    \n    # 创建目录用于存储 MySQL 数据信息\n    mkdir ~/mysql\n    cd ~/mysql\n    \n    \n    1\n    2\n    3\n    \n    \n    docker run -id \\\n    -p 3306:3306 \\\n    --name=c_mysql \\\n    -v $PWD/conf:/etc/mysql/conf.d \\\n    -v $PWD/logs:/logs \\\n    -v $PWD/data:/var/lib/mysql \\\n    -e MYSQL_ROOT_PASSWORD=123456 \\\n    mysql:5.6\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n    \n    参数说明：\n    \n    * -p 3306:3306：将容器的3306端口映射到宿主机的3306端口\n    * -v $PWD/conf:/ect/mysql/conf.d：将主机当前目录下的conf/my.cnf挂载到容器的/etc/mysql/my.cnf。配置目录\n    * -v $PWD/logs:/logs：将主机当前目录下的logs目录挂载到容器的/logs。日志目录\n    * -v $PWD/data:/var/lib/mysql：将当前目录下的data目录挂载到容器的/var/lib/mysql。数据目录\n    * -e MYSQL_ROOT_PASSWORD=123456：初始化root用户的密码\n\n 4. 操作容器中的MySQL\n\n\n# 部署Tomcat\n\n 1. 搜索Tomcat镜像\n    \n    docker search tomcat\n    \n    \n    1\n    \n\n 2. 拉取Tomcat镜像\n    \n    docker pull tomcat\n    \n    \n    1\n    \n\n 3. 创建容器，设置一端口映射、目录映射\n    \n    # 在/root目录下创建tomcat目录用于存放数据信息\n    mkdir ~/tomcat\n    cd ~/tomcat\n    \n    \n    1\n    2\n    3\n    \n    \n    docker run -id --name=c_tomcat \\\n    -p 8080:8080 \\\n    -v $PWD:/usr/local/tomcat/webapps \\\n    tomcat\n    \n    \n    1\n    2\n    3\n    4\n    \n    \n    参数说明：\n    \n    * -p 8080:8080：将容器的8080端口映射到宿主机的8080端口\n    * -v $PWD:/usr/local/tomcat/webapps：配置目录\n\n 4. 使用外部机器访问Tomcat\n    \n    http://192.168.1.10/test/a.html\n\n\n# 部署Nginx\n\n 1. 搜索Nginx镜像\n    \n    docker search nginx\n    \n    \n    1\n    \n\n 2. 拉取Nginx镜像\n    \n    docker pull nginx\n    \n    \n    1\n    \n\n 3. 创建容器，设置一端口映射、目录映射\n    \n    # 在/root目录下创建nginx目录用于存放数据信息\n    mkdir ~/nginx\n    cd ~/nginx\n    mkdir ~/conf\n    cd ~/conf\n    mkdir ~/logs\n    cd ~/logs\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    \n    \n    docker run -id --name=c_nginx \\\n    -p 80:80 \\\n    -v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf \\\n    -v $PWD/logs:/var/log/nginx \\\n    -v $PWD/html:/usr/share/nginx/html \\\n    nginx\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n    \n    参数说明：\n    \n    * -p 80:80：将容器的8080端口映射到宿主机的8080端口\n    * -v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf：将主机当前目录下的nginx.conf挂载到容器的/etc/nginx/nginx.conf\n\n 4. 使用外部机器访问Nginx\n    \n    http://192.168.1.10/\n\n\n# 部署Redis\n\n 1. 搜索Redis镜像\n    \n    docker search redis\n    \n    \n    1\n    \n\n 2. 拉取Redis镜像\n    \n    docker pull redis\n    \n    \n    1\n    \n\n 3. 创建容器，设置一端口映射、目录映射\n    \n    docker run -id --name=c_redis -p 6379:6379 redis\n    \n    \n    1\n    \n\n 4. 使用外部机器访问Nginx\n    \n    redis-cli.exe -h 192.168.1.10 -p 6379\n    \n    \n    1\n    ",normalizedContent:"# 部署mysql\n\n 1. 搜索mysql镜像\n    \n    docker search mysql\n    \n    \n    1\n    \n\n 2. 拉取mysql镜像\n    \n    docker pull mysql:5.6\n    \n    \n    1\n    \n\n 3. 创建容器，设置端口映射、目录映射\n    \n    # 创建目录用于存储 mysql 数据信息\n    mkdir ~/mysql\n    cd ~/mysql\n    \n    \n    1\n    2\n    3\n    \n    \n    docker run -id \\\n    -p 3306:3306 \\\n    --name=c_mysql \\\n    -v $pwd/conf:/etc/mysql/conf.d \\\n    -v $pwd/logs:/logs \\\n    -v $pwd/data:/var/lib/mysql \\\n    -e mysql_root_password=123456 \\\n    mysql:5.6\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n    \n    参数说明：\n    \n    * -p 3306:3306：将容器的3306端口映射到宿主机的3306端口\n    * -v $pwd/conf:/ect/mysql/conf.d：将主机当前目录下的conf/my.cnf挂载到容器的/etc/mysql/my.cnf。配置目录\n    * -v $pwd/logs:/logs：将主机当前目录下的logs目录挂载到容器的/logs。日志目录\n    * -v $pwd/data:/var/lib/mysql：将当前目录下的data目录挂载到容器的/var/lib/mysql。数据目录\n    * -e mysql_root_password=123456：初始化root用户的密码\n\n 4. 操作容器中的mysql\n\n\n# 部署tomcat\n\n 1. 搜索tomcat镜像\n    \n    docker search tomcat\n    \n    \n    1\n    \n\n 2. 拉取tomcat镜像\n    \n    docker pull tomcat\n    \n    \n    1\n    \n\n 3. 创建容器，设置一端口映射、目录映射\n    \n    # 在/root目录下创建tomcat目录用于存放数据信息\n    mkdir ~/tomcat\n    cd ~/tomcat\n    \n    \n    1\n    2\n    3\n    \n    \n    docker run -id --name=c_tomcat \\\n    -p 8080:8080 \\\n    -v $pwd:/usr/local/tomcat/webapps \\\n    tomcat\n    \n    \n    1\n    2\n    3\n    4\n    \n    \n    参数说明：\n    \n    * -p 8080:8080：将容器的8080端口映射到宿主机的8080端口\n    * -v $pwd:/usr/local/tomcat/webapps：配置目录\n\n 4. 使用外部机器访问tomcat\n    \n    http://192.168.1.10/test/a.html\n\n\n# 部署nginx\n\n 1. 搜索nginx镜像\n    \n    docker search nginx\n    \n    \n    1\n    \n\n 2. 拉取nginx镜像\n    \n    docker pull nginx\n    \n    \n    1\n    \n\n 3. 创建容器，设置一端口映射、目录映射\n    \n    # 在/root目录下创建nginx目录用于存放数据信息\n    mkdir ~/nginx\n    cd ~/nginx\n    mkdir ~/conf\n    cd ~/conf\n    mkdir ~/logs\n    cd ~/logs\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    \n    \n    docker run -id --name=c_nginx \\\n    -p 80:80 \\\n    -v $pwd/conf/nginx.conf:/etc/nginx/nginx.conf \\\n    -v $pwd/logs:/var/log/nginx \\\n    -v $pwd/html:/usr/share/nginx/html \\\n    nginx\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n    \n    参数说明：\n    \n    * -p 80:80：将容器的8080端口映射到宿主机的8080端口\n    * -v $pwd/conf/nginx.conf:/etc/nginx/nginx.conf：将主机当前目录下的nginx.conf挂载到容器的/etc/nginx/nginx.conf\n\n 4. 使用外部机器访问nginx\n    \n    http://192.168.1.10/\n\n\n# 部署redis\n\n 1. 搜索redis镜像\n    \n    docker search redis\n    \n    \n    1\n    \n\n 2. 拉取redis镜像\n    \n    docker pull redis\n    \n    \n    1\n    \n\n 3. 创建容器，设置一端口映射、目录映射\n    \n    docker run -id --name=c_redis -p 6379:6379 redis\n    \n    \n    1\n    \n\n 4. 使用外部机器访问nginx\n    \n    redis-cli.exe -h 192.168.1.10 -p 6379\n    \n    \n    1\n    ",charsets:{cjk:!0},lastUpdated:"2023/06/24, 19:02:56",lastUpdatedTimestamp:1687604576e3},{title:"Dockerfile使用",frontmatter:{title:"Dockerfile使用",date:"2023-06-24T21:00:00.000Z",permalink:"/operation/docker/dockerfile/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/01.Docker/05.Dockerfile%E4%BD%BF%E7%94%A8.html",relativePath:"10.运维管理/01.Docker/05.Dockerfile使用.md",key:"v-07609fd4",path:"/operation/docker/dockerfile/",headers:[{level:2,title:"Docker镜像原理",slug:"docker镜像原理",normalizedTitle:"docker镜像原理",charIndex:2},{level:2,title:"镜像制作",slug:"镜像制作",normalizedTitle:"镜像制作",charIndex:788},{level:3,title:"容器转为镜像",slug:"容器转为镜像",normalizedTitle:"容器转为镜像",charIndex:797},{level:3,title:"dockerfile",slug:"dockerfile",normalizedTitle:"dockerfile",charIndex:899},{level:4,title:"概念",slug:"概念",normalizedTitle:"概念",charIndex:913},{level:4,title:"关键字",slug:"关键字",normalizedTitle:"关键字",charIndex:1098},{level:4,title:"制作springboot镜像",slug:"制作springboot镜像",normalizedTitle:"制作springboot镜像",charIndex:2725},{level:4,title:"自定义centos镜像",slug:"自定义centos镜像",normalizedTitle:"自定义centos镜像",charIndex:2962},{level:2,title:"服务编排",slug:"服务编排",normalizedTitle:"服务编排",charIndex:3198},{level:3,title:"Docker Compose",slug:"docker-compose",normalizedTitle:"docker compose",charIndex:3224},{level:3,title:"安装使用",slug:"安装使用",normalizedTitle:"安装使用",charIndex:3411}],headersStr:"Docker镜像原理 镜像制作 容器转为镜像 dockerfile 概念 关键字 制作springboot镜像 自定义centos镜像 服务编排 Docker Compose 安装使用",content:'# Docker镜像原理\n\n 1. Docker镜像的本质？\n    \n    本质是分层的文件系统\n    \n    Linux文件系统由bootfs和rootfs两部分组成\n    \n    * bootfs：包含bootloader和kernel\n    \n    * rootfs：root文件系统，包含/dev，/bin等目录\n    \n    * 不同linux发行版，bootfs基本一样，而rootfs不同\n    \n    * Docker镜像是由特殊的文件系统叠加而成\n    \n    * 最底端是bootfs，并使用宿主机的bootfs\n    \n    * 第二层是rootfs\n    \n    * 然后再往上叠加其他镜像文件\n    \n    * 统一文件系统技术能够将不同层整合成一个文件系统，为这些层提供了一个统一的视角，这样就隐藏了多层的存在，在用户角度看来，只存在一个文件系统\n    \n    * 一个镜像可以放在另一个镜像上面。位于下面的镜像称为父镜像，最底部的镜像称为基础镜像\n    \n    * 当从一个镜像启动容器时，Docker会在最顶层加载一个读写文件系统作为容器\n      \n      \n\n 2. Docker中一个centos镜像只有200M，而一个ISO镜像需要几个G？\n    \n    CentOS的ISO镜像文件包含 bootfs 和 rootfs，而 docker 的 centos 镜像复用操作系统的bootfs，只有 rootfs 和其他镜像层\n\n 3. Docker中Tomcat镜像有500M，一个Tomcat安装包只有70M？\n    \n    由于docker中镜像是分层的，tomcat 虽然只有70M，但需要依赖父镜像和基础镜像，所以整个对外暴露的 tomcat 镜像有500M\n\n\n# 镜像制作\n\n\n# 容器转为镜像\n\ndocker commit 容器id 镜像名称:版本号\ndocker save -o 压缩文件名称 镜像名称:版本号\ndocker load -i 压缩文件名称\n\n\n1\n2\n3\n\n\n\n# dockerfile\n\n# 概念\n\n * dockerfile是一个文本文件\n * 包含了一条条指令\n * 每一条指令构建一层，基于基础镜像，最终构建出一个新的镜像\n * 对于开发人员：可以为开发团队提供一个完全一致的开发环境\n * 对于测试人员：可以直接拿开发时所构建的镜像或者通过dockerfile文件构建一个新的镜像开始工作\n * 对于运维人员：在部署时，可以实现应用的无缝移植\n\n\n\n# 关键字\n\n关键字           作用             备注\nFROM          指定父镜像          指定dockerfile基于哪个image创建\nMAINTAINER    作者信息           用于表明这个dockerfile是谁写的\nLABEL         标签             用于标明dockerfile标签，可以使用LABEL代替MAINTAINER，最终都可以在docker\n                             image基本信息中查看\nRUN           执行命令           执行一段命令，默认是 /bin/sh，格式：RUN command 或者 RUN\n                             ["command","param1","param2"]\nCMD           容器启动命令         提供启动容器时候的默认命令，和ENTRYPOINT配合使用，格式：CMD command param1 param2\n                             或者 CMD ["command","param1","param2"]\nENTRYPOINT    入口             一般在只做一些执行就关闭的容器中会使用\nCOPY          复制文件           build 的时候复制文件到 image 中\nADD           添加文件           build 的时候添加文件到 image 中，不仅仅局限于当前 build 的上下文，可以来源于远程服务\nENV           环境变量           指定 build 时候的环境变量，可以在启动容器时，通过 -e 覆盖，格式 ENV name=value\nARG           构建参数           只在构建的时候使用的参数，如果有ENV，那么 ENV 优先级高于 ARG\nVOLUME        定义外部可以挂载的数据卷   指定 build 的 image 哪些目录可以启动的时候挂载到文件系统中，启动容器的时候使用 -v\n                             绑定，格式VOLUME ["目录"]\nEXPOSE        暴露端口           定义容器运行时候监听的端口，启动容器时使用 -p 来绑定暴露端口，格式：EXPOSE 8080 或者 EXPOSE\n                             8080/UDP\nWORKDIR       工作目录           指定容器内部的工作目录，如果没有创建则自动创建，如果指定 / 使用的是绝对地址，如果不是 / 开头，那么是在上一条\n                             WORKDIR 的路径的相对路径\nUSER          指定执行用户         指定 build 或者启动时，用户在 RUN CMD ENTRYPOINT 执行的时候的用户\nHEALTHCHECK   健康检查           指定监测当前容器的健康监测的命令\nONBUILD       触发器            当存在 ONBUILD 关键字的镜像作为基础镜像时，执行 FROM 完成之后，会执行 ONBUILD\n                             ，但是不影响当前镜像\nSTOPSIGNAL    发送信号量到宿主机      STOPSIGNAL指令设置将发送到容器的系统调用信号以退出\nSHELL         指定执行脚本的shell   指定RUN CMD ENTRYPOINT 执行命令的时候使用\n\n# 制作springboot镜像\n\n 1. 定义父镜像 FROM java:8\n 2. 定义作者信息 MAINTAINER icaiwei <icaiwei@icaiwei.com>\n 3. 将 jar 包添加到容器 ADD springboot.jar app.jar\n 4. 定义容器启动执行的命令CMD java -jar app.jar\n 5. 通过dockerfile构建镜像 docker build -f dockerfile文件路径 -t 镜像名称:版本\n\n# 自定义centos镜像\n\n 1. 定义父镜像 FROM centos:7\n 2. 定义作者信息 MAINTAINER icaiwei <icaiwei@icaiwei.com>\n 3. 安装vim yum install -y vim\n 4. 定义默认工作目录WORKDIR /usr\n 5. 定义容器启动命令CMD /bin/bash\n 6. 通过dockerfile构建镜像 docker build -f dockerfile文件路径 -t 镜像名称:版本\n\n\n# 服务编排\n\n按照一定的业务规则批量管理容器\n\n\n# Docker Compose\n\nDocker Compose是一个编排多容器分布式部署的工具，提供命令集管理容器化应用的完整开发周期，包括服务构建，启动和停止。\n\n使用步骤：\n\n 1. 利用 Dockerfile 定义运行环境镜像\n 2. 使用 docker-compose.yml 定义组成应用的各服务\n 3. 运行 docker-compose up 启动应用\n\n\n# 安装使用\n\n# 安装',normalizedContent:'# docker镜像原理\n\n 1. docker镜像的本质？\n    \n    本质是分层的文件系统\n    \n    linux文件系统由bootfs和rootfs两部分组成\n    \n    * bootfs：包含bootloader和kernel\n    \n    * rootfs：root文件系统，包含/dev，/bin等目录\n    \n    * 不同linux发行版，bootfs基本一样，而rootfs不同\n    \n    * docker镜像是由特殊的文件系统叠加而成\n    \n    * 最底端是bootfs，并使用宿主机的bootfs\n    \n    * 第二层是rootfs\n    \n    * 然后再往上叠加其他镜像文件\n    \n    * 统一文件系统技术能够将不同层整合成一个文件系统，为这些层提供了一个统一的视角，这样就隐藏了多层的存在，在用户角度看来，只存在一个文件系统\n    \n    * 一个镜像可以放在另一个镜像上面。位于下面的镜像称为父镜像，最底部的镜像称为基础镜像\n    \n    * 当从一个镜像启动容器时，docker会在最顶层加载一个读写文件系统作为容器\n      \n      \n\n 2. docker中一个centos镜像只有200m，而一个iso镜像需要几个g？\n    \n    centos的iso镜像文件包含 bootfs 和 rootfs，而 docker 的 centos 镜像复用操作系统的bootfs，只有 rootfs 和其他镜像层\n\n 3. docker中tomcat镜像有500m，一个tomcat安装包只有70m？\n    \n    由于docker中镜像是分层的，tomcat 虽然只有70m，但需要依赖父镜像和基础镜像，所以整个对外暴露的 tomcat 镜像有500m\n\n\n# 镜像制作\n\n\n# 容器转为镜像\n\ndocker commit 容器id 镜像名称:版本号\ndocker save -o 压缩文件名称 镜像名称:版本号\ndocker load -i 压缩文件名称\n\n\n1\n2\n3\n\n\n\n# dockerfile\n\n# 概念\n\n * dockerfile是一个文本文件\n * 包含了一条条指令\n * 每一条指令构建一层，基于基础镜像，最终构建出一个新的镜像\n * 对于开发人员：可以为开发团队提供一个完全一致的开发环境\n * 对于测试人员：可以直接拿开发时所构建的镜像或者通过dockerfile文件构建一个新的镜像开始工作\n * 对于运维人员：在部署时，可以实现应用的无缝移植\n\n\n\n# 关键字\n\n关键字           作用             备注\nfrom          指定父镜像          指定dockerfile基于哪个image创建\nmaintainer    作者信息           用于表明这个dockerfile是谁写的\nlabel         标签             用于标明dockerfile标签，可以使用label代替maintainer，最终都可以在docker\n                             image基本信息中查看\nrun           执行命令           执行一段命令，默认是 /bin/sh，格式：run command 或者 run\n                             ["command","param1","param2"]\ncmd           容器启动命令         提供启动容器时候的默认命令，和entrypoint配合使用，格式：cmd command param1 param2\n                             或者 cmd ["command","param1","param2"]\nentrypoint    入口             一般在只做一些执行就关闭的容器中会使用\ncopy          复制文件           build 的时候复制文件到 image 中\nadd           添加文件           build 的时候添加文件到 image 中，不仅仅局限于当前 build 的上下文，可以来源于远程服务\nenv           环境变量           指定 build 时候的环境变量，可以在启动容器时，通过 -e 覆盖，格式 env name=value\narg           构建参数           只在构建的时候使用的参数，如果有env，那么 env 优先级高于 arg\nvolume        定义外部可以挂载的数据卷   指定 build 的 image 哪些目录可以启动的时候挂载到文件系统中，启动容器的时候使用 -v\n                             绑定，格式volume ["目录"]\nexpose        暴露端口           定义容器运行时候监听的端口，启动容器时使用 -p 来绑定暴露端口，格式：expose 8080 或者 expose\n                             8080/udp\nworkdir       工作目录           指定容器内部的工作目录，如果没有创建则自动创建，如果指定 / 使用的是绝对地址，如果不是 / 开头，那么是在上一条\n                             workdir 的路径的相对路径\nuser          指定执行用户         指定 build 或者启动时，用户在 run cmd entrypoint 执行的时候的用户\nhealthcheck   健康检查           指定监测当前容器的健康监测的命令\nonbuild       触发器            当存在 onbuild 关键字的镜像作为基础镜像时，执行 from 完成之后，会执行 onbuild\n                             ，但是不影响当前镜像\nstopsignal    发送信号量到宿主机      stopsignal指令设置将发送到容器的系统调用信号以退出\nshell         指定执行脚本的shell   指定run cmd entrypoint 执行命令的时候使用\n\n# 制作springboot镜像\n\n 1. 定义父镜像 from java:8\n 2. 定义作者信息 maintainer icaiwei <icaiwei@icaiwei.com>\n 3. 将 jar 包添加到容器 add springboot.jar app.jar\n 4. 定义容器启动执行的命令cmd java -jar app.jar\n 5. 通过dockerfile构建镜像 docker build -f dockerfile文件路径 -t 镜像名称:版本\n\n# 自定义centos镜像\n\n 1. 定义父镜像 from centos:7\n 2. 定义作者信息 maintainer icaiwei <icaiwei@icaiwei.com>\n 3. 安装vim yum install -y vim\n 4. 定义默认工作目录workdir /usr\n 5. 定义容器启动命令cmd /bin/bash\n 6. 通过dockerfile构建镜像 docker build -f dockerfile文件路径 -t 镜像名称:版本\n\n\n# 服务编排\n\n按照一定的业务规则批量管理容器\n\n\n# docker compose\n\ndocker compose是一个编排多容器分布式部署的工具，提供命令集管理容器化应用的完整开发周期，包括服务构建，启动和停止。\n\n使用步骤：\n\n 1. 利用 dockerfile 定义运行环境镜像\n 2. 使用 docker-compose.yml 定义组成应用的各服务\n 3. 运行 docker-compose up 启动应用\n\n\n# 安装使用\n\n# 安装',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Docker Compose使用",frontmatter:{title:"Docker Compose使用",date:"2023-06-24T21:00:00.000Z",permalink:"/operation/docker/dockercompose/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/01.Docker/06.Docker%20Compose%20%E4%BD%BF%E7%94%A8.html",relativePath:"10.运维管理/01.Docker/06.Docker Compose 使用.md",key:"v-5da87a2c",path:"/operation/docker/dockercompose/",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:2},{level:2,title:"安装使用",slug:"安装使用",normalizedTitle:"安装使用",charIndex:177},{level:3,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:177},{level:3,title:"卸载",slug:"卸载",normalizedTitle:"卸载",charIndex:425},{level:3,title:"编排 nginx+springboot 项目",slug:"编排-nginx-springboot-项目",normalizedTitle:"编排 nginx+springboot 项目",charIndex:465}],headersStr:"概述 安装使用 安装 卸载 编排 nginx+springboot 项目",content:"# 概述\n\nDocker Compose是一个编排多容器分布式部署的工具，提供命令集管理容器化应用的完整开发周期，包括服务构建，启动和停止。\n\n使用步骤：\n\n 1. 利用 Dockerfile 定义运行环境镜像\n 2. 使用 docker-compose.yml 定义组成应用的各服务\n 3. 运行 docker-compose up 启动应用\n\n\n# 安装使用\n\n\n# 安装\n\ncurl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n# 设置文件权限\nchmod +x /usr/local/bin/docker-compose\n# 查看版本信息\ndocker-compose -version\n\n\n1\n2\n3\n4\n5\n\n\n\n# 卸载\n\nrm docker-compose -version\n\n\n1\n\n\n\n# 编排 nginx+springboot 项目\n\n 1. 创建 docker-compose 目录\n    \n    mkdir ~/docker-compose\n    cd ~/docker-compose\n    \n    \n    1\n    2\n    \n\n 2. 编写 docker-compose.yml 文件\n    \n    version: '3'\n    services:\n    \tnginx:\n            image: nginx\n            ports:\n                - 80:80\n            links:\n                - app\n            volumes:\n                - ./nginx/conf.d:/etc/nginx/conf.d\n    \tapp:\n    \t\timage: app\n    \t\texpose:\n    \t\t\t- 8080\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    \n\n 3. 创建 ./nginx/conf.d 目录\n    \n    mkdir -p ./nginx/conf.d\n    \n    \n    1\n    \n\n 4. 编写nginx.conf文件\n    \n    server {\n    \tlisten 80;\n    \taccess_log off;\n    \t\n    \tlocation / {\n    \t\tproxy_pass http://app:8080;\n    \t}\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n\n 5. 在 ~/docker-compose 目录下使用 docker-compose 启动容器\n    \n    docker-compose up\n    \n    \n    1\n    \n\n 6. 测试访问\n    \n    http://192.168.1.10/hello\n    \n    \n    1\n    ",normalizedContent:"# 概述\n\ndocker compose是一个编排多容器分布式部署的工具，提供命令集管理容器化应用的完整开发周期，包括服务构建，启动和停止。\n\n使用步骤：\n\n 1. 利用 dockerfile 定义运行环境镜像\n 2. 使用 docker-compose.yml 定义组成应用的各服务\n 3. 运行 docker-compose up 启动应用\n\n\n# 安装使用\n\n\n# 安装\n\ncurl -l https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n# 设置文件权限\nchmod +x /usr/local/bin/docker-compose\n# 查看版本信息\ndocker-compose -version\n\n\n1\n2\n3\n4\n5\n\n\n\n# 卸载\n\nrm docker-compose -version\n\n\n1\n\n\n\n# 编排 nginx+springboot 项目\n\n 1. 创建 docker-compose 目录\n    \n    mkdir ~/docker-compose\n    cd ~/docker-compose\n    \n    \n    1\n    2\n    \n\n 2. 编写 docker-compose.yml 文件\n    \n    version: '3'\n    services:\n    \tnginx:\n            image: nginx\n            ports:\n                - 80:80\n            links:\n                - app\n            volumes:\n                - ./nginx/conf.d:/etc/nginx/conf.d\n    \tapp:\n    \t\timage: app\n    \t\texpose:\n    \t\t\t- 8080\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    \n\n 3. 创建 ./nginx/conf.d 目录\n    \n    mkdir -p ./nginx/conf.d\n    \n    \n    1\n    \n\n 4. 编写nginx.conf文件\n    \n    server {\n    \tlisten 80;\n    \taccess_log off;\n    \t\n    \tlocation / {\n    \t\tproxy_pass http://app:8080;\n    \t}\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n\n 5. 在 ~/docker-compose 目录下使用 docker-compose 启动容器\n    \n    docker-compose up\n    \n    \n    1\n    \n\n 6. 测试访问\n    \n    http://192.168.1.10/hello\n    \n    \n    1\n    ",charsets:{cjk:!0},lastUpdated:"2023/06/24, 19:02:56",lastUpdatedTimestamp:1687604576e3},{title:"Docker私有仓库",frontmatter:{title:"Docker私有仓库",date:"2023-06-24T21:00:00.000Z",permalink:"/operation/docker/repo/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/01.Docker/07.Docker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93.html",relativePath:"10.运维管理/01.Docker/07.Docker私有仓库.md",key:"v-21ac504a",path:"/operation/docker/repo/",headers:[{level:2,title:"私有仓库搭建",slug:"私有仓库搭建",normalizedTitle:"私有仓库搭建",charIndex:2},{level:2,title:"上传镜像到私有仓库",slug:"上传镜像到私有仓库",normalizedTitle:"上传镜像到私有仓库",charIndex:336},{level:2,title:"从私有仓库拉取镜像",slug:"从私有仓库拉取镜像",normalizedTitle:"从私有仓库拉取镜像",charIndex:474}],headersStr:"私有仓库搭建 上传镜像到私有仓库 从私有仓库拉取镜像",content:'# 私有仓库搭建\n\n# 1.拉取私有仓库镜像\ndocker pull registry\n# 2.启动私有仓库容器\ndocker run -id --name=registry -p 5000:5000 registry\n# 3.打开浏览器，输入地址可以看到私有仓库\n# 4. 修改daemon.json\nvim /etc/docker/daemon.json\n  # 添加私有仓库地址\n  {"insecure-registries":["192.168.1.5:5000"]}\n# 5.重启docker服务\nsystemctl restart docker\ndocker start registry\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 上传镜像到私有仓库\n\n# 1.标记镜像为私有仓库的镜像\ndocker tag centos:7 私有仓库服务器IP:5000/centos:7\n\n# 2.上传标记的镜像\ndocker push 私有仓库服务器IP:5000/centos:7\n\n\n1\n2\n3\n4\n5\n\n\n\n# 从私有仓库拉取镜像\n\ndocker pull 私有仓库服务器IP:5000/centos:7\n\n\n1\n',normalizedContent:'# 私有仓库搭建\n\n# 1.拉取私有仓库镜像\ndocker pull registry\n# 2.启动私有仓库容器\ndocker run -id --name=registry -p 5000:5000 registry\n# 3.打开浏览器，输入地址可以看到私有仓库\n# 4. 修改daemon.json\nvim /etc/docker/daemon.json\n  # 添加私有仓库地址\n  {"insecure-registries":["192.168.1.5:5000"]}\n# 5.重启docker服务\nsystemctl restart docker\ndocker start registry\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 上传镜像到私有仓库\n\n# 1.标记镜像为私有仓库的镜像\ndocker tag centos:7 私有仓库服务器ip:5000/centos:7\n\n# 2.上传标记的镜像\ndocker push 私有仓库服务器ip:5000/centos:7\n\n\n1\n2\n3\n4\n5\n\n\n\n# 从私有仓库拉取镜像\n\ndocker pull 私有仓库服务器ip:5000/centos:7\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2023/06/24, 19:02:56",lastUpdatedTimestamp:1687604576e3},{title:"CentOS部署",frontmatter:{title:"CentOS部署",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/deploy/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/01.CentOS%E9%83%A8%E7%BD%B2.html",relativePath:"10.运维管理/02.CentOS/01.CentOS部署.md",key:"v-0bfbdc3c",path:"/operation/centos/deploy/",headers:[{level:2,title:"开放后端端口",slug:"开放后端端口",normalizedTitle:"开放后端端口",charIndex:2531},{level:2,title:"配置nginx.conf",slug:"配置nginx-conf",normalizedTitle:"配置nginx.conf",charIndex:2542}],headersStr:"开放后端端口 配置nginx.conf",content:'mvn clean package -Dmaven.test.skip=true\n\n\n1\n\n\ndeploy.sh\n\n#!/bin/bash\nset -e\n\nDATE=$(date +%Y%m%d%H%M)\n# 基础路径\nBASE_PATH=/opt/pldm\n# 服务名称。同时约定部署服务的 jar 包名字也为它。\nSERVER_NAME=pldm-server\n# 环境\nPROFILES_ACTIVE=dev\n\n# heapError 存放路径\nHEAP_ERROR_PATH=$BASE_PATH/heapError\n# JVM 参数\nJAVA_OPS="-Xms512m -Xmx512m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$HEAP_ERROR_PATH"\n\n# 备份\nfunction backup() {\n    # 如果不存在，则无需备份\n    if [ ! -f "$BASE_PATH/$SERVER_NAME.jar" ]; then\n        echo "[backup] $BASE_PATH/$SERVER_NAME.jar 不存在，跳过备份"\n    # 如果存在，则备份到 backup 目录下，使用时间作为后缀\n    else\n        echo "[backup] 开始备份 $SERVER_NAME ..."\n        cp $BASE_PATH/$SERVER_NAME.jar $BASE_PATH/$SERVER_NAME-$DATE.jar\n        echo "[backup] 备份 $SERVER_NAME 完成"\n    fi\n}\n\n# 停止：优雅关闭之前已经启动的服务\nfunction stop() {\n    echo "[stop] 开始停止 $BASE_PATH/$SERVER_NAME"\n    PID=$(ps -ef | grep $BASE_PATH/$SERVER_NAME | grep -v "grep" | awk \'{print $2}\')\n    # 如果 Java 服务启动中，则进行关闭\n    if [ -n "$PID" ]; then\n        # 正常关闭\n        echo "[stop] $BASE_PATH/$SERVER_NAME 运行中，开始 kill [$PID]"\n        kill -15 $PID\n        # 等待最大 120 秒，直到关闭完成。\n        for ((i = 0; i < 120; i++))\n            do\n                sleep 1\n                PID=$(ps -ef | grep $BASE_PATH/$SERVER_NAME | grep -v "grep" | awk \'{print $2}\')\n                if [ -n "$PID" ]; then\n                    echo -e ".\\c"\n                else\n                    echo \'[stop] 停止 $BASE_PATH/$SERVER_NAME 成功\'\n                    break\n                fi\n\t\t    done\n\n        # 如果正常关闭失败，那么进行强制 kill -9 进行关闭\n        if [ -n "$PID" ]; then\n            echo "[stop] $BASE_PATH/$SERVER_NAME 失败，强制 kill -9 $PID"\n            kill -9 $PID\n        fi\n    # 如果 Java 服务未启动，则无需关闭\n    else\n        echo "[stop] $BASE_PATH/$SERVER_NAME 未启动，无需停止"\n    fi\n}\n\n# 启动：启动后端项目\nfunction start() {\n    # 开启启动前，打印启动参数\n    echo "[start] 开始启动 $BASE_PATH/$SERVER_NAME"\n    echo "[start] JAVA_OPS: $JAVA_OPS"\n    echo "[start] JAVA_AGENT: $JAVA_AGENT"\n    echo "[start] PROFILES: $PROFILES_ACTIVE"\n\n    # 开始启动\n    nohup java -server $JAVA_OPS $JAVA_AGENT -jar $BASE_PATH/$SERVER_NAME.jar --spring.profiles.active=$PROFILES_ACTIVE &\n    echo "[start] 启动 $BASE_PATH/$SERVER_NAME 完成"\n}\n\n# 部署\nfunction deploy() {\n    cd $BASE_PATH\n    # 停止 Java 服务\n    stop\n    # 启动 Java 服务\n    start\n}\n\ndeploy\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n\n\n\n# 开放后端端口\n\n\n# 配置nginx.conf\n\n\n#user  nobody;\nuser root;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n    #                  \'$status $body_bytes_sent "$http_referer" \'\n    #                  \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    gzip  on;\n    # 不压缩临界值，大于1K的才压缩，一般不用改\n    gzip_min_length 1k;\n    # # 压缩缓冲区\n    gzip_buffers 16 64K;\n    # # 压缩版本（默认1.1，前端如果是squid2.5请使用1.0）\n    gzip_http_version 1.1;\n    # # 压缩级别，1-10，数字越大压缩的越好，时间也越长\n    gzip_comp_level 2;\n    # # 进行压缩的文件类型\n    gzip_types text/plain application/x-javascript text/css application/xml application/javascript;\n    gzip_proxied any;\n\n    server {\n        listen       80;\n        server_name  192.168.200.130;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   /opt/pldm/dist;\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html;\n        }\n\n        location /proxy-api/ {\n            proxy_set_header Host $http_host;\n            proxy_set_header X-Real-IP $remote_addr;\n\t    proxy_set_header REMOTE-HOST $remote_addr;\n\t    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\t    proxy_pass http://192.168.200.130:48080/;\n\t}\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if Apache\'s document root\n        # concurs with nginx\'s one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n\n    # HTTPS server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n',normalizedContent:'mvn clean package -dmaven.test.skip=true\n\n\n1\n\n\ndeploy.sh\n\n#!/bin/bash\nset -e\n\ndate=$(date +%y%m%d%h%m)\n# 基础路径\nbase_path=/opt/pldm\n# 服务名称。同时约定部署服务的 jar 包名字也为它。\nserver_name=pldm-server\n# 环境\nprofiles_active=dev\n\n# heaperror 存放路径\nheap_error_path=$base_path/heaperror\n# jvm 参数\njava_ops="-xms512m -xmx512m -xx:+heapdumponoutofmemoryerror -xx:heapdumppath=$heap_error_path"\n\n# 备份\nfunction backup() {\n    # 如果不存在，则无需备份\n    if [ ! -f "$base_path/$server_name.jar" ]; then\n        echo "[backup] $base_path/$server_name.jar 不存在，跳过备份"\n    # 如果存在，则备份到 backup 目录下，使用时间作为后缀\n    else\n        echo "[backup] 开始备份 $server_name ..."\n        cp $base_path/$server_name.jar $base_path/$server_name-$date.jar\n        echo "[backup] 备份 $server_name 完成"\n    fi\n}\n\n# 停止：优雅关闭之前已经启动的服务\nfunction stop() {\n    echo "[stop] 开始停止 $base_path/$server_name"\n    pid=$(ps -ef | grep $base_path/$server_name | grep -v "grep" | awk \'{print $2}\')\n    # 如果 java 服务启动中，则进行关闭\n    if [ -n "$pid" ]; then\n        # 正常关闭\n        echo "[stop] $base_path/$server_name 运行中，开始 kill [$pid]"\n        kill -15 $pid\n        # 等待最大 120 秒，直到关闭完成。\n        for ((i = 0; i < 120; i++))\n            do\n                sleep 1\n                pid=$(ps -ef | grep $base_path/$server_name | grep -v "grep" | awk \'{print $2}\')\n                if [ -n "$pid" ]; then\n                    echo -e ".\\c"\n                else\n                    echo \'[stop] 停止 $base_path/$server_name 成功\'\n                    break\n                fi\n\t\t    done\n\n        # 如果正常关闭失败，那么进行强制 kill -9 进行关闭\n        if [ -n "$pid" ]; then\n            echo "[stop] $base_path/$server_name 失败，强制 kill -9 $pid"\n            kill -9 $pid\n        fi\n    # 如果 java 服务未启动，则无需关闭\n    else\n        echo "[stop] $base_path/$server_name 未启动，无需停止"\n    fi\n}\n\n# 启动：启动后端项目\nfunction start() {\n    # 开启启动前，打印启动参数\n    echo "[start] 开始启动 $base_path/$server_name"\n    echo "[start] java_ops: $java_ops"\n    echo "[start] java_agent: $java_agent"\n    echo "[start] profiles: $profiles_active"\n\n    # 开始启动\n    nohup java -server $java_ops $java_agent -jar $base_path/$server_name.jar --spring.profiles.active=$profiles_active &\n    echo "[start] 启动 $base_path/$server_name 完成"\n}\n\n# 部署\nfunction deploy() {\n    cd $base_path\n    # 停止 java 服务\n    stop\n    # 启动 java 服务\n    start\n}\n\ndeploy\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n\n\n\n# 开放后端端口\n\n\n# 配置nginx.conf\n\n\n#user  nobody;\nuser root;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n    #                  \'$status $body_bytes_sent "$http_referer" \'\n    #                  \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    gzip  on;\n    # 不压缩临界值，大于1k的才压缩，一般不用改\n    gzip_min_length 1k;\n    # # 压缩缓冲区\n    gzip_buffers 16 64k;\n    # # 压缩版本（默认1.1，前端如果是squid2.5请使用1.0）\n    gzip_http_version 1.1;\n    # # 压缩级别，1-10，数字越大压缩的越好，时间也越长\n    gzip_comp_level 2;\n    # # 进行压缩的文件类型\n    gzip_types text/plain application/x-javascript text/css application/xml application/javascript;\n    gzip_proxied any;\n\n    server {\n        listen       80;\n        server_name  192.168.200.130;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   /opt/pldm/dist;\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html;\n        }\n\n        location /proxy-api/ {\n            proxy_set_header host $http_host;\n            proxy_set_header x-real-ip $remote_addr;\n\t    proxy_set_header remote-host $remote_addr;\n\t    proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;\n\t    proxy_pass http://192.168.200.130:48080/;\n\t}\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the php scripts to apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the php scripts to fastcgi server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  script_filename  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if apache\'s document root\n        # concurs with nginx\'s one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n\n    # another virtual host using mix of ip-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n\n    # https server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:ssl:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  high:!anull:!md5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"CentOS最小化安装",frontmatter:{title:"CentOS最小化安装",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/install/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/02.CentOS%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AE%89%E8%A3%85.html",relativePath:"10.运维管理/02.CentOS/02.CentOS最小化安装.md",key:"v-277764fe",path:"/operation/centos/install/",headers:[{level:2,title:"安装最小系统",slug:"安装最小系统",normalizedTitle:"安装最小系统",charIndex:2},{level:2,title:"安装X Window System",slug:"安装x-window-system",normalizedTitle:"安装x window system",charIndex:166},{level:2,title:"安装xfce4",slug:"安装xfce4",normalizedTitle:"安装xfce4",charIndex:290},{level:2,title:"安装中文字体和输入法",slug:"安装中文字体和输入法",normalizedTitle:"安装中文字体和输入法",charIndex:390},{level:2,title:"安装软件",slug:"安装软件",normalizedTitle:"安装软件",charIndex:1586},{level:2,title:"防火墙",slug:"防火墙",normalizedTitle:"防火墙",charIndex:1640},{level:2,title:"开启启动图形界面",slug:"开启启动图形界面",normalizedTitle:"开启启动图形界面",charIndex:1865}],headersStr:"安装最小系统 安装X Window System 安装xfce4 安装中文字体和输入法 安装软件 防火墙 开启启动图形界面",content:'# 安装最小系统\n\nCentOS-7-x86_64-Minimal-2009\n\nroot Root#CentOS-7\n\nweijiale WeiJiale#CentOS-7\n\n安装完成后执行更新系统\nyum update\n然后，执行安装额外包yum源\nyum install epel-release\n\n\n1\n2\n3\n4\n\n\n\n# 安装X Window System\n\n执行安装X\nyum groupinstall "X Window system"\n安装完成后执行检验安装成功\nsystemctl isolate graphical.target\n\n\n1\n2\n3\n4\n\n\n\n# 安装xfce4\n\n安装Xfce4桌面环境\nyum groupinstall xfce\n进入Xfce\nsystemctl isolate graphical.target\n\n\n1\n2\n3\n4\n\n\n\n# 安装中文字体和输入法\n\n========================物理拷贝字体，此处不安装===========================\n在CentOS6可以使用\nyum groupinstall "Chinese support"\n一次性安装，但是CentOS7下，不能这么安装，没有这个安装组，所以需要单独安装每个包。\n安装楷体字体：\nyum install cjkuni-ukai-fonts\n========================物理拷贝字体，此处不安装===========================\n\n【增加字体】\n把Windows系统下C:\\Windows\\Fonts目录下需要的字体文件复制到CentOS的/usr/share/fonts/chinese/目录下，然后执行如下命令即可安装这些字体：\nmkdir /usr/share/fonts/chinese/\ncd /usr/share/fonts/chinese/ # 切换到新字体目录\nyum install xorg-x11-font-utils\nmkfontscale # 在当前目录下生成fonts.scale文件\nmkfontdir   # 在当前目录下生成fonts.dir文件\nfc-cache -fv # 重新建立字体缓存\n\n========================此处跳过，安装搜狗输入法===========================\n关于输入法，有两个概念也区分。“输入法平台”和“输入法”，输入法平台是为具体的输入法提供实现接口，并与X环境实现对接。目前广泛采用的输入法平台有:fictx，scim，ibus。最新的是ibus，也是gnome的默认设置。这里我们就选择ibus平台。\n主要需要安装如下包：\n\nibus， 这个包里有ibus-daemon这个平台服务器程序和ibus这个配置助手。\nyum install ibus-libpinyin\nyum install im-chooser\nyum install gtk2/3-immodule-xim\nibus-libpinyin， 这个是ibus平台下具体的拼音输入法。\nibus-gtk2/3，这个是ibus在GTK环境下的UI，托盘显示。\nim-chooser,这个是输入法平台选择助手程序。\ngtk2/3-immodule-xim，这个是输入法候选字显示UI。我就是因为这个包没有安装导致始终无法显示输入法字选择窗口，为此折腾了1天！！！\n执行im-chooser，选择输入法平台和输入法。然后重新登录系统。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 安装软件\n\nyum install firefox vim net-tools wget\n\n\n1\n\n\n\n# 防火墙\n\n# 查看防火墙状态\nsystemctl status firewalld.service\n# 临时关闭防火墙\nsystemctl stop firewalld\n# 临时打开防火墙\nsystemctl start firewalld\n# 永久关闭防火墙\nsystemctl disable firewalld\n# 重启防火墙状态\nsystemctl restart firewalld\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 开启启动图形界面\n\nsystemctl set-default graphical.target\n\n\n1\n',normalizedContent:'# 安装最小系统\n\ncentos-7-x86_64-minimal-2009\n\nroot root#centos-7\n\nweijiale weijiale#centos-7\n\n安装完成后执行更新系统\nyum update\n然后，执行安装额外包yum源\nyum install epel-release\n\n\n1\n2\n3\n4\n\n\n\n# 安装x window system\n\n执行安装x\nyum groupinstall "x window system"\n安装完成后执行检验安装成功\nsystemctl isolate graphical.target\n\n\n1\n2\n3\n4\n\n\n\n# 安装xfce4\n\n安装xfce4桌面环境\nyum groupinstall xfce\n进入xfce\nsystemctl isolate graphical.target\n\n\n1\n2\n3\n4\n\n\n\n# 安装中文字体和输入法\n\n========================物理拷贝字体，此处不安装===========================\n在centos6可以使用\nyum groupinstall "chinese support"\n一次性安装，但是centos7下，不能这么安装，没有这个安装组，所以需要单独安装每个包。\n安装楷体字体：\nyum install cjkuni-ukai-fonts\n========================物理拷贝字体，此处不安装===========================\n\n【增加字体】\n把windows系统下c:\\windows\\fonts目录下需要的字体文件复制到centos的/usr/share/fonts/chinese/目录下，然后执行如下命令即可安装这些字体：\nmkdir /usr/share/fonts/chinese/\ncd /usr/share/fonts/chinese/ # 切换到新字体目录\nyum install xorg-x11-font-utils\nmkfontscale # 在当前目录下生成fonts.scale文件\nmkfontdir   # 在当前目录下生成fonts.dir文件\nfc-cache -fv # 重新建立字体缓存\n\n========================此处跳过，安装搜狗输入法===========================\n关于输入法，有两个概念也区分。“输入法平台”和“输入法”，输入法平台是为具体的输入法提供实现接口，并与x环境实现对接。目前广泛采用的输入法平台有:fictx，scim，ibus。最新的是ibus，也是gnome的默认设置。这里我们就选择ibus平台。\n主要需要安装如下包：\n\nibus， 这个包里有ibus-daemon这个平台服务器程序和ibus这个配置助手。\nyum install ibus-libpinyin\nyum install im-chooser\nyum install gtk2/3-immodule-xim\nibus-libpinyin， 这个是ibus平台下具体的拼音输入法。\nibus-gtk2/3，这个是ibus在gtk环境下的ui，托盘显示。\nim-chooser,这个是输入法平台选择助手程序。\ngtk2/3-immodule-xim，这个是输入法候选字显示ui。我就是因为这个包没有安装导致始终无法显示输入法字选择窗口，为此折腾了1天！！！\n执行im-chooser，选择输入法平台和输入法。然后重新登录系统。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# 安装软件\n\nyum install firefox vim net-tools wget\n\n\n1\n\n\n\n# 防火墙\n\n# 查看防火墙状态\nsystemctl status firewalld.service\n# 临时关闭防火墙\nsystemctl stop firewalld\n# 临时打开防火墙\nsystemctl start firewalld\n# 永久关闭防火墙\nsystemctl disable firewalld\n# 重启防火墙状态\nsystemctl restart firewalld\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 开启启动图形界面\n\nsystemctl set-default graphical.target\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2024/03/14, 20:50:54",lastUpdatedTimestamp:1710420654e3},{title:"CentOS更改源",frontmatter:{title:"CentOS更改源",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/repo/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/03.CentOS%E6%9B%B4%E6%94%B9%E6%BA%90.html",relativePath:"10.运维管理/02.CentOS/03.CentOS更改源.md",key:"v-67992d80",path:"/operation/centos/repo/",headers:[{level:2,title:"备份",slug:"备份",normalizedTitle:"备份",charIndex:2},{level:2,title:"下载新的CentOS-Base.repo",slug:"下载新的centos-base-repo",normalizedTitle:"下载新的centos-base.repo",charIndex:93},{level:2,title:"添加EPEL",slug:"添加epel",normalizedTitle:"添加epel",charIndex:714},{level:2,title:"清理缓存并生成新的缓存",slug:"清理缓存并生成新的缓存",normalizedTitle:"清理缓存并生成新的缓存",charIndex:1399}],headersStr:"备份 下载新的CentOS-Base.repo 添加EPEL 清理缓存并生成新的缓存",content:"# 备份\n\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n\n\n1\n\n\n\n# 下载新的CentOS-Base.repo\n\nCentOS 5\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo\n或者\ncurl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo\n\nCentOS 6\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo\n或者\ncurl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo\n\nCentOS 7\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n或\ncurl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 添加EPEL\n\nEPEL (Extra Packages for Enterprise Linux，企业版Linux的额外软件包) 是Fedora小组维护的一个软件仓库项目，为RHEL/CentOS提供他们默认不提供的软件包。这个源兼容RHEL及像CentOS和Scientific Linux这样的衍生版本。\n\n我们可以很容易地通过yum命令从EPEL源上获取上万个在CentOS自带源上没有的软件。EPEL提供的软件包大多基于其对应的Fedora软件包，不会与企业版Linux发行版本的软件发生冲突或替换其文件。\n\nRHEL/CentOS系统有许多第三方源，比较流行的比如RpmForge，RpmFusion，EPEL，Remi等等。然而需要引起注意的是，如果系统添加了多个第三方源，可能会因此产生冲突——一个软件包可以从多个源获取，一些源会替换系统的基础软件包，从而可能会产生意想不到的错误。已知的就有Rpmforge与EPEL会产生冲突。对于这些问题我们建议，调整源的优先权或者有选择性的安装源，但是这需要复杂的操作，如果你不确定如何操作，我们推荐你只安装一个第三方源。\n\nCentOS 6\nwget -O /etc/yum.repos.d/epel-6.repo http://mirrors.aliyun.com/repo/epel-6.repo\n\nCentOS 7\nwget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo\n\n\n1\n2\n3\n4\n5\n\n\n\n# 清理缓存并生成新的缓存\n\nyum clean all\nyum makecache\n\n\n1\n2\n",normalizedContent:"# 备份\n\nmv /etc/yum.repos.d/centos-base.repo /etc/yum.repos.d/centos-base.repo.backup\n\n\n1\n\n\n\n# 下载新的centos-base.repo\n\ncentos 5\nwget -o /etc/yum.repos.d/centos-base.repo http://mirrors.aliyun.com/repo/centos-5.repo\n或者\ncurl -o /etc/yum.repos.d/centos-base.repo http://mirrors.aliyun.com/repo/centos-5.repo\n\ncentos 6\nwget -o /etc/yum.repos.d/centos-base.repo http://mirrors.aliyun.com/repo/centos-6.repo\n或者\ncurl -o /etc/yum.repos.d/centos-base.repo http://mirrors.aliyun.com/repo/centos-6.repo\n\ncentos 7\nwget -o /etc/yum.repos.d/centos-base.repo http://mirrors.aliyun.com/repo/centos-7.repo\n或\ncurl -o /etc/yum.repos.d/centos-base.repo http://mirrors.aliyun.com/repo/centos-7.repo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 添加epel\n\nepel (extra packages for enterprise linux，企业版linux的额外软件包) 是fedora小组维护的一个软件仓库项目，为rhel/centos提供他们默认不提供的软件包。这个源兼容rhel及像centos和scientific linux这样的衍生版本。\n\n我们可以很容易地通过yum命令从epel源上获取上万个在centos自带源上没有的软件。epel提供的软件包大多基于其对应的fedora软件包，不会与企业版linux发行版本的软件发生冲突或替换其文件。\n\nrhel/centos系统有许多第三方源，比较流行的比如rpmforge，rpmfusion，epel，remi等等。然而需要引起注意的是，如果系统添加了多个第三方源，可能会因此产生冲突——一个软件包可以从多个源获取，一些源会替换系统的基础软件包，从而可能会产生意想不到的错误。已知的就有rpmforge与epel会产生冲突。对于这些问题我们建议，调整源的优先权或者有选择性的安装源，但是这需要复杂的操作，如果你不确定如何操作，我们推荐你只安装一个第三方源。\n\ncentos 6\nwget -o /etc/yum.repos.d/epel-6.repo http://mirrors.aliyun.com/repo/epel-6.repo\n\ncentos 7\nwget -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo\n\n\n1\n2\n3\n4\n5\n\n\n\n# 清理缓存并生成新的缓存\n\nyum clean all\nyum makecache\n\n\n1\n2\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"CentOS安装搜狗输入法",frontmatter:{title:"CentOS安装搜狗输入法",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/sougou/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/04.CentOS%E5%AE%89%E8%A3%85%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95.html",relativePath:"10.运维管理/02.CentOS/04.CentOS安装搜狗输入法.md",key:"v-8394e7b2",path:"/operation/centos/sougou/",headers:[{level:2,title:"基于ficitx安装搜狗输入法",slug:"基于ficitx安装搜狗输入法",normalizedTitle:"基于ficitx安装搜狗输入法",charIndex:2},{level:3,title:"单独卸载ibus软件",slug:"单独卸载ibus软件",normalizedTitle:"单独卸载ibus软件",charIndex:22},{level:3,title:"安装epel库源",slug:"安装epel库源",normalizedTitle:"安装epel库源",charIndex:64},{level:3,title:"安装fcitx（小企鹅输入法）",slug:"安装fcitx-小企鹅输入法",normalizedTitle:"安装fcitx（小企鹅输入法）",charIndex:111},{level:3,title:"配置fcitx环境",slug:"配置fcitx环境",normalizedTitle:"配置fcitx环境",charIndex:188},{level:2,title:"安装搜狗输入法安装依赖软件",slug:"安装搜狗输入法安装依赖软件",normalizedTitle:"安装搜狗输入法安装依赖软件",charIndex:352},{level:3,title:"安装alien",slug:"安装alien",normalizedTitle:"安装alien",charIndex:370},{level:2,title:"下载搜狗deb包。",slug:"下载搜狗deb包。",normalizedTitle:"下载搜狗deb包。",charIndex:409},{level:3,title:"deb 转rpm",slug:"deb-转rpm",normalizedTitle:"deb 转rpm",charIndex:687},{level:3,title:"安装依赖",slug:"安装依赖",normalizedTitle:"安装依赖",charIndex:359},{level:3,title:"安装rpm包",slug:"安装rpm包",normalizedTitle:"安装rpm包",charIndex:797},{level:3,title:"复制移动库文件",slug:"复制移动库文件",normalizedTitle:"复制移动库文件",charIndex:898},{level:3,title:"更改库文件权限",slug:"更改库文件权限",normalizedTitle:"更改库文件权限",charIndex:974},{level:3,title:"重新启动fcitx",slug:"重新启动fcitx",normalizedTitle:"重新启动fcitx",charIndex:1023},{level:3,title:"配置搜狗输入法",slug:"配置搜狗输入法",normalizedTitle:"配置搜狗输入法",charIndex:2192},{level:3,title:"重启",slug:"重启",normalizedTitle:"重启",charIndex:1620}],headersStr:"基于ficitx安装搜狗输入法 单独卸载ibus软件 安装epel库源 安装fcitx（小企鹅输入法） 配置fcitx环境 安装搜狗输入法安装依赖软件 安装alien 下载搜狗deb包。 deb 转rpm 安装依赖 安装rpm包 复制移动库文件 更改库文件权限 重新启动fcitx 配置搜狗输入法 重启",content:"# 基于ficitx安装搜狗输入法\n\n\n# 单独卸载ibus软件\n\nrpm -e --nodeps ibus\n\n\n1\n\n\n\n# 安装epel库源\n\nyum -y install epel-release\n\n\n1\n\n\n\n# 安装fcitx（小企鹅输入法）\n\nyum -y install fcitx fcitx-pinyin fcitx-configtool\n\n\n1\n\n\n\n# 配置fcitx环境\n\n在~/.bashrc中加入内容\n\nvim ~/.bashrc\n\nexport GTK_IM_MODULE=fcitx\nexport QT_IM_MODULE=fcitx\nexport XMODIFIERS=@im=fcitx\n\n\n1\n2\n3\n4\n5\n\n\nsource ~/.bashrc\n\n\n1\n\n\n\n# 安装搜狗输入法安装依赖软件\n\n\n# 安装alien\n\nyum -y install alien\n\n\n1\n\n\n\n# 下载搜狗deb包。\n\n最新版需要升级gcc，暂不支持，所以我这里用的版本是2.2.0.0108\n\n最新链接\n\nhttps://ime.sogouimecdn.com/202205192351/208f004276564e1959dbe91a998fedb7/dl/gzindex/1651116072/sogoupinyin_4.0.1.2123_amd64.deb\n\nwget http://cdn2.ime.sogou.com/dl/index/1524572264/sogoupinyin_2.2.0.0108_amd64.deb\n\n\n1\n\n\n\n# deb 转rpm\n\nalien -r --scripts sogoupinyin_2.2.0.0108_amd64.deb\n\n\n1\n\n\n\n# 安装依赖\n\nyum install -y qtwebkit\n\n\n1\n\n\n\n# 安装rpm包\n\n如果不用--force，会提示与filesystem包冲突\n\nrpm -ivh --force sogoupinyin-2.2.0.0108-2.x86_64.rpm\n\n\n1\n\n\n\n# 复制移动库文件\n\ncp -R /usr/lib/x86_64-linux-gnu/fcitx/* /usr/lib64/fcitx/\n\n\n1\n\n\n\n# 更改库文件权限\n\nchmod -R 755 /usr/lib64/fcitx/\n\n\n1\n\n\n\n# 重新启动fcitx\n\n# 查看fcitx进程\n[root@localhost fcitx]# ps -ef|grep fcitx\nroot       3364   1524  0 16:17 ?        00:00:00 /usr/bin/fcitx -D\nroot       3369      1  0 16:17 ?        00:00:00 /usr/bin/dbus-daemon --fork --print-pid 5 --print-address 7 --config-file /usr/share/fcitx/dbus/daemon.conf\nroot       3375      1  0 16:17 ?        00:00:00 /usr/bin/fcitx-dbus-watcher unix:abstract=/tmp/dbus-Ei9mwAAdJA,guid=d16d9a632bcd2e163e7da9fc5f44c905 3369\nroot       3556   2808  0 16:18 pts/0    00:00:00 grep --color=auto fcitx\n[root@localhost fcitx]# \n# 杀掉当前进程\n[root@localhost fcitx]# kill 3364\n# 守护进程自动重启\n[root@localhost fcitx]# ps -ef|grep fcitx\nroot       3587   1524  6 16:19 ?        00:00:00 /usr/bin/fcitx -D\nroot       3592      1  0 16:19 ?        00:00:00 /usr/bin/dbus-daemon --fork --print-pid 5 --print-address 7 --config-file /usr/share/fcitx/dbus/daemon.conf\nroot       3598      1  0 16:19 ?        00:00:00 /usr/bin/fcitx-dbus-watcher unix:abstract=/tmp/dbus-MB7VXQYG1L,guid=050eeca767d93f78d49b5a295f44c97c 3592\nroot       3617   2808  0 16:19 pts/0    00:00:00 grep --color=auto fcitx\n[root@localhost fcitx]# \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 配置搜狗输入法\n\nimsettings-switch fcitx\nfcitx-configtool\n\n\n1\n2\n\n\n\n# 重启",normalizedContent:"# 基于ficitx安装搜狗输入法\n\n\n# 单独卸载ibus软件\n\nrpm -e --nodeps ibus\n\n\n1\n\n\n\n# 安装epel库源\n\nyum -y install epel-release\n\n\n1\n\n\n\n# 安装fcitx（小企鹅输入法）\n\nyum -y install fcitx fcitx-pinyin fcitx-configtool\n\n\n1\n\n\n\n# 配置fcitx环境\n\n在~/.bashrc中加入内容\n\nvim ~/.bashrc\n\nexport gtk_im_module=fcitx\nexport qt_im_module=fcitx\nexport xmodifiers=@im=fcitx\n\n\n1\n2\n3\n4\n5\n\n\nsource ~/.bashrc\n\n\n1\n\n\n\n# 安装搜狗输入法安装依赖软件\n\n\n# 安装alien\n\nyum -y install alien\n\n\n1\n\n\n\n# 下载搜狗deb包。\n\n最新版需要升级gcc，暂不支持，所以我这里用的版本是2.2.0.0108\n\n最新链接\n\nhttps://ime.sogouimecdn.com/202205192351/208f004276564e1959dbe91a998fedb7/dl/gzindex/1651116072/sogoupinyin_4.0.1.2123_amd64.deb\n\nwget http://cdn2.ime.sogou.com/dl/index/1524572264/sogoupinyin_2.2.0.0108_amd64.deb\n\n\n1\n\n\n\n# deb 转rpm\n\nalien -r --scripts sogoupinyin_2.2.0.0108_amd64.deb\n\n\n1\n\n\n\n# 安装依赖\n\nyum install -y qtwebkit\n\n\n1\n\n\n\n# 安装rpm包\n\n如果不用--force，会提示与filesystem包冲突\n\nrpm -ivh --force sogoupinyin-2.2.0.0108-2.x86_64.rpm\n\n\n1\n\n\n\n# 复制移动库文件\n\ncp -r /usr/lib/x86_64-linux-gnu/fcitx/* /usr/lib64/fcitx/\n\n\n1\n\n\n\n# 更改库文件权限\n\nchmod -r 755 /usr/lib64/fcitx/\n\n\n1\n\n\n\n# 重新启动fcitx\n\n# 查看fcitx进程\n[root@localhost fcitx]# ps -ef|grep fcitx\nroot       3364   1524  0 16:17 ?        00:00:00 /usr/bin/fcitx -d\nroot       3369      1  0 16:17 ?        00:00:00 /usr/bin/dbus-daemon --fork --print-pid 5 --print-address 7 --config-file /usr/share/fcitx/dbus/daemon.conf\nroot       3375      1  0 16:17 ?        00:00:00 /usr/bin/fcitx-dbus-watcher unix:abstract=/tmp/dbus-ei9mwaadja,guid=d16d9a632bcd2e163e7da9fc5f44c905 3369\nroot       3556   2808  0 16:18 pts/0    00:00:00 grep --color=auto fcitx\n[root@localhost fcitx]# \n# 杀掉当前进程\n[root@localhost fcitx]# kill 3364\n# 守护进程自动重启\n[root@localhost fcitx]# ps -ef|grep fcitx\nroot       3587   1524  6 16:19 ?        00:00:00 /usr/bin/fcitx -d\nroot       3592      1  0 16:19 ?        00:00:00 /usr/bin/dbus-daemon --fork --print-pid 5 --print-address 7 --config-file /usr/share/fcitx/dbus/daemon.conf\nroot       3598      1  0 16:19 ?        00:00:00 /usr/bin/fcitx-dbus-watcher unix:abstract=/tmp/dbus-mb7vxqyg1l,guid=050eeca767d93f78d49b5a295f44c97c 3592\nroot       3617   2808  0 16:19 pts/0    00:00:00 grep --color=auto fcitx\n[root@localhost fcitx]# \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 配置搜狗输入法\n\nimsettings-switch fcitx\nfcitx-configtool\n\n\n1\n2\n\n\n\n# 重启",charsets:{cjk:!0},lastUpdated:"2024/03/14, 20:50:54",lastUpdatedTimestamp:1710420654e3},{title:"CentOS安装JDK8-Maven",frontmatter:{title:"CentOS安装JDK8-Maven",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/jdk/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/05.CentOS%E5%AE%89%E8%A3%85JDK8-Maven.html",relativePath:"10.运维管理/02.CentOS/05.CentOS安装JDK8-Maven.md",key:"v-55505c33",path:"/operation/centos/jdk/",headers:[{level:2,title:"解压缩",slug:"解压缩",normalizedTitle:"解压缩",charIndex:2},{level:2,title:"配置环境变量",slug:"配置环境变量",normalizedTitle:"配置环境变量",charIndex:95},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:336},{level:2,title:"解压缩",slug:"解压缩-2",normalizedTitle:"解压缩",charIndex:2},{level:2,title:"配置环境变量",slug:"配置环境变量-2",normalizedTitle:"配置环境变量",charIndex:95},{level:2,title:"测试",slug:"测试-2",normalizedTitle:"测试",charIndex:336}],headersStr:"解压缩 配置环境变量 测试 解压缩 配置环境变量 测试",content:"# 解压缩\n\nmkdir /usr/local/java\ntar zxvf jdk-8u202-linux-x64.tar.gz -C /usr/local/java\n\n\n1\n2\n\n\n\n# 配置环境变量\n\nvim /etc/profile\n\n# java env\nexport JAVA_HOME=/usr/local/java/jdk1.8.0_202\nexport CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib\nexport PATH=$JAVA_HOME/bin:$PATH\n\nsource /etc/profile\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 测试\n\njava -version\n\n\n1\n\n\n\n\n\n# 解压缩\n\nmkdir /usr/local/maven\ntar zxvf apache-maven-3.8.6-bin.tar.gz -C /usr/local/maven\n\n\n1\n2\n\n\n\n# 配置环境变量\n\nvim /etc/profile\n\n# maven env\nexport PATH=/usr/local/maven/apache-maven-3.8.6/bin:$PATH\n\nsource /etc/profile\n\nvim /usr/local/maven/apache-maven-3.8.6/conf/settings.xml\n<mirrors>\n    <mirror>\n        <id>tencent</id>\n        <mirrorOf>central</mirrorOf>\n        <name>Tencent Cloud Maven Mirror</name>\n        <url>https://mirrors.cloud.tencent.com/nexus/repository/maven-public/</url>\n    </mirror>\n</mirrors>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 测试\n\nmvn -v\n\n\n1\n\n\n",normalizedContent:"# 解压缩\n\nmkdir /usr/local/java\ntar zxvf jdk-8u202-linux-x64.tar.gz -c /usr/local/java\n\n\n1\n2\n\n\n\n# 配置环境变量\n\nvim /etc/profile\n\n# java env\nexport java_home=/usr/local/java/jdk1.8.0_202\nexport classpath=.:$java_home/lib/tools.jar:$java_home/lib/dt.jar:$java_home/lib\nexport path=$java_home/bin:$path\n\nsource /etc/profile\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 测试\n\njava -version\n\n\n1\n\n\n\n\n\n# 解压缩\n\nmkdir /usr/local/maven\ntar zxvf apache-maven-3.8.6-bin.tar.gz -c /usr/local/maven\n\n\n1\n2\n\n\n\n# 配置环境变量\n\nvim /etc/profile\n\n# maven env\nexport path=/usr/local/maven/apache-maven-3.8.6/bin:$path\n\nsource /etc/profile\n\nvim /usr/local/maven/apache-maven-3.8.6/conf/settings.xml\n<mirrors>\n    <mirror>\n        <id>tencent</id>\n        <mirrorof>central</mirrorof>\n        <name>tencent cloud maven mirror</name>\n        <url>https://mirrors.cloud.tencent.com/nexus/repository/maven-public/</url>\n    </mirror>\n</mirrors>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 测试\n\nmvn -v\n\n\n1\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"CentOS安装Redis",frontmatter:{title:"CentOS安装Redis",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/redis/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/06.CentOS%E5%AE%89%E8%A3%85Redis.html",relativePath:"10.运维管理/02.CentOS/06.CentOS安装Redis.md",key:"v-e5a2be52",path:"/operation/centos/redis/",headers:[{level:2,title:"安装gcc依赖",slug:"安装gcc依赖",normalizedTitle:"安装gcc依赖",charIndex:2},{level:2,title:"下载并解压安装包",slug:"下载并解压安装包",normalizedTitle:"下载并解压安装包",charIndex:102},{level:2,title:"编译源码",slug:"编译源码",normalizedTitle:"编译源码",charIndex:209},{level:2,title:"安装到指定目录",slug:"安装到指定目录",normalizedTitle:"安装到指定目录",charIndex:246},{level:2,title:"配置环境变量",slug:"配置环境变量",normalizedTitle:"配置环境变量",charIndex:301},{level:2,title:"",slug:"",normalizedTitle:"",charIndex:0},{level:2,title:"查看版本",slug:"查看版本",normalizedTitle:"查看版本",charIndex:422},{level:2,title:"启动服务",slug:"启动服务",normalizedTitle:"启动服务",charIndex:547},{level:3,title:"前台启动",slug:"前台启动",normalizedTitle:"前台启动",charIndex:556},{level:3,title:"后台启动",slug:"后台启动",normalizedTitle:"后台启动",charIndex:584},{level:3,title:"设置开机启动",slug:"设置开机启动",normalizedTitle:"设置开机启动",charIndex:951},{level:3,title:"创建 redis 命令软链接",slug:"创建-redis-命令软链接",normalizedTitle:"创建 redis 命令软链接",charIndex:1358},{level:2,title:"测试 redis",slug:"测试-redis",normalizedTitle:"测试 redis",charIndex:1435},{level:3,title:"服务操作命令",slug:"服务操作命令",normalizedTitle:"服务操作命令",charIndex:1448},{level:2,title:"windows连接不上虚拟机Linux中的Redis",slug:"windows连接不上虚拟机linux中的redis",normalizedTitle:"windows连接不上虚拟机linux中的redis",charIndex:1733}],headersStr:"安装gcc依赖 下载并解压安装包 编译源码 安装到指定目录 配置环境变量  查看版本 启动服务 前台启动 后台启动 设置开机启动 创建 redis 命令软链接 测试 redis 服务操作命令 windows连接不上虚拟机Linux中的Redis",content:"# 安装gcc依赖\n\n由于 redis 是用 C 语言开发，安装之前必先确认是否安装 gcc 环境（gcc -v），如果没有安装，执行以下命令进行安装\n\nyum install gcc\n\n\n1\n\n\n\n# 下载并解压安装包\n\nwget http://download.redis.io/releases/redis-6.2.6.tar.gz\ntar zxvf redis-6.2.6.tar.gz\n\n\n1\n2\n\n\n\n# 编译源码\n\ncd redis-6.2.6\nmake\n\n\n1\n2\n\n\n\n# 安装到指定目录\n\nmake install PREFIX=/usr/local/redis\n\n\n1\n\n\n\n# 配置环境变量\n\nvim /etc/profile\n\n# redis env\nexport PATH=/usr/local/redis/bin:$PATH\n\nsource /etc/profile\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n#\n\n\n# 查看版本\n\nredis-server -v\n\nRedis server v=6.2.6 sha=00000000:0 malloc=jemalloc-5.1.0 bits=64 build=826e9dbe690d801e\n\n\n1\n2\n3\n\n\n\n# 启动服务\n\n\n# 前台启动\n\nredis-server\n\n\n1\n\n\n\n# 后台启动\n\n从 redis 的源码目录中复制 redis.conf 到 redis 的安装目录\ncp /home/soft/redis-6.2.6/redis.conf /usr/local/redis/bin/\n\n修改 redis.conf 文件，\nvi /usr/local/redis/bin/redis.conf\n\n把 daemonize no 改为 daemonize yes\n修改密码\nrequirepass Redis#CentOS-7\nrequirepass Redis#Cent@Cw07-OS-7\n修改bind 0.0.0.0远程连接\n\n启动\nredis-server /usr/local/redis/bin/redis.conf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 设置开机启动\n\nvim /etc/systemd/system/redis.service\n\n粘贴内容\n[Unit]\nDescription=redis-server\nAfter=network.target\n\n[Service]\nType=forking\nExecStart=/usr/local/redis/bin/redis-server /usr/local/redis/bin/redis.conf\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n\n设置开机启动\nsystemctl daemon-reload\nsystemctl start redis.service\nsystemctl enable redis.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 创建 redis 命令软链接\n\nln -s /usr/local/redis/bin/redis-cli /usr/bin/redis\n\n\n1\n\n\n\n# 测试 redis\n\n\n# 服务操作命令\n\n#启动redis服务\nsystemctl start redis.service\n#停止redis服务\nsystemctl stop redis.service\n#重新启动服务\nsystemctl restart redis.service\n#查看服务当前状态\nsystemctl status redis.service\n#设置开机自启动\nsystemctl enable redis.service\n#停止开机自启动\nsystemctl disable redis.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# windows连接不上虚拟机Linux中的Redis\n\n原因： 由于linux防火墙默认开启，redis的服务端口6379并不在开放规则之内，所有需要将此端口开放访问或者关闭防火墙。 关闭防火墙命令：sevice iptables stop 如果是修改防火墙规则，可以修改：/etc/sysconfig/iptables文件\n\n\n\n这时候说明Linux系统下的6379端口没有打开 前往Linux系统下将端口打开即可： 输入firewall-cmd --query-port=6379/tcp，如果返回结果为no，那么证明6379端口确实没有开启。 输入firewall-cmd --add-port=6379/tcp，将6379端口开启，返回success。 然后再执行上一条命令，返回yes，证明端口已经成功开启。",normalizedContent:"# 安装gcc依赖\n\n由于 redis 是用 c 语言开发，安装之前必先确认是否安装 gcc 环境（gcc -v），如果没有安装，执行以下命令进行安装\n\nyum install gcc\n\n\n1\n\n\n\n# 下载并解压安装包\n\nwget http://download.redis.io/releases/redis-6.2.6.tar.gz\ntar zxvf redis-6.2.6.tar.gz\n\n\n1\n2\n\n\n\n# 编译源码\n\ncd redis-6.2.6\nmake\n\n\n1\n2\n\n\n\n# 安装到指定目录\n\nmake install prefix=/usr/local/redis\n\n\n1\n\n\n\n# 配置环境变量\n\nvim /etc/profile\n\n# redis env\nexport path=/usr/local/redis/bin:$path\n\nsource /etc/profile\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n#\n\n\n# 查看版本\n\nredis-server -v\n\nredis server v=6.2.6 sha=00000000:0 malloc=jemalloc-5.1.0 bits=64 build=826e9dbe690d801e\n\n\n1\n2\n3\n\n\n\n# 启动服务\n\n\n# 前台启动\n\nredis-server\n\n\n1\n\n\n\n# 后台启动\n\n从 redis 的源码目录中复制 redis.conf 到 redis 的安装目录\ncp /home/soft/redis-6.2.6/redis.conf /usr/local/redis/bin/\n\n修改 redis.conf 文件，\nvi /usr/local/redis/bin/redis.conf\n\n把 daemonize no 改为 daemonize yes\n修改密码\nrequirepass redis#centos-7\nrequirepass redis#cent@cw07-os-7\n修改bind 0.0.0.0远程连接\n\n启动\nredis-server /usr/local/redis/bin/redis.conf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 设置开机启动\n\nvim /etc/systemd/system/redis.service\n\n粘贴内容\n[unit]\ndescription=redis-server\nafter=network.target\n\n[service]\ntype=forking\nexecstart=/usr/local/redis/bin/redis-server /usr/local/redis/bin/redis.conf\nprivatetmp=true\n\n[install]\nwantedby=multi-user.target\n\n设置开机启动\nsystemctl daemon-reload\nsystemctl start redis.service\nsystemctl enable redis.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 创建 redis 命令软链接\n\nln -s /usr/local/redis/bin/redis-cli /usr/bin/redis\n\n\n1\n\n\n\n# 测试 redis\n\n\n# 服务操作命令\n\n#启动redis服务\nsystemctl start redis.service\n#停止redis服务\nsystemctl stop redis.service\n#重新启动服务\nsystemctl restart redis.service\n#查看服务当前状态\nsystemctl status redis.service\n#设置开机自启动\nsystemctl enable redis.service\n#停止开机自启动\nsystemctl disable redis.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# windows连接不上虚拟机linux中的redis\n\n原因： 由于linux防火墙默认开启，redis的服务端口6379并不在开放规则之内，所有需要将此端口开放访问或者关闭防火墙。 关闭防火墙命令：sevice iptables stop 如果是修改防火墙规则，可以修改：/etc/sysconfig/iptables文件\n\n\n\n这时候说明linux系统下的6379端口没有打开 前往linux系统下将端口打开即可： 输入firewall-cmd --query-port=6379/tcp，如果返回结果为no，那么证明6379端口确实没有开启。 输入firewall-cmd --add-port=6379/tcp，将6379端口开启，返回success。 然后再执行上一条命令，返回yes，证明端口已经成功开启。",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"CentOS安装Nginx",frontmatter:{title:"CentOS安装Nginx",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/nginx/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/07.CentOS%E5%AE%89%E8%A3%85Nginx.html",relativePath:"10.运维管理/02.CentOS/07.CentOS安装Nginx.md",key:"v-340af217",path:"/operation/centos/nginx/",headers:[{level:2,title:"安装依赖",slug:"安装依赖",normalizedTitle:"安装依赖",charIndex:2},{level:2,title:"下载并解压安装包",slug:"下载并解压安装包",normalizedTitle:"下载并解压安装包",charIndex:84},{level:2,title:"编译源码",slug:"编译源码",normalizedTitle:"编译源码",charIndex:185},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:2},{level:2,title:"添加软连接",slug:"添加软连接",normalizedTitle:"添加软连接",charIndex:313},{level:2,title:"启动服务",slug:"启动服务",normalizedTitle:"启动服务",charIndex:374},{level:2,title:"停止服务",slug:"停止服务",normalizedTitle:"停止服务",charIndex:395},{level:2,title:"问题记录",slug:"问题记录",normalizedTitle:"问题记录",charIndex:488},{level:3,title:"nginx 报500 Internal Server Error解决办法",slug:"nginx-报500-internal-server-error解决办法",normalizedTitle:"nginx 报500 internal server error解决办法",charIndex:497},{level:3,title:'dist/index.html" failed (13: Permission denied)',slug:"dist-index-html-failed-13-permission-denied",normalizedTitle:"dist/index.html&quot; failed (13: permission denied)",charIndex:null}],headersStr:'安装依赖 下载并解压安装包 编译源码 安装 添加软连接 启动服务 停止服务 问题记录 nginx 报500 Internal Server Error解决办法 dist/index.html" failed (13: Permission denied)',content:'# 安装依赖\n\nyum install gcc-c++\nyum install pcre-devel openssl openssl-devel\n\n\n1\n2\n\n\n\n# 下载并解压安装包\n\nwget http://nginx.org/download/nginx-1.21.6.tar.gz\ntar zxvf nginx-1.21.6.tar.gz\n\n\n1\n2\n\n\n\n# 编译源码\n\ncd nginx-1.21.6\n./configure --prefix=/usr/local/nginx --with-http_ssl_module\n\n\n1\n2\n\n\n\n# 安装\n\nmake && make install\n\n\n1\n\n\n\n# 添加软连接\n\nln -s /usr/local/nginx/sbin/nginx /bin/nginx\n\n\n1\n\n\n\n# 启动服务\n\nnginx\n\n\n1\n\n\n\n# 停止服务\n\nnginx -s stop\n\n\n1\n\n\n指定配置\n\nnginx -s reload -c /usr/local/nginx/conf/nginx.conf\n\n\n1\n\n\n\n# 问题记录\n\n\n# nginx 报500 Internal Server Error解决办法\n\ntail /usr/local/nginx/logs/error.log\n\n\n1\n\n\n\n# dist/index.html" failed (13: Permission denied)\n\n查看nginx启动用户和使用用户是否一致\nps aux | grep nginx\n\n\n1\n2\n\n\n用户不一致\n\n\n\n解决方法：\nvim /usr/local/nginx/conf/nginx.conf\n第一行添加用户\nuser root;\nworker_processes  1;\n重启nginx\n\n\n1\n2\n3\n4\n5\n6\n',normalizedContent:'# 安装依赖\n\nyum install gcc-c++\nyum install pcre-devel openssl openssl-devel\n\n\n1\n2\n\n\n\n# 下载并解压安装包\n\nwget http://nginx.org/download/nginx-1.21.6.tar.gz\ntar zxvf nginx-1.21.6.tar.gz\n\n\n1\n2\n\n\n\n# 编译源码\n\ncd nginx-1.21.6\n./configure --prefix=/usr/local/nginx --with-http_ssl_module\n\n\n1\n2\n\n\n\n# 安装\n\nmake && make install\n\n\n1\n\n\n\n# 添加软连接\n\nln -s /usr/local/nginx/sbin/nginx /bin/nginx\n\n\n1\n\n\n\n# 启动服务\n\nnginx\n\n\n1\n\n\n\n# 停止服务\n\nnginx -s stop\n\n\n1\n\n\n指定配置\n\nnginx -s reload -c /usr/local/nginx/conf/nginx.conf\n\n\n1\n\n\n\n# 问题记录\n\n\n# nginx 报500 internal server error解决办法\n\ntail /usr/local/nginx/logs/error.log\n\n\n1\n\n\n\n# dist/index.html" failed (13: permission denied)\n\n查看nginx启动用户和使用用户是否一致\nps aux | grep nginx\n\n\n1\n2\n\n\n用户不一致\n\n\n\n解决方法：\nvim /usr/local/nginx/conf/nginx.conf\n第一行添加用户\nuser root;\nworker_processes  1;\n重启nginx\n\n\n1\n2\n3\n4\n5\n6\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"CentOS安装Mysql",frontmatter:{title:"CentOS安装Mysql",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/mysql/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/08.CentOS%E5%AE%89%E8%A3%85Mysql.html",relativePath:"10.运维管理/02.CentOS/08.CentOS安装Mysql.md",key:"v-1734a4f6",path:"/operation/centos/mysql/",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:2},{level:2,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:687},{level:2,title:"修改密码，远程连接",slug:"修改密码-远程连接",normalizedTitle:"修改密码，远程连接",charIndex:926},{level:2,title:"安装mysql workbench",slug:"安装mysql-workbench",normalizedTitle:"安装mysql workbench",charIndex:1425}],headersStr:"安装 配置 修改密码，远程连接 安装mysql workbench",content:"# 安装\n\n## ① 安装 MySQL 5.7 版本的软件源 https://dev.mysql.com/downloads/repo/yum/\n## rpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\n\n## ② 安装 MySQL Server 5.7 版本\n## yum install mysql-server --nogpgcheck\n\n## ③ 查看 MySQL 的安装版本。结果是 mysqld  Ver 5.7.37 for Linux on x86_64 (MySQL Community Server (GPL))\n## mysqld --version\n\n## 安装 MySQL 8 版本\n## ① 安装 MySQL 8 版本的软件源 https://dev.mysql.com/downloads/repo/yum/\nrpm -Uvh https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm\n\n## ② 安装 MySQL Server 8.0 版本\nyum install mysql-server --nogpgcheck\n\n## ③ 查看 MySQL 的安装版本。\nmysqld --version\n\nservice mysqld start\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 配置\n\n应该最后修改，修改 /etc/my.cnf 文件，在文末加上 \nvim /etc/my.cnf\n\nlower_case_table_names=1 \nvalidate_password=off \n配置，执行 \nsystemctl restart mysqld\n命令重启。\n\n执行 grep password /var/log/mysqld.log 命令，获得 MySQL 临时密码\nwm5i/t%FPn(B\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 修改密码，远程连接\n\n## ① 连接 MySQL Server 服务，并输入临时密码\nmysql -uroot -p\n\n## ② 修改密码，123456 可改成你想要的密码\nalter user 'root'@'localhost' identified by 'MySQL@CentOS-7';\nalter user 'root'@'localhost' identified by 'MySQL@Cent#Cw-OS-7';\n\n## ③ 设置允许远程连接\nuse mysql;\nupdate user set host = '%' where user = 'root';\ngrant all privileges on *.* to root@'%';\n## 新建用户\nCREATE USER 'wjl'@'%' IDENTIFIED BY 'MySQL@Cent#Cw-OS-7';\nGRANT ALL PRIVILEGES ON *.* TO 'wjl'@'%';\nFLUSH PRIVILEGES;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 安装mysql workbench\n\nyum install mysql-workbench\n\n\n1\n",normalizedContent:"# 安装\n\n## ① 安装 mysql 5.7 版本的软件源 https://dev.mysql.com/downloads/repo/yum/\n## rpm -uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\n\n## ② 安装 mysql server 5.7 版本\n## yum install mysql-server --nogpgcheck\n\n## ③ 查看 mysql 的安装版本。结果是 mysqld  ver 5.7.37 for linux on x86_64 (mysql community server (gpl))\n## mysqld --version\n\n## 安装 mysql 8 版本\n## ① 安装 mysql 8 版本的软件源 https://dev.mysql.com/downloads/repo/yum/\nrpm -uvh https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm\n\n## ② 安装 mysql server 8.0 版本\nyum install mysql-server --nogpgcheck\n\n## ③ 查看 mysql 的安装版本。\nmysqld --version\n\nservice mysqld start\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 配置\n\n应该最后修改，修改 /etc/my.cnf 文件，在文末加上 \nvim /etc/my.cnf\n\nlower_case_table_names=1 \nvalidate_password=off \n配置，执行 \nsystemctl restart mysqld\n命令重启。\n\n执行 grep password /var/log/mysqld.log 命令，获得 mysql 临时密码\nwm5i/t%fpn(b\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 修改密码，远程连接\n\n## ① 连接 mysql server 服务，并输入临时密码\nmysql -uroot -p\n\n## ② 修改密码，123456 可改成你想要的密码\nalter user 'root'@'localhost' identified by 'mysql@centos-7';\nalter user 'root'@'localhost' identified by 'mysql@cent#cw-os-7';\n\n## ③ 设置允许远程连接\nuse mysql;\nupdate user set host = '%' where user = 'root';\ngrant all privileges on *.* to root@'%';\n## 新建用户\ncreate user 'wjl'@'%' identified by 'mysql@cent#cw-os-7';\ngrant all privileges on *.* to 'wjl'@'%';\nflush privileges;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 安装mysql workbench\n\nyum install mysql-workbench\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"08-CentOS安装Minio",frontmatter:{title:"08-CentOS安装Minio",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/minio/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/09.CentOS%E5%AE%89%E8%A3%85Minio.html",relativePath:"10.运维管理/02.CentOS/09.CentOS安装Minio.md",key:"v-25454657",path:"/operation/centos/minio/",headers:[{level:2,title:"创建安装目录",slug:"创建安装目录",normalizedTitle:"创建安装目录",charIndex:2},{level:2,title:"下载",slug:"下载",normalizedTitle:"下载",charIndex:47},{level:2,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:161},{level:3,title:"添加权限",slug:"添加权限",normalizedTitle:"添加权限",charIndex:168},{level:3,title:"创建数据存储文件夹",slug:"创建数据存储文件夹",normalizedTitle:"创建数据存储文件夹",charIndex:198},{level:3,title:"编辑配置文件",slug:"编辑配置文件",normalizedTitle:"编辑配置文件",charIndex:249},{level:3,title:"设置开机启动",slug:"设置开机启动",normalizedTitle:"设置开机启动",charIndex:583},{level:3,title:"防火墙开启 9000 端口",slug:"防火墙开启-9000-端口",normalizedTitle:"防火墙开启 9000 端口",charIndex:1618},{level:2,title:"启动",slug:"启动",normalizedTitle:"启动",charIndex:587},{level:3,title:"启动服务",slug:"启动服务",normalizedTitle:"启动服务",charIndex:1834},{level:3,title:"登录测试",slug:"登录测试",normalizedTitle:"登录测试",charIndex:2011},{level:2,title:"扩展",slug:"扩展",normalizedTitle:"扩展",charIndex:2047},{level:3,title:"相关命令",slug:"相关命令",normalizedTitle:"相关命令",charIndex:2054},{level:3,title:"存储",slug:"存储",normalizedTitle:"存储",charIndex:202},{level:2,title:"端口转发",slug:"端口转发",normalizedTitle:"端口转发",charIndex:2469}],headersStr:"创建安装目录 下载 配置 添加权限 创建数据存储文件夹 编辑配置文件 设置开机启动 防火墙开启 9000 端口 启动 启动服务 登录测试 扩展 相关命令 存储 端口转发",content:'# 创建安装目录\n\nmkdir -p /usr/local/minio/ \n\n\n1\n\n\n\n# 下载\n\n#进入目录\ncd /usr/local/minio/\n#下载\nwget https://dl.minio.io/server/minio/release/linux-amd64/minio\n\n\n1\n2\n3\n4\n\n\n\n# 配置\n\n\n# 添加权限\n\nchmod +x minio\n\n\n1\n\n\n\n# 创建数据存储文件夹\n\nmkdir -p /usr/local/minio/data\n\n\n1\n\n\n\n# 编辑配置文件\n\nvim /etc/default/minio\n\n#内容如下\nMINIO_ROOT_USER="minioadminroot123"\nMINIO_ROOT_PASSWORD="minioadmin123"\nMINIO_VOLUMES="/usr/local/minio/data"\nMINIO_OPTS="--address 0.0.0.0:9000"\n# 注释以免端口变化\nMINIO_OPTS1="--console-address 0.0.0.0:19001"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n桶 pldm\n\n用户 icaiwei\n\n密码 icaiwei#CentOS-7\n\n密码 icaiwei#Cent@Cw07-OS-7\n\n\n# 设置开机启动\n\nvim /etc/systemd/system/minio.service\n\n[Unit]\nDescription=MinIO\nDocumentation=https://docs.min.io\nWants=network-online.target\nAfter=network-online.target\nAssertFileIsExecutable=/usr/local/minio/minio\n \n[Service]\nWorkingDirectory=/usr/local/minio\nProtectProc=invisible\n \nEnvironmentFile=/etc/default/minio\nExecStartPre=/bin/bash -c "if [ -z \\"${MINIO_VOLUMES}\\" ]; then echo \\"Variable MINIO_VOLUMES not set in /etc/default/minio\\"; exit 1; fi"\nExecStart=/usr/local/minio/minio server --address 0.0.0.0:9000 $MINIO_OPTS  $MINIO_OPTS1 $MINIO_VOLUMES\n \n# Let systemd restart this service always\nRestart=always\n \n# Specifies the maximum file descriptor number that can be opened by this process\nLimitNOFILE=65536\n \n# Specifies the maximum number of threads this process can create\nTasksMax=infinity\n \n# Disable timeout logic and wait until process is stopped\nTimeoutStopSec=infinity\nSendSIGKILL=no\n \n[Install]\nWantedBy=multi-user.target\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# 防火墙开启 9000 端口\n\nfirewall-cmd --zone=public --add-port=9000/tcp --permanent\nfirewall-cmd --permanent --zone=public --add-port=30000-45000/tcp\nsystemctl restart firewalld\n或\nfirewall-cmd --reload\n\n\n1\n2\n3\n4\n5\n\n\n\n# 启动\n\n\n# 启动服务\n\n#加载配置\nsystemctl daemon-reload\n#启动minio\nsystemctl start minio.service\n#或\n./minio server /usr/local/minio/data\n#开启开机自启\nsystemctl enable minio.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 登录测试\n\n192.168.200.128:9000\n\n\n1\n\n\n\n# 扩展\n\n\n# 相关命令\n\nsystemctl start minio.service   #启动minio服务\nsystemctl stop minio.service   #停止minio服务\nsystemctl restart minio.service   #重新启动服务\nsystemctl status minio.service   #查看服务当前状态\nsystemctl enable minio.service   #设置开机自启动\nsystemctl disable minio.service   #停止开机自启动\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 存储\n\n安装目录：/usr/local/mino\n数据保存目录：/data/minio/\n配置文件目录：/etc/default/minio\n启动配置文件存放目录：vim /lib/systemd/system/ mino.service\n\n\n1\n2\n3\n4\n\n\n\n# 端口转发\n\n',normalizedContent:'# 创建安装目录\n\nmkdir -p /usr/local/minio/ \n\n\n1\n\n\n\n# 下载\n\n#进入目录\ncd /usr/local/minio/\n#下载\nwget https://dl.minio.io/server/minio/release/linux-amd64/minio\n\n\n1\n2\n3\n4\n\n\n\n# 配置\n\n\n# 添加权限\n\nchmod +x minio\n\n\n1\n\n\n\n# 创建数据存储文件夹\n\nmkdir -p /usr/local/minio/data\n\n\n1\n\n\n\n# 编辑配置文件\n\nvim /etc/default/minio\n\n#内容如下\nminio_root_user="minioadminroot123"\nminio_root_password="minioadmin123"\nminio_volumes="/usr/local/minio/data"\nminio_opts="--address 0.0.0.0:9000"\n# 注释以免端口变化\nminio_opts1="--console-address 0.0.0.0:19001"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n桶 pldm\n\n用户 icaiwei\n\n密码 icaiwei#centos-7\n\n密码 icaiwei#cent@cw07-os-7\n\n\n# 设置开机启动\n\nvim /etc/systemd/system/minio.service\n\n[unit]\ndescription=minio\ndocumentation=https://docs.min.io\nwants=network-online.target\nafter=network-online.target\nassertfileisexecutable=/usr/local/minio/minio\n \n[service]\nworkingdirectory=/usr/local/minio\nprotectproc=invisible\n \nenvironmentfile=/etc/default/minio\nexecstartpre=/bin/bash -c "if [ -z \\"${minio_volumes}\\" ]; then echo \\"variable minio_volumes not set in /etc/default/minio\\"; exit 1; fi"\nexecstart=/usr/local/minio/minio server --address 0.0.0.0:9000 $minio_opts  $minio_opts1 $minio_volumes\n \n# let systemd restart this service always\nrestart=always\n \n# specifies the maximum file descriptor number that can be opened by this process\nlimitnofile=65536\n \n# specifies the maximum number of threads this process can create\ntasksmax=infinity\n \n# disable timeout logic and wait until process is stopped\ntimeoutstopsec=infinity\nsendsigkill=no\n \n[install]\nwantedby=multi-user.target\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# 防火墙开启 9000 端口\n\nfirewall-cmd --zone=public --add-port=9000/tcp --permanent\nfirewall-cmd --permanent --zone=public --add-port=30000-45000/tcp\nsystemctl restart firewalld\n或\nfirewall-cmd --reload\n\n\n1\n2\n3\n4\n5\n\n\n\n# 启动\n\n\n# 启动服务\n\n#加载配置\nsystemctl daemon-reload\n#启动minio\nsystemctl start minio.service\n#或\n./minio server /usr/local/minio/data\n#开启开机自启\nsystemctl enable minio.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 登录测试\n\n192.168.200.128:9000\n\n\n1\n\n\n\n# 扩展\n\n\n# 相关命令\n\nsystemctl start minio.service   #启动minio服务\nsystemctl stop minio.service   #停止minio服务\nsystemctl restart minio.service   #重新启动服务\nsystemctl status minio.service   #查看服务当前状态\nsystemctl enable minio.service   #设置开机自启动\nsystemctl disable minio.service   #停止开机自启动\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 存储\n\n安装目录：/usr/local/mino\n数据保存目录：/data/minio/\n配置文件目录：/etc/default/minio\n启动配置文件存放目录：vim /lib/systemd/system/ mino.service\n\n\n1\n2\n3\n4\n\n\n\n# 端口转发\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"CentOS安装kkFileView",frontmatter:{title:"CentOS安装kkFileView",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/kkfileview/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/10.CentOS%E5%AE%89%E8%A3%85kkFileView.html",relativePath:"10.运维管理/02.CentOS/10.CentOS安装kkFileView.md",key:"v-18276d1a",path:"/operation/centos/kkfileview/",headers:[{level:2,title:"解压缩",slug:"解压缩",normalizedTitle:"解压缩",charIndex:2},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:49},{level:2,title:"查看",slug:"查看",normalizedTitle:"查看",charIndex:101},{level:2,title:"运行",slug:"运行",normalizedTitle:"运行",charIndex:127},{level:2,title:"开机自动运行",slug:"开机自动运行",normalizedTitle:"开机自动运行",charIndex:232},{level:2,title:"问题记录",slug:"问题记录",normalizedTitle:"问题记录",charIndex:792},{level:3,title:"找不到office组件，请确认'office.home'配置是否有误",slug:"找不到office组件-请确认-office-home-配置是否有误",normalizedTitle:"找不到office组件，请确认'office.home'配置是否有误",charIndex:801},{level:4,title:"解决方法",slug:"解决方法",normalizedTitle:"解决方法",charIndex:839},{level:3,title:"Error creating bean with name 'officePluginManager'",slug:"error-creating-bean-with-name-officepluginmanager",normalizedTitle:"error creating bean with name 'officepluginmanager'",charIndex:1551},{level:4,title:"解决方法",slug:"解决方法-2",normalizedTitle:"解决方法",charIndex:839}],headersStr:"解压缩 安装 查看 运行 开机自动运行 问题记录 找不到office组件，请确认'office.home'配置是否有误 解决方法 Error creating bean with name 'officePluginManager' 解决方法",content:"# 解压缩\n\ntar zxvf kkFileView-4.0.0.tar.gz\n\n\n1\n\n\n\n# 安装\n\ncd kkFileView-4.0.0/bin\n./startup.sh\n\n\n1\n2\n\n\n\n# 查看\n\n./showlog.sh\n\n\n1\n\n\n\n# 运行\n\nfirewall-cmd --add-port=8012/tcp --permanent\nfirewall-cmd --reload\n192.168.200.128:8012\n\n\n1\n2\n3\n\n\n\n# 开机自动运行\n\nvim /etc/systemd/system/KKFileView.service\n\n[Unit]\nDescription=kkFileView server\nAfter=network-online.target\n[Service]\nEnvironment=\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nExecStart=/usr/local/kkFileView-4.0.0/bin/startup.sh\nExecStop=/usr/local/kkFileView-4.0.0/bin/shutdown.sh\n[Install]\nWantedBy=multi-user.target\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nsystemctl daemon-reload\nsystemctl enable KKFileView.service\nsystemctl status KKFileView.service\nsystemctl stop KKFileView.service\nsystemctl start KKFileView.service\n\n\n1\n2\n3\n4\n5\n\n\n\n# 问题记录\n\n\n# 找不到office组件，请确认'office.home'配置是否有误\n\n# 解决方法\n\nhttps://downloadarchive.documentfoundation.org/libreoffice/old/7.1.4.2/rpm/x86_64/LibreOffice_7.1.4.2_Linux_x86-64_rpm.tar.gz\n\nhttps://downloadarchive.documentfoundation.org/libreoffice/old/7.1.4.2/rpm/x86_64/LibreOffice_7.1.4.2_Linux_x86-64_rpm_langpack_zh-CN.tar.gz\n\n这两个分别下载LibreOffice_7.1.4.2_Linux_x86-64_rpm.tar.gz 和LibreOffice_7.1.4.2_Linux_x86-64_rpm_langpack_zh-CN.tar.gz文件，前面提供启动程序，后面提供中文语言包\n解压后安装所有包\ntar zxvf LibreOffice_7.1.4.2_Linux_x86-64_rpm.tar.gz\ntar zxvf LibreOffice_7.1.4.2_Linux_x86-64_rpm_langpack_zh-CN.tar.gz\nyum install -y  ./LibreOffice_7.1.4.2_Linux_x86-64_rpm/RPMS/*.rpm\nyum install -y  ./LibreOffice_7.1.4.2_Linux_x86-64_rpm_langpack_zh-CN/RPMS/*.rpm\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Error creating bean with name 'officePluginManager'\n\n# 解决方法\n\n./shutdown.sh\n\n\n1\n",normalizedContent:"# 解压缩\n\ntar zxvf kkfileview-4.0.0.tar.gz\n\n\n1\n\n\n\n# 安装\n\ncd kkfileview-4.0.0/bin\n./startup.sh\n\n\n1\n2\n\n\n\n# 查看\n\n./showlog.sh\n\n\n1\n\n\n\n# 运行\n\nfirewall-cmd --add-port=8012/tcp --permanent\nfirewall-cmd --reload\n192.168.200.128:8012\n\n\n1\n2\n3\n\n\n\n# 开机自动运行\n\nvim /etc/systemd/system/kkfileview.service\n\n[unit]\ndescription=kkfileview server\nafter=network-online.target\n[service]\nenvironment=\"path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nexecstart=/usr/local/kkfileview-4.0.0/bin/startup.sh\nexecstop=/usr/local/kkfileview-4.0.0/bin/shutdown.sh\n[install]\nwantedby=multi-user.target\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nsystemctl daemon-reload\nsystemctl enable kkfileview.service\nsystemctl status kkfileview.service\nsystemctl stop kkfileview.service\nsystemctl start kkfileview.service\n\n\n1\n2\n3\n4\n5\n\n\n\n# 问题记录\n\n\n# 找不到office组件，请确认'office.home'配置是否有误\n\n# 解决方法\n\nhttps://downloadarchive.documentfoundation.org/libreoffice/old/7.1.4.2/rpm/x86_64/libreoffice_7.1.4.2_linux_x86-64_rpm.tar.gz\n\nhttps://downloadarchive.documentfoundation.org/libreoffice/old/7.1.4.2/rpm/x86_64/libreoffice_7.1.4.2_linux_x86-64_rpm_langpack_zh-cn.tar.gz\n\n这两个分别下载libreoffice_7.1.4.2_linux_x86-64_rpm.tar.gz 和libreoffice_7.1.4.2_linux_x86-64_rpm_langpack_zh-cn.tar.gz文件，前面提供启动程序，后面提供中文语言包\n解压后安装所有包\ntar zxvf libreoffice_7.1.4.2_linux_x86-64_rpm.tar.gz\ntar zxvf libreoffice_7.1.4.2_linux_x86-64_rpm_langpack_zh-cn.tar.gz\nyum install -y  ./libreoffice_7.1.4.2_linux_x86-64_rpm/rpms/*.rpm\nyum install -y  ./libreoffice_7.1.4.2_linux_x86-64_rpm_langpack_zh-cn/rpms/*.rpm\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# error creating bean with name 'officepluginmanager'\n\n# 解决方法\n\n./shutdown.sh\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"CentOS防火墙管理",frontmatter:{title:"CentOS防火墙管理",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/firewall/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/11.CentOS%E9%98%B2%E7%81%AB%E5%A2%99%E7%AE%A1%E7%90%86.html",relativePath:"10.运维管理/02.CentOS/11.CentOS防火墙管理.md",key:"v-59d8163d",path:"/operation/centos/firewall/",headers:[{level:2,title:"查看防火墙状态",slug:"查看防火墙状态",normalizedTitle:"查看防火墙状态",charIndex:2},{level:2,title:"打开防火墙",slug:"打开防火墙",normalizedTitle:"打开防火墙",charIndex:82},{level:2,title:"关闭防火墙",slug:"关闭防火墙",normalizedTitle:"关闭防火墙",charIndex:132},{level:2,title:"禁止开机启动",slug:"禁止开机启动",normalizedTitle:"禁止开机启动",charIndex:181},{level:2,title:"重启防火墙",slug:"重启防火墙",normalizedTitle:"重启防火墙",charIndex:234},{level:2,title:"开放端口",slug:"开放端口",normalizedTitle:"开放端口",charIndex:286},{level:2,title:"移除已开放端口",slug:"移除已开放端口",normalizedTitle:"移除已开放端口",charIndex:370},{level:2,title:"查询端口是否开放",slug:"查询端口是否开放",normalizedTitle:"查询端口是否开放",charIndex:460},{level:2,title:"查看防火墙所有开放的端口",slug:"查看防火墙所有开放的端口",normalizedTitle:"查看防火墙所有开放的端口",charIndex:514},{level:2,title:"开放端口段",slug:"开放端口段",normalizedTitle:"开放端口段",charIndex:577},{level:2,title:"放通某个IP访问，默认允许",slug:"放通某个ip访问-默认允许",normalizedTitle:"放通某个ip访问，默认允许",charIndex:681},{level:2,title:"禁止某个IP访问",slug:"禁止某个ip访问",normalizedTitle:"禁止某个ip访问",charIndex:825},{level:2,title:"放通某个IP访问某个端口",slug:"放通某个ip访问某个端口",normalizedTitle:"放通某个ip访问某个端口",charIndex:958},{level:2,title:"移除以上规则",slug:"移除以上规则",normalizedTitle:"移除以上规则",charIndex:1129},{level:2,title:"查看监听的端口",slug:"查看监听的端口",normalizedTitle:"查看监听的端口",charIndex:1305},{level:2,title:"查看进程的详细信息",slug:"查看进程的详细信息",normalizedTitle:"查看进程的详细信息",charIndex:1408},{level:2,title:"中止进程",slug:"中止进程",normalizedTitle:"中止进程",charIndex:1436}],headersStr:"查看防火墙状态 打开防火墙 关闭防火墙 禁止开机启动 重启防火墙 开放端口 移除已开放端口 查询端口是否开放 查看防火墙所有开放的端口 开放端口段 放通某个IP访问，默认允许 禁止某个IP访问 放通某个IP访问某个端口 移除以上规则 查看监听的端口 查看进程的详细信息 中止进程",content:"# 查看防火墙状态\n\nfirewall-cmd --state\n或\nsystemctl status firewalld.service\n\n\n1\n2\n3\n\n\n\n# 打开防火墙\n\nsystemctl start firewalld.service\n\n\n1\n\n\n\n# 关闭防火墙\n\nsystemctl stop firewalld.service\n\n\n1\n\n\n\n# 禁止开机启动\n\nsystemctl disable firewalld.service\n\n\n1\n\n\n\n# 重启防火墙\n\nsystemctl restart firewalld.service\n\n\n1\n\n\n\n# 开放端口\n\nfirewall-cmd --add-port=6379/tcp --permanent\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 移除已开放端口\n\nfirewall-cmd --remove-port=6379/tcp --permanent\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 查询端口是否开放\n\nfirewall-cmd --query-port=6379/tcp\n\n\n1\n\n\n\n# 查看防火墙所有开放的端口\n\nfirewall-cmd --zone=public --list-ports\n\n\n1\n\n\n\n# 开放端口段\n\nfirewall-cmd --permanent --zone=public --add-port=1000-2000/tcp\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 放通某个IP访问，默认允许\n\nfirewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address=192.168.1.169 accept'\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 禁止某个IP访问\n\nfirewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address=10.0.0.42 drop'\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 放通某个IP访问某个端口\n\nfirewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address=192.168.1.169 port protocol=tcp port=6379 accept'\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 移除以上规则\n\nfirewall-cmd --permanent --remove-rich-rule='rule family=\"ipv4\" source address=\"192.168.1.169\" port port=\"6379\" protocol=\"tcp\" accept'\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 查看监听的端口\n\nnetstat -lnpt\n\ncentos7默认没有 netstat 命令，需要安装 net-tools 工具，yum install -y net-tools\n\n\n1\n2\n3\n\n\n\n# 查看进程的详细信息\n\nps 6832\n\n\n1\n\n\n\n# 中止进程\n\nkill -9 6832\n\n\n1\n",normalizedContent:"# 查看防火墙状态\n\nfirewall-cmd --state\n或\nsystemctl status firewalld.service\n\n\n1\n2\n3\n\n\n\n# 打开防火墙\n\nsystemctl start firewalld.service\n\n\n1\n\n\n\n# 关闭防火墙\n\nsystemctl stop firewalld.service\n\n\n1\n\n\n\n# 禁止开机启动\n\nsystemctl disable firewalld.service\n\n\n1\n\n\n\n# 重启防火墙\n\nsystemctl restart firewalld.service\n\n\n1\n\n\n\n# 开放端口\n\nfirewall-cmd --add-port=6379/tcp --permanent\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 移除已开放端口\n\nfirewall-cmd --remove-port=6379/tcp --permanent\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 查询端口是否开放\n\nfirewall-cmd --query-port=6379/tcp\n\n\n1\n\n\n\n# 查看防火墙所有开放的端口\n\nfirewall-cmd --zone=public --list-ports\n\n\n1\n\n\n\n# 开放端口段\n\nfirewall-cmd --permanent --zone=public --add-port=1000-2000/tcp\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 放通某个ip访问，默认允许\n\nfirewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address=192.168.1.169 accept'\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 禁止某个ip访问\n\nfirewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address=10.0.0.42 drop'\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 放通某个ip访问某个端口\n\nfirewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address=192.168.1.169 port protocol=tcp port=6379 accept'\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 移除以上规则\n\nfirewall-cmd --permanent --remove-rich-rule='rule family=\"ipv4\" source address=\"192.168.1.169\" port port=\"6379\" protocol=\"tcp\" accept'\nfirewall-cmd --reload\n\n\n1\n2\n\n\n\n# 查看监听的端口\n\nnetstat -lnpt\n\ncentos7默认没有 netstat 命令，需要安装 net-tools 工具，yum install -y net-tools\n\n\n1\n2\n3\n\n\n\n# 查看进程的详细信息\n\nps 6832\n\n\n1\n\n\n\n# 中止进程\n\nkill -9 6832\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"CentOS安装VMWareTools",frontmatter:{title:"CentOS安装VMWareTools",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/vmwaretools/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/12.CentOS%E5%AE%89%E8%A3%85VMWareTools.html",relativePath:"10.运维管理/02.CentOS/12.CentOS安装VMWareTools.md",key:"v-086a8cc9",path:"/operation/centos/vmwaretools/",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:2}],headersStr:"安装",content:"# 安装\n\nchmod -R 777 vmware-tools-distrib\n./vmware-install.pl\n\n\n1\n2\n",normalizedContent:"# 安装\n\nchmod -r 777 vmware-tools-distrib\n./vmware-install.pl\n\n\n1\n2\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"CentOS安装主题",frontmatter:{title:"CentOS安装主题",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/theme/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/13.CentOS%E5%AE%89%E8%A3%85%E4%B8%BB%E9%A2%98.html",relativePath:"10.运维管理/02.CentOS/13.CentOS安装主题.md",key:"v-26e2f127",path:"/operation/centos/theme/",headers:[{level:2,title:"下载",slug:"下载",normalizedTitle:"下载",charIndex:2},{level:2,title:"解压",slug:"解压",normalizedTitle:"解压",charIndex:51}],headersStr:"下载 解压",content:"# 下载\n\nhttps://www.xfce-look.org/p/1207818\n\n\n1\n\n\n\n# 解压\n\ntar xf PRO-dark-XFCE-4.14.tar.xz\ntar xf PRO-dark-XFCE-edition\\ II-1.tar.xz\ntar xvf XFCE-D-PRO-1.6.tar\n\ncp -R PRO-dark-XFCE-4.14 /usr/share/themes/\ncp -R PRO-dark-XFCE-edition\\ II-1 /usr/share/themes/\ncp -R XFCE-D-PRO-1.6 /usr/share/themes/\n\n\n1\n2\n3\n4\n5\n6\n7\n",normalizedContent:"# 下载\n\nhttps://www.xfce-look.org/p/1207818\n\n\n1\n\n\n\n# 解压\n\ntar xf pro-dark-xfce-4.14.tar.xz\ntar xf pro-dark-xfce-edition\\ ii-1.tar.xz\ntar xvf xfce-d-pro-1.6.tar\n\ncp -r pro-dark-xfce-4.14 /usr/share/themes/\ncp -r pro-dark-xfce-edition\\ ii-1 /usr/share/themes/\ncp -r xfce-d-pro-1.6 /usr/share/themes/\n\n\n1\n2\n3\n4\n5\n6\n7\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"CentOS解压缩",frontmatter:{title:"CentOS解压缩",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/tar/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/14.CentOS%E8%A7%A3%E5%8E%8B%E7%BC%A9.html",relativePath:"10.运维管理/02.CentOS/14.CentOS解压缩.md",key:"v-504f09f5",path:"/operation/centos/tar/",headers:[{level:2,title:".tar",slug:"tar",normalizedTitle:".tar",charIndex:2},{level:2,title:".gz",slug:"gz",normalizedTitle:".gz",charIndex:101},{level:2,title:".tar.gz 和 .tgz",slug:"tar-gz-和-tgz",normalizedTitle:".tar.gz 和 .tgz",charIndex:174},{level:2,title:".bz2",slug:"bz2",normalizedTitle:".bz2",charIndex:274},{level:2,title:".tar.bz2",slug:"tar-bz2",normalizedTitle:".tar.bz2",charIndex:357},{level:2,title:".bz",slug:"bz",normalizedTitle:".bz",charIndex:274},{level:2,title:".tar.bz",slug:"tar-bz",normalizedTitle:".tar.bz",charIndex:357},{level:2,title:"tar.xz",slug:"tar-xz",normalizedTitle:"tar.xz",charIndex:580},{level:2,title:".Z",slug:"z",normalizedTitle:".z",charIndex:686},{level:2,title:".tar.Z",slug:"tar-z",normalizedTitle:".tar.z",charIndex:740},{level:2,title:".zip",slug:"zip",normalizedTitle:".zip",charIndex:830},{level:2,title:".rar",slug:"rar",normalizedTitle:".rar",charIndex:906},{level:2,title:".lha",slug:"lha",normalizedTitle:".lha",charIndex:984},{level:2,title:".rpm",slug:"rpm",normalizedTitle:".rpm",charIndex:1065},{level:2,title:".deb",slug:"deb",normalizedTitle:".deb",charIndex:1128}],headersStr:".tar .gz .tar.gz 和 .tgz .bz2 .tar.bz2 .bz .tar.bz tar.xz .Z .tar.Z .zip .rar .lha .rpm .deb",content:"# .tar\n\n解包：tar xvf FileName.tar 打包：tar cvf FileName.tar DirName （注：tar是打包，不是压缩！） ———————————————\n\n\n# .gz\n\n解压1：gunzip FileName.gz 解压2：gzip -d FileName.gz 压缩：gzip FileName\n\n\n# .tar.gz 和 .tgz\n\n解压：tar zxvf FileName.tar.gz 压缩：tar zcvf FileName.tar.gz DirName ———————————————\n\n\n# .bz2\n\n解压1：bzip2 -d FileName.bz2 解压2：bunzip2 FileName.bz2 压缩： bzip2 -z FileName\n\n\n# .tar.bz2\n\n解压：tar jxvf FileName.tar.bz2 压缩：tar jcvf FileName.tar.bz2 DirName ———————————————\n\n\n# .bz\n\n解压1：bzip2 -d FileName.bz 解压2：bunzip2 FileName.bz 压缩：未知\n\n\n# .tar.bz\n\n解压：tar jxvf FileName.tar.bz 压缩：未知 ———————————————\n\n\n# tar.xz\n\n解压：tar -xf archive.tar.xz\n\n压缩：tar -xf archive.tar.xz -C /home/linuxize/files\n\n———————————————\n\n\n# .Z\n\n解压：uncompress FileName.Z 压缩：compress FileName\n\n\n# .tar.Z\n\n解压：tar Zxvf FileName.tar.Z 压缩：tar Zcvf FileName.tar.Z DirName ———————————————\n\n\n# .zip\n\n解压：unzip FileName.zip 压缩：zip FileName.zip DirName ———————————————\n\n\n# .rar\n\n解压：rar x FileName.rar 压缩：rar a FileName.rar DirName ———————————————\n\n\n# .lha\n\n解压：lha -e FileName.lha 压缩：lha -a FileName.lha FileName ———————————————\n\n\n# .rpm\n\n解包：rpm2cpio FileName.rpm | cpio -div ———————————————\n\n\n# .deb\n\n解包：ar p FileName.deb data.tar.gz | tar zxf - ——————————————— .tar .tgz .tar.gz .tar.Z .tar.bz .tar.bz2 .zip .cpio .rpm .deb .slp .arj .rar .ace .lha .lzh .lzx .lzs .arc .sda .sfx .lnx .zoo .cab .kar .cpt .pit .sit .sea 解压：sEx x FileName.* 压缩：sEx a FileName.* FileName",normalizedContent:"# .tar\n\n解包：tar xvf filename.tar 打包：tar cvf filename.tar dirname （注：tar是打包，不是压缩！） ———————————————\n\n\n# .gz\n\n解压1：gunzip filename.gz 解压2：gzip -d filename.gz 压缩：gzip filename\n\n\n# .tar.gz 和 .tgz\n\n解压：tar zxvf filename.tar.gz 压缩：tar zcvf filename.tar.gz dirname ———————————————\n\n\n# .bz2\n\n解压1：bzip2 -d filename.bz2 解压2：bunzip2 filename.bz2 压缩： bzip2 -z filename\n\n\n# .tar.bz2\n\n解压：tar jxvf filename.tar.bz2 压缩：tar jcvf filename.tar.bz2 dirname ———————————————\n\n\n# .bz\n\n解压1：bzip2 -d filename.bz 解压2：bunzip2 filename.bz 压缩：未知\n\n\n# .tar.bz\n\n解压：tar jxvf filename.tar.bz 压缩：未知 ———————————————\n\n\n# tar.xz\n\n解压：tar -xf archive.tar.xz\n\n压缩：tar -xf archive.tar.xz -c /home/linuxize/files\n\n———————————————\n\n\n# .z\n\n解压：uncompress filename.z 压缩：compress filename\n\n\n# .tar.z\n\n解压：tar zxvf filename.tar.z 压缩：tar zcvf filename.tar.z dirname ———————————————\n\n\n# .zip\n\n解压：unzip filename.zip 压缩：zip filename.zip dirname ———————————————\n\n\n# .rar\n\n解压：rar x filename.rar 压缩：rar a filename.rar dirname ———————————————\n\n\n# .lha\n\n解压：lha -e filename.lha 压缩：lha -a filename.lha filename ———————————————\n\n\n# .rpm\n\n解包：rpm2cpio filename.rpm | cpio -div ———————————————\n\n\n# .deb\n\n解包：ar p filename.deb data.tar.gz | tar zxf - ——————————————— .tar .tgz .tar.gz .tar.z .tar.bz .tar.bz2 .zip .cpio .rpm .deb .slp .arj .rar .ace .lha .lzh .lzx .lzs .arc .sda .sfx .lnx .zoo .cab .kar .cpt .pit .sit .sea 解压：sex x filename.* 压缩：sex a filename.* filename",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"CentOS安装NodeJS",frontmatter:{title:"CentOS安装NodeJS",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/nodejs/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/15.CentOS-%E5%AE%89%E8%A3%85NodeJS.html",relativePath:"10.运维管理/02.CentOS/15.CentOS-安装NodeJS.md",key:"v-867d6432",path:"/operation/centos/nodejs/",headers:[{level:2,title:"npm ERR! code EINTEGRITY 解决方案",slug:"npm-err-code-eintegrity-解决方案",normalizedTitle:"npm err! code eintegrity 解决方案",charIndex:326}],headersStr:"npm ERR! code EINTEGRITY 解决方案",content:'yum install nodejs\n\nnode -v 查看node的版本\n\nnpm -v 查看npm的版本(新版的node安装自带安装npm)\n\n在nodejs根目录,创建node_global，node_cache文件夹\n\nnpm config set prefix "D:\\Design\\nodejs\\node_global"\n\nnpm config set cache "D:\\Design\\nodejs\\node_cache"\n\nnpm config set registry https://registry.npm.taobao.org\n\nnpm config get registry\n\nnpm install -g yarn\n\n\n# npm ERR! code EINTEGRITY 解决方案\n\n在使用taro 安装依赖包的时候，经常出现npm ERR! code EINTEGRITY的问题，应该是npm本地的缓存造成的。\n\n删除package.lock.json文件（如果不想更改此文件，装完之后还原即可） npm cache clean --force （会有警告提示，忽略即可） npm i 重新安装',normalizedContent:'yum install nodejs\n\nnode -v 查看node的版本\n\nnpm -v 查看npm的版本(新版的node安装自带安装npm)\n\n在nodejs根目录,创建node_global，node_cache文件夹\n\nnpm config set prefix "d:\\design\\nodejs\\node_global"\n\nnpm config set cache "d:\\design\\nodejs\\node_cache"\n\nnpm config set registry https://registry.npm.taobao.org\n\nnpm config get registry\n\nnpm install -g yarn\n\n\n# npm err! code eintegrity 解决方案\n\n在使用taro 安装依赖包的时候，经常出现npm err! code eintegrity的问题，应该是npm本地的缓存造成的。\n\n删除package.lock.json文件（如果不想更改此文件，装完之后还原即可） npm cache clean --force （会有警告提示，忽略即可） npm i 重新安装',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"CentOS设置静态IP",frontmatter:{title:"CentOS设置静态IP",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/ip/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/16.CentOS%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81IP.html",relativePath:"10.运维管理/02.CentOS/16.CentOS设置静态IP.md",key:"v-f7310056",path:"/operation/centos/ip/",headers:[{level:2,title:"查看网卡完整名称",slug:"查看网卡完整名称",normalizedTitle:"查看网卡完整名称",charIndex:2},{level:2,title:"修改网卡配置",slug:"修改网卡配置",normalizedTitle:"修改网卡配置",charIndex:56},{level:2,title:"重启网络",slug:"重启网络",normalizedTitle:"重启网络",charIndex:252}],headersStr:"查看网卡完整名称 修改网卡配置 重启网络",content:'# 查看网卡完整名称\n\nls /etc/sysconfig/network-scripts/\n\n\n1\n\n\n\n# 修改网卡配置\n\nvi /etc/sysconfig/network-scripts/ifcfg-ens33\n\nBOOTPROTO=static\nONBOOT="yes"\nIPADDR=192.168.200.130\nNETMASK=255.255.255.0\nGATEWAY=192.168.200.2\nDNS1=114.114.114.114\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 重启网络\n\nsystemctl restart network\n\n\n1\n',normalizedContent:'# 查看网卡完整名称\n\nls /etc/sysconfig/network-scripts/\n\n\n1\n\n\n\n# 修改网卡配置\n\nvi /etc/sysconfig/network-scripts/ifcfg-ens33\n\nbootproto=static\nonboot="yes"\nipaddr=192.168.200.130\nnetmask=255.255.255.0\ngateway=192.168.200.2\ndns1=114.114.114.114\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 重启网络\n\nsystemctl restart network\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"CentOS frp内网穿透",frontmatter:{title:"CentOS frp内网穿透",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/frp/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/17.CentOS%20frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.html",relativePath:"10.运维管理/02.CentOS/17.CentOS frp内网穿透.md",key:"v-e7d7bc3c",path:"/operation/centos/frp/",headers:[{level:2,title:"frp 服务端搭建",slug:"frp-服务端搭建",normalizedTitle:"frp 服务端搭建",charIndex:2},{level:3,title:"下载安装包",slug:"下载安装包",normalizedTitle:"下载安装包",charIndex:16},{level:3,title:"解压安装包",slug:"解压安装包",normalizedTitle:"解压安装包",charIndex:125},{level:3,title:"修改配置文件",slug:"修改配置文件",normalizedTitle:"修改配置文件",charIndex:181},{level:3,title:"启动 frp 服务端",slug:"启动-frp-服务端",normalizedTitle:"启动 frp 服务端",charIndex:517},{level:2,title:"frp 客户端搭建",slug:"frp-客户端搭建",normalizedTitle:"frp 客户端搭建",charIndex:770},{level:2,title:"下载安装包",slug:"下载安装包-2",normalizedTitle:"下载安装包",charIndex:16},{level:3,title:"解压安装包",slug:"解压安装包-2",normalizedTitle:"解压安装包",charIndex:125},{level:3,title:"修改配置文件，配置服务端 ip 端口及监听的域名信息",slug:"修改配置文件-配置服务端-ip-端口及监听的域名信息",normalizedTitle:"修改配置文件，配置服务端 ip 端口及监听的域名信息",charIndex:951},{level:3,title:"启动 frp 客户端",slug:"启动-frp-客户端",normalizedTitle:"启动 frp 客户端",charIndex:1181},{level:3,title:"配置域名解析",slug:"配置域名解析",normalizedTitle:"配置域名解析",charIndex:1496},{level:3,title:"nginx 代理",slug:"nginx-代理",normalizedTitle:"nginx 代理",charIndex:1584},{level:4,title:"测试配置文件是否有问题",slug:"测试配置文件是否有问题",normalizedTitle:"测试配置文件是否有问题",charIndex:3434},{level:4,title:"重新加载配置文件，使其生效",slug:"重新加载配置文件-使其生效",normalizedTitle:"重新加载配置文件，使其生效",charIndex:3600}],headersStr:"frp 服务端搭建 下载安装包 解压安装包 修改配置文件 启动 frp 服务端 frp 客户端搭建 下载安装包 解压安装包 修改配置文件，配置服务端 ip 端口及监听的域名信息 启动 frp 客户端 配置域名解析 nginx 代理 测试配置文件是否有问题 重新加载配置文件，使其生效",content:"# frp 服务端搭建\n\n\n# 下载安装包\n\nwget https://github.com/fatedier/frp/releases/download/v0.27.0/frp_0.27.0_linux_amd64.tar.gz\n\n\n1\n\n\n\n# 解压安装包\n\ntar -zxvf frp_0.27.0_linux_amd64.tar.gz\n\n\n1\n\n\n\n# 修改配置文件\n\ncd frp_0.27.0_linux_amd64\nvim frps.ini\n\n[common]                                                                                                                  \nbind_port = 7100                                                                                                          \nvhost_http_port = 7200\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 启动 frp 服务端\n\n./frps -c frps.ini\n2019/06/15 16:42:02 [I] [service.go:139] frps tcp listen on 0.0.0.0:7100\n2019/06/15 16:42:02 [I] [service.go:181] http service listen on 0.0.0.0:7200\n2019/06/15 16:42:02 [I] [root.go:204] Start frps success\n\n\n1\n2\n3\n4\n\n\n\n# frp 客户端搭建\n\n\n# 下载安装包\n\nwget https://github.com/fatedier/frp/releases/download/v0.27.0/frp_0.27.0_darwin_amd64.tar.gz\n\n\n1\n\n\n\n# 解压安装包\n\ntar -zxvf frp_0.27.0_darwin_amd64.tar.gz\n\n\n1\n\n\n\n# 修改配置文件，配置服务端 ip 端口及监听的域名信息\n\ncd frp_0.27.0_darwin_amd64\nvim frpc.ini\n\n[common]\nserver_addr = 120.92.169.103\nserver_port = 7100\n\n[web]\ntype = http\nlocal_port = 8080\ncustom_domains = oauth.xkcoding.com\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 启动 frp 客户端\n\n./frpc -c frpc.ini\n2019/06/15 16:48:52 [I] [service.go:221] login to server success, get run id [8bb83bae5c58afe6], server udp port [0]\n2019/06/15 16:48:52 [I] [proxy_manager.go:137] [8bb83bae5c58afe6] proxy added: [web]\n2019/06/15 16:48:52 [I] [control.go:144] [web] start proxy success\n\n\n1\n2\n3\n4\n\n\n\n# 配置域名解析\n\n前往阿里云 DNS 解析，将域名解析到我们的公网服务器上，比如我的就是将 oauth.xkcoding.com -> 120.92.169.103\n\n\n\n\n# nginx 代理\n\n\nserver {\n    listen       80;\n    server_name  oauth.xkcoding.com;         \n                                                                        \n    location / {\n        proxy_pass http://127.0.0.1:7200;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header   X-Real-IP        $remote_addr;                                                                 \n        proxy_buffering off;                                                                                              \n        sendfile off;                                                                                                     \n        proxy_max_temp_file_size 0;                                                                                       \n        client_max_body_size       10m;                                                                                   \n        client_body_buffer_size    128k;                                                                                  \n        proxy_connect_timeout      90;                                                                                    \n        proxy_send_timeout         90;                                                                                    \n        proxy_read_timeout         90;                                                                                    \n        proxy_temp_file_write_size 64k;                                                                                   \n        proxy_http_version 1.1;                                                                                           \n        proxy_request_buffering off; \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n# 测试配置文件是否有问题\n\nnginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n\n\n1\n2\n3\n\n\n# 重新加载配置文件，使其生效\n\nnginx -s reload\n\n\n1\n\n\n现在当我们在浏览器输入 oauth.xkcoding.com 的时候，网络流量其实会经历以下几个步骤：\n\n通过之前配的 DNS 域名解析会访问到我们的公网服务器 120.92.169.103 的 80 端口\n再经过 nginx，代理到本地的 7200 端口\n再经过 frp 穿透到我们的 Mac 电脑的 8080 端口\n此时 8080 就是我们的应用程序端口\n\n\n1\n2\n3\n4\n5\n6\n",normalizedContent:"# frp 服务端搭建\n\n\n# 下载安装包\n\nwget https://github.com/fatedier/frp/releases/download/v0.27.0/frp_0.27.0_linux_amd64.tar.gz\n\n\n1\n\n\n\n# 解压安装包\n\ntar -zxvf frp_0.27.0_linux_amd64.tar.gz\n\n\n1\n\n\n\n# 修改配置文件\n\ncd frp_0.27.0_linux_amd64\nvim frps.ini\n\n[common]                                                                                                                  \nbind_port = 7100                                                                                                          \nvhost_http_port = 7200\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 启动 frp 服务端\n\n./frps -c frps.ini\n2019/06/15 16:42:02 [i] [service.go:139] frps tcp listen on 0.0.0.0:7100\n2019/06/15 16:42:02 [i] [service.go:181] http service listen on 0.0.0.0:7200\n2019/06/15 16:42:02 [i] [root.go:204] start frps success\n\n\n1\n2\n3\n4\n\n\n\n# frp 客户端搭建\n\n\n# 下载安装包\n\nwget https://github.com/fatedier/frp/releases/download/v0.27.0/frp_0.27.0_darwin_amd64.tar.gz\n\n\n1\n\n\n\n# 解压安装包\n\ntar -zxvf frp_0.27.0_darwin_amd64.tar.gz\n\n\n1\n\n\n\n# 修改配置文件，配置服务端 ip 端口及监听的域名信息\n\ncd frp_0.27.0_darwin_amd64\nvim frpc.ini\n\n[common]\nserver_addr = 120.92.169.103\nserver_port = 7100\n\n[web]\ntype = http\nlocal_port = 8080\ncustom_domains = oauth.xkcoding.com\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 启动 frp 客户端\n\n./frpc -c frpc.ini\n2019/06/15 16:48:52 [i] [service.go:221] login to server success, get run id [8bb83bae5c58afe6], server udp port [0]\n2019/06/15 16:48:52 [i] [proxy_manager.go:137] [8bb83bae5c58afe6] proxy added: [web]\n2019/06/15 16:48:52 [i] [control.go:144] [web] start proxy success\n\n\n1\n2\n3\n4\n\n\n\n# 配置域名解析\n\n前往阿里云 dns 解析，将域名解析到我们的公网服务器上，比如我的就是将 oauth.xkcoding.com -> 120.92.169.103\n\n\n\n\n# nginx 代理\n\n\nserver {\n    listen       80;\n    server_name  oauth.xkcoding.com;         \n                                                                        \n    location / {\n        proxy_pass http://127.0.0.1:7200;\n        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;\n        proxy_set_header host $http_host;\n        proxy_set_header x-forwarded-proto $scheme;\n        proxy_set_header   x-real-ip        $remote_addr;                                                                 \n        proxy_buffering off;                                                                                              \n        sendfile off;                                                                                                     \n        proxy_max_temp_file_size 0;                                                                                       \n        client_max_body_size       10m;                                                                                   \n        client_body_buffer_size    128k;                                                                                  \n        proxy_connect_timeout      90;                                                                                    \n        proxy_send_timeout         90;                                                                                    \n        proxy_read_timeout         90;                                                                                    \n        proxy_temp_file_write_size 64k;                                                                                   \n        proxy_http_version 1.1;                                                                                           \n        proxy_request_buffering off; \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n# 测试配置文件是否有问题\n\nnginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n\n\n1\n2\n3\n\n\n# 重新加载配置文件，使其生效\n\nnginx -s reload\n\n\n1\n\n\n现在当我们在浏览器输入 oauth.xkcoding.com 的时候，网络流量其实会经历以下几个步骤：\n\n通过之前配的 dns 域名解析会访问到我们的公网服务器 120.92.169.103 的 80 端口\n再经过 nginx，代理到本地的 7200 端口\n再经过 frp 穿透到我们的 mac 电脑的 8080 端口\n此时 8080 就是我们的应用程序端口\n\n\n1\n2\n3\n4\n5\n6\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"CentOS安装Git",frontmatter:{title:"CentOS安装Git",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/git/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/18.CentOS-%E5%AE%89%E8%A3%85Git.html",relativePath:"10.运维管理/02.CentOS/18.CentOS-安装Git.md",key:"v-0cfb60fd",path:"/operation/centos/git/",headers:[{level:2,title:"下载安装包",slug:"下载安装包",normalizedTitle:"下载安装包",charIndex:2},{level:2,title:"编译安装",slug:"编译安装",normalizedTitle:"编译安装",charIndex:48},{level:2,title:"配置环境变量",slug:"配置环境变量",normalizedTitle:"配置环境变量",charIndex:267},{level:2,title:"查看版本",slug:"查看版本",normalizedTitle:"查看版本",charIndex:408},{level:2,title:"Git克隆项目时报错：git：‘remote-https‘ 不是一个 git 命令。参见 ‘git --help‘。",slug:"git克隆项目时报错-git-remote-https-不是一个-git-命令。参见-git-help-。",normalizedTitle:"git克隆项目时报错：git：‘remote-https‘ 不是一个 git 命令。参见 ‘git --help‘。",charIndex:435}],headersStr:"下载安装包 编译安装 配置环境变量 查看版本 Git克隆项目时报错：git：‘remote-https‘ 不是一个 git 命令。参见 ‘git --help‘。",content:"# 下载安装包\n\nRelease v2.38.1 · git/git · GitHub\n\n\n# 编译安装\n\nyum install -y perl-devel\nyum install libcurl-devel && yum install curl-devel\ntar -zxvf git-2.38.1.tar.gz\ncd git-2.38.1\nmake configure\n./configure --prefix=/usr/local/git\nmake && make install\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 配置环境变量\n\nvim /etc/profile\n\n# git env\nexport PATH=/usr/local/git/bin:/usr/local/libexec/git-core:$PATH\n\nsource /etc/profile\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 查看版本\n\ngit version\n\n\n1\n\n\n\n# Git克隆项目时报错：git：‘remote-https‘ 不是一个 git 命令。参见 ‘git --help‘。\n\n将/usr/libexec/git-core 纳入 PATH。 修改 /etc/profile 文件，在最后一行加入：\n\nPATH=$PATH:/usr/libexec/git-core\n\n\n1\n",normalizedContent:"# 下载安装包\n\nrelease v2.38.1 · git/git · github\n\n\n# 编译安装\n\nyum install -y perl-devel\nyum install libcurl-devel && yum install curl-devel\ntar -zxvf git-2.38.1.tar.gz\ncd git-2.38.1\nmake configure\n./configure --prefix=/usr/local/git\nmake && make install\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 配置环境变量\n\nvim /etc/profile\n\n# git env\nexport path=/usr/local/git/bin:/usr/local/libexec/git-core:$path\n\nsource /etc/profile\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 查看版本\n\ngit version\n\n\n1\n\n\n\n# git克隆项目时报错：git：‘remote-https‘ 不是一个 git 命令。参见 ‘git --help‘。\n\n将/usr/libexec/git-core 纳入 path。 修改 /etc/profile 文件，在最后一行加入：\n\npath=$path:/usr/libexec/git-core\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"CentOS安装Jenkins",frontmatter:{title:"CentOS安装Jenkins",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/jenkins/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/19.CentOS-%E5%AE%89%E8%A3%85Jenkins.html",relativePath:"10.运维管理/02.CentOS/19.CentOS-安装Jenkins.md",key:"v-1b1663c6",path:"/operation/centos/jenkins/",headers:[{level:2,title:"下载安装",slug:"下载安装",normalizedTitle:"下载安装",charIndex:2},{level:2,title:"后台启动",slug:"后台启动",normalizedTitle:"后台启动",charIndex:271},{level:2,title:"开机启动",slug:"开机启动",normalizedTitle:"开机启动",charIndex:459},{level:3,title:"创建jenkins.sh脚本",slug:"创建jenkins-sh脚本",normalizedTitle:"创建jenkins.sh脚本",charIndex:468},{level:4,title:"编写jenkins.sh脚本",slug:"编写jenkins-sh脚本",normalizedTitle:"编写jenkins.sh脚本",charIndex:597},{level:3,title:"创建jenkins.service文件",slug:"创建jenkins-service文件",normalizedTitle:"创建jenkins.service文件",charIndex:1635},{level:3,title:"刷新服务配置",slug:"刷新服务配置",normalizedTitle:"刷新服务配置",charIndex:2053},{level:3,title:"查看密码",slug:"查看密码",normalizedTitle:"查看密码",charIndex:2371},{level:2,title:"登录",slug:"登录",normalizedTitle:"登录",charIndex:2442},{level:2,title:"管理员配置",slug:"管理员配置",normalizedTitle:"管理员配置",charIndex:2511},{level:2,title:"开始使用",slug:"开始使用",normalizedTitle:"开始使用",charIndex:2583},{level:2,title:"安装其他插件",slug:"安装其他插件",normalizedTitle:"安装其他插件",charIndex:2594},{level:2,title:"JDK配置",slug:"jdk配置",normalizedTitle:"jdk配置",charIndex:2609},{level:2,title:"SSH配置",slug:"ssh配置",normalizedTitle:"ssh配置",charIndex:2642},{level:2,title:"远程服务器配置",slug:"远程服务器配置",normalizedTitle:"远程服务器配置",charIndex:2660},{level:3,title:"建立工作目录",slug:"建立工作目录",normalizedTitle:"建立工作目录",charIndex:2672},{level:3,title:"deploy.sh",slug:"deploy-sh",normalizedTitle:"deploy.sh",charIndex:2898},{level:2,title:"建立目录",slug:"建立目录",normalizedTitle:"建立目录",charIndex:8066},{level:2,title:"部署任务配置",slug:"部署任务配置",normalizedTitle:"部署任务配置",charIndex:8077},{level:3,title:"详细配置",slug:"详细配置",normalizedTitle:"详细配置",charIndex:8092},{level:2,title:"部署成功",slug:"部署成功",normalizedTitle:"部署成功",charIndex:7139},{level:2,title:"部署前端",slug:"部署前端",normalizedTitle:"部署前端",charIndex:8124}],headersStr:"下载安装 后台启动 开机启动 创建jenkins.sh脚本 编写jenkins.sh脚本 创建jenkins.service文件 刷新服务配置 查看密码 登录 管理员配置 开始使用 安装其他插件 JDK配置 SSH配置 远程服务器配置 建立工作目录 deploy.sh 建立目录 部署任务配置 详细配置 部署成功 部署前端",content:'# 下载安装\n\ncd /usr/local\nmkdir jenkins\ncd jenkins/\nwget https://mirrors.tuna.tsinghua.edu.cn/jenkins/war-stable/2.346.3/jenkins.war\nwget https://archives.jenkins.io/war-stable/2.289.3/jenkins.war\nwget https://get.jenkins.io/war-stable/2.387.3/jenkins.war\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 后台启动\n\nnohup java -jar jenkins.war &\n\ndd if=/dev/zero of=/swap bs=100M count=40\n/sbin/mkswap /swap\n/sbin/swapon /swap\necho "/swap  swap  swap defaults 0 0" >> /etc/fstab\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 开机启动\n\n\n# 创建jenkins.sh脚本\n\nmkdir -p /usr/local/jenkins/.shell\ncd /usr/local/jenkins/.shell\nvim jenkins.sh\nchmod +x jenkins.sh\n\n\n1\n2\n3\n4\n\n\n# 编写jenkins.sh脚本\n\n#!/bin/bash\n#author icaiwei\n\n#此处声明`JENKINS_HOME`变量\n#原因在开机自启动时，该文件访问不到环境变量中`JENKINS_HOME`变量\n\nexport JENKINS_HOME=/usr/local/jenkins\n#其他环境变量（如过Jenkins服务还有其他的环境配置一并添加在此处，很重要。）\nexport MAVEN_HOME=/usr/local/maven/apache-maven-3.8.6\nexport JAVA_HOME=/usr/local/java/jdk1.8.0_202\nexport JRE_HOME=/usr/local/java/jdk1.8.0_202/jre\nexport CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib\nexport PATH=$MAVEN_HOME/bin:$JRE_HOME/bin:$PATH:$HOME/bin\n\npid=`ps -ef | grep jenkins.war | grep -v \'grep\'| awk \'{print $2}\'| wc -l`\n if [ "$1" = "start" ];then\n if [ $pid -gt 0 ];then\n echo \'jenkins is running...\'\nelse\n #java启动服务 配置java安装根路径,和启动war包存的根路径\n nohup /usr/local/java/jdk1.8.0_202/bin/java -jar /usr/local/jenkins/jenkins.war > /usr/local/jenkins/jenkins.log 2>&1 &\n fi\n elif [ "$1" = "stop" ];then\n exec ps -ef | grep jenkins | grep -v grep | awk \'{print $2}\'| xargs kill -9\n echo \'jenkins is stop..\'\nelse\n echo "运行该脚本，请务必传入参数：start 或 stop"\n fi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 创建jenkins.service文件\n\nvim /lib/systemd/system/jenkins.service\n\n\n1\n\n\n将以下内容复制到jenkins.service文件中，注意ExecStart、ExecStop对应的脚本路径，如果不一致，请修改\n\n[Unit]\nDescription=Jenkins\nAfter=network.target\n \n[Service]\nType=forking\nExecStart=/usr/local/jenkins/.shell/jenkins.sh start\nExecReload=\nExecStop=/usr/local/jenkins/.shell/jenkins.sh stop\nPrivateTmp=true\n \n[Install]\nWantedBy=multi-user.target\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 刷新服务配置\n\nsystemctl daemon-reload\nsystemctl start jenkins.service\t\t// 启动Jenkins服务\nsystemctl stop jenkins.service\t\t// 停止Jenkins服务\nsystemctl status jenkins.service\t// 查看Jenkins服务状态\nsystemctl enable jenkins.service\t// 将Jenkins服务设置为开机启动\nsystemctl list-units --type=service | grep jenkins\t// 查看设置开机启动的服务列表\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 查看密码\n\ntail -f nohup.out \n0b776e0b24d1483a8f79acc1a44af21f\n\n\n1\n2\n\n\n\n\n\n# 登录\n\n输入192.168.1.5:8080，进入 Jenkins 首页，记得打开防火墙\n\n输入刚才得到的管理员密码\n\n\n\n\n\n\n\n\n# 管理员配置\n\n创建新用户icaiwei，icaiwei#Jenkins@0077配置实例\n\nicaiwei#PLDM@07\n\n\n\n\n\n\n\n\n# 开始使用\n\n\n\n\n# 安装其他插件\n\n\n\n\n\n\n# JDK配置\n\n\n\n\n\n去掉安装选项，使用已安装JDK\n\n\n\n\n# SSH配置\n\n\n\n\n\n\n\n\n\n\n# 远程服务器配置\n\n\n# 建立工作目录\n\n\n\n在每个子目录下，固定分成如下文件/目录：\n\n * a.jar：项目的 jar 包。\n * build 目录：Jenkins 构建完项目后的新 jar 包，会上传到 build 目录下，避免对原 jar 包覆盖，导致无法正常关闭 Java 服务。\n * backup 目录：对历史 jar 包的备份目录。每次使用新的 jar 启动服务时，会将老的 jar 移到 backup 目录下备份。\n * shell 目录：脚本目录。目前只有 deploy.sh 脚本。\n\n\n# deploy.sh\n\n#!/bin/bash\nset -e\n\nDATE=$(date +%Y%m%d%H%M)\n# 基础路径\nBASE_PATH=/work/projects/pldm\n# 编译后 jar 的地址。部署时，Jenkins 会上传 jar 包到该目录下\nSOURCE_PATH=$BASE_PATH/build\n# 服务名称。同时约定部署服务的 jar 包名字也为它。\nSERVER_NAME=pldm-server\n# 环境\nPROFILES_ACTIVE=dev\n# 健康检查 URL\nHEALTH_CHECK_URL=http://127.0.0.1:48080/actuator/health/\n\n# heapError 存放路径\nHEAP_ERROR_PATH=$BASE_PATH/heapError\n# JVM 参数\nJAVA_OPS="-Xms512m -Xmx512m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$HEAP_ERROR_PATH"\n\n# SkyWalking Agent 配置\n#export SW_AGENT_NAME=$SERVER_NAME\n#export SW_AGENT_COLLECTOR_BACKEND_SERVICES=192.168.0.84:11800\n#export SW_GRPC_LOG_SERVER_HOST=192.168.0.84\n#export SW_AGENT_TRACE_IGNORE_PATH="Redisson/PING,/actuator/**,/admin/**"\n#export JAVA_AGENT=-javaagent:/work/skywalking/apache-skywalking-apm-bin/agent/skywalking-agent.jar\n\n# 备份\nfunction backup() {\n    # 如果不存在，则无需备份\n    if [ ! -f "$BASE_PATH/$SERVER_NAME.jar" ]; then\n        echo "[backup] $BASE_PATH/$SERVER_NAME.jar 不存在，跳过备份"\n    # 如果存在，则备份到 backup 目录下，使用时间作为后缀\n    else\n        echo "[backup] 开始备份 $SERVER_NAME ..."\n        cp $BASE_PATH/$SERVER_NAME.jar $BASE_PATH/backup/$SERVER_NAME-$DATE.jar\n        echo "[backup] 备份 $SERVER_NAME 完成"\n    fi\n}\n\n# 最新构建代码 移动到项目环境\nfunction transfer() {\n    echo "[transfer] 开始转移 $SERVER_NAME.jar"\n\n    # 删除原 jar 包\n    if [ ! -f "$BASE_PATH/$SERVER_NAME.jar" ]; then\n        echo "[transfer] $BASE_PATH/$SERVER_NAME.jar 不存在，跳过删除"\n    else\n        echo "[transfer] 移除 $BASE_PATH/$SERVER_NAME.jar 完成"\n        rm $BASE_PATH/$SERVER_NAME.jar\n    fi\n\n    # 复制新 jar 包\n    echo "[transfer] 从 $SOURCE_PATH 中获取 $SERVER_NAME.jar 并迁移至 $BASE_PATH ...."\n    cp $SOURCE_PATH/$SERVER_NAME.jar $BASE_PATH\n\n    echo "[transfer] 转移 $SERVER_NAME.jar 完成"\n}\n\n# 停止：优雅关闭之前已经启动的服务\nfunction stop() {\n    echo "[stop] 开始停止 $BASE_PATH/$SERVER_NAME"\n    PID=$(ps -ef | grep $BASE_PATH/$SERVER_NAME | grep -v "grep" | awk \'{print $2}\')\n    # 如果 Java 服务启动中，则进行关闭\n    if [ -n "$PID" ]; then\n        # 正常关闭\n        echo "[stop] $BASE_PATH/$SERVER_NAME 运行中，开始 kill [$PID]"\n        kill -15 $PID\n        # 等待最大 120 秒，直到关闭完成。\n        for ((i = 0; i < 120; i++))\n            do\n                sleep 1\n                PID=$(ps -ef | grep $BASE_PATH/$SERVER_NAME | grep -v "grep" | awk \'{print $2}\')\n                if [ -n "$PID" ]; then\n                    echo -e ".\\c"\n                else\n                    echo \'[stop] 停止 $BASE_PATH/$SERVER_NAME 成功\'\n                    break\n                fi\n\t\t    done\n\n        # 如果正常关闭失败，那么进行强制 kill -9 进行关闭\n        if [ -n "$PID" ]; then\n            echo "[stop] $BASE_PATH/$SERVER_NAME 失败，强制 kill -9 $PID"\n            kill -9 $PID\n        fi\n    # 如果 Java 服务未启动，则无需关闭\n    else\n        echo "[stop] $BASE_PATH/$SERVER_NAME 未启动，无需停止"\n    fi\n}\n\n# 启动：启动后端项目\nfunction start() {\n    # 开启启动前，打印启动参数\n    echo "[start] 开始启动 $BASE_PATH/$SERVER_NAME"\n    echo "[start] JAVA_OPS: $JAVA_OPS"\n    echo "[start] JAVA_AGENT: $JAVA_AGENT"\n    echo "[start] PROFILES: $PROFILES_ACTIVE"\n\n    # 开始启动\n    BUILD_ID=dontKillMe nohup java -server $JAVA_OPS $JAVA_AGENT -jar $BASE_PATH/$SERVER_NAME.jar --spring.profiles.active=$PROFILES_ACTIVE &\n    echo "[start] 启动 $BASE_PATH/$SERVER_NAME 完成"\n}\n\n# 健康检查：自动判断后端项目是否正常启动\nfunction healthCheck() {\n    # 如果配置健康检查，则进行健康检查\n    if [ -n "$HEALTH_CHECK_URL" ]; then\n        # 健康检查最大 180 秒，直到健康检查通过\n        echo "[healthCheck] 开始通过 $HEALTH_CHECK_URL 地址，进行健康检查";\n        for ((i = 0; i < 180; i++))\n            do\n                # 请求健康检查地址，只获取状态码。\n                result=`curl -I -m 10 -o /dev/null -s -w %{http_code} $HEALTH_CHECK_URL || echo "000"`\n                # 如果状态码为 200，则说明健康检查通过\n                if [ "$result" == "200" ]; then\n                    echo "[healthCheck] 健康检查通过";\n                    break\n                # 如果状态码非 200，则说明未通过。sleep 1 秒后，继续重试\n                else\n                    echo -e ".\\c"\n                    sleep 1\n                fi\n            done\n\n        # 健康检查未通过，则异常退出 shell 脚本，不继续部署。\n        if [ ! "$result" == "200" ]; then\n            echo "[healthCheck] 健康检查不通过，可能部署失败。查看日志，自行判断是否启动成功";\n            tail -n 20 nohup.out\n            exit 1;\n        # 健康检查通过，打印最后 10 行日志，可能部署的人想看下日志。\n        else\n            tail -n 20 nohup.out\n        fi\n    # 如果未配置健康检查，则 sleep 180 秒，人工看日志是否部署成功。\n    else\n        echo "[healthCheck] HEALTH_CHECK_URL 未配置，开始 sleep 180 秒";\n        sleep 180\n        echo "[healthCheck] sleep 180 秒完成，查看日志，自行判断是否启动成功";\n        tail -n 20 nohup.out\n    fi\n}\n\n# 部署\nfunction deploy() {\n    cd $BASE_PATH\n    # 备份原 jar\n    backup\n    # 停止 Java 服务\n    stop\n    # 部署新 jar\n    transfer\n    # 启动 Java 服务\n    start\n    # 健康检查\n    healthCheck\n}\n\ndeploy\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n\n\n\n# 建立目录\n\n\n\n\n# 部署任务配置\n\n\n\n\n\n\n# 详细配置\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 部署成功\n\n\n\n\n# 部署前端\n\n\n\n',normalizedContent:'# 下载安装\n\ncd /usr/local\nmkdir jenkins\ncd jenkins/\nwget https://mirrors.tuna.tsinghua.edu.cn/jenkins/war-stable/2.346.3/jenkins.war\nwget https://archives.jenkins.io/war-stable/2.289.3/jenkins.war\nwget https://get.jenkins.io/war-stable/2.387.3/jenkins.war\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 后台启动\n\nnohup java -jar jenkins.war &\n\ndd if=/dev/zero of=/swap bs=100m count=40\n/sbin/mkswap /swap\n/sbin/swapon /swap\necho "/swap  swap  swap defaults 0 0" >> /etc/fstab\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 开机启动\n\n\n# 创建jenkins.sh脚本\n\nmkdir -p /usr/local/jenkins/.shell\ncd /usr/local/jenkins/.shell\nvim jenkins.sh\nchmod +x jenkins.sh\n\n\n1\n2\n3\n4\n\n\n# 编写jenkins.sh脚本\n\n#!/bin/bash\n#author icaiwei\n\n#此处声明`jenkins_home`变量\n#原因在开机自启动时，该文件访问不到环境变量中`jenkins_home`变量\n\nexport jenkins_home=/usr/local/jenkins\n#其他环境变量（如过jenkins服务还有其他的环境配置一并添加在此处，很重要。）\nexport maven_home=/usr/local/maven/apache-maven-3.8.6\nexport java_home=/usr/local/java/jdk1.8.0_202\nexport jre_home=/usr/local/java/jdk1.8.0_202/jre\nexport classpath=$classpath:$java_home/lib:$jre_home/lib\nexport path=$maven_home/bin:$jre_home/bin:$path:$home/bin\n\npid=`ps -ef | grep jenkins.war | grep -v \'grep\'| awk \'{print $2}\'| wc -l`\n if [ "$1" = "start" ];then\n if [ $pid -gt 0 ];then\n echo \'jenkins is running...\'\nelse\n #java启动服务 配置java安装根路径,和启动war包存的根路径\n nohup /usr/local/java/jdk1.8.0_202/bin/java -jar /usr/local/jenkins/jenkins.war > /usr/local/jenkins/jenkins.log 2>&1 &\n fi\n elif [ "$1" = "stop" ];then\n exec ps -ef | grep jenkins | grep -v grep | awk \'{print $2}\'| xargs kill -9\n echo \'jenkins is stop..\'\nelse\n echo "运行该脚本，请务必传入参数：start 或 stop"\n fi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 创建jenkins.service文件\n\nvim /lib/systemd/system/jenkins.service\n\n\n1\n\n\n将以下内容复制到jenkins.service文件中，注意execstart、execstop对应的脚本路径，如果不一致，请修改\n\n[unit]\ndescription=jenkins\nafter=network.target\n \n[service]\ntype=forking\nexecstart=/usr/local/jenkins/.shell/jenkins.sh start\nexecreload=\nexecstop=/usr/local/jenkins/.shell/jenkins.sh stop\nprivatetmp=true\n \n[install]\nwantedby=multi-user.target\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 刷新服务配置\n\nsystemctl daemon-reload\nsystemctl start jenkins.service\t\t// 启动jenkins服务\nsystemctl stop jenkins.service\t\t// 停止jenkins服务\nsystemctl status jenkins.service\t// 查看jenkins服务状态\nsystemctl enable jenkins.service\t// 将jenkins服务设置为开机启动\nsystemctl list-units --type=service | grep jenkins\t// 查看设置开机启动的服务列表\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 查看密码\n\ntail -f nohup.out \n0b776e0b24d1483a8f79acc1a44af21f\n\n\n1\n2\n\n\n\n\n\n# 登录\n\n输入192.168.1.5:8080，进入 jenkins 首页，记得打开防火墙\n\n输入刚才得到的管理员密码\n\n\n\n\n\n\n\n\n# 管理员配置\n\n创建新用户icaiwei，icaiwei#jenkins@0077配置实例\n\nicaiwei#pldm@07\n\n\n\n\n\n\n\n\n# 开始使用\n\n\n\n\n# 安装其他插件\n\n\n\n\n\n\n# jdk配置\n\n\n\n\n\n去掉安装选项，使用已安装jdk\n\n\n\n\n# ssh配置\n\n\n\n\n\n\n\n\n\n\n# 远程服务器配置\n\n\n# 建立工作目录\n\n\n\n在每个子目录下，固定分成如下文件/目录：\n\n * a.jar：项目的 jar 包。\n * build 目录：jenkins 构建完项目后的新 jar 包，会上传到 build 目录下，避免对原 jar 包覆盖，导致无法正常关闭 java 服务。\n * backup 目录：对历史 jar 包的备份目录。每次使用新的 jar 启动服务时，会将老的 jar 移到 backup 目录下备份。\n * shell 目录：脚本目录。目前只有 deploy.sh 脚本。\n\n\n# deploy.sh\n\n#!/bin/bash\nset -e\n\ndate=$(date +%y%m%d%h%m)\n# 基础路径\nbase_path=/work/projects/pldm\n# 编译后 jar 的地址。部署时，jenkins 会上传 jar 包到该目录下\nsource_path=$base_path/build\n# 服务名称。同时约定部署服务的 jar 包名字也为它。\nserver_name=pldm-server\n# 环境\nprofiles_active=dev\n# 健康检查 url\nhealth_check_url=http://127.0.0.1:48080/actuator/health/\n\n# heaperror 存放路径\nheap_error_path=$base_path/heaperror\n# jvm 参数\njava_ops="-xms512m -xmx512m -xx:+heapdumponoutofmemoryerror -xx:heapdumppath=$heap_error_path"\n\n# skywalking agent 配置\n#export sw_agent_name=$server_name\n#export sw_agent_collector_backend_services=192.168.0.84:11800\n#export sw_grpc_log_server_host=192.168.0.84\n#export sw_agent_trace_ignore_path="redisson/ping,/actuator/**,/admin/**"\n#export java_agent=-javaagent:/work/skywalking/apache-skywalking-apm-bin/agent/skywalking-agent.jar\n\n# 备份\nfunction backup() {\n    # 如果不存在，则无需备份\n    if [ ! -f "$base_path/$server_name.jar" ]; then\n        echo "[backup] $base_path/$server_name.jar 不存在，跳过备份"\n    # 如果存在，则备份到 backup 目录下，使用时间作为后缀\n    else\n        echo "[backup] 开始备份 $server_name ..."\n        cp $base_path/$server_name.jar $base_path/backup/$server_name-$date.jar\n        echo "[backup] 备份 $server_name 完成"\n    fi\n}\n\n# 最新构建代码 移动到项目环境\nfunction transfer() {\n    echo "[transfer] 开始转移 $server_name.jar"\n\n    # 删除原 jar 包\n    if [ ! -f "$base_path/$server_name.jar" ]; then\n        echo "[transfer] $base_path/$server_name.jar 不存在，跳过删除"\n    else\n        echo "[transfer] 移除 $base_path/$server_name.jar 完成"\n        rm $base_path/$server_name.jar\n    fi\n\n    # 复制新 jar 包\n    echo "[transfer] 从 $source_path 中获取 $server_name.jar 并迁移至 $base_path ...."\n    cp $source_path/$server_name.jar $base_path\n\n    echo "[transfer] 转移 $server_name.jar 完成"\n}\n\n# 停止：优雅关闭之前已经启动的服务\nfunction stop() {\n    echo "[stop] 开始停止 $base_path/$server_name"\n    pid=$(ps -ef | grep $base_path/$server_name | grep -v "grep" | awk \'{print $2}\')\n    # 如果 java 服务启动中，则进行关闭\n    if [ -n "$pid" ]; then\n        # 正常关闭\n        echo "[stop] $base_path/$server_name 运行中，开始 kill [$pid]"\n        kill -15 $pid\n        # 等待最大 120 秒，直到关闭完成。\n        for ((i = 0; i < 120; i++))\n            do\n                sleep 1\n                pid=$(ps -ef | grep $base_path/$server_name | grep -v "grep" | awk \'{print $2}\')\n                if [ -n "$pid" ]; then\n                    echo -e ".\\c"\n                else\n                    echo \'[stop] 停止 $base_path/$server_name 成功\'\n                    break\n                fi\n\t\t    done\n\n        # 如果正常关闭失败，那么进行强制 kill -9 进行关闭\n        if [ -n "$pid" ]; then\n            echo "[stop] $base_path/$server_name 失败，强制 kill -9 $pid"\n            kill -9 $pid\n        fi\n    # 如果 java 服务未启动，则无需关闭\n    else\n        echo "[stop] $base_path/$server_name 未启动，无需停止"\n    fi\n}\n\n# 启动：启动后端项目\nfunction start() {\n    # 开启启动前，打印启动参数\n    echo "[start] 开始启动 $base_path/$server_name"\n    echo "[start] java_ops: $java_ops"\n    echo "[start] java_agent: $java_agent"\n    echo "[start] profiles: $profiles_active"\n\n    # 开始启动\n    build_id=dontkillme nohup java -server $java_ops $java_agent -jar $base_path/$server_name.jar --spring.profiles.active=$profiles_active &\n    echo "[start] 启动 $base_path/$server_name 完成"\n}\n\n# 健康检查：自动判断后端项目是否正常启动\nfunction healthcheck() {\n    # 如果配置健康检查，则进行健康检查\n    if [ -n "$health_check_url" ]; then\n        # 健康检查最大 180 秒，直到健康检查通过\n        echo "[healthcheck] 开始通过 $health_check_url 地址，进行健康检查";\n        for ((i = 0; i < 180; i++))\n            do\n                # 请求健康检查地址，只获取状态码。\n                result=`curl -i -m 10 -o /dev/null -s -w %{http_code} $health_check_url || echo "000"`\n                # 如果状态码为 200，则说明健康检查通过\n                if [ "$result" == "200" ]; then\n                    echo "[healthcheck] 健康检查通过";\n                    break\n                # 如果状态码非 200，则说明未通过。sleep 1 秒后，继续重试\n                else\n                    echo -e ".\\c"\n                    sleep 1\n                fi\n            done\n\n        # 健康检查未通过，则异常退出 shell 脚本，不继续部署。\n        if [ ! "$result" == "200" ]; then\n            echo "[healthcheck] 健康检查不通过，可能部署失败。查看日志，自行判断是否启动成功";\n            tail -n 20 nohup.out\n            exit 1;\n        # 健康检查通过，打印最后 10 行日志，可能部署的人想看下日志。\n        else\n            tail -n 20 nohup.out\n        fi\n    # 如果未配置健康检查，则 sleep 180 秒，人工看日志是否部署成功。\n    else\n        echo "[healthcheck] health_check_url 未配置，开始 sleep 180 秒";\n        sleep 180\n        echo "[healthcheck] sleep 180 秒完成，查看日志，自行判断是否启动成功";\n        tail -n 20 nohup.out\n    fi\n}\n\n# 部署\nfunction deploy() {\n    cd $base_path\n    # 备份原 jar\n    backup\n    # 停止 java 服务\n    stop\n    # 部署新 jar\n    transfer\n    # 启动 java 服务\n    start\n    # 健康检查\n    healthcheck\n}\n\ndeploy\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n\n\n\n# 建立目录\n\n\n\n\n# 部署任务配置\n\n\n\n\n\n\n# 详细配置\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 部署成功\n\n\n\n\n# 部署前端\n\n\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"CentOS-Docker使用",frontmatter:{title:"CentOS-Docker使用",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/docker/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/20.CentOS-Docker%E4%BD%BF%E7%94%A8.html",relativePath:"10.运维管理/02.CentOS/20.CentOS-Docker使用.md",key:"v-78f5d2f0",path:"/operation/centos/docker/",headers:[{level:2,title:"下载安装",slug:"下载安装",normalizedTitle:"下载安装",charIndex:2},{level:2,title:"配置加速器",slug:"配置加速器",normalizedTitle:"配置加速器",charIndex:319},{level:2,title:"部署MySQL",slug:"部署mysql",normalizedTitle:"部署mysql",charIndex:495},{level:3,title:"下载镜像",slug:"下载镜像",normalizedTitle:"下载镜像",charIndex:507},{level:3,title:"创建映射目录",slug:"创建映射目录",normalizedTitle:"创建映射目录",charIndex:697},{level:3,title:"启动容器",slug:"启动容器",normalizedTitle:"启动容器",charIndex:2004},{level:3,title:"进入容器内部",slug:"进入容器内部",normalizedTitle:"进入容器内部",charIndex:2589},{level:2,title:"部署redis",slug:"部署redis",normalizedTitle:"部署redis",charIndex:3040},{level:3,title:"下载镜像",slug:"下载镜像-2",normalizedTitle:"下载镜像",charIndex:507},{level:3,title:"创建映射目录",slug:"创建映射目录-2",normalizedTitle:"创建映射目录",charIndex:697},{level:3,title:"启动容器",slug:"启动容器-2",normalizedTitle:"启动容器",charIndex:2004},{level:3,title:"进入容器内部",slug:"进入容器内部-2",normalizedTitle:"进入容器内部",charIndex:2589},{level:2,title:"部署nginx",slug:"部署nginx",normalizedTitle:"部署nginx",charIndex:4202},{level:3,title:"下载镜像",slug:"下载镜像-3",normalizedTitle:"下载镜像",charIndex:507},{level:3,title:"创建映射目录",slug:"创建映射目录-3",normalizedTitle:"创建映射目录",charIndex:697},{level:3,title:"启动容器",slug:"启动容器-3",normalizedTitle:"启动容器",charIndex:2004},{level:3,title:"进入容器内部",slug:"进入容器内部-3",normalizedTitle:"进入容器内部",charIndex:2589},{level:2,title:"部署minio",slug:"部署minio",normalizedTitle:"部署minio",charIndex:9196},{level:3,title:"下载镜像",slug:"下载镜像-4",normalizedTitle:"下载镜像",charIndex:507},{level:3,title:"创建映射目录",slug:"创建映射目录-4",normalizedTitle:"创建映射目录",charIndex:697},{level:3,title:"启动容器",slug:"启动容器-4",normalizedTitle:"启动容器",charIndex:2004},{level:2,title:"部署Samba",slug:"部署samba",normalizedTitle:"部署samba",charIndex:10416},{level:3,title:"下载镜像",slug:"下载镜像-5",normalizedTitle:"下载镜像",charIndex:507},{level:3,title:"启动容器",slug:"启动容器-5",normalizedTitle:"启动容器",charIndex:2004},{level:3,title:"进入容器内部，添加smb用户名和密码",slug:"进入容器内部-添加smb用户名和密码",normalizedTitle:"进入容器内部，添加smb用户名和密码",charIndex:11383},{level:2,title:"部署kkfileview",slug:"部署kkfileview",normalizedTitle:"部署kkfileview",charIndex:11467},{level:3,title:"下载镜像",slug:"下载镜像-6",normalizedTitle:"下载镜像",charIndex:507},{level:3,title:"启动容器",slug:"启动容器-6",normalizedTitle:"启动容器",charIndex:2004},{level:2,title:"部署Skywalking",slug:"部署skywalking",normalizedTitle:"部署skywalking",charIndex:11797},{level:3,title:"下载镜像",slug:"下载镜像-7",normalizedTitle:"下载镜像",charIndex:507},{level:3,title:"启动elasticsearch容器",slug:"启动elasticsearch容器",normalizedTitle:"启动elasticsearch容器",charIndex:12062},{level:3,title:"验证ES",slug:"验证es",normalizedTitle:"验证es",charIndex:12270},{level:3,title:"启动skywalking-oap",slug:"启动skywalking-oap",normalizedTitle:"启动skywalking-oap",charIndex:12934},{level:3,title:"启动skywalking-ui",slug:"启动skywalking-ui",normalizedTitle:"启动skywalking-ui",charIndex:13199},{level:2,title:"开放端口",slug:"开放端口",normalizedTitle:"开放端口",charIndex:13405},{level:2,title:"部署jenkins",slug:"部署jenkins",normalizedTitle:"部署jenkins",charIndex:14475},{level:3,title:"下载镜像",slug:"下载镜像-8",normalizedTitle:"下载镜像",charIndex:507},{level:3,title:"启动容器",slug:"启动容器-7",normalizedTitle:"启动容器",charIndex:2004},{level:3,title:"查看密码",slug:"查看密码",normalizedTitle:"查看密码",charIndex:15813},{level:3,title:"安装插件",slug:"安装插件",normalizedTitle:"安装插件",charIndex:15883},{level:3,title:"添加用户",slug:"添加用户",normalizedTitle:"添加用户",charIndex:15894},{level:3,title:"手动安装插件",slug:"手动安装插件",normalizedTitle:"手动安装插件",charIndex:15938},{level:3,title:"配置凭据",slug:"配置凭据",normalizedTitle:"配置凭据",charIndex:15951},{level:3,title:"系统配置",slug:"系统配置",normalizedTitle:"系统配置",charIndex:15966},{level:4,title:"SSH配置",slug:"ssh配置",normalizedTitle:"ssh配置",charIndex:15974},{level:3,title:"全局工具配置",slug:"全局工具配置",normalizedTitle:"全局工具配置",charIndex:15988},{level:3,title:"新建任务",slug:"新建任务",normalizedTitle:"新建任务",charIndex:16003}],headersStr:"下载安装 配置加速器 部署MySQL 下载镜像 创建映射目录 启动容器 进入容器内部 部署redis 下载镜像 创建映射目录 启动容器 进入容器内部 部署nginx 下载镜像 创建映射目录 启动容器 进入容器内部 部署minio 下载镜像 创建映射目录 启动容器 部署Samba 下载镜像 启动容器 进入容器内部，添加smb用户名和密码 部署kkfileview 下载镜像 启动容器 部署Skywalking 下载镜像 启动elasticsearch容器 验证ES 启动skywalking-oap 启动skywalking-ui 开放端口 部署jenkins 下载镜像 启动容器 查看密码 安装插件 添加用户 手动安装插件 配置凭据 系统配置 SSH配置 全局工具配置 新建任务",content:'# 下载安装\n\n# 1.移除已存在\nyum remove docker*\n# 2.yum包更新到最新\nyum update\n# 3.安装依赖\nyum install -y yum-utils device-mapper-persistent-data lvm2\n# 4.设置yum源\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n# 5.安装docker\nyum install -y docker-ce\n# 6.查看版本\ndocker -v\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 配置加速器\n\n修改\n\nvim /etc/docker/daemon.json\n\n{\n\t"registry-mirrors": [\n\t\t"http://hub-mirror.c.163.com/"\n\t]\n}\n\nsystemctl daemon-reload\nsystemctl restart docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 部署MySQL\n\n\n# 下载镜像\n\ndocker pull mysql:5.7\n\n\n1\n\n\n[root@192 ~]# docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nmysql        5.7       2be84dd575ee   2 weeks ago   569MB\n\n\n1\n2\n3\n\n\n\n# 创建映射目录\n\nmkdir -p /opt/docker/mysql/data\nmkdir -p /opt/docker/mysql/conf\nmkdir -p /opt/docker/mysql/logs\n\n\n1\n2\n3\n\n\nvim /opt/docker/mysql/conf/my.cnf\n\n\n# For advice on how to change settings please see\n# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html\n\n[mysqld]\n#\n# Remove leading # and set to the amount of RAM for the most important data\n# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.\n# innodb_buffer_pool_size = 128M\n#\n# Remove leading # to turn on a very important data integrity option: logging\n# changes to the binary log between backups.\n# log_bin\n#\n# Remove leading # to set options mainly useful for reporting servers.\n# The server defaults are faster for transactions and fast SELECTs.\n# Adjust sizes as needed, experiment to find the optimal values.\n# join_buffer_size = 128M\n# sort_buffer_size = 2M\n# read_rnd_buffer_size = 2M\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\n\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\n\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n\nlower_case_table_names=1\n# validate_password=off\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\ntouch /opt/docker/mysql/logs/mysqld.log\n\n\n1\n\n\n\n# 启动容器\n\ndocker run -id \\\n-p 3306:3306 \\\n--name=mysql \\\n-v /opt/docker/mysql/conf/my.cnf:/etc/my.cnf \\\n-v /opt/docker/mysql/logs/mysqld.log:/var/lib/mysqld.log \\\n-v /opt/docker/mysql/data:/var/lib/mysql \\\n-e MYSQL_ROOT_PASSWORD=123456 \\\n--restart=always \\\nmysql:5.7\n\ndocker run -id \\\n-p 26541:3306 \\\n--name=mysql \\\n-v /opt/docker/mysql/conf/my.cnf:/etc/my.cnf \\\n-v /opt/docker/mysql/logs/mysqld.log:/var/lib/mysqld.log \\\n-v /opt/docker/mysql/data:/var/lib/mysql \\\n-e MYSQL_ROOT_PASSWORD=MySQL@CentOS-7 \\\n--restart=always \\\nmysql:5.7\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 进入容器内部\n\ndocker exec -it mysql bash\n\n#新建用户赋予权限远程连接\n## ① 连接 MySQL Server 服务，并输入临时密码\nmysql -uroot -p\nuse mysql;\ngrant all privileges on *.* to root@\'%\';\n## 新建用户\nCREATE USER \'wjl\'@\'%\' IDENTIFIED BY \'MySQL@iCaiWei-7\';\ncreate database `ruoyi-vue-pro`;\nGRANT ALL PRIVILEGES ON `ruoyi-vue-pro`.* TO \'wjl\'@\'%\';\nFLUSH PRIVILEGES;\n# 删除用户\ndelete from mysql.user where user = \'wjl\';\ndrop user \'wjl\';\nFLUSH PRIVILEGES;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 部署redis\n\n\n# 下载镜像\n\ndocker pull redis:6.2\n\n\n1\n\n\n[root@192 ~]# docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nredis        6.2       38208fb6fc1e   2 weeks ago   127MB\n\n\n1\n2\n3\n\n\n\n# 创建映射目录\n\nmkdir -p /opt/docker/redis/data\nmkdir -p /opt/docker/redis/conf\nmkdir -p /opt/docker/redis/logs\n\n\n1\n2\n3\n\n\nvim /opt/docker/redis/conf/redis.conf\n\ndatabases 16\nmaxmemory 1gb\nmaxmemory-policy allkeys-lru\nrequirepass 123456\nappendonly yes\nappendfsync everysec\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 启动容器\n\ndocker run -id \\\n-p 6379:6379 \\\n--name=redis \\\n-v /opt/docker/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf \\\n-v /opt/docker/redis/logs:/var/log/redis \\\n-v /opt/docker/redis/data:/data \\\n--restart=always \\\nredis:6.2 \\\nredis-server /usr/local/etc/redis/redis.conf\n\ndocker run -id \\\n-p 24584:6379 \\\n--name=redis \\\n-v /opt/docker/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf \\\n-v /opt/docker/redis/logs:/var/log/redis \\\n-v /opt/docker/redis/data:/data \\\n--restart=always \\\nredis:6.2 \\\nredis-server /usr/local/etc/redis/redis.conf\n\nRedis#iCaiWei-07\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 进入容器内部\n\ndocker exec -it redis bash\n\n\n1\n\n\n\n# 部署nginx\n\n\n# 下载镜像\n\ndocker pull nginx:1.22\n\n\n1\n\n\n[root@192 ~]# docker images\nREPOSITORY   TAG       IMAGE ID       CREATED        SIZE\nnginx        1.22      0f8498f13f3a   3 months ago   142MB\n\n\n1\n2\n3\n\n\n\n# 创建映射目录\n\nmkdir -p /opt/docker/nginx/conf\nmkdir -p /opt/docker/nginx/html\nmkdir -p /opt/docker/nginx/logs\n\n\n1\n2\n3\n\n\nvim /opt/docker/nginx/conf/nginx.conf\n\n\n#user  nobody;\nuser root;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n    #                  \'$status $body_bytes_sent "$http_referer" \'\n    #                  \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    gzip  on;\n    # 不压缩临界值，大于1K的才压缩，一般不用改\n    gzip_min_length 1k;\n    # # 压缩缓冲区\n    gzip_buffers 16 64K;\n    # # 压缩版本（默认1.1，前端如果是squid2.5请使用1.0）\n    gzip_http_version 1.1;\n    # # 压缩级别，1-10，数字越大压缩的越好，时间也越长\n    gzip_comp_level 2;\n    # # 进行压缩的文件类型\n    gzip_types text/plain application/x-javascript text/css application/xml application/javascript;\n    gzip_proxied any;\n\n    server {\n        listen       80;\n        server_name  192.168.1.4;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if Apache\'s document root\n        # concurs with nginx\'s one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n    # server {\n    #     listen       80;\t\t\t\t\n    #     server_name  101.43.82.191:8012;\n\n    #     location / {\n    #         proxy_pass http://101.43.82.191:8012/;\n    #         proxy_set_header Host $http_host;\n    #         proxy_set_header X-Real-IP $remote_addr;\n    #         proxy_set_header REMOTE-HOST $remote_addr;\n    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    #     }\n    # }\n\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       9000;\n    #    server_name  192.168.1.5;\n\t\n    #    location / {\n    #        index  index.html index.htm;\n    #\t    proxy_pass http://192.169.1.5:9000/;\n    #    }\n    #}\n\n   # server {\n   #     listen       8012;\n   #     server_name  192.168.1.5;\n\n   #     location / {\n   #         index  index.html index.htm;\n   #         proxy_pass http://192.169.1.5:8012/;\n   #     }\n   # }\n\n\n    # HTTPS server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n\n\nvim /opt/docker/nginx/html/index.html\n\n<h2>hello docker nginx</h2>\n\n\n1\n2\n3\n\n\n\n# 启动容器\n\ndocker run -id \\\n-p 9527:9527 \\\n-p 9528:9528 \\\n-p 9529:9529 \\\n-p 35628:35628 \\\n--name=nginx \\\n-v /opt/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \\\n-v /opt/docker/nginx/logs:/var/log/nginx \\\n-v /opt/docker/nginx/html:/usr/share/nginx/html \\\n--restart=always \\\nnginx:1.22\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 进入容器内部\n\ndocker exec -it nginx bash\n\n\n1\n\n\n\n# 部署minio\n\n\n# 下载镜像\n\ndocker pull minio/minio\n\n\n1\n\n\n[root@192 ~]# docker images\nREPOSITORY          TAG       IMAGE ID       CREATED         SIZE\nminio/minio         latest    4de87d6c6dd6   4 days ago      262MB\n\n\n1\n2\n3\n\n\n\n# 创建映射目录\n\nmkdir -p /opt/docker/minio/conf\nmkdir -p /opt/docker/minio/data\n\n\n1\n2\n\n\n\n# 启动容器\n\ndocker run -id \\\n-p 9000:9000 \\\n-p 9001:9001 \\\n--name minio \\\n-v /opt/docker/minio/data:/data \\\n-v /opt/docker/minio/conf:/root/.minio \\\n--restart=always \\\n-e "MINIO_ACCESS_KEY=minioadmin" \\\n-e "MINIO_SECRET_KEY=minioadmin" \\\nminio/minio \\\nserver /data --console-address ":9001" -address ":9000"\n\n#Version: RELEASE.2023-08-31T15-31-16Z (go1.19.12 linux/amd64)\n#WARNING: MINIO_ACCESS_KEY and MINIO_SECRET_KEY are deprecated.\n#         Please use MINIO_ROOT_USER and MINIO_ROOT_PASSWORD\ndocker run -id \\\n-p 31564:9000 \\\n-p 12861:9001 \\\n--name minio \\\n-v /opt/docker/minio/data:/data \\\n-v /opt/docker/minio/conf:/root/.minio \\\n--restart=always \\\n-e "MINIO_ROOT_USER=minioadmin" \\\n-e "MINIO_ROOT_PASSWORD=minioadmin#iCaiwei-07" \\\nminio/minio \\\nserver /data --console-address ":9001" -address ":9000"\n\nicaiwei\nicaiwei#iCaiwei-07\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 部署Samba\n\n\n# 下载镜像\n\ndocker pull dperson/samba\n\n\n1\n\n\n\n# 启动容器\n\n"shared;/mount;yes;no;no;all;none" 参数说明：\n分别是：\nshared：共享文件夹的名称（shared）；\n/mount：共享在samba容器中的路径（/mount）；\nyes：共享名称对所有工作组用户可见；\nno：不是只读（也就是说可写）；\nno：不允许guest用户；\nall：指定共享的所有权用户；\nnone：指定共享的超级用户；\n指定具有写权限的用户；\ndocker run -it --name samba -p 139:139 -p 445:445 -v ./data:/mount -d dperson/samba -u "username1;password1" -s "shared;/mount/;yes;yes;yes;all;none" -u "username2;password2" -s "public;/mount/;yes;no;no;all;none"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\ndocker run -it \\\n-p 139:139 \\\n-p 445:445 \\\n--name samba \\\n-v /opt/docker/minio/data:/data \\\n-d dperson/samba \\\n-u "icaiwei;123456" \\\n-s "shared;/mount;yes;no;no;all;none"\n\ndocker run -it --name samba \\\n-p 13694:139 -p 25445:445 \\\n-v /opt/docker/minio/data:/data \\\n-d dperson/samba \\\n-u "username1;password1" \\\n-s "shared;/mount/;yes;yes;yes;all;none" \\\n-u "username2;password2" \\\n-s "public;/mount/;yes;no;no;all;none"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 进入容器内部，添加smb用户名和密码\n\ndocker exec -it samba /bin/bash\nsmbpasswd -a icaiwei\n\n\n1\n2\n\n\n\n# 部署kkfileview\n\n\n# 下载镜像\n\ndocker pull keking/kkfileview\n\n\n1\n\n\n[root@192 ~]# docker images\nREPOSITORY          TAG       IMAGE ID       CREATED         SIZE\nkeking/kkfileview   latest    200d92888da0   6 months ago    1.6GB\n\n\n1\n2\n3\n\n\n\n# 启动容器\n\ndocker run -id -p 37651:8012 --name kkfileview --restart=always keking/kkfileview\n\n\n1\n\n\n\n# 部署Skywalking\n\n\n# 下载镜像\n\n搭建skywalking需要用到三个镜像: elasticsearch：用来存储数据 skywalking-oap-server：Skywalking服务器 skywalking-ui ：Skywalking的UI界面\n\ndocker pull elasticsearch:7.9.0\ndocker pull apache/skywalking-oap-server:8.9.0\ndocker pull apache/skywalking-ui:8.9.0\n\n\n1\n2\n3\n\n\n\n# 启动elasticsearch容器\n\ndocker run -d --name=es7 \\\n--restart=always \\\n-p 9200:9200 \\\n-p 9300:9300 \\\n-e "discovery.type=single-node" \\\n-e ES_JAVA_OPTS="-Xms512m -Xmx512m" \\\nelasticsearch:7.9.0\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 验证ES\n\n浏览器访问：http://localhost:9200/，返回：\n\n{\n    "name": "d4bb8b604eaa",\n    "cluster_name": "docker-cluster",\n    "cluster_uuid": "4lvDHQrwSgidG3oIeh_VWA",\n    "version": {\n        "number": "7.9.0",\n        "build_flavor": "default",\n        "build_type": "docker",\n        "build_hash": "a479a2a7fce0389512d6a9361301708b92dff667",\n        "build_date": "2020-08-11T21:36:48.204330Z",\n        "build_snapshot": false,\n        "lucene_version": "8.6.0",\n        "minimum_wire_compatibility_version": "6.8.0",\n        "minimum_index_compatibility_version": "6.0.0-beta1"\n    },\n    "tagline": "You Know, for Search"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 启动skywalking-oap\n\ndocker run --name oap --restart=always -d \\\n-e TZ=Asia/Shanghai \\\n-p 15656:12800 \\\n-p 15657:11800 \\\n--link es7:es7 \\\n-e SW_STORAGE=elasticsearch \\\n-e SW_STORAGE_ES_CLUSTER_NODES=es7:9200 \\\napache/skywalking-oap-server:8.9.0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 启动skywalking-ui\n\ndocker run -d --name skywalking-ui \\\n--restart=always \\\n-e TZ=Asia/Shanghai \\\n-p 26548:8080 \\\n--link oap:oap \\\n-e SW_OAP_ADDRESS=oap:15656 \\\napache/skywalking-ui:8.9.0\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 开放端口\n\nsystemctl restart firewalld.service\nfirewall-cmd --add-port=48080/tcp --permanent\nfirewall-cmd --add-port=37651/tcp --permanent\nfirewall-cmd --add-port=31564/tcp --add-port=12861/tcp --permanent\nfirewall-cmd --add-port=9527-9529/tcp --add-port=35628/tcp --permanent\nfirewall-cmd --add-port=24584/tcp --permanent\nfirewall-cmd --add-port=26541/tcp --permanent\n#elasticsearch,Skywalking\nfirewall-cmd --add-port=9200/tcp --add-port=9300/tcp --permanent\nfirewall-cmd --add-port=15656/tcp --add-port=15657/tcp --permanent\nfirewall-cmd --add-port=26548/tcp --permanent\n\nfirewall-cmd --add-port=139/tcp --add-port=445/tcp --permanent\nfirewall-cmd --reload\n\nfirewall-cmd --zone=public --list-ports\nfirewall-cmd --remove-port=6379/tcp --permanent\nfirewall-cmd --remove-port=9200/tcp --remove-port=9300/tcp --permanent\nfirewall-cmd --remove-port=15656/tcp --remove-port=15657/tcp --permanent\nfirewall-cmd --remove-port=26548/tcp --permanent\n\nfirewall-cmd --remove-port=139/tcp --remove-port=445/tcp --permanent\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 部署jenkins\n\n\n# 下载镜像\n\n2.346.1版本是JDK8支持的最后版本，后续版本最低要求JDK11\n\ndocker pull jenkins/jenkins:2.346\n\ndocker pull jenkins/jenkins:2.414\n\n\n1\n2\n3\n\n\n[root@192 ~]# docker images\nREPOSITORY          TAG       IMAGE ID       CREATED         SIZE\njenkins/jenkins     2.346     611ec948eee9   12 months ago   460MB\n\n\n1\n2\n3\n\n\n\n# 启动容器\n\ndocker run -d --restart=always -p 28762:8080 \\\n-v /usr/local/java/jdk1.8.0_202/bin/java:/usr/local/java/jdk1.8.0_202/bin/java \\\n-v /usr/local/java/jdk1.8.0_202/:/usr/local/java/jdk1.8.0_202/ \\\n-v /opt/docker/jenkins/:/var/jenkins_home \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-e JAVA_OPTS=\'-Duser.timezone=Asia/Shanghai\' \\\n-u root \\\n--name jenkins \\\njenkins/jenkins:2.346\n\ndocker run -d --restart=always -p 28762:8080 \\\n-v /usr/local/java/jdk1.8.0_202/bin/java:/usr/local/java/jdk1.8.0_202/bin/java \\\n-v /usr/local/java/jdk1.8.0_202/:/usr/local/java/jdk1.8.0_202/ \\\n-v /usr/local/maven/apache-maven-3.8.6/mvn:/usr/local/maven/apache-maven-3.8.6/mvn \\\n-v /usr/local/maven/apache-maven-3.8.6/:/usr/local/maven/apache-maven-3.8.6/ \\\n-v /opt/docker/jenkins/:/var/jenkins_home \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-e JAVA_OPTS=\'-Duser.timezone=Asia/Shanghai\' \\\n-u root \\\n--name jenkins \\\njenkins/jenkins:2.414\n\ndocker exec -it jenkins bash\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 查看密码\n\ncat /opt/docker/jenkins/secrets/initialAdminPassword\n\n\n1\n\n\n\n\n\n# 安装插件\n\n\n\n\n# 添加用户\n\nicaiwei\n\nicaiwei#Jenkins-07\n\n\n\n\n\n\n\n\n# 手动安装插件\n\n\n\n\n# 配置凭据\n\n\n\n\n\n\n\n\n# 系统配置\n\n# SSH配置\n\n\n\n\n\n\n# 全局工具配置\n\n\n\n\n\n\n# 新建任务\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n',normalizedContent:'# 下载安装\n\n# 1.移除已存在\nyum remove docker*\n# 2.yum包更新到最新\nyum update\n# 3.安装依赖\nyum install -y yum-utils device-mapper-persistent-data lvm2\n# 4.设置yum源\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n# 5.安装docker\nyum install -y docker-ce\n# 6.查看版本\ndocker -v\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 配置加速器\n\n修改\n\nvim /etc/docker/daemon.json\n\n{\n\t"registry-mirrors": [\n\t\t"http://hub-mirror.c.163.com/"\n\t]\n}\n\nsystemctl daemon-reload\nsystemctl restart docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 部署mysql\n\n\n# 下载镜像\n\ndocker pull mysql:5.7\n\n\n1\n\n\n[root@192 ~]# docker images\nrepository   tag       image id       created       size\nmysql        5.7       2be84dd575ee   2 weeks ago   569mb\n\n\n1\n2\n3\n\n\n\n# 创建映射目录\n\nmkdir -p /opt/docker/mysql/data\nmkdir -p /opt/docker/mysql/conf\nmkdir -p /opt/docker/mysql/logs\n\n\n1\n2\n3\n\n\nvim /opt/docker/mysql/conf/my.cnf\n\n\n# for advice on how to change settings please see\n# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html\n\n[mysqld]\n#\n# remove leading # and set to the amount of ram for the most important data\n# cache in mysql. start at 70% of total ram for dedicated server, else 10%.\n# innodb_buffer_pool_size = 128m\n#\n# remove leading # to turn on a very important data integrity option: logging\n# changes to the binary log between backups.\n# log_bin\n#\n# remove leading # to set options mainly useful for reporting servers.\n# the server defaults are faster for transactions and fast selects.\n# adjust sizes as needed, experiment to find the optimal values.\n# join_buffer_size = 128m\n# sort_buffer_size = 2m\n# read_rnd_buffer_size = 2m\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\n\n# disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\n\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n\nlower_case_table_names=1\n# validate_password=off\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\ntouch /opt/docker/mysql/logs/mysqld.log\n\n\n1\n\n\n\n# 启动容器\n\ndocker run -id \\\n-p 3306:3306 \\\n--name=mysql \\\n-v /opt/docker/mysql/conf/my.cnf:/etc/my.cnf \\\n-v /opt/docker/mysql/logs/mysqld.log:/var/lib/mysqld.log \\\n-v /opt/docker/mysql/data:/var/lib/mysql \\\n-e mysql_root_password=123456 \\\n--restart=always \\\nmysql:5.7\n\ndocker run -id \\\n-p 26541:3306 \\\n--name=mysql \\\n-v /opt/docker/mysql/conf/my.cnf:/etc/my.cnf \\\n-v /opt/docker/mysql/logs/mysqld.log:/var/lib/mysqld.log \\\n-v /opt/docker/mysql/data:/var/lib/mysql \\\n-e mysql_root_password=mysql@centos-7 \\\n--restart=always \\\nmysql:5.7\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 进入容器内部\n\ndocker exec -it mysql bash\n\n#新建用户赋予权限远程连接\n## ① 连接 mysql server 服务，并输入临时密码\nmysql -uroot -p\nuse mysql;\ngrant all privileges on *.* to root@\'%\';\n## 新建用户\ncreate user \'wjl\'@\'%\' identified by \'mysql@icaiwei-7\';\ncreate database `ruoyi-vue-pro`;\ngrant all privileges on `ruoyi-vue-pro`.* to \'wjl\'@\'%\';\nflush privileges;\n# 删除用户\ndelete from mysql.user where user = \'wjl\';\ndrop user \'wjl\';\nflush privileges;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 部署redis\n\n\n# 下载镜像\n\ndocker pull redis:6.2\n\n\n1\n\n\n[root@192 ~]# docker images\nrepository   tag       image id       created       size\nredis        6.2       38208fb6fc1e   2 weeks ago   127mb\n\n\n1\n2\n3\n\n\n\n# 创建映射目录\n\nmkdir -p /opt/docker/redis/data\nmkdir -p /opt/docker/redis/conf\nmkdir -p /opt/docker/redis/logs\n\n\n1\n2\n3\n\n\nvim /opt/docker/redis/conf/redis.conf\n\ndatabases 16\nmaxmemory 1gb\nmaxmemory-policy allkeys-lru\nrequirepass 123456\nappendonly yes\nappendfsync everysec\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 启动容器\n\ndocker run -id \\\n-p 6379:6379 \\\n--name=redis \\\n-v /opt/docker/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf \\\n-v /opt/docker/redis/logs:/var/log/redis \\\n-v /opt/docker/redis/data:/data \\\n--restart=always \\\nredis:6.2 \\\nredis-server /usr/local/etc/redis/redis.conf\n\ndocker run -id \\\n-p 24584:6379 \\\n--name=redis \\\n-v /opt/docker/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf \\\n-v /opt/docker/redis/logs:/var/log/redis \\\n-v /opt/docker/redis/data:/data \\\n--restart=always \\\nredis:6.2 \\\nredis-server /usr/local/etc/redis/redis.conf\n\nredis#icaiwei-07\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 进入容器内部\n\ndocker exec -it redis bash\n\n\n1\n\n\n\n# 部署nginx\n\n\n# 下载镜像\n\ndocker pull nginx:1.22\n\n\n1\n\n\n[root@192 ~]# docker images\nrepository   tag       image id       created        size\nnginx        1.22      0f8498f13f3a   3 months ago   142mb\n\n\n1\n2\n3\n\n\n\n# 创建映射目录\n\nmkdir -p /opt/docker/nginx/conf\nmkdir -p /opt/docker/nginx/html\nmkdir -p /opt/docker/nginx/logs\n\n\n1\n2\n3\n\n\nvim /opt/docker/nginx/conf/nginx.conf\n\n\n#user  nobody;\nuser root;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n    #                  \'$status $body_bytes_sent "$http_referer" \'\n    #                  \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    gzip  on;\n    # 不压缩临界值，大于1k的才压缩，一般不用改\n    gzip_min_length 1k;\n    # # 压缩缓冲区\n    gzip_buffers 16 64k;\n    # # 压缩版本（默认1.1，前端如果是squid2.5请使用1.0）\n    gzip_http_version 1.1;\n    # # 压缩级别，1-10，数字越大压缩的越好，时间也越长\n    gzip_comp_level 2;\n    # # 进行压缩的文件类型\n    gzip_types text/plain application/x-javascript text/css application/xml application/javascript;\n    gzip_proxied any;\n\n    server {\n        listen       80;\n        server_name  192.168.1.4;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the php scripts to apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the php scripts to fastcgi server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  script_filename  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if apache\'s document root\n        # concurs with nginx\'s one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n    # server {\n    #     listen       80;\t\t\t\t\n    #     server_name  101.43.82.191:8012;\n\n    #     location / {\n    #         proxy_pass http://101.43.82.191:8012/;\n    #         proxy_set_header host $http_host;\n    #         proxy_set_header x-real-ip $remote_addr;\n    #         proxy_set_header remote-host $remote_addr;\n    #         proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;\n    #     }\n    # }\n\n\n    # another virtual host using mix of ip-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       9000;\n    #    server_name  192.168.1.5;\n\t\n    #    location / {\n    #        index  index.html index.htm;\n    #\t    proxy_pass http://192.169.1.5:9000/;\n    #    }\n    #}\n\n   # server {\n   #     listen       8012;\n   #     server_name  192.168.1.5;\n\n   #     location / {\n   #         index  index.html index.htm;\n   #         proxy_pass http://192.169.1.5:8012/;\n   #     }\n   # }\n\n\n    # https server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:ssl:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  high:!anull:!md5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n\n\nvim /opt/docker/nginx/html/index.html\n\n<h2>hello docker nginx</h2>\n\n\n1\n2\n3\n\n\n\n# 启动容器\n\ndocker run -id \\\n-p 9527:9527 \\\n-p 9528:9528 \\\n-p 9529:9529 \\\n-p 35628:35628 \\\n--name=nginx \\\n-v /opt/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \\\n-v /opt/docker/nginx/logs:/var/log/nginx \\\n-v /opt/docker/nginx/html:/usr/share/nginx/html \\\n--restart=always \\\nnginx:1.22\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 进入容器内部\n\ndocker exec -it nginx bash\n\n\n1\n\n\n\n# 部署minio\n\n\n# 下载镜像\n\ndocker pull minio/minio\n\n\n1\n\n\n[root@192 ~]# docker images\nrepository          tag       image id       created         size\nminio/minio         latest    4de87d6c6dd6   4 days ago      262mb\n\n\n1\n2\n3\n\n\n\n# 创建映射目录\n\nmkdir -p /opt/docker/minio/conf\nmkdir -p /opt/docker/minio/data\n\n\n1\n2\n\n\n\n# 启动容器\n\ndocker run -id \\\n-p 9000:9000 \\\n-p 9001:9001 \\\n--name minio \\\n-v /opt/docker/minio/data:/data \\\n-v /opt/docker/minio/conf:/root/.minio \\\n--restart=always \\\n-e "minio_access_key=minioadmin" \\\n-e "minio_secret_key=minioadmin" \\\nminio/minio \\\nserver /data --console-address ":9001" -address ":9000"\n\n#version: release.2023-08-31t15-31-16z (go1.19.12 linux/amd64)\n#warning: minio_access_key and minio_secret_key are deprecated.\n#         please use minio_root_user and minio_root_password\ndocker run -id \\\n-p 31564:9000 \\\n-p 12861:9001 \\\n--name minio \\\n-v /opt/docker/minio/data:/data \\\n-v /opt/docker/minio/conf:/root/.minio \\\n--restart=always \\\n-e "minio_root_user=minioadmin" \\\n-e "minio_root_password=minioadmin#icaiwei-07" \\\nminio/minio \\\nserver /data --console-address ":9001" -address ":9000"\n\nicaiwei\nicaiwei#icaiwei-07\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 部署samba\n\n\n# 下载镜像\n\ndocker pull dperson/samba\n\n\n1\n\n\n\n# 启动容器\n\n"shared;/mount;yes;no;no;all;none" 参数说明：\n分别是：\nshared：共享文件夹的名称（shared）；\n/mount：共享在samba容器中的路径（/mount）；\nyes：共享名称对所有工作组用户可见；\nno：不是只读（也就是说可写）；\nno：不允许guest用户；\nall：指定共享的所有权用户；\nnone：指定共享的超级用户；\n指定具有写权限的用户；\ndocker run -it --name samba -p 139:139 -p 445:445 -v ./data:/mount -d dperson/samba -u "username1;password1" -s "shared;/mount/;yes;yes;yes;all;none" -u "username2;password2" -s "public;/mount/;yes;no;no;all;none"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\ndocker run -it \\\n-p 139:139 \\\n-p 445:445 \\\n--name samba \\\n-v /opt/docker/minio/data:/data \\\n-d dperson/samba \\\n-u "icaiwei;123456" \\\n-s "shared;/mount;yes;no;no;all;none"\n\ndocker run -it --name samba \\\n-p 13694:139 -p 25445:445 \\\n-v /opt/docker/minio/data:/data \\\n-d dperson/samba \\\n-u "username1;password1" \\\n-s "shared;/mount/;yes;yes;yes;all;none" \\\n-u "username2;password2" \\\n-s "public;/mount/;yes;no;no;all;none"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 进入容器内部，添加smb用户名和密码\n\ndocker exec -it samba /bin/bash\nsmbpasswd -a icaiwei\n\n\n1\n2\n\n\n\n# 部署kkfileview\n\n\n# 下载镜像\n\ndocker pull keking/kkfileview\n\n\n1\n\n\n[root@192 ~]# docker images\nrepository          tag       image id       created         size\nkeking/kkfileview   latest    200d92888da0   6 months ago    1.6gb\n\n\n1\n2\n3\n\n\n\n# 启动容器\n\ndocker run -id -p 37651:8012 --name kkfileview --restart=always keking/kkfileview\n\n\n1\n\n\n\n# 部署skywalking\n\n\n# 下载镜像\n\n搭建skywalking需要用到三个镜像: elasticsearch：用来存储数据 skywalking-oap-server：skywalking服务器 skywalking-ui ：skywalking的ui界面\n\ndocker pull elasticsearch:7.9.0\ndocker pull apache/skywalking-oap-server:8.9.0\ndocker pull apache/skywalking-ui:8.9.0\n\n\n1\n2\n3\n\n\n\n# 启动elasticsearch容器\n\ndocker run -d --name=es7 \\\n--restart=always \\\n-p 9200:9200 \\\n-p 9300:9300 \\\n-e "discovery.type=single-node" \\\n-e es_java_opts="-xms512m -xmx512m" \\\nelasticsearch:7.9.0\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 验证es\n\n浏览器访问：http://localhost:9200/，返回：\n\n{\n    "name": "d4bb8b604eaa",\n    "cluster_name": "docker-cluster",\n    "cluster_uuid": "4lvdhqrwsgidg3oieh_vwa",\n    "version": {\n        "number": "7.9.0",\n        "build_flavor": "default",\n        "build_type": "docker",\n        "build_hash": "a479a2a7fce0389512d6a9361301708b92dff667",\n        "build_date": "2020-08-11t21:36:48.204330z",\n        "build_snapshot": false,\n        "lucene_version": "8.6.0",\n        "minimum_wire_compatibility_version": "6.8.0",\n        "minimum_index_compatibility_version": "6.0.0-beta1"\n    },\n    "tagline": "you know, for search"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 启动skywalking-oap\n\ndocker run --name oap --restart=always -d \\\n-e tz=asia/shanghai \\\n-p 15656:12800 \\\n-p 15657:11800 \\\n--link es7:es7 \\\n-e sw_storage=elasticsearch \\\n-e sw_storage_es_cluster_nodes=es7:9200 \\\napache/skywalking-oap-server:8.9.0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 启动skywalking-ui\n\ndocker run -d --name skywalking-ui \\\n--restart=always \\\n-e tz=asia/shanghai \\\n-p 26548:8080 \\\n--link oap:oap \\\n-e sw_oap_address=oap:15656 \\\napache/skywalking-ui:8.9.0\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 开放端口\n\nsystemctl restart firewalld.service\nfirewall-cmd --add-port=48080/tcp --permanent\nfirewall-cmd --add-port=37651/tcp --permanent\nfirewall-cmd --add-port=31564/tcp --add-port=12861/tcp --permanent\nfirewall-cmd --add-port=9527-9529/tcp --add-port=35628/tcp --permanent\nfirewall-cmd --add-port=24584/tcp --permanent\nfirewall-cmd --add-port=26541/tcp --permanent\n#elasticsearch,skywalking\nfirewall-cmd --add-port=9200/tcp --add-port=9300/tcp --permanent\nfirewall-cmd --add-port=15656/tcp --add-port=15657/tcp --permanent\nfirewall-cmd --add-port=26548/tcp --permanent\n\nfirewall-cmd --add-port=139/tcp --add-port=445/tcp --permanent\nfirewall-cmd --reload\n\nfirewall-cmd --zone=public --list-ports\nfirewall-cmd --remove-port=6379/tcp --permanent\nfirewall-cmd --remove-port=9200/tcp --remove-port=9300/tcp --permanent\nfirewall-cmd --remove-port=15656/tcp --remove-port=15657/tcp --permanent\nfirewall-cmd --remove-port=26548/tcp --permanent\n\nfirewall-cmd --remove-port=139/tcp --remove-port=445/tcp --permanent\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 部署jenkins\n\n\n# 下载镜像\n\n2.346.1版本是jdk8支持的最后版本，后续版本最低要求jdk11\n\ndocker pull jenkins/jenkins:2.346\n\ndocker pull jenkins/jenkins:2.414\n\n\n1\n2\n3\n\n\n[root@192 ~]# docker images\nrepository          tag       image id       created         size\njenkins/jenkins     2.346     611ec948eee9   12 months ago   460mb\n\n\n1\n2\n3\n\n\n\n# 启动容器\n\ndocker run -d --restart=always -p 28762:8080 \\\n-v /usr/local/java/jdk1.8.0_202/bin/java:/usr/local/java/jdk1.8.0_202/bin/java \\\n-v /usr/local/java/jdk1.8.0_202/:/usr/local/java/jdk1.8.0_202/ \\\n-v /opt/docker/jenkins/:/var/jenkins_home \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-e java_opts=\'-duser.timezone=asia/shanghai\' \\\n-u root \\\n--name jenkins \\\njenkins/jenkins:2.346\n\ndocker run -d --restart=always -p 28762:8080 \\\n-v /usr/local/java/jdk1.8.0_202/bin/java:/usr/local/java/jdk1.8.0_202/bin/java \\\n-v /usr/local/java/jdk1.8.0_202/:/usr/local/java/jdk1.8.0_202/ \\\n-v /usr/local/maven/apache-maven-3.8.6/mvn:/usr/local/maven/apache-maven-3.8.6/mvn \\\n-v /usr/local/maven/apache-maven-3.8.6/:/usr/local/maven/apache-maven-3.8.6/ \\\n-v /opt/docker/jenkins/:/var/jenkins_home \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-e java_opts=\'-duser.timezone=asia/shanghai\' \\\n-u root \\\n--name jenkins \\\njenkins/jenkins:2.414\n\ndocker exec -it jenkins bash\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 查看密码\n\ncat /opt/docker/jenkins/secrets/initialadminpassword\n\n\n1\n\n\n\n\n\n# 安装插件\n\n\n\n\n# 添加用户\n\nicaiwei\n\nicaiwei#jenkins-07\n\n\n\n\n\n\n\n\n# 手动安装插件\n\n\n\n\n# 配置凭据\n\n\n\n\n\n\n\n\n# 系统配置\n\n# ssh配置\n\n\n\n\n\n\n# 全局工具配置\n\n\n\n\n\n\n# 新建任务\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"CentOS-Syncthing使用",frontmatter:{title:"CentOS-Syncthing使用",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/syncthing/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/21.CentOS-Syncthing%E4%BD%BF%E7%94%A8.html",relativePath:"10.运维管理/02.CentOS/21.CentOS-Syncthing使用.md",key:"v-43751774",path:"/operation/centos/syncthing/",headers:[{level:2,title:"介绍",slug:"介绍",normalizedTitle:"介绍",charIndex:2},{level:2,title:"创建文件夹",slug:"创建文件夹",normalizedTitle:"创建文件夹",charIndex:158},{level:2,title:"安装镜像",slug:"安装镜像",normalizedTitle:"安装镜像",charIndex:248},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:248},{level:2,title:"开放端口",slug:"开放端口",normalizedTitle:"开放端口",charIndex:868},{level:2,title:"下载速度慢",slug:"下载速度慢",normalizedTitle:"下载速度慢",charIndex:1004},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:1131},{level:2,title:"传输文件",slug:"传输文件",normalizedTitle:"传输文件",charIndex:1175}],headersStr:"介绍 创建文件夹 安装镜像 安装 开放端口 下载速度慢 测试 传输文件",content:"# 介绍\n\nSyncthing是一个开源的点对点文件同步软件。\n\n它允许用户在不同设备之间同步文件和文件夹，无需依赖第三方服务器。\n\n用户可以轻松地分享文件和文件夹，保持数据的同步和备份，而且在安全性方面也有较高的保障。\n\nSyncthing具有简单的界面和易于使用的功能，是一个强大而可靠的文件同步工具。\n\n\n# 创建文件夹\n\nmkdir -p /opt/docker/syncthing/conf\nmkdir -p /opt/docker/syncthing/sync\n\n\n1\n2\n\n\n\n# 安装镜像\n\ndocker pull syncthing/syncthing\n\n\n1\n\n\n\n# 安装\n\n# 查看用户ID\nid root\n\n\n1\n2\n\n\ndocker run -d \\\n --restart always \\\n --name=syncthing \\\n --hostname=syncthing \\\n -e PUID=0 \\\n -e PGID=0 \\\n -e UMASK=022 \\\n -e TZ=Asia/Shanghai \\\n -p 10575:8384 -p 22000:22000/tcp -p 22000:22000/udp -p 21027:21027/udp \\\n -v /opt/docker/minio:/opt/docker/minio \\\n  -v /opt/docker/mysql:/opt/docker/mysql \\\n -v /opt/docker/syncthing/conf:/conf \\\n -v /opt/docker/syncthing/sync:/var/syncthing \\\n syncthing/syncthing:latest\n \ndocker exec -it syncthing /bin/sh\ndocker exec -it 56c69d6953b2 /bin/shfin\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 开放端口\n\nfirewall-cmd --add-port=10575/tcp --permanent\nfirewall-cmd --remove-port=22000/tcp --permanent\nfirewall-cmd --reload\n\n\n1\n2\n3\n\n\n\n# 下载速度慢\n\n#【SyncTrayzor】-【文件】-【设置】-【Syncthing】-【Syncthing环境变量】一栏中填写,重启Syncthing即可生效\nall_proxy=socks5://127.0.0.1:10808\n\n\n1\n2\n\n\n\n# 测试\n\n浏览器输入ip:10575\n\nicaiwei#SyncThing-07\n\n\n# 传输文件\n\nWindows客户端使用SyncTrayzor\n\n\n\n",normalizedContent:"# 介绍\n\nsyncthing是一个开源的点对点文件同步软件。\n\n它允许用户在不同设备之间同步文件和文件夹，无需依赖第三方服务器。\n\n用户可以轻松地分享文件和文件夹，保持数据的同步和备份，而且在安全性方面也有较高的保障。\n\nsyncthing具有简单的界面和易于使用的功能，是一个强大而可靠的文件同步工具。\n\n\n# 创建文件夹\n\nmkdir -p /opt/docker/syncthing/conf\nmkdir -p /opt/docker/syncthing/sync\n\n\n1\n2\n\n\n\n# 安装镜像\n\ndocker pull syncthing/syncthing\n\n\n1\n\n\n\n# 安装\n\n# 查看用户id\nid root\n\n\n1\n2\n\n\ndocker run -d \\\n --restart always \\\n --name=syncthing \\\n --hostname=syncthing \\\n -e puid=0 \\\n -e pgid=0 \\\n -e umask=022 \\\n -e tz=asia/shanghai \\\n -p 10575:8384 -p 22000:22000/tcp -p 22000:22000/udp -p 21027:21027/udp \\\n -v /opt/docker/minio:/opt/docker/minio \\\n  -v /opt/docker/mysql:/opt/docker/mysql \\\n -v /opt/docker/syncthing/conf:/conf \\\n -v /opt/docker/syncthing/sync:/var/syncthing \\\n syncthing/syncthing:latest\n \ndocker exec -it syncthing /bin/sh\ndocker exec -it 56c69d6953b2 /bin/shfin\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 开放端口\n\nfirewall-cmd --add-port=10575/tcp --permanent\nfirewall-cmd --remove-port=22000/tcp --permanent\nfirewall-cmd --reload\n\n\n1\n2\n3\n\n\n\n# 下载速度慢\n\n#【synctrayzor】-【文件】-【设置】-【syncthing】-【syncthing环境变量】一栏中填写,重启syncthing即可生效\nall_proxy=socks5://127.0.0.1:10808\n\n\n1\n2\n\n\n\n# 测试\n\n浏览器输入ip:10575\n\nicaiwei#syncthing-07\n\n\n# 传输文件\n\nwindows客户端使用synctrayzor\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"CentOS-更新gcc",frontmatter:{title:"CentOS-更新gcc",date:"2024-03-12T21:00:00.000Z",permalink:"/operation/centos/gcc/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/02.CentOS/22.CentOS-%E6%9B%B4%E6%96%B0gcc.html",relativePath:"10.运维管理/02.CentOS/22.CentOS-更新gcc.md",key:"v-47a1f2b4",path:"/operation/centos/gcc/",headers:[{level:2,title:"当前版本",slug:"当前版本",normalizedTitle:"当前版本",charIndex:2},{level:2,title:"下载源码",slug:"下载源码",normalizedTitle:"下载源码",charIndex:13},{level:2,title:"编译",slug:"编译",normalizedTitle:"编译",charIndex:150},{level:2,title:"配置新版本",slug:"配置新版本",normalizedTitle:"配置新版本",charIndex:308},{level:2,title:"更新动态库",slug:"更新动态库",normalizedTitle:"更新动态库",charIndex:402}],headersStr:"当前版本 下载源码 编译 配置新版本 更新动态库",content:"# 当前版本\n\n\n\n\n# 下载源码\n\nIndex of /gnu/gcc/gcc-12.2.0\n\nwget https://ftp.gnu.org/gnu/gcc/gcc-12.2.0/gcc-12.2.0.tar.gz\ntar -zxvf gcc-12.2.0.tar.gz\n\n\n1\n2\n\n\n\n# 编译\n\nmkdir build\ncd build\n../configure -enable-checking=release -enable-languages=c,c++ -disable-multilib\nmake\nmake install\n# 查看版本\ngcc -v\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 配置新版本\n\n# 删除旧版本\nyum remove gcc g++\n#配置新版本\nln -s /usr/local/bin/gcc /usr/bin/gcc\n\n\n1\n2\n3\n4\n\n\n\n# 更新动态库\n\n# 查看当前的动态库\nstrings /usr/lib64/libstdc++.so.6 | grep CXXABI\nrm -f /usr/lib64/libstdc++.so.6\nln -s /usr/local/lib64/libstdc++.so.6.0.29 /usr/lib64/libstdc++.so.6\n# 查看更新后的动态库\nstrings /usr/lib64/libstdc++.so.6 | grep CXXABI\n\n\n1\n2\n3\n4\n5\n6\n",normalizedContent:"# 当前版本\n\n\n\n\n# 下载源码\n\nindex of /gnu/gcc/gcc-12.2.0\n\nwget https://ftp.gnu.org/gnu/gcc/gcc-12.2.0/gcc-12.2.0.tar.gz\ntar -zxvf gcc-12.2.0.tar.gz\n\n\n1\n2\n\n\n\n# 编译\n\nmkdir build\ncd build\n../configure -enable-checking=release -enable-languages=c,c++ -disable-multilib\nmake\nmake install\n# 查看版本\ngcc -v\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 配置新版本\n\n# 删除旧版本\nyum remove gcc g++\n#配置新版本\nln -s /usr/local/bin/gcc /usr/bin/gcc\n\n\n1\n2\n3\n4\n\n\n\n# 更新动态库\n\n# 查看当前的动态库\nstrings /usr/lib64/libstdc++.so.6 | grep cxxabi\nrm -f /usr/lib64/libstdc++.so.6\nln -s /usr/local/lib64/libstdc++.so.6.0.29 /usr/lib64/libstdc++.so.6\n# 查看更新后的动态库\nstrings /usr/lib64/libstdc++.so.6 | grep cxxabi\n\n\n1\n2\n3\n4\n5\n6\n",charsets:{cjk:!0},lastUpdated:"2024/03/14, 20:50:54",lastUpdatedTimestamp:1710420654e3},{title:"VMWare安装黑群晖",frontmatter:{title:"VMWare安装黑群晖",date:"2023-06-24T21:00:00.000Z",permalink:"/operation/nas/install/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/03.%E7%BE%A4%E6%99%96NAS/01.VMWare%E5%AE%89%E8%A3%85%E9%BB%91%E7%BE%A4%E6%99%96.html",relativePath:"10.运维管理/03.群晖NAS/01.VMWare安装黑群晖.md",key:"v-3eebdcfa",path:"/operation/nas/install/",headers:[{level:2,title:"解压安装包",slug:"解压安装包",normalizedTitle:"解压安装包",charIndex:2},{level:2,title:"配置虚拟机",slug:"配置虚拟机",normalizedTitle:"配置虚拟机",charIndex:14},{level:2,title:"开启虚拟机",slug:"开启虚拟机",normalizedTitle:"开启虚拟机",charIndex:60},{level:2,title:"安装系统",slug:"安装系统",normalizedTitle:"安装系统",charIndex:116},{level:3,title:"如何搜索Synology NAS",slug:"如何搜索synology-nas",normalizedTitle:"如何搜索synology nas",charIndex:125},{level:3,title:"安装NAS",slug:"安装nas",normalizedTitle:"安装nas",charIndex:363},{level:3,title:"格式化磁盘",slug:"格式化磁盘",normalizedTitle:"格式化磁盘",charIndex:393}],headersStr:"解压安装包 配置虚拟机 开启虚拟机 安装系统 如何搜索Synology NAS 安装NAS 格式化磁盘",content:"# 解压安装包\n\n\n\n\n# 配置虚拟机\n\n打开.vmx后，新增一个硬盘\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 开启虚拟机\n\n选择我已复制该虚拟机\n\n\n\n看到Booting the kernel.表示系统已启动\n\n\n\n\n# 安装系统\n\n\n# 如何搜索Synology NAS\n\n * 网页助手：在网页浏览器的地址栏中输入find.synology.com或synologynas:5000 （对于 Mac 计算机为synologynas.local:5000 ）。\n\n * Synology Assistant ：打开Synology Assistant桌面实用程序。如果尚未安装Synology Assistant ，请先进入**下载中心**> Desktop Utilities将其下载并安装到计算机上。\n\n\n# 安装NAS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 格式化磁盘\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",normalizedContent:"# 解压安装包\n\n\n\n\n# 配置虚拟机\n\n打开.vmx后，新增一个硬盘\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 开启虚拟机\n\n选择我已复制该虚拟机\n\n\n\n看到booting the kernel.表示系统已启动\n\n\n\n\n# 安装系统\n\n\n# 如何搜索synology nas\n\n * 网页助手：在网页浏览器的地址栏中输入find.synology.com或synologynas:5000 （对于 mac 计算机为synologynas.local:5000 ）。\n\n * synology assistant ：打开synology assistant桌面实用程序。如果尚未安装synology assistant ，请先进入**下载中心**> desktop utilities将其下载并安装到计算机上。\n\n\n# 安装nas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 格式化磁盘\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Docker安装MySQL",frontmatter:{title:"Docker安装MySQL",date:"2023-06-26T21:00:00.000Z",permalink:"/operation/nas/mysql/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/03.%E7%BE%A4%E6%99%96NAS/02.Docker%E5%AE%89%E8%A3%85MySQL.html",relativePath:"10.运维管理/03.群晖NAS/02.Docker安装MySQL.md",key:"v-b8016d46",path:"/operation/nas/mysql/",headers:[{level:2,title:"前提",slug:"前提",normalizedTitle:"前提",charIndex:2},{level:2,title:"下载镜像",slug:"下载镜像",normalizedTitle:"下载镜像",charIndex:24},{level:3,title:"打开SSH，22端口",slug:"打开ssh-22端口",normalizedTitle:"打开ssh，22端口",charIndex:63},{level:3,title:"终端软件下载",slug:"终端软件下载",normalizedTitle:"终端软件下载",charIndex:80},{level:2,title:"启动镜像",slug:"启动镜像",normalizedTitle:"启动镜像",charIndex:341},{level:3,title:"新建映射目录",slug:"新建映射目录",normalizedTitle:"新建映射目录",charIndex:350},{level:3,title:"启动镜像",slug:"启动镜像-2",normalizedTitle:"启动镜像",charIndex:341},{level:3,title:"配置容器",slug:"配置容器",normalizedTitle:"配置容器",charIndex:859},{level:2,title:"测试连接",slug:"测试连接",normalizedTitle:"测试连接",charIndex:884}],headersStr:"前提 下载镜像 打开SSH，22端口 终端软件下载 启动镜像 新建映射目录 启动镜像 配置容器 测试连接",content:"# 前提\n\n已安装Docker套件\n\n\n\n\n# 下载镜像\n\n由于某些原因，找不到仓库，此处采用SSH远程连接下载\n\n\n\n\n# 打开SSH，22端口\n\n\n\n\n# 终端软件下载\n\n打开终端，输入用户名和密码后，切换为root用户\n\n$ sudo -i\n\n\n1\n\n\n# 拉取镜像\ndocker pull mysql:5.7\n\n# 查看镜像\nroot@DS918:~# docker images\nREPOSITORY   TAG       IMAGE ID       CREATED       SIZE\nmysql        5.7       2be84dd575ee   12 days ago   569MB\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n在群晖中查看\n\n\n\n\n# 启动镜像\n\n\n# 新建映射目录\n\nconf下新建my.cnf\n\n# For advice on how to change settings please see\n# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html\n\n[mysqld]\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\n\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\n\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n\nlower_case_table_names=1\n# validate_password=off\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\nlogs下新建mysqld.log空文件\n\n\n\n\n# 启动镜像\n\n\n\n\n# 配置容器\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 测试连接\n\n打开Navicat，添加配置\n\n",normalizedContent:"# 前提\n\n已安装docker套件\n\n\n\n\n# 下载镜像\n\n由于某些原因，找不到仓库，此处采用ssh远程连接下载\n\n\n\n\n# 打开ssh，22端口\n\n\n\n\n# 终端软件下载\n\n打开终端，输入用户名和密码后，切换为root用户\n\n$ sudo -i\n\n\n1\n\n\n# 拉取镜像\ndocker pull mysql:5.7\n\n# 查看镜像\nroot@ds918:~# docker images\nrepository   tag       image id       created       size\nmysql        5.7       2be84dd575ee   12 days ago   569mb\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n在群晖中查看\n\n\n\n\n# 启动镜像\n\n\n# 新建映射目录\n\nconf下新建my.cnf\n\n# for advice on how to change settings please see\n# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html\n\n[mysqld]\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\n\n# disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\n\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n\nlower_case_table_names=1\n# validate_password=off\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\nlogs下新建mysqld.log空文件\n\n\n\n\n# 启动镜像\n\n\n\n\n# 配置容器\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 测试连接\n\n打开navicat，添加配置\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Docker安装Nginx",frontmatter:{title:"Docker安装Nginx",date:"2023-06-26T21:00:00.000Z",permalink:"/operation/nas/nginx/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/03.%E7%BE%A4%E6%99%96NAS/03.Docker%E5%AE%89%E8%A3%85Nginx.html",relativePath:"10.运维管理/03.群晖NAS/03.Docker安装Nginx.md",key:"v-601c93bd",path:"/operation/nas/nginx/",headers:[{level:2,title:"下载镜像",slug:"下载镜像",normalizedTitle:"下载镜像",charIndex:2},{level:2,title:"启动镜像",slug:"启动镜像",normalizedTitle:"启动镜像",charIndex:266},{level:3,title:"新建映射目录",slug:"新建映射目录",normalizedTitle:"新建映射目录",charIndex:275},{level:3,title:"启动镜像",slug:"启动镜像-2",normalizedTitle:"启动镜像",charIndex:266},{level:3,title:"配置容器",slug:"配置容器",normalizedTitle:"配置容器",charIndex:6243},{level:2,title:"测试连接",slug:"测试连接",normalizedTitle:"测试连接",charIndex:6266}],headersStr:"下载镜像 启动镜像 新建映射目录 启动镜像 配置容器 测试连接",content:"# 下载镜像\n\n打开终端，输入用户名和密码后，切换为root用户\n\n$ sudo -i\n\n\n1\n\n\n# 拉取镜像\ndocker pull nginx:1.20\n\n# 查看镜像\nroot@DS918:/# docker images\nREPOSITORY   TAG       IMAGE ID       CREATED         SIZE\nnginx        1.20      0584b370e957   13 months ago   141MB\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n在群晖中查看\n\n\n\n\n# 启动镜像\n\n\n# 新建映射目录\n\n\n\nconf下新建nginx.conf\n\n\n#user  nobody;\nuser root;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    gzip  on;\n    # 不压缩临界值，大于1K的才压缩，一般不用改\n    gzip_min_length 1k;\n    # # 压缩缓冲区\n    gzip_buffers 16 64K;\n    # # 压缩版本（默认1.1，前端如果是squid2.5请使用1.0）\n    gzip_http_version 1.1;\n    # # 压缩级别，1-10，数字越大压缩的越好，时间也越长\n    gzip_comp_level 2;\n    # # 进行压缩的文件类型\n    gzip_types text/plain application/x-javascript text/css application/xml application/javascript;\n    gzip_proxied any;\n\n    server {\n        listen       9527;\n        server_name  192.168.1.4;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n        location /proxy-api/ {\n            proxy_pass http://192.168.1.4:48080/;\n            proxy_set_header Host $http_host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header REMOTE-HOST $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        }\n\n        location / {\n            root   /usr/share/nginx/html/dist-vue3;\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html;\n        }\n\n        # location /goview {\n        #     root  /usr/share/nginx/html/dist-goview;\n        #     index  index.html index.htm;\n        #     try_files $uri $uri/ /index.html;\n        # }\n\n        # location /help {\n        #     root /usr/share/nginx/html/dist-help;\n        #     index index.html index.htm;\n        #     try_files $uri $uri/ /index.html;\t\n        # }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n    server {\n        listen       3000;\t\t\t\t\n        server_name  192.168.1.4;\n\n        location /proxy-api/ {\n            proxy_pass http://192.168.1.4:48080/;\n            proxy_set_header Host $http_host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header REMOTE-HOST $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        }\n\n        location / {\n            root /usr/share/nginx/html/dist-goview;\n            index index.html index.htm;\n            try_files $uri $uri/ /index.html;\t\n        }\n    }\n\n    server {\n        listen       9528;\t\t\t\t\n        server_name  192.168.1.4;\n\n        location / {\n            root /usr/share/nginx/html/dist-help;\n            index index.html index.htm;\n            try_files $uri $uri/ /index.html;\t\n        }\n    }\n\n\n    # server {\n    #     listen       80;\t\t\t\t\n    #     server_name  101.43.82.191:8012;\n\n    #     location / {\n    #         proxy_pass http://101.43.82.191:8012/;\n    #         proxy_set_header Host $http_host;\n    #         proxy_set_header X-Real-IP $remote_addr;\n    #         proxy_set_header REMOTE-HOST $remote_addr;\n    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    #     }\n    # }\n\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       9000;\n    #    server_name  192.168.1.5;\n\t\n    #    location / {\n    #        index  index.html index.htm;\n    #\t    proxy_pass http://192.169.1.5:9000/;\n    #    }\n    #}\n\n   # server {\n   #     listen       8012;\n   #     server_name  192.168.1.5;\n\n   #     location / {\n   #         index  index.html index.htm;\n   #         proxy_pass http://192.169.1.5:8012/;\n   #     }\n   # }\n\n\n    # HTTPS server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n\n\n\n# 启动镜像\n\n\n\n\n# 配置容器\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 测试连接\n\n\n\n添加自定义index.html\n\n",normalizedContent:"# 下载镜像\n\n打开终端，输入用户名和密码后，切换为root用户\n\n$ sudo -i\n\n\n1\n\n\n# 拉取镜像\ndocker pull nginx:1.20\n\n# 查看镜像\nroot@ds918:/# docker images\nrepository   tag       image id       created         size\nnginx        1.20      0584b370e957   13 months ago   141mb\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n在群晖中查看\n\n\n\n\n# 启动镜像\n\n\n# 新建映射目录\n\n\n\nconf下新建nginx.conf\n\n\n#user  nobody;\nuser root;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    gzip  on;\n    # 不压缩临界值，大于1k的才压缩，一般不用改\n    gzip_min_length 1k;\n    # # 压缩缓冲区\n    gzip_buffers 16 64k;\n    # # 压缩版本（默认1.1，前端如果是squid2.5请使用1.0）\n    gzip_http_version 1.1;\n    # # 压缩级别，1-10，数字越大压缩的越好，时间也越长\n    gzip_comp_level 2;\n    # # 进行压缩的文件类型\n    gzip_types text/plain application/x-javascript text/css application/xml application/javascript;\n    gzip_proxied any;\n\n    server {\n        listen       9527;\n        server_name  192.168.1.4;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n        location /proxy-api/ {\n            proxy_pass http://192.168.1.4:48080/;\n            proxy_set_header host $http_host;\n            proxy_set_header x-real-ip $remote_addr;\n            proxy_set_header remote-host $remote_addr;\n            proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;\n        }\n\n        location / {\n            root   /usr/share/nginx/html/dist-vue3;\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html;\n        }\n\n        # location /goview {\n        #     root  /usr/share/nginx/html/dist-goview;\n        #     index  index.html index.htm;\n        #     try_files $uri $uri/ /index.html;\n        # }\n\n        # location /help {\n        #     root /usr/share/nginx/html/dist-help;\n        #     index index.html index.htm;\n        #     try_files $uri $uri/ /index.html;\t\n        # }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the php scripts to apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the php scripts to fastcgi server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  script_filename  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n    server {\n        listen       3000;\t\t\t\t\n        server_name  192.168.1.4;\n\n        location /proxy-api/ {\n            proxy_pass http://192.168.1.4:48080/;\n            proxy_set_header host $http_host;\n            proxy_set_header x-real-ip $remote_addr;\n            proxy_set_header remote-host $remote_addr;\n            proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;\n        }\n\n        location / {\n            root /usr/share/nginx/html/dist-goview;\n            index index.html index.htm;\n            try_files $uri $uri/ /index.html;\t\n        }\n    }\n\n    server {\n        listen       9528;\t\t\t\t\n        server_name  192.168.1.4;\n\n        location / {\n            root /usr/share/nginx/html/dist-help;\n            index index.html index.htm;\n            try_files $uri $uri/ /index.html;\t\n        }\n    }\n\n\n    # server {\n    #     listen       80;\t\t\t\t\n    #     server_name  101.43.82.191:8012;\n\n    #     location / {\n    #         proxy_pass http://101.43.82.191:8012/;\n    #         proxy_set_header host $http_host;\n    #         proxy_set_header x-real-ip $remote_addr;\n    #         proxy_set_header remote-host $remote_addr;\n    #         proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;\n    #     }\n    # }\n\n\n    # another virtual host using mix of ip-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       9000;\n    #    server_name  192.168.1.5;\n\t\n    #    location / {\n    #        index  index.html index.htm;\n    #\t    proxy_pass http://192.169.1.5:9000/;\n    #    }\n    #}\n\n   # server {\n   #     listen       8012;\n   #     server_name  192.168.1.5;\n\n   #     location / {\n   #         index  index.html index.htm;\n   #         proxy_pass http://192.169.1.5:8012/;\n   #     }\n   # }\n\n\n    # https server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:ssl:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  high:!anull:!md5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n\n\n\n# 启动镜像\n\n\n\n\n# 配置容器\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 测试连接\n\n\n\n添加自定义index.html\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Docker安装Minio",frontmatter:{title:"Docker安装Minio",date:"2023-06-26T21:00:00.000Z",permalink:"/operation/nas/minio/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/03.%E7%BE%A4%E6%99%96NAS/05.Docker%E5%AE%89%E8%A3%85Minio.html",relativePath:"10.运维管理/03.群晖NAS/05.Docker安装Minio.md",key:"v-f5672886",path:"/operation/nas/minio/",headers:[{level:2,title:"下载镜像",slug:"下载镜像",normalizedTitle:"下载镜像",charIndex:2},{level:2,title:"启动镜像",slug:"启动镜像",normalizedTitle:"启动镜像",charIndex:269},{level:3,title:"新建映射目录",slug:"新建映射目录",normalizedTitle:"新建映射目录",charIndex:278},{level:2,title:"启动镜像",slug:"启动镜像-2",normalizedTitle:"启动镜像",charIndex:269},{level:3,title:"配置容器",slug:"配置容器",normalizedTitle:"配置容器",charIndex:302},{level:2,title:"测试连接",slug:"测试连接",normalizedTitle:"测试连接",charIndex:573}],headersStr:"下载镜像 启动镜像 新建映射目录 启动镜像 配置容器 测试连接",content:"# 下载镜像\n\n打开终端，输入用户名和密码后，切换为root用户\n\n$ sudo -i\n\n\n1\n\n\n# 拉取镜像\ndocker pull minio/minio\n\n# 查看镜像\nroot@DS918:/# docker images\nREPOSITORY    TAG       IMAGE ID       CREATED         SIZE\nminio/minio   latest    a5d29c2476d0   2 days ago      264MB\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n在群晖中查看\n\n\n\n\n# 启动镜像\n\n\n# 新建映射目录\n\n\n\n\n# 启动镜像\n\n\n\n\n# 配置容器\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n新增环境变量，\n\nMINIO_ROOT_USER为登陆时的用户名，\n\nMINIO_ROOT_PASSWORD为登陆时的密码，\n\nMINIO_KMS_SECRET_KEY(可选)是用于加密MinIO后端（用户、组、策略和服务器配置）的密钥，并且必须是具有32位base64编码值，\n\nMINIO_SEVER_URL(可选)是设置文件API域名的\n\n命令：server --address '0.0.0.0:9000' --console-address '0.0.0.0:9001' /data\n\n\n# 测试连接\n\nhttp://192.168.1.4:9000/跳转页面\n\n\n\n",normalizedContent:"# 下载镜像\n\n打开终端，输入用户名和密码后，切换为root用户\n\n$ sudo -i\n\n\n1\n\n\n# 拉取镜像\ndocker pull minio/minio\n\n# 查看镜像\nroot@ds918:/# docker images\nrepository    tag       image id       created         size\nminio/minio   latest    a5d29c2476d0   2 days ago      264mb\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n在群晖中查看\n\n\n\n\n# 启动镜像\n\n\n# 新建映射目录\n\n\n\n\n# 启动镜像\n\n\n\n\n# 配置容器\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n新增环境变量，\n\nminio_root_user为登陆时的用户名，\n\nminio_root_password为登陆时的密码，\n\nminio_kms_secret_key(可选)是用于加密minio后端（用户、组、策略和服务器配置）的密钥，并且必须是具有32位base64编码值，\n\nminio_sever_url(可选)是设置文件api域名的\n\n命令：server --address '0.0.0.0:9000' --console-address '0.0.0.0:9001' /data\n\n\n# 测试连接\n\nhttp://192.168.1.4:9000/跳转页面\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Docker安装Redis",frontmatter:{title:"Docker安装Redis",date:"2023-06-26T21:00:00.000Z",permalink:"/operation/nas/redis/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/03.%E7%BE%A4%E6%99%96NAS/04.Docker%E5%AE%89%E8%A3%85Redis.html",relativePath:"10.运维管理/03.群晖NAS/04.Docker安装Redis.md",key:"v-2db1e07d",path:"/operation/nas/redis/",headers:[{level:2,title:"下载镜像",slug:"下载镜像",normalizedTitle:"下载镜像",charIndex:2},{level:2,title:"启动镜像",slug:"启动镜像",normalizedTitle:"启动镜像",charIndex:389},{level:3,title:"新建映射目录",slug:"新建映射目录",normalizedTitle:"新建映射目录",charIndex:398},{level:2,title:"启动镜像",slug:"启动镜像-2",normalizedTitle:"启动镜像",charIndex:389},{level:3,title:"配置容器",slug:"配置容器",normalizedTitle:"配置容器",charIndex:528},{level:2,title:"测试连接",slug:"测试连接",normalizedTitle:"测试连接",charIndex:551}],headersStr:"下载镜像 启动镜像 新建映射目录 启动镜像 配置容器 测试连接",content:"# 下载镜像\n\n打开终端，输入用户名和密码后，切换为root用户\n\n$ sudo -i\n\n\n1\n\n\n# 拉取镜像\ndocker pull redis:6.2\n\n# 查看镜像\nroot@DS918:/# docker images\nREPOSITORY   TAG       IMAGE ID       CREATED         SIZE\nredis        6.2       38208fb6fc1e   11 days ago     127MB\nmysql        5.7       2be84dd575ee   12 days ago     569MB\nnginx        1.20      0584b370e957   13 months ago   141MB\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n在群晖中查看\n\n\n\n\n# 启动镜像\n\n\n# 新建映射目录\n\n\n\nconf下新建redis.conf\n\ndatabases 16\nmaxmemory 1gb\nmaxmemory-policy allkeys-lru\nrequirepass 123456\n\n\n1\n2\n3\n4\n\n\n\n# 启动镜像\n\n\n\n\n# 配置容器\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 测试连接\n\n使用Another Redis Desktop Manager可视化连接\n\n\n\n",normalizedContent:"# 下载镜像\n\n打开终端，输入用户名和密码后，切换为root用户\n\n$ sudo -i\n\n\n1\n\n\n# 拉取镜像\ndocker pull redis:6.2\n\n# 查看镜像\nroot@ds918:/# docker images\nrepository   tag       image id       created         size\nredis        6.2       38208fb6fc1e   11 days ago     127mb\nmysql        5.7       2be84dd575ee   12 days ago     569mb\nnginx        1.20      0584b370e957   13 months ago   141mb\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n在群晖中查看\n\n\n\n\n# 启动镜像\n\n\n# 新建映射目录\n\n\n\nconf下新建redis.conf\n\ndatabases 16\nmaxmemory 1gb\nmaxmemory-policy allkeys-lru\nrequirepass 123456\n\n\n1\n2\n3\n4\n\n\n\n# 启动镜像\n\n\n\n\n# 配置容器\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 测试连接\n\n使用another redis desktop manager可视化连接\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Docker安装KKFileView",frontmatter:{title:"Docker安装KKFileView",date:"2023-06-26T21:00:00.000Z",permalink:"/operation/nas/kkfileview/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/03.%E7%BE%A4%E6%99%96NAS/06.Docker%E5%AE%89%E8%A3%85KKFileView.html",relativePath:"10.运维管理/03.群晖NAS/06.Docker安装KKFileView.md",key:"v-76af135a",path:"/operation/nas/kkfileview/",headers:[{level:2,title:"下载镜像",slug:"下载镜像",normalizedTitle:"下载镜像",charIndex:2},{level:2,title:"启动镜像",slug:"启动镜像",normalizedTitle:"启动镜像",charIndex:344},{level:3,title:"新建映射目录",slug:"新建映射目录",normalizedTitle:"新建映射目录",charIndex:353},{level:2,title:"启动镜像",slug:"启动镜像-2",normalizedTitle:"启动镜像",charIndex:344},{level:3,title:"配置容器",slug:"配置容器",normalizedTitle:"配置容器",charIndex:377},{level:2,title:"测试连接",slug:"测试连接",normalizedTitle:"测试连接",charIndex:468},{level:2,title:"问题",slug:"问题",normalizedTitle:"问题",charIndex:509}],headersStr:"下载镜像 启动镜像 新建映射目录 启动镜像 配置容器 测试连接 问题",content:"# 下载镜像\n\n打开终端，输入用户名和密码后，切换为root用户\n\n$ sudo -i\n\n\n1\n\n\n# 拉取镜像\ndocker pull keking/kkfileview\n\n# 查看镜像\nroot@DS918:/# docker images\nREPOSITORY    TAG       IMAGE ID       CREATED         SIZE\nminio/minio   latest    a5d29c2476d0   2 days ago      264MB\nkeking/kkfileview   latest    200d92888da0   6 months ago    1.6GB\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n在群晖中查看\n\n\n\n\n# 启动镜像\n\n\n# 新建映射目录\n\n\n\n\n# 启动镜像\n\n\n\n\n# 配置容器\n\n\n\n\n\n\n\n::: warning\n\n映射目录也可以不设置，KKFileView 资料不重要，可随时重置，推荐不设置，否则启动报错\n\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n# 测试连接\n\nhttp://192.168.1.4:8012/跳转页面\n\n\n\n\n# 问题\n\n可能出现Office Exception错误，多重启几次，\n\n或者\n\n/opt/libreoffice7.3/program/soffice -version 查看版本\n\n/opt/libreoffice7.1/program/soffice --headless --accept=“socket,host=127.0.0.1,port=2001;urp;” --nofirststartwizard &\n\n查看是否启动",normalizedContent:"# 下载镜像\n\n打开终端，输入用户名和密码后，切换为root用户\n\n$ sudo -i\n\n\n1\n\n\n# 拉取镜像\ndocker pull keking/kkfileview\n\n# 查看镜像\nroot@ds918:/# docker images\nrepository    tag       image id       created         size\nminio/minio   latest    a5d29c2476d0   2 days ago      264mb\nkeking/kkfileview   latest    200d92888da0   6 months ago    1.6gb\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n在群晖中查看\n\n\n\n\n# 启动镜像\n\n\n# 新建映射目录\n\n\n\n\n# 启动镜像\n\n\n\n\n# 配置容器\n\n\n\n\n\n\n\n::: warning\n\n映射目录也可以不设置，kkfileview 资料不重要，可随时重置，推荐不设置，否则启动报错\n\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n# 测试连接\n\nhttp://192.168.1.4:8012/跳转页面\n\n\n\n\n# 问题\n\n可能出现office exception错误，多重启几次，\n\n或者\n\n/opt/libreoffice7.3/program/soffice -version 查看版本\n\n/opt/libreoffice7.1/program/soffice --headless --accept=“socket,host=127.0.0.1,port=2001;urp;” --nofirststartwizard &\n\n查看是否启动",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Docker部署Springboot",frontmatter:{title:"Docker部署Springboot",date:"2023-06-28T21:00:00.000Z",permalink:"/operation/nas/springboot/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/03.%E7%BE%A4%E6%99%96NAS/07.Docker%E9%83%A8%E7%BD%B2Springboot.html",relativePath:"10.运维管理/03.群晖NAS/07.Docker部署Springboot.md",key:"v-78d2fbcc",path:"/operation/nas/springboot/",headers:[{level:2,title:"打包Springboot",slug:"打包springboot",normalizedTitle:"打包springboot",charIndex:2},{level:2,title:"新建Dockerfile",slug:"新建dockerfile",normalizedTitle:"新建dockerfile",charIndex:69},{level:2,title:"新建映射目录",slug:"新建映射目录",normalizedTitle:"新建映射目录",charIndex:305},{level:2,title:"构建镜像",slug:"构建镜像",normalizedTitle:"构建镜像",charIndex:318},{level:2,title:"启动镜像",slug:"启动镜像",normalizedTitle:"启动镜像",charIndex:1257},{level:2,title:"启动成功",slug:"启动成功",normalizedTitle:"启动成功",charIndex:1280}],headersStr:"打包Springboot 新建Dockerfile 新建映射目录 构建镜像 启动镜像 启动成功",content:'# 打包Springboot\n\nmvn clean install package -Dmaven.test.skip=true\n\n\n# 新建Dockerfile\n\nFROM eclipse-temurin:8-jre\nCOPY pldm-server.jar app.jar\n\nENV TZ=Asia/Shanghai JAVA_OPTS="-Xms512m -Xmx512m"\nEXPOSE 48080\nENTRYPOINT java ${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom -jar app.jar\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 新建映射目录\n\n\n\n\n# 构建镜像\n\n在终端中，在当前目录 . 构建 TAG 为1.0 的镜像\n\ndocker build -t pldm-server:1.0 .\n\n\n1\n\n\nSending build context to Docker daemon  206.5MB\nStep 1/5 : FROM eclipse-temurin:8-jre\n ---\x3e 60b32f7cb882\nStep 2/5 : COPY pldm-server.jar app.jar\n ---\x3e Using cache\n ---\x3e 74818439e92e\nStep 3/5 : ENV TZ=Asia/Shanghai JAVA_OPTS="-Xms512m -Xmx512m"\n ---\x3e Using cache\n ---\x3e b1e0624dc704\nStep 4/5 : EXPOSE 48080\n ---\x3e Using cache\n ---\x3e 4f2c736f3aaa\nStep 5/5 : ENTRYPOINT java ${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom -jar app.jar\n ---\x3e Using cache\n ---\x3e 25e737ec2f73\nSuccessfully built 25e737ec2f73\nSuccessfully tagged pldm-server:1.0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\nroot@DS918:/volume1/docker/server# docker images\nREPOSITORY          TAG       IMAGE ID       CREATED         SIZE\npldm-server         1.0       25e737ec2f73   2 minutes ago   428MB\neclipse-temurin     8-jre     60b32f7cb882   11 days ago     221MB\n\n\n1\n2\n3\n4\n\n\n在NAS中查看镜像\n\n\n\n\n# 启动镜像\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 启动成功\n\n\n\n\n\n',normalizedContent:'# 打包springboot\n\nmvn clean install package -dmaven.test.skip=true\n\n\n# 新建dockerfile\n\nfrom eclipse-temurin:8-jre\ncopy pldm-server.jar app.jar\n\nenv tz=asia/shanghai java_opts="-xms512m -xmx512m"\nexpose 48080\nentrypoint java ${java_opts} -djava.security.egd=file:/dev/./urandom -jar app.jar\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 新建映射目录\n\n\n\n\n# 构建镜像\n\n在终端中，在当前目录 . 构建 tag 为1.0 的镜像\n\ndocker build -t pldm-server:1.0 .\n\n\n1\n\n\nsending build context to docker daemon  206.5mb\nstep 1/5 : from eclipse-temurin:8-jre\n ---\x3e 60b32f7cb882\nstep 2/5 : copy pldm-server.jar app.jar\n ---\x3e using cache\n ---\x3e 74818439e92e\nstep 3/5 : env tz=asia/shanghai java_opts="-xms512m -xmx512m"\n ---\x3e using cache\n ---\x3e b1e0624dc704\nstep 4/5 : expose 48080\n ---\x3e using cache\n ---\x3e 4f2c736f3aaa\nstep 5/5 : entrypoint java ${java_opts} -djava.security.egd=file:/dev/./urandom -jar app.jar\n ---\x3e using cache\n ---\x3e 25e737ec2f73\nsuccessfully built 25e737ec2f73\nsuccessfully tagged pldm-server:1.0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\nroot@ds918:/volume1/docker/server# docker images\nrepository          tag       image id       created         size\npldm-server         1.0       25e737ec2f73   2 minutes ago   428mb\neclipse-temurin     8-jre     60b32f7cb882   11 days ago     221mb\n\n\n1\n2\n3\n4\n\n\n在nas中查看镜像\n\n\n\n\n# 启动镜像\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 启动成功\n\n\n\n\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"npm使用",frontmatter:{title:"npm使用",date:"2023-06-17T21:00:00.000Z",permalink:"/operation/npm/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/04.NodeJS/01.npm%E4%BD%BF%E7%94%A8.html",relativePath:"10.运维管理/04.NodeJS/01.npm使用.md",key:"v-af2dd460",path:"/operation/npm/",headers:[{level:2,title:"全局安装",slug:"全局安装",normalizedTitle:"全局安装",charIndex:2},{level:2,title:"初始化一个项目",slug:"初始化一个项目",normalizedTitle:"初始化一个项目",charIndex:177},{level:2,title:"安装项目依赖",slug:"安装项目依赖",normalizedTitle:"安装项目依赖",charIndex:273},{level:2,title:"全局包管理",slug:"全局包管理",normalizedTitle:"全局包管理",charIndex:1526},{level:2,title:"升级依赖包",slug:"升级依赖包",normalizedTitle:"升级依赖包",charIndex:2069},{level:2,title:"删除依赖包",slug:"删除依赖包",normalizedTitle:"删除依赖包",charIndex:2210},{level:2,title:"更新项目中所有依赖项",slug:"更新项目中所有依赖项",normalizedTitle:"更新项目中所有依赖项",charIndex:2286},{level:3,title:"npm-check-updates",slug:"npm-check-updates",normalizedTitle:"npm-check-updates",charIndex:2308},{level:4,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:4},{level:4,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:2439},{level:3,title:"npm-check",slug:"npm-check",normalizedTitle:"npm-check",charIndex:2298},{level:4,title:"安装",slug:"安装-2",normalizedTitle:"安装",charIndex:4},{level:4,title:"使用",slug:"使用-2",normalizedTitle:"使用",charIndex:2439},{level:2,title:"切换国内镜像",slug:"切换国内镜像",normalizedTitle:"切换国内镜像",charIndex:3333},{level:3,title:"目前常用的镜像列表",slug:"目前常用的镜像列表",normalizedTitle:"目前常用的镜像列表",charIndex:3344},{level:3,title:"查看yarn当前镜像源",slug:"查看yarn当前镜像源",normalizedTitle:"查看yarn当前镜像源",charIndex:3574},{level:3,title:"设置镜像源",slug:"设置镜像源",normalizedTitle:"设置镜像源",charIndex:3745},{level:3,title:"nrm / yrm 管理镜像源工具",slug:"nrm-yrm-管理镜像源工具",normalizedTitle:"nrm / yrm 管理镜像源工具",charIndex:3969},{level:4,title:"安装 yrm /nrm",slug:"安装-yrm-nrm",normalizedTitle:"安装 yrm /nrm",charIndex:4044},{level:4,title:"列出当前镜像源列表",slug:"列出当前镜像源列表",normalizedTitle:"列出当前镜像源列表",charIndex:4113},{level:4,title:"使用，测试",slug:"使用-测试",normalizedTitle:"使用，测试",charIndex:4444},{level:2,title:"建议",slug:"建议",normalizedTitle:"建议",charIndex:4554}],headersStr:"全局安装 初始化一个项目 安装项目依赖 全局包管理 升级依赖包 删除依赖包 更新项目中所有依赖项 npm-check-updates 安装 使用 npm-check 安装 使用 切换国内镜像 目前常用的镜像列表 查看yarn当前镜像源 设置镜像源 nrm / yrm 管理镜像源工具 安装 yrm /nrm 列出当前镜像源列表 使用，测试 建议",content:'# 全局安装\n\n// 安装node自带npm，检查是否安装成功，执行如下命令\nnpm -v  // 6.14.15\n\n// yarn\nnpm install -g yarn\n\n// cnpm \nnpm install -g cnpm\n\n// pnpm\nnpm install -g pnpm\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 初始化一个项目\n\nnpm init\n// OR\nyarn init\n\n// 快速生成的package.json默认配置\nnpm/yarn init -y\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 安装项目依赖\n\n// npm / cnpm / pnpm\n// 简写，全称 npm install\nnpm i [package]\n\n// yarn\nyarn add [package]\n\n// 安装指定版本\nnpm i [package]@[version]\nyarn add [package]@[version]\n\n// 小栗子\n// 安装 jquery\nnpm i jquery@3.0.0\n\n// 查看package.json \n"jquery": "^3.0.0"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n意外情况:::\n\n我们经常会在安装一半退出在继续安装会报错，这是因为有缓存的原因\n\nnpm cache clean --force\n\n\n1\n\n\n--save--dev意思:::\n\nnpm install vue\nnpm install vue --save\nnpm install @babel/core --save-dev\n\n空\n查看package.json，文件内容不发生改变，在运行项目且有引用该依赖时能正常运行，当npm i时候，不会安装该依赖。\n\n--save\n查看package.json 会有一个dependencies对象，里面就是项目运行需要的依赖。\ndependencies 代表项目运行所依赖的模块\n简写 -S\nnpm install express -S\n\n--save-dev\n查看package.json 会有一个devDependencies对象，里面就是项目开发时候需要的依赖。\ndevDependencies 代表项目开发所需要的模块\n如：babel 是发布时，将 ES6 代码编译成 ES5 ，那么 babel 就是devDependencies。\n简写 -D\nnpm install express -D\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n^和~的区别:::\n\n// package.json中^和~的区别\n\n"vue": "~2.6.0",\n"es6-promise": "^2.0.0"\n\n~符号\n假设vue版本已经更新到2.7.0以上，当我们重新安装项目依赖，只会匹配到2.6.x的最新版本，不会匹配到2.7.0及以上\n\n^符号\n假设es6-promise更新3.0.0，当我们重新安装项目依赖，es6-promise始终是2.0.0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n版本号代表含义:::\n\n"vue": "2.6.0"\n\n第一位表示：主版本号，常用于大版本更新，可能不兼容旧版本。\n如Vue2.0和Vue3.0,虽然说向下兼容，但是部分语法存在兼容问题。\n\n第二位表示：次版本号，增加了新的功能，基本向下兼容。\n\n第三位表示：补丁号， 修复了bug等。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 全局包管理\n\n// 查看当前哪些包需要更新\nnpm outdated -g --depth=0\n\n@vue/cli    4.5.9   4.5.13  4.5.13  global\nnpm       6.14.15  6.14.15  7.24.0  global\npnpm       5.17.3  5.18.10  6.15.1  global\n\n// 更新全局的依赖包\nnpm update -g\n\n// 更新依赖包\nnpm update pnpm\n\n// 可能报错 Remove the existing file and try again, or run npm with --force to overwrite files recklessly.\n\n1. 卸载 pnpm\nnpm uninstall -g pnpm\n\n清理 npm 缓存\nnpm cache clean --force\n\n重新安装\nnpm i pnpm -g\n\n// 第二种 强制安装依赖\nnpm install -g pnpm --force\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 升级依赖包\n\n"vue": "^2.6.0"\n\nnpm update vue\n\nyarn upgrade vue@2.6.14 指定版本\nyarn upgrade vue@^ //选择指定版本\n\n// "vue": "^2.6.14"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 删除依赖包\n\n"vue": "^2.6.0"\n\nnpm uninstall vue\n\nyarn remove vue\n\n\n1\n2\n3\n4\n5\n\n\n\n# 更新项目中所有依赖项\n\nnpm-check\nnpm-check-updates\n\n\n\n1\n2\n3\n\n\n二者目的相同，只是在更新过程中的一些交互展示形式存在一定的差异\n\n\n# npm-check-updates\n\n# 安装\n\nnpm install -g npm-check-updates\n\n\n1\n\n\n# 使用\n\n// 查看可更新包\nncu\n\n[====================] 12/12 100%\n @vssue/api-github-v4                         ^1.4.0  →   ^1.4.7     \n @vssue/vuepress-plugin-vssue                 ^1.4.6  →   ^1.4.8     \n @vuepress-reco/vuepress-plugin-back-to-top   ^1.5.7  →   ^1.6.0     \n @vuepress/plugin-google-analytics            ^1.8.1  →   ^1.8.2     \n @vuepress/plugin-pwa                         ^1.8.1  →   ^1.8.2     \n dayjs                                       ^1.10.4  →  ^1.10.7     \n vuepress                                     ^1.8.1  →   ^1.8.2     \n vuepress-plugin-live2d-model                 ^1.0.0  →   ^1.0.7     \n vuepress-plugin-one-click-copy               ^1.0.2  →   ^1.0.6 \n \n // 升级所有依赖项\n ncu -u\n ncu -u vuepress dayjs ...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# npm-check\n\n# 安装\n\nnpm install npm-check -g\n\n\n1\n\n\n# 使用\n\n// 查看可更新包\nnpm-check\n \n// 升级所有依赖项\nnpm-check -u\n\n\n1\n2\n3\n4\n5\n\n\n\n# 切换国内镜像\n\n\n# 目前常用的镜像列表\n\nnpm ---- https://registry.npmjs.org/\ncnpm --- https://registry.nlark.com/\ntaobao - https://registry.npm.taobao.org\nyarn --- https://registry.yarnpkg.com/\ntencent- https://mirrors.cloud.tencent.com/npm/\n\n\n1\n2\n3\n4\n5\n\n\n\n# 查看yarn当前镜像源\n\nyarn config get registry\n\nnpm config get registry\n\ncnpm config get registry\n\npnpm config get registry\n\n//https://registry.nlark.com/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 设置镜像源\n\n// 全局使用\nyarn config set registry https://registry.npm.taobao.org\n\ncnpm config set registry https://registry.nlark.com/\n// ...\n\n// 临时在项目中使用\nnpm install --registry https://registry.npm.taobao.org\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# nrm / yrm 管理镜像源工具\n\nyrm/nrm 不仅可以快速切换镜像源，还可以测试自己网络访问不同源的速度，且yrm/nrm用法都相同。\n\n# 安装 yrm /nrm\n\nnpm install -g yrm\n// or\nnpm install -g nrm\n\n\n1\n2\n3\n\n\n# 列出当前镜像源列表\n\nyrm ls\n\nnpm -----  https://registry.npmjs.org/\ncnpm ----  http://r.cnpmjs.org/\ntaobao --  https://registry.npm.taobao.org/\nnj ------  https://registry.nodejitsu.com/\nrednpm -- http://registry.mirror.cqupt.edu.cn\nskimdb -- https://skimdb.npmjs.com/registry\nyarn ----  https://registry.yarnpkg.com\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 使用，测试\n\nyrm use taobao\n// https://registry.npm.taobao.org/\n\nyrm test taobao\n// taobao - 187ms\n\n\n1\n2\n3\n4\n5\n\n\n\n# 建议\n\nWindows用户\n\n推荐使用yarn/npm，可能cnpm/pnpm安装速度优于yarn/npm，但是可能造成诡异的 bug，比如项目运行不起来等等，最简单直接的方法就是删除node_modules重新安装。\n\n如图所示，图中的项目通过pnpm/cnpm安装的依赖项， 直接运行不起来，之所以只针对Win系统，因为Win系统删除node_modules快则几分钟，慢则十几分钟，而mac直接秒删，试错成本低可以尝试。',normalizedContent:'# 全局安装\n\n// 安装node自带npm，检查是否安装成功，执行如下命令\nnpm -v  // 6.14.15\n\n// yarn\nnpm install -g yarn\n\n// cnpm \nnpm install -g cnpm\n\n// pnpm\nnpm install -g pnpm\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 初始化一个项目\n\nnpm init\n// or\nyarn init\n\n// 快速生成的package.json默认配置\nnpm/yarn init -y\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 安装项目依赖\n\n// npm / cnpm / pnpm\n// 简写，全称 npm install\nnpm i [package]\n\n// yarn\nyarn add [package]\n\n// 安装指定版本\nnpm i [package]@[version]\nyarn add [package]@[version]\n\n// 小栗子\n// 安装 jquery\nnpm i jquery@3.0.0\n\n// 查看package.json \n"jquery": "^3.0.0"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n意外情况:::\n\n我们经常会在安装一半退出在继续安装会报错，这是因为有缓存的原因\n\nnpm cache clean --force\n\n\n1\n\n\n--save--dev意思:::\n\nnpm install vue\nnpm install vue --save\nnpm install @babel/core --save-dev\n\n空\n查看package.json，文件内容不发生改变，在运行项目且有引用该依赖时能正常运行，当npm i时候，不会安装该依赖。\n\n--save\n查看package.json 会有一个dependencies对象，里面就是项目运行需要的依赖。\ndependencies 代表项目运行所依赖的模块\n简写 -s\nnpm install express -s\n\n--save-dev\n查看package.json 会有一个devdependencies对象，里面就是项目开发时候需要的依赖。\ndevdependencies 代表项目开发所需要的模块\n如：babel 是发布时，将 es6 代码编译成 es5 ，那么 babel 就是devdependencies。\n简写 -d\nnpm install express -d\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n^和~的区别:::\n\n// package.json中^和~的区别\n\n"vue": "~2.6.0",\n"es6-promise": "^2.0.0"\n\n~符号\n假设vue版本已经更新到2.7.0以上，当我们重新安装项目依赖，只会匹配到2.6.x的最新版本，不会匹配到2.7.0及以上\n\n^符号\n假设es6-promise更新3.0.0，当我们重新安装项目依赖，es6-promise始终是2.0.0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n版本号代表含义:::\n\n"vue": "2.6.0"\n\n第一位表示：主版本号，常用于大版本更新，可能不兼容旧版本。\n如vue2.0和vue3.0,虽然说向下兼容，但是部分语法存在兼容问题。\n\n第二位表示：次版本号，增加了新的功能，基本向下兼容。\n\n第三位表示：补丁号， 修复了bug等。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 全局包管理\n\n// 查看当前哪些包需要更新\nnpm outdated -g --depth=0\n\n@vue/cli    4.5.9   4.5.13  4.5.13  global\nnpm       6.14.15  6.14.15  7.24.0  global\npnpm       5.17.3  5.18.10  6.15.1  global\n\n// 更新全局的依赖包\nnpm update -g\n\n// 更新依赖包\nnpm update pnpm\n\n// 可能报错 remove the existing file and try again, or run npm with --force to overwrite files recklessly.\n\n1. 卸载 pnpm\nnpm uninstall -g pnpm\n\n清理 npm 缓存\nnpm cache clean --force\n\n重新安装\nnpm i pnpm -g\n\n// 第二种 强制安装依赖\nnpm install -g pnpm --force\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n\n# 升级依赖包\n\n"vue": "^2.6.0"\n\nnpm update vue\n\nyarn upgrade vue@2.6.14 指定版本\nyarn upgrade vue@^ //选择指定版本\n\n// "vue": "^2.6.14"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 删除依赖包\n\n"vue": "^2.6.0"\n\nnpm uninstall vue\n\nyarn remove vue\n\n\n1\n2\n3\n4\n5\n\n\n\n# 更新项目中所有依赖项\n\nnpm-check\nnpm-check-updates\n\n\n\n1\n2\n3\n\n\n二者目的相同，只是在更新过程中的一些交互展示形式存在一定的差异\n\n\n# npm-check-updates\n\n# 安装\n\nnpm install -g npm-check-updates\n\n\n1\n\n\n# 使用\n\n// 查看可更新包\nncu\n\n[====================] 12/12 100%\n @vssue/api-github-v4                         ^1.4.0  →   ^1.4.7     \n @vssue/vuepress-plugin-vssue                 ^1.4.6  →   ^1.4.8     \n @vuepress-reco/vuepress-plugin-back-to-top   ^1.5.7  →   ^1.6.0     \n @vuepress/plugin-google-analytics            ^1.8.1  →   ^1.8.2     \n @vuepress/plugin-pwa                         ^1.8.1  →   ^1.8.2     \n dayjs                                       ^1.10.4  →  ^1.10.7     \n vuepress                                     ^1.8.1  →   ^1.8.2     \n vuepress-plugin-live2d-model                 ^1.0.0  →   ^1.0.7     \n vuepress-plugin-one-click-copy               ^1.0.2  →   ^1.0.6 \n \n // 升级所有依赖项\n ncu -u\n ncu -u vuepress dayjs ...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# npm-check\n\n# 安装\n\nnpm install npm-check -g\n\n\n1\n\n\n# 使用\n\n// 查看可更新包\nnpm-check\n \n// 升级所有依赖项\nnpm-check -u\n\n\n1\n2\n3\n4\n5\n\n\n\n# 切换国内镜像\n\n\n# 目前常用的镜像列表\n\nnpm ---- https://registry.npmjs.org/\ncnpm --- https://registry.nlark.com/\ntaobao - https://registry.npm.taobao.org\nyarn --- https://registry.yarnpkg.com/\ntencent- https://mirrors.cloud.tencent.com/npm/\n\n\n1\n2\n3\n4\n5\n\n\n\n# 查看yarn当前镜像源\n\nyarn config get registry\n\nnpm config get registry\n\ncnpm config get registry\n\npnpm config get registry\n\n//https://registry.nlark.com/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 设置镜像源\n\n// 全局使用\nyarn config set registry https://registry.npm.taobao.org\n\ncnpm config set registry https://registry.nlark.com/\n// ...\n\n// 临时在项目中使用\nnpm install --registry https://registry.npm.taobao.org\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# nrm / yrm 管理镜像源工具\n\nyrm/nrm 不仅可以快速切换镜像源，还可以测试自己网络访问不同源的速度，且yrm/nrm用法都相同。\n\n# 安装 yrm /nrm\n\nnpm install -g yrm\n// or\nnpm install -g nrm\n\n\n1\n2\n3\n\n\n# 列出当前镜像源列表\n\nyrm ls\n\nnpm -----  https://registry.npmjs.org/\ncnpm ----  http://r.cnpmjs.org/\ntaobao --  https://registry.npm.taobao.org/\nnj ------  https://registry.nodejitsu.com/\nrednpm -- http://registry.mirror.cqupt.edu.cn\nskimdb -- https://skimdb.npmjs.com/registry\nyarn ----  https://registry.yarnpkg.com\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 使用，测试\n\nyrm use taobao\n// https://registry.npm.taobao.org/\n\nyrm test taobao\n// taobao - 187ms\n\n\n1\n2\n3\n4\n5\n\n\n\n# 建议\n\nwindows用户\n\n推荐使用yarn/npm，可能cnpm/pnpm安装速度优于yarn/npm，但是可能造成诡异的 bug，比如项目运行不起来等等，最简单直接的方法就是删除node_modules重新安装。\n\n如图所示，图中的项目通过pnpm/cnpm安装的依赖项， 直接运行不起来，之所以只针对win系统，因为win系统删除node_modules快则几分钟，慢则十几分钟，而mac直接秒删，试错成本低可以尝试。',charsets:{cjk:!0},lastUpdated:"2023/06/30, 10:40:56",lastUpdatedTimestamp:1688092856e3},{title:"yarn安装使用",frontmatter:{title:"yarn安装使用",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/yarn/install/",private:!0,titleTag:"原创",categories:["运维管理"],tags:["运维管理"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/04.NodeJS/02.yarn%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8.html",relativePath:"10.运维管理/04.NodeJS/02.yarn安装使用.md",key:"v-2b917ddf",path:"/tool/yarn/install/",headers:[{level:2,title:"yarn",slug:"yarn",normalizedTitle:"yarn",charIndex:2}],headersStr:"yarn",content:"# yarn\n\nnpm install -g yarn\nyarn --version\nyarn config set registry https://registry.npm.taobao.org -g\nyarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g\n\nyarn的常用命令：\n安装yarn\n\nnpm install -g yarn\n安装成功后，查看版本号：\n\nyarn --version\n创建文件夹 yarn\n\nmd yarn\n进入yarn文件夹\n\ncd yarn\n初始化项目\n\nyarn init // 同npm init，执行输入信息后，会生成package.json文件\nyarn的配置项：\n\nyarn config list // 显示所有配置项\nyarn config get <key> //显示某配置项\nyarn config delete <key> //删除某配置项\nyarn config set <key> <value> [-g|--global] //设置配置项\n安装包：\n\nyarn install //安装package.json里所有包，并将包及它的所有依赖项保存进yarn.lock\nyarn install --flat //安装一个包的单一版本\nyarn install --force //强制重新下载所有包\nyarn install --production //只安装dependencies里的包\nyarn install --no-lockfile //不读取或生成yarn.lock\nyarn install --pure-lockfile //不生成yarn.lock\n添加包（会更新package.json和yarn.lock）：\n\nyarn add [package] // 在当前的项目中添加一个依赖包，会自动更新到package.json和yarn.lock文件中\nyarn add [package]@[version] // 安装指定版本，这里指的是主要版本，如果需要精确到小版本，使用-E参数\nyarn add [package]@[tag] // 安装某个tag（比如beta,next或者latest）\n//不指定依赖类型默认安装到dependencies里，你也可以指定依赖类型：\n\nyarn add --dev/-D // 加到 devDependencies\nyarn add --peer/-P // 加到 peerDependencies\nyarn add --optional/-O // 加到 optionalDependencies\n//默认安装包的主要版本里的最新版本，下面两个命令可以指定版本：\n\nyarn add --exact/-E // 安装包的精确版本。例如yarn add foo@1.2.3会接受1.9.1版，但是yarn add foo@1.2.3 --exact只会接受1.2.3版\nyarn add --tilde/-T // 安装包的次要版本里的最新版。例如yarn add foo@1.2.3 --tilde会接受1.2.9，但不接受1.3.0\n发布包\n\nyarn publish\n移除一个包\n\nyarn remove <packageName>：移除一个包，会自动更新package.json和yarn.lock\n更新一个依赖\n\nyarn upgrade 用于更新包到基于规范范围的最新版本\n运行脚本\n\nyarn run 用来执行在 package.json 中 scripts 属性下定义的脚本\n显示某个包的信息\n\nyarn info <packageName> 可以用来查看某个模块的最新版本信息\n缓存\n\nyarn cache\nyarn cache list # 列出已缓存的每个包 yarn cache dir # 返回 全局缓存位置 yarn cache clean # 清除缓存\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n",normalizedContent:"# yarn\n\nnpm install -g yarn\nyarn --version\nyarn config set registry https://registry.npm.taobao.org -g\nyarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g\n\nyarn的常用命令：\n安装yarn\n\nnpm install -g yarn\n安装成功后，查看版本号：\n\nyarn --version\n创建文件夹 yarn\n\nmd yarn\n进入yarn文件夹\n\ncd yarn\n初始化项目\n\nyarn init // 同npm init，执行输入信息后，会生成package.json文件\nyarn的配置项：\n\nyarn config list // 显示所有配置项\nyarn config get <key> //显示某配置项\nyarn config delete <key> //删除某配置项\nyarn config set <key> <value> [-g|--global] //设置配置项\n安装包：\n\nyarn install //安装package.json里所有包，并将包及它的所有依赖项保存进yarn.lock\nyarn install --flat //安装一个包的单一版本\nyarn install --force //强制重新下载所有包\nyarn install --production //只安装dependencies里的包\nyarn install --no-lockfile //不读取或生成yarn.lock\nyarn install --pure-lockfile //不生成yarn.lock\n添加包（会更新package.json和yarn.lock）：\n\nyarn add [package] // 在当前的项目中添加一个依赖包，会自动更新到package.json和yarn.lock文件中\nyarn add [package]@[version] // 安装指定版本，这里指的是主要版本，如果需要精确到小版本，使用-e参数\nyarn add [package]@[tag] // 安装某个tag（比如beta,next或者latest）\n//不指定依赖类型默认安装到dependencies里，你也可以指定依赖类型：\n\nyarn add --dev/-d // 加到 devdependencies\nyarn add --peer/-p // 加到 peerdependencies\nyarn add --optional/-o // 加到 optionaldependencies\n//默认安装包的主要版本里的最新版本，下面两个命令可以指定版本：\n\nyarn add --exact/-e // 安装包的精确版本。例如yarn add foo@1.2.3会接受1.9.1版，但是yarn add foo@1.2.3 --exact只会接受1.2.3版\nyarn add --tilde/-t // 安装包的次要版本里的最新版。例如yarn add foo@1.2.3 --tilde会接受1.2.9，但不接受1.3.0\n发布包\n\nyarn publish\n移除一个包\n\nyarn remove <packagename>：移除一个包，会自动更新package.json和yarn.lock\n更新一个依赖\n\nyarn upgrade 用于更新包到基于规范范围的最新版本\n运行脚本\n\nyarn run 用来执行在 package.json 中 scripts 属性下定义的脚本\n显示某个包的信息\n\nyarn info <packagename> 可以用来查看某个模块的最新版本信息\n缓存\n\nyarn cache\nyarn cache list # 列出已缓存的每个包 yarn cache dir # 返回 全局缓存位置 yarn cache clean # 清除缓存\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n",charsets:{cjk:!0},lastUpdated:"2023/09/10, 19:17:44",lastUpdatedTimestamp:1694344664e3},{title:"nodejs更改路径",frontmatter:{title:"nodejs更改路径",date:"2023-06-17T21:00:00.000Z",permalink:"/operation/nodejs/changedir/",private:!0,titleTag:"原创",categories:["运维管理"],tags:["运维管理"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/04.NodeJS/03.NodeJS%E6%9B%B4%E6%94%B9%E8%B7%AF%E5%BE%84.html",relativePath:"10.运维管理/04.NodeJS/03.NodeJS更改路径.md",key:"v-fdb6dd6e",path:"/operation/nodejs/changedir/",headers:[{level:2,title:"修改npm默认的全局安装路径和缓存路径",slug:"修改npm默认的全局安装路径和缓存路径",normalizedTitle:"修改npm默认的全局安装路径和缓存路径",charIndex:2},{level:2,title:"国内镜像网站配置",slug:"国内镜像网站配置",normalizedTitle:"国内镜像网站配置",charIndex:202},{level:2,title:"全局路径修改",slug:"全局路径修改",normalizedTitle:"全局路径修改",charIndex:293}],headersStr:"修改npm默认的全局安装路径和缓存路径 国内镜像网站配置 全局路径修改",content:'# 修改npm默认的全局安装路径和缓存路径\n\n全局安装，默认的安装路径为C:\\Users\\xxx\\AppData\\Roaming\\npm\\node_modules，缓存路径为C:\\Users\\xxx\\AppData\\Roaming\\npm_cache\n\nnpm install -g xxx\n\n局部安装，默认的安装路径为项目根目录文件夹node_modules\n\nnpm install xxx\n\n\n# 国内镜像网站配置\n\nnpm config set registry https://registry.npm.taobao.org\nnpm config ls\n\n\n1\n2\n\n\n\n# 全局路径修改\n\n在node.js的安装目录（也不一定非得是这个目录，可以是自己想要的任何目录）下创建"node_cache"、"node_global"文件夹\n\nnode_global：用来存放全局模块（配置之后，安装模块后，该文件夹下会自动生成node_modules存放全局模块） node_cache：用来存放全局缓存\n\n在命令提示符中依次输入\n\nnpm config set cache "D:\\nodejs\\node_cache"\nnpm config set prefix "D:\\nodejs\\node_global"\n\n\n1\n2\n\n\n',normalizedContent:'# 修改npm默认的全局安装路径和缓存路径\n\n全局安装，默认的安装路径为c:\\users\\xxx\\appdata\\roaming\\npm\\node_modules，缓存路径为c:\\users\\xxx\\appdata\\roaming\\npm_cache\n\nnpm install -g xxx\n\n局部安装，默认的安装路径为项目根目录文件夹node_modules\n\nnpm install xxx\n\n\n# 国内镜像网站配置\n\nnpm config set registry https://registry.npm.taobao.org\nnpm config ls\n\n\n1\n2\n\n\n\n# 全局路径修改\n\n在node.js的安装目录（也不一定非得是这个目录，可以是自己想要的任何目录）下创建"node_cache"、"node_global"文件夹\n\nnode_global：用来存放全局模块（配置之后，安装模块后，该文件夹下会自动生成node_modules存放全局模块） node_cache：用来存放全局缓存\n\n在命令提示符中依次输入\n\nnpm config set cache "d:\\nodejs\\node_cache"\nnpm config set prefix "d:\\nodejs\\node_global"\n\n\n1\n2\n\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"常见错误",frontmatter:{title:"常见错误",date:"2023-07-03T21:00:00.000Z",permalink:"/operation/git/error/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/05.Git/03.%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF.html",relativePath:"10.运维管理/05.Git/03.常见错误.md",key:"v-61c6e437",path:"/operation/git/error/",headers:[{level:2,title:"refusing to merge unrelated histories的解决方案（本地/远程）综合",slug:"refusing-to-merge-unrelated-histories的解决方案-本地-远程-综合",normalizedTitle:"refusing to merge unrelated histories的解决方案（本地/远程）综合",charIndex:2},{level:3,title:"原因",slug:"原因",normalizedTitle:"原因",charIndex:58},{level:3,title:"解决方案",slug:"解决方案",normalizedTitle:"解决方案",charIndex:40}],headersStr:"refusing to merge unrelated histories的解决方案（本地/远程）综合 原因 解决方案",content:"# refusing to merge unrelated histories的解决方案（本地/远程）综合\n\n\n# 原因\n\n两个仓库不同而导致的\n\n\n# 解决方案\n\n需要在后面加上--allow-unrelated-histories进行允许合并，即可解决问题\n\n原本命令\n\ngit merge feature\n\n\n1\n\n\n解决命令\n\ngit merge feature --allow-unrelated-histories\n\n\n1\n\n\n如果还不能解决问题，就把本地的remote删除，重新git remote add添加远程仓库，再按上面的方法来，问题解决。",normalizedContent:"# refusing to merge unrelated histories的解决方案（本地/远程）综合\n\n\n# 原因\n\n两个仓库不同而导致的\n\n\n# 解决方案\n\n需要在后面加上--allow-unrelated-histories进行允许合并，即可解决问题\n\n原本命令\n\ngit merge feature\n\n\n1\n\n\n解决命令\n\ngit merge feature --allow-unrelated-histories\n\n\n1\n\n\n如果还不能解决问题，就把本地的remote删除，重新git remote add添加远程仓库，再按上面的方法来，问题解决。",charsets:{cjk:!0},lastUpdated:"2023/07/04, 09:38:55",lastUpdatedTimestamp:1688434735e3},{title:"云服务器开启虚拟内存SWAP",frontmatter:{title:"云服务器开启虚拟内存SWAP",date:"2023-09-10T21:00:00.000Z",permalink:"/cloud/swapon/",private:!0,titleTag:"原创",categories:["运维管理"],tags:["运维管理","云服务器"],readingShow:"top"},regularPath:"/10.%E8%BF%90%E7%BB%B4%E7%AE%A1%E7%90%86/06.%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/01.%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%90%AF%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%20SWAP.html",relativePath:"10.运维管理/06.云服务器/01.云服务器开启虚拟内存 SWAP.md",key:"v-63e0e9d9",path:"/cloud/swapon/",headersStr:null,content:'云服务器一般默认禁止虚拟内存，我们可以通过 shell 快速开启虚拟内存。\n\nbs=1M count=4096 表示创建一个4G（1M*4096）大小的块文件。\n\nswappiness=0 表示最大限度使用物理内存，然后才是swap空间。\n\nswappiness＝100 表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。\n\n# 创建虚拟内存文件\ndd if=/dev/zero of=/mnt/swap bs=1M count=4096\nchmod 0600 /mnt/swap\nmkswap /mnt/swap\nswapon /mnt/swap\n# 写入自动挂载参数\nif ! grep -q swap /etc/fstab; then\n    echo "/mnt/swap swap swap defaults 0 0" >> /etc/fstab\nfi\n# 设置虚拟内存使用率\nif ! grep -q swappiness /etc/sysctl.conf; then\n    echo "vm.swappiness = 10" >> /etc/sysctl.conf\nelse\n    sed -i \'s/vm.swappiness = 0/vm.swappiness = 10/\' /etc/sysctl.conf\nfi\n# 使配置生效\nsysctl -p\n# 查看\nfree -h\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',normalizedContent:'云服务器一般默认禁止虚拟内存，我们可以通过 shell 快速开启虚拟内存。\n\nbs=1m count=4096 表示创建一个4g（1m*4096）大小的块文件。\n\nswappiness=0 表示最大限度使用物理内存，然后才是swap空间。\n\nswappiness＝100 表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。\n\n# 创建虚拟内存文件\ndd if=/dev/zero of=/mnt/swap bs=1m count=4096\nchmod 0600 /mnt/swap\nmkswap /mnt/swap\nswapon /mnt/swap\n# 写入自动挂载参数\nif ! grep -q swap /etc/fstab; then\n    echo "/mnt/swap swap swap defaults 0 0" >> /etc/fstab\nfi\n# 设置虚拟内存使用率\nif ! grep -q swappiness /etc/sysctl.conf; then\n    echo "vm.swappiness = 10" >> /etc/sysctl.conf\nelse\n    sed -i \'s/vm.swappiness = 0/vm.swappiness = 10/\' /etc/sysctl.conf\nfi\n# 使配置生效\nsysctl -p\n# 查看\nfree -h\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n',charsets:{cjk:!0},lastUpdated:"2023/09/10, 19:17:44",lastUpdatedTimestamp:1694344664e3},{title:"新建文档",frontmatter:{title:"新建文档",date:"2024-01-01T00:00:00.000Z",permalink:"/template/newnote",private:!0,titleTag:"原创",categories:null,tags:null,readingShow:"top"},regularPath:"/100.%E6%A8%A1%E6%9D%BF/01.%E6%96%B0%E5%BB%BA%E6%A8%A1%E6%9D%BF.html",relativePath:"100.模板/01.新建模板.md",key:"v-69d46afc",path:"/template/newnote/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/25, 14:48:55",lastUpdatedTimestamp:1706165335e3},{title:"Excel常用公式",frontmatter:{title:"Excel常用公式",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/office/excel/formula/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用","Excel"],readingShow:"top"},regularPath:"/14.%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/01.Excel/01.Excel%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F.html",relativePath:"14.工具使用/01.Excel/01.Excel常用公式.md",key:"v-153b09b8",path:"/tool/office/excel/formula/",headers:[{level:2,title:"按数字大小排序",slug:"按数字大小排序",normalizedTitle:"按数字大小排序",charIndex:3},{level:2,title:"取整",slug:"取整",normalizedTitle:"取整",charIndex:14},{level:3,title:"INT",slug:"int",normalizedTitle:"int",charIndex:22},{level:3,title:"ROUND",slug:"round",normalizedTitle:"round",charIndex:31},{level:3,title:"TRUNC",slug:"trunc",normalizedTitle:"trunc",charIndex:42}],headersStr:"按数字大小排序 取整 INT ROUND TRUNC",content:' * 按数字大小排序\n * 取整\n   * INT\n   * ROUND\n   * TRUNC\n\n\n\n\n# 按数字大小排序\n\n说明:针对12,3,4,5,6,7,8,9,10，排序为1,10,2,3,4,5,6,7,8,9，使用公式LEFT及TEXT\n\n示例=LEFT(A1)&TEXT(MID(A1,2,9),"000")\n\n\n\n\n# 取整\n\n\n# INT\n\n说明:将数字向下摄入到最接近的数\n\n示例:\n\n\n\n\n# ROUND\n\n说明:函数将数字四舍五入到指定的位数，第二参数，如果省略，则取整数，并进行四舍五入\n\n示例:\n\n\n\n\n# TRUNC\n\n说明:将数字的小数部分截去，返回整数\n\n示例:\n\n',normalizedContent:' * 按数字大小排序\n * 取整\n   * int\n   * round\n   * trunc\n\n\n\n\n# 按数字大小排序\n\n说明:针对12,3,4,5,6,7,8,9,10，排序为1,10,2,3,4,5,6,7,8,9，使用公式left及text\n\n示例=left(a1)&text(mid(a1,2,9),"000")\n\n\n\n\n# 取整\n\n\n# int\n\n说明:将数字向下摄入到最接近的数\n\n示例:\n\n\n\n\n# round\n\n说明:函数将数字四舍五入到指定的位数，第二参数，如果省略，则取整数，并进行四舍五入\n\n示例:\n\n\n\n\n# trunc\n\n说明:将数字的小数部分截去，返回整数\n\n示例:\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Excel常用快捷键",frontmatter:{title:"Excel常用快捷键",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/office/excel/shortkey/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用","Excel"],readingShow:"top"},regularPath:"/14.%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/01.Excel/03.Excel%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE.html",relativePath:"14.工具使用/01.Excel/03.Excel常用快捷键.md",key:"v-13666d00",path:"/tool/office/excel/shortkey/",headersStr:null,content:"功能         快捷键\n快速查找数据不同   Alt+\\\n快速拆分数据     Ctrl+E\n快速求和       Alt+=\n一键美化表格     Ctrl+T",normalizedContent:"功能         快捷键\n快速查找数据不同   alt+\\\n快速拆分数据     ctrl+e\n快速求和       alt+=\n一键美化表格     ctrl+t",charsets:{cjk:!0},lastUpdated:"2023/06/21, 15:43:04",lastUpdatedTimestamp:1687333384e3},{title:"Typora过期解决",frontmatter:{title:"Typora过期解决",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/other/typora/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"],readingShow:"top"},regularPath:"/14.%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/09.%E5%85%B6%E5%AE%83/01.Typora%E8%BF%87%E6%9C%9F%E8%A7%A3%E5%86%B3.html",relativePath:"14.工具使用/09.其它/01.Typora过期解决.md",key:"v-0f2580b8",path:"/tool/other/typora/",headers:[{level:2,title:"创建批处理typora.bat",slug:"创建批处理typora-bat",normalizedTitle:"创建批处理typora.bat",charIndex:3},{level:2,title:"以管理员运行",slug:"以管理员运行",normalizedTitle:"以管理员运行",charIndex:22}],headersStr:"创建批处理typora.bat 以管理员运行",content:' * 创建批处理typora.bat\n * 以管理员运行\n\n\n\n\n# 创建批处理typora.bat\n\n@echo off\nfor /f "delims= " %%d in (\'echo %date%\') do (set "now=%%d")\ndate 2020/1/1\necho 更改时间：2020/1/1\nstart D:\\"Program Files"\\Typora\\Typora.exe\necho 启动Typora中……\nchoice /t 1 /d y /n >nul\ndate %now%\necho 恢复正常时间\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 以管理员运行',normalizedContent:' * 创建批处理typora.bat\n * 以管理员运行\n\n\n\n\n# 创建批处理typora.bat\n\n@echo off\nfor /f "delims= " %%d in (\'echo %date%\') do (set "now=%%d")\ndate 2020/1/1\necho 更改时间：2020/1/1\nstart d:\\"program files"\\typora\\typora.exe\necho 启动typora中……\nchoice /t 1 /d y /n >nul\ndate %now%\necho 恢复正常时间\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 以管理员运行',charsets:{cjk:!0},lastUpdated:"2023/06/21, 15:43:04",lastUpdatedTimestamp:1687333384e3},{title:"Shell例子",frontmatter:{title:"Shell例子",date:"2023-06-24T21:00:00.000Z",permalink:"/linux/shell/example/",private:!0,categories:["Linux"],tags:["Linux"],readingShow:"top"},regularPath:"/12.Linux/03.Shell/01.Shell%E4%BE%8B%E5%AD%90.html",relativePath:"12.Linux/03.Shell/01.Shell例子.md",key:"v-15f6e1be",path:"/linux/shell/example/",headers:[{level:4,title:"1）编写hello world脚本",slug:"_1-编写hello-world脚本",normalizedTitle:"1）编写hello world脚本",charIndex:2},{level:4,title:"2）通过位置变量创建 Linux 系统账户及密码",slug:"_2-通过位置变量创建-linux-系统账户及密码",normalizedTitle:"2）通过位置变量创建 linux 系统账户及密码",charIndex:99},{level:4,title:"3）备份日志",slug:"_3-备份日志",normalizedTitle:"3）备份日志",charIndex:282},{level:4,title:"4）一键部署 LNMP(RPM 包版本)",slug:"_4-一键部署-lnmp-rpm-包版本",normalizedTitle:"4）一键部署 lnmp(rpm 包版本)",charIndex:593},{level:4,title:"5）监控内存和磁盘容量，小于给定值时报警",slug:"_5-监控内存和磁盘容量-小于给定值时报警",normalizedTitle:"5）监控内存和磁盘容量，小于给定值时报警",charIndex:931},{level:4,title:"6）猜数字游戏",slug:"_6-猜数字游戏",normalizedTitle:"6）猜数字游戏",charIndex:1404},{level:4,title:"7）检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不是,则提示您非管理员(使用字串对比版本)",slug:"_7-检测本机当前用户是否为超级管理员-如果是管理员-则使用-yum-安装-vsftpd-如果不是-则提示您非管理员-使用字串对比版本",normalizedTitle:"7）检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不是,则提示您非管理员(使用字串对比版本)",charIndex:2061},{level:4,title:"8）检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不是,则提示您非管理员(使用 UID 数字对比版本)",slug:"_8-检测本机当前用户是否为超级管理员-如果是管理员-则使用-yum-安装-vsftpd-如果不是-则提示您非管理员-使用-uid-数字对比版本",normalizedTitle:"8）检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不是,则提示您非管理员(使用 uid 数字对比版本)",charIndex:2349},{level:4,title:"9）编写脚本:提示用户输入用户名和密码,脚本自动创建相应的账户及配置密码。如果用户不输入账户名,则提示必须输入账户名并退出脚本;如果用户不输入密码,则统一使用默认的 123456 作为默认密码。",slug:"_9-编写脚本-提示用户输入用户名和密码-脚本自动创建相应的账户及配置密码。如果用户不输入账户名-则提示必须输入账户名并退出脚本-如果用户不输入密码-则统一使用默认的-123456-作为默认密码。",normalizedTitle:"9）编写脚本:提示用户输入用户名和密码,脚本自动创建相应的账户及配置密码。如果用户不输入账户名,则提示必须输入账户名并退出脚本;如果用户不输入密码,则统一使用默认的 123456 作为默认密码。",charIndex:2638},{level:4,title:"10）输入三个数并进行升序排序",slug:"_10-输入三个数并进行升序排序",normalizedTitle:"10）输入三个数并进行升序排序",charIndex:3286},{level:4,title:"11）石头、剪刀、布游戏",slug:"_11-石头、剪刀、布游戏",normalizedTitle:"11）石头、剪刀、布游戏",charIndex:4130},{level:4,title:"12）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(for 版本)",slug:"_12-编写脚本测试-192-168-4-0-24-整个网段中哪些主机处于开机状态-哪些主机处于关机状态-for-版本",normalizedTitle:"12）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(for 版本)",charIndex:5051},{level:4,title:"13）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(while 版本)",slug:"_13-编写脚本测试-192-168-4-0-24-整个网段中哪些主机处于开机状态-哪些主机处于关机状态-while-版本",normalizedTitle:"13）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(while 版本)",charIndex:5496},{level:4,title:"14）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(多进程版)",slug:"_14-编写脚本测试-192-168-4-0-24-整个网段中哪些主机处于开机状态-哪些主机处于关机状态-多进程版",normalizedTitle:"14）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(多进程版)",charIndex:5925},{level:4,title:"15）编写脚本,显示进度条",slug:"_15-编写脚本-显示进度条",normalizedTitle:"15）编写脚本,显示进度条",charIndex:6421},{level:4,title:"16）进度条,动态时针版本；定义一个显示进度的函数,屏幕快速显示|  / ‐ \\",slug:"_16-进度条-动态时针版本-定义一个显示进度的函数-屏幕快速显示-‐",normalizedTitle:"16）进度条,动态时针版本；定义一个显示进度的函数,屏幕快速显示|  / ‐ \\",charIndex:null},{level:4,title:"17）9*9 乘法表",slug:"_17-9-9-乘法表",normalizedTitle:"17）9*9 乘法表",charIndex:7607},{level:4,title:"18）使用死循环实时显示 eth0 网卡发送的数据包流量",slug:"_18-使用死循环实时显示-eth0-网卡发送的数据包流量",normalizedTitle:"18）使用死循环实时显示 eth0 网卡发送的数据包流量",charIndex:7827},{level:4,title:"19）使用 user.txt 文件中的人员名单,在计算机中自动创建对应的账户并配置初始密码本脚本执行,需要提前准备一个 user.txt 文件,该文件中包含有若干用户名信息",slug:"_19-使用-user-txt-文件中的人员名单-在计算机中自动创建对应的账户并配置初始密码本脚本执行-需要提前准备一个-user-txt-文件-该文件中包含有若干用户名信息",normalizedTitle:"19）使用 user.txt 文件中的人员名单,在计算机中自动创建对应的账户并配置初始密码本脚本执行,需要提前准备一个 user.txt 文件,该文件中包含有若干用户名信息",charIndex:8113},{level:4,title:"20）编写批量修改扩展名脚本",slug:"_20-编写批量修改扩展名脚本",normalizedTitle:"20）编写批量修改扩展名脚本",charIndex:8433},{level:4,title:"21）使用 expect 工具自动交互密码远程其他主机安装 httpd 软件",slug:"_21-使用-expect-工具自动交互密码远程其他主机安装-httpd-软件",normalizedTitle:"21）使用 expect 工具自动交互密码远程其他主机安装 httpd 软件",charIndex:8689},{level:4,title:"22）一键部署 LNMP(源码安装版本)",slug:"_22-一键部署-lnmp-源码安装版本",normalizedTitle:"22）一键部署 lnmp(源码安装版本)",charIndex:9129},{level:4,title:"23）编写脚本快速克隆 KVM 虚拟机",slug:"_23-编写脚本快速克隆-kvm-虚拟机",normalizedTitle:"23）编写脚本快速克隆 kvm 虚拟机",charIndex:12883},{level:4,title:"24）点名器脚本",slug:"_24-点名器脚本",normalizedTitle:"24）点名器脚本",charIndex:14752},{level:4,title:"25）查看有多少远程的 IP 在连接本机",slug:"_25-查看有多少远程的-ip-在连接本机",normalizedTitle:"25）查看有多少远程的 ip 在连接本机",charIndex:15050},{level:4,title:"26）对 100 以内的所有正整数相加求和(1+2+3+4…+100)",slug:"_26-对-100-以内的所有正整数相加求和-1-2-3-4-100",normalizedTitle:"26）对 100 以内的所有正整数相加求和(1+2+3+4…+100)",charIndex:15487},{level:4,title:"27）统计 13:30 到 14:30 所有访问 apache 服务器的请求有多少个",slug:"_27-统计-13-30-到-14-30-所有访问-apache-服务器的请求有多少个",normalizedTitle:"27）统计 13:30 到 14:30 所有访问 apache 服务器的请求有多少个",charIndex:15713},{level:4,title:"28）统计 13:30 到 14:30 所有访问本机 Aapche 服务器的远程 IP 地址是什么",slug:"_28-统计-13-30-到-14-30-所有访问本机-aapche-服务器的远程-ip-地址是什么",normalizedTitle:"28）统计 13:30 到 14:30 所有访问本机 aapche 服务器的远程 ip 地址是什么",charIndex:16042},{level:4,title:"29）打印国际象棋棋盘",slug:"_29-打印国际象棋棋盘",normalizedTitle:"29）打印国际象棋棋盘",charIndex:16402},{level:4,title:"30）统计每个远程 IP 访问了本机 apache 几次?",slug:"_30-统计每个远程-ip-访问了本机-apache-几次",normalizedTitle:"30）统计每个远程 ip 访问了本机 apache 几次?",charIndex:16964},{level:4,title:"31）统计当前 Linux 系统中可以登录计算机的账户有多少个",slug:"_31-统计当前-linux-系统中可以登录计算机的账户有多少个",normalizedTitle:"31）统计当前 linux 系统中可以登录计算机的账户有多少个",charIndex:17137},{level:4,title:"32）统计/var/log 有多少个文件,并显示这些文件名",slug:"_32-统计-var-log-有多少个文件-并显示这些文件名",normalizedTitle:"32）统计/var/log 有多少个文件,并显示这些文件名",charIndex:17343},{level:4,title:"33）自动为其他脚本添加解释器信息",slug:"_33-自动为其他脚本添加解释器信息",normalizedTitle:"33）自动为其他脚本添加解释器信息",charIndex:17655},{level:4,title:"34）自动化部署 varnish 源码包软件",slug:"_34-自动化部署-varnish-源码包软件",normalizedTitle:"34）自动化部署 varnish 源码包软件",charIndex:18190},{level:4,title:"35）编写 nginx 启动脚本",slug:"_35-编写-nginx-启动脚本",normalizedTitle:"35）编写 nginx 启动脚本",charIndex:19110},{level:4,title:"36）自动对磁盘分区、格式化、挂载",slug:"_36-自动对磁盘分区、格式化、挂载",normalizedTitle:"36）自动对磁盘分区、格式化、挂载",charIndex:20036},{level:4,title:"37）自动优化 Linux 内核参数",slug:"_37-自动优化-linux-内核参数",normalizedTitle:"37）自动优化 linux 内核参数",charIndex:20558},{level:4,title:"38）切割 Nginx 日志文件(防止单个文件过大,后期处理很困难)",slug:"_38-切割-nginx-日志文件-防止单个文件过大-后期处理很困难",normalizedTitle:"38）切割 nginx 日志文件(防止单个文件过大,后期处理很困难)",charIndex:21426},{level:4,title:"39）检测 MySQL 数据库连接数量",slug:"_39-检测-mysql-数据库连接数量",normalizedTitle:"39）检测 mysql 数据库连接数量",charIndex:21934},{level:4,title:"40）根据 md5 校验码,检测文件是否被修改",slug:"_40-根据-md5-校验码-检测文件是否被修改",normalizedTitle:"40）根据 md5 校验码,检测文件是否被修改",charIndex:22407},{level:4,title:"41）检测 MySQL 服务是否存活",slug:"_41-检测-mysql-服务是否存活",normalizedTitle:"41）检测 mysql 服务是否存活",charIndex:22720},{level:4,title:"42）备份 MySQL 的 shell 脚本(mysqldump版本)",slug:"_42-备份-mysql-的-shell-脚本-mysqldump版本",normalizedTitle:"42）备份 mysql 的 shell 脚本(mysqldump版本)",charIndex:23122},{level:4,title:"43）将文件中所有的小写字母转换为大写字母",slug:"_43-将文件中所有的小写字母转换为大写字母",normalizedTitle:"43）将文件中所有的小写字母转换为大写字母",charIndex:23619},{level:4,title:"44）非交互自动生成 SSH 密钥文件",slug:"_44-非交互自动生成-ssh-密钥文件",normalizedTitle:"44）非交互自动生成 ssh 密钥文件",charIndex:23801},{level:4,title:"45）检查特定的软件包是否已经安装",slug:"_45-检查特定的软件包是否已经安装",normalizedTitle:"45）检查特定的软件包是否已经安装",charIndex:24022},{level:4,title:"46）监控 HTTP 服务器的状态(测试返回码)",slug:"_46-监控-http-服务器的状态-测试返回码",normalizedTitle:"46）监控 http 服务器的状态(测试返回码)",charIndex:24426},{level:4,title:"47）自动添加防火墙规则,开启某些服务或端口(适用于 RHEL7)",slug:"_47-自动添加防火墙规则-开启某些服务或端口-适用于-rhel7",normalizedTitle:"47）自动添加防火墙规则,开启某些服务或端口(适用于 rhel7)",charIndex:25502},{level:4,title:"48）使用脚本自动创建逻辑卷",slug:"_48-使用脚本自动创建逻辑卷",normalizedTitle:"48）使用脚本自动创建逻辑卷",charIndex:26137},{level:4,title:"49）显示 CPU 厂商信息",slug:"_49-显示-cpu-厂商信息",normalizedTitle:"49）显示 cpu 厂商信息",charIndex:27167},{level:4,title:"50）删除某个目录下大小为 0 的文件",slug:"_50-删除某个目录下大小为-0-的文件",normalizedTitle:"50）删除某个目录下大小为 0 的文件",charIndex:27282},{level:4,title:"51）查找 Linux 系统中的僵尸进程",slug:"_51-查找-linux-系统中的僵尸进程",normalizedTitle:"51）查找 linux 系统中的僵尸进程",charIndex:27476},{level:4,title:"52）提示用户输入年份后判断该年是否为闰年",slug:"_52-提示用户输入年份后判断该年是否为闰年",normalizedTitle:"52）提示用户输入年份后判断该年是否为闰年",charIndex:27647},{level:4,title:"53）生成随机密码(urandom 版本)",slug:"_53-生成随机密码-urandom-版本",normalizedTitle:"53）生成随机密码(urandom 版本)",charIndex:28225},{level:4,title:"54）生成随机密码(字串截取版本)",slug:"_54-生成随机密码-字串截取版本",normalizedTitle:"54）生成随机密码(字串截取版本)",charIndex:28658},{level:4,title:"55）生成随机密码(UUID 版本,16 进制密码)",slug:"_55-生成随机密码-uuid-版本-16-进制密码",normalizedTitle:"55）生成随机密码(uuid 版本,16 进制密码)",charIndex:29142},{level:4,title:"56）生成随机密码(进程 ID 版本,数字密码)",slug:"_56-生成随机密码-进程-id-版本-数字密码",normalizedTitle:"56）生成随机密码(进程 id 版本,数字密码)",charIndex:29240},{level:4,title:"57）测试用户名与密码是否正确",slug:"_57-测试用户名与密码是否正确",normalizedTitle:"57）测试用户名与密码是否正确",charIndex:29333},{level:4,title:"58）循环测试用户名与密码是否正确",slug:"_58-循环测试用户名与密码是否正确",normalizedTitle:"58）循环测试用户名与密码是否正确",charIndex:29627},{level:4,title:"59）Shell 脚本的 fork 炸弹",slug:"_59-shell-脚本的-fork-炸弹",normalizedTitle:"59）shell 脚本的 fork 炸弹",charIndex:30008},{level:4,title:"60）批量下载有序文件(pdf、图片、视频等等)",slug:"_60-批量下载有序文件-pdf、图片、视频等等",normalizedTitle:"60）批量下载有序文件(pdf、图片、视频等等)",charIndex:30170},{level:4,title:"61）显示当前计算机中所有账户的用户名称",slug:"_61-显示当前计算机中所有账户的用户名称",normalizedTitle:"61）显示当前计算机中所有账户的用户名称",charIndex:30560},{level:4,title:"62）制定目录路径,脚本自动将该目录使用 tar 命令打包备份到/data目录",slug:"_62-制定目录路径-脚本自动将该目录使用-tar-命令打包备份到-data目录",normalizedTitle:"62）制定目录路径,脚本自动将该目录使用 tar 命令打包备份到/data目录",charIndex:30913},{level:4,title:"63）显示进度条(回旋镖版)",slug:"_63-显示进度条-回旋镖版",normalizedTitle:"63）显示进度条(回旋镖版)",charIndex:31204},{level:4,title:"64）安装 LAMP 环境(yum 版本)",slug:"_64-安装-lamp-环境-yum-版本",normalizedTitle:"64）安装 lamp 环境(yum 版本)",charIndex:31549},{level:4,title:"65）循环关闭局域网中所有主机",slug:"_65-循环关闭局域网中所有主机",normalizedTitle:"65）循环关闭局域网中所有主机",charIndex:31953},{level:4,title:"66）获取本机 MAC 地址",slug:"_66-获取本机-mac-地址",normalizedTitle:"66）获取本机 mac 地址",charIndex:32240},{level:4,title:"67）自动配置 rsynd 服务器的配置文件 rsyncd.conf",slug:"_67-自动配置-rsynd-服务器的配置文件-rsyncd-conf",normalizedTitle:"67）自动配置 rsynd 服务器的配置文件 rsyncd.conf",charIndex:32601},{level:4,title:"68）修改 Linux 系统的最大打开文件数量",slug:"_68-修改-linux-系统的最大打开文件数量",normalizedTitle:"68）修改 linux 系统的最大打开文件数量",charIndex:33178},{level:4,title:"69）设置 Python 支持自动命令补齐功能",slug:"_69-设置-python-支持自动命令补齐功能",normalizedTitle:"69）设置 python 支持自动命令补齐功能",charIndex:33429},{level:4,title:"70）自动修改计划任务配置文件",slug:"_70-自动修改计划任务配置文件",normalizedTitle:"70）自动修改计划任务配置文件",charIndex:34121},{level:4,title:"71）使用脚本循环创建三位数字的文本文件(111-999 的文件)",slug:"_71-使用脚本循环创建三位数字的文本文件-111-999-的文件",normalizedTitle:"71）使用脚本循环创建三位数字的文本文件(111-999 的文件)",charIndex:34517},{level:4,title:"72）找出/etc/passwd 中能登录的用户,并将对应在/etc/shadow 中第二列密码提出处理",slug:"_72-找出-etc-passwd-中能登录的用户-并将对应在-etc-shadow-中第二列密码提出处理",normalizedTitle:"72）找出/etc/passwd 中能登录的用户,并将对应在/etc/shadow 中第二列密码提出处理",charIndex:34787},{level:4,title:"73）统计/etc/passwd 中 root 出现的次数",slug:"_73-统计-etc-passwd-中-root-出现的次数",normalizedTitle:"73）统计/etc/passwd 中 root 出现的次数",charIndex:35071},{level:4,title:"74）统计 Linux 进程相关数量信息",slug:"_74-统计-linux-进程相关数量信息",normalizedTitle:"74）统计 linux 进程相关数量信息",charIndex:35322},{level:4,title:"75）从键盘读取一个论坛积分,判断论坛用户等级",slug:"_75-从键盘读取一个论坛积分-判断论坛用户等级",normalizedTitle:"75）从键盘读取一个论坛积分,判断论坛用户等级",charIndex:36124},{level:4,title:"76）判断用户输入的数据类型(字母、数字或其他)",slug:"_76-判断用户输入的数据类型-字母、数字或其他",normalizedTitle:"76）判断用户输入的数据类型(字母、数字或其他)",charIndex:36686},{level:4,title:"77）显示进度条(数字版)",slug:"_77-显示进度条-数字版",normalizedTitle:"77）显示进度条(数字版)",charIndex:36958},{level:4,title:"78）打印斐波那契数列",slug:"_78-打印斐波那契数列",normalizedTitle:"78）打印斐波那契数列",charIndex:37244},{level:4,title:"79）判断用户输入的是 Yes 或 NO",slug:"_79-判断用户输入的是-yes-或-no",normalizedTitle:"79）判断用户输入的是 yes 或 no",charIndex:37529},{level:4,title:"80）显示本机 Linux 系统上所有开放的端口列表",slug:"_80-显示本机-linux-系统上所有开放的端口列表",normalizedTitle:"80）显示本机 linux 系统上所有开放的端口列表",charIndex:37839},{level:4,title:"81）将 Linux 系统中 UID 大于等于 1000 的普通用户都删除",slug:"_81-将-linux-系统中-uid-大于等于-1000-的普通用户都删除",normalizedTitle:"81）将 linux 系统中 uid 大于等于 1000 的普通用户都删除",charIndex:38082},{level:4,title:"82）使用脚本开启关闭虚拟机",slug:"_82-使用脚本开启关闭虚拟机",normalizedTitle:"82）使用脚本开启关闭虚拟机",charIndex:38376},{level:4,title:"83）调整虚拟机内存参数的 shell 脚本",slug:"_83-调整虚拟机内存参数的-shell-脚本",normalizedTitle:"83）调整虚拟机内存参数的 shell 脚本",charIndex:39154},{level:4,title:"84）查看 KVM 虚拟机中的网卡信息(不需要进入启动或进入虚拟机)",slug:"_84-查看-kvm-虚拟机中的网卡信息-不需要进入启动或进入虚拟机",normalizedTitle:"84）查看 kvm 虚拟机中的网卡信息(不需要进入启动或进入虚拟机)",charIndex:39765},{level:4,title:"85）不登陆虚拟机,修改虚拟机网卡 IP 地址",slug:"_85-不登陆虚拟机-修改虚拟机网卡-ip-地址",normalizedTitle:"85）不登陆虚拟机,修改虚拟机网卡 ip 地址",charIndex:41114},{level:4,title:"86）破解虚拟机密码,无密码登陆虚拟机系统",slug:"_86-破解虚拟机密码-无密码登陆虚拟机系统",normalizedTitle:"86）破解虚拟机密码,无密码登陆虚拟机系统",charIndex:42325},{level:4,title:"87）Shell 脚本对信号的处理,执行脚本后,按键盘 Ctrl+C 无法终止的脚本",slug:"_87-shell-脚本对信号的处理-执行脚本后-按键盘-ctrl-c-无法终止的脚本",normalizedTitle:"87）shell 脚本对信号的处理,执行脚本后,按键盘 ctrl+c 无法终止的脚本",charIndex:42936},{level:4,title:"88）一键部署 memcached",slug:"_88-一键部署-memcached",normalizedTitle:"88）一键部署 memcached",charIndex:43375},{level:4,title:"89）一键配置 VNC 远程桌面服务器(无密码版本)",slug:"_89-一键配置-vnc-远程桌面服务器-无密码版本",normalizedTitle:"89）一键配置 vnc 远程桌面服务器(无密码版本)",charIndex:43704},{level:4,title:"90）关闭 SELinux",slug:"_90-关闭-selinux",normalizedTitle:"90）关闭 selinux",charIndex:44079},{level:4,title:"91）查看所有虚拟机磁盘使用量以及CPU使用量信息",slug:"_91-查看所有虚拟机磁盘使用量以及cpu使用量信息",normalizedTitle:"91）查看所有虚拟机磁盘使用量以及cpu使用量信息",charIndex:44222},{level:4,title:"92）使用 shell 脚本打印图形",slug:"_92-使用-shell-脚本打印图形",normalizedTitle:"92）使用 shell 脚本打印图形",charIndex:44362},{level:4,title:"93）根据计算机当前时间,返回问候语,可以将该脚本设置为开机启动",slug:"_93-根据计算机当前时间-返回问候语-可以将该脚本设置为开机启动",normalizedTitle:"93）根据计算机当前时间,返回问候语,可以将该脚本设置为开机启动",charIndex:45244},{level:4,title:"94）读取用户输入的账户名称,将账户名写入到数组保存",slug:"_94-读取用户输入的账户名称-将账户名写入到数组保存",normalizedTitle:"94）读取用户输入的账户名称,将账户名写入到数组保存",charIndex:45716},{level:4,title:"95）判断文件或目录是否存在",slug:"_95-判断文件或目录是否存在",normalizedTitle:"95）判断文件或目录是否存在",charIndex:46141},{level:4,title:"96）打印各种格式的时间",slug:"_96-打印各种格式的时间",normalizedTitle:"96）打印各种格式的时间",charIndex:46494},{level:4,title:"97）使用 egrep 过滤 MAC 地址",slug:"_97-使用-egrep-过滤-mac-地址",normalizedTitle:"97）使用 egrep 过滤 mac 地址",charIndex:47052},{level:4,title:"98）统计双色球各个数字的中奖概率",slug:"_98-统计双色球各个数字的中奖概率",normalizedTitle:"98）统计双色球各个数字的中奖概率",charIndex:47276},{level:4,title:"99）生成签名私钥和证书",slug:"_99-生成签名私钥和证书",normalizedTitle:"99）生成签名私钥和证书",charIndex:47719},{level:4,title:"100）使用awk编写的wc程序",slug:"_100-使用awk编写的wc程序",normalizedTitle:"100）使用awk编写的wc程序",charIndex:48130}],headersStr:"1）编写hello world脚本 2）通过位置变量创建 Linux 系统账户及密码 3）备份日志 4）一键部署 LNMP(RPM 包版本) 5）监控内存和磁盘容量，小于给定值时报警 6）猜数字游戏 7）检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不是,则提示您非管理员(使用字串对比版本) 8）检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不是,则提示您非管理员(使用 UID 数字对比版本) 9）编写脚本:提示用户输入用户名和密码,脚本自动创建相应的账户及配置密码。如果用户不输入账户名,则提示必须输入账户名并退出脚本;如果用户不输入密码,则统一使用默认的 123456 作为默认密码。 10）输入三个数并进行升序排序 11）石头、剪刀、布游戏 12）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(for 版本) 13）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(while 版本) 14）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(多进程版) 15）编写脚本,显示进度条 16）进度条,动态时针版本；定义一个显示进度的函数,屏幕快速显示|  / ‐ \\ 17）9*9 乘法表 18）使用死循环实时显示 eth0 网卡发送的数据包流量 19）使用 user.txt 文件中的人员名单,在计算机中自动创建对应的账户并配置初始密码本脚本执行,需要提前准备一个 user.txt 文件,该文件中包含有若干用户名信息 20）编写批量修改扩展名脚本 21）使用 expect 工具自动交互密码远程其他主机安装 httpd 软件 22）一键部署 LNMP(源码安装版本) 23）编写脚本快速克隆 KVM 虚拟机 24）点名器脚本 25）查看有多少远程的 IP 在连接本机 26）对 100 以内的所有正整数相加求和(1+2+3+4…+100) 27）统计 13:30 到 14:30 所有访问 apache 服务器的请求有多少个 28）统计 13:30 到 14:30 所有访问本机 Aapche 服务器的远程 IP 地址是什么 29）打印国际象棋棋盘 30）统计每个远程 IP 访问了本机 apache 几次? 31）统计当前 Linux 系统中可以登录计算机的账户有多少个 32）统计/var/log 有多少个文件,并显示这些文件名 33）自动为其他脚本添加解释器信息 34）自动化部署 varnish 源码包软件 35）编写 nginx 启动脚本 36）自动对磁盘分区、格式化、挂载 37）自动优化 Linux 内核参数 38）切割 Nginx 日志文件(防止单个文件过大,后期处理很困难) 39）检测 MySQL 数据库连接数量 40）根据 md5 校验码,检测文件是否被修改 41）检测 MySQL 服务是否存活 42）备份 MySQL 的 shell 脚本(mysqldump版本) 43）将文件中所有的小写字母转换为大写字母 44）非交互自动生成 SSH 密钥文件 45）检查特定的软件包是否已经安装 46）监控 HTTP 服务器的状态(测试返回码) 47）自动添加防火墙规则,开启某些服务或端口(适用于 RHEL7) 48）使用脚本自动创建逻辑卷 49）显示 CPU 厂商信息 50）删除某个目录下大小为 0 的文件 51）查找 Linux 系统中的僵尸进程 52）提示用户输入年份后判断该年是否为闰年 53）生成随机密码(urandom 版本) 54）生成随机密码(字串截取版本) 55）生成随机密码(UUID 版本,16 进制密码) 56）生成随机密码(进程 ID 版本,数字密码) 57）测试用户名与密码是否正确 58）循环测试用户名与密码是否正确 59）Shell 脚本的 fork 炸弹 60）批量下载有序文件(pdf、图片、视频等等) 61）显示当前计算机中所有账户的用户名称 62）制定目录路径,脚本自动将该目录使用 tar 命令打包备份到/data目录 63）显示进度条(回旋镖版) 64）安装 LAMP 环境(yum 版本) 65）循环关闭局域网中所有主机 66）获取本机 MAC 地址 67）自动配置 rsynd 服务器的配置文件 rsyncd.conf 68）修改 Linux 系统的最大打开文件数量 69）设置 Python 支持自动命令补齐功能 70）自动修改计划任务配置文件 71）使用脚本循环创建三位数字的文本文件(111-999 的文件) 72）找出/etc/passwd 中能登录的用户,并将对应在/etc/shadow 中第二列密码提出处理 73）统计/etc/passwd 中 root 出现的次数 74）统计 Linux 进程相关数量信息 75）从键盘读取一个论坛积分,判断论坛用户等级 76）判断用户输入的数据类型(字母、数字或其他) 77）显示进度条(数字版) 78）打印斐波那契数列 79）判断用户输入的是 Yes 或 NO 80）显示本机 Linux 系统上所有开放的端口列表 81）将 Linux 系统中 UID 大于等于 1000 的普通用户都删除 82）使用脚本开启关闭虚拟机 83）调整虚拟机内存参数的 shell 脚本 84）查看 KVM 虚拟机中的网卡信息(不需要进入启动或进入虚拟机) 85）不登陆虚拟机,修改虚拟机网卡 IP 地址 86）破解虚拟机密码,无密码登陆虚拟机系统 87）Shell 脚本对信号的处理,执行脚本后,按键盘 Ctrl+C 无法终止的脚本 88）一键部署 memcached 89）一键配置 VNC 远程桌面服务器(无密码版本) 90）关闭 SELinux 91）查看所有虚拟机磁盘使用量以及CPU使用量信息 92）使用 shell 脚本打印图形 93）根据计算机当前时间,返回问候语,可以将该脚本设置为开机启动 94）读取用户输入的账户名称,将账户名写入到数组保存 95）判断文件或目录是否存在 96）打印各种格式的时间 97）使用 egrep 过滤 MAC 地址 98）统计双色球各个数字的中奖概率 99）生成签名私钥和证书 100）使用awk编写的wc程序",content:'# 1）编写hello world脚本\n\n#!/bin/bash  \n  \n# 编写hello world脚本  \n  \necho "Hello World!"  \n\n\n1\n2\n3\n4\n5\n\n\n# 2）通过位置变量创建 Linux 系统账户及密码\n\n#!/bin/bash  \n  \n# 通过位置变量创建 Linux 系统账户及密码  \n  \n#$1 是执行脚本的第一个参数,$2 是执行脚本的第二个参数  \nuseradd    "$1"   \necho "$2"  |  passwd  ‐‐stdin  "$1"  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 3）备份日志\n\n#!/bin/bash  \n# 每周 5 使用 tar 命令备份/var/log 下的所有日志文件  \n# vim  /root/logbak.sh  \n# 编写备份脚本,备份后的文件名包含日期标签,防止后面的备份将前面的备份数据覆盖  \n# 注意 date 命令需要使用反引号括起来,反引号在键盘<tab>键上面  \ntar  -czf  log-`date +%Y%m%d`.tar.gz  /var/log   \n  \n# crontab ‐e  #编写计划任务,执行备份脚本  \n00  03  *  *  5  /root/logbak.sh  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 4）一键部署 LNMP(RPM 包版本)\n\n#!/bin/bash  \n# 一键部署 LNMP(RPM 包版本)  \n# 使用 yum 安装部署 LNMP,需要提前配置好 yum 源,否则该脚本会失败  \n# 本脚本使用于 centos7.2 或 RHEL7.2  \nyum ‐y install httpd  \nyum ‐y install mariadb mariadb‐devel mariadb‐server  \nyum ‐y install php  php‐mysql  \n  \nsystemctl start httpd mariadb  \nsystemctl enable httpd mariadb  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 5）监控内存和磁盘容量，小于给定值时报警\n\n#!/bin/bash  \n  \n# 实时监控本机内存和硬盘剩余空间,剩余内存小于500M、根分区剩余空间小于1000M时,发送报警邮件给root管理员  \n  \n# 提取根分区剩余空间  \ndisk_size=$(df / | awk \'/\\//{print $4}\')  \n  \n# 提取内存剩余空间  \nmem_size=$(free | awk \'/Mem/{print $4}\')  \nwhile :  \ndo  \n# 注意内存和磁盘提取的空间大小都是以 Kb 为单位  \nif  [  $disk_size -le 512000 -a $mem_size -le 1024000  ]  \nthen  \n    mail  ‐s  "Warning"  root  <<EOF  \n  Insufficient resources,资源不足  \nEOF  \nfi  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 6）猜数字游戏\n\n#!/bin/bash  \n  \n# 脚本生成一个 100 以内的随机数,提示用户猜数字,根据用户的输入,提示用户猜对了,  \n# 猜小了或猜大了,直至用户猜对脚本结束。  \n  \n# RANDOM 为系统自带的系统变量,值为 0‐32767的随机数  \n# 使用取余算法将随机数变为 1‐100 的随机数  \nnum=$[RANDOM%100+1]  \necho "$num"  \n  \n# 使用 read 提示用户猜数字  \n# 使用 if 判断用户猜数字的大小关系:‐eq(等于),‐ne(不等于),‐gt(大于),‐ge(大于等于),  \n# ‐lt(小于),‐le(小于等于)  \nwhile  :  \ndo  \n  read -p "计算机生成了一个 1‐100 的随机数,你猜: " cai  \n    if [ $cai -eq $num ]  \n    then  \n         echo "恭喜,猜对了"  \n         exit  \n      elif [ $cai -gt $num ]  \n      then  \n             echo "Oops,猜大了"  \n        else  \n             echo "Oops,猜小了"  \n   fi  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n# 7）检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不是,则提示您非管理员(使用字串对比版本)\n\n#!/bin/bash  \n  \n# 检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不  \n# 是,则提示您非管理员(使用字串对比版本)   \nif [ $USER == "root" ]  \nthen  \n  yum ‐y install vsftpd  \nelse  \n    echo "您不是管理员,没有权限安装软件"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 8）检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不是,则提示您非管理员(使用 UID 数字对比版本)\n\n#!/bin/bash  \n  \n# 检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不  \n# 是,则提示您非管理员(使用 UID 数字对比版本)  \nif [ $UID -eq 0 ];then  \n    yum ‐y install vsftpd  \nelse  \n    echo "您不是管理员,没有权限安装软件"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 9）编写脚本:提示用户输入用户名和密码,脚本自动创建相应的账户及配置密码。如果用户不输入账户名,则提示必须输入账户名并退出脚本;如果用户不输入密码,则统一使用默认的 123456 作为默认密码。\n\n#!/bin/bash  \n  \n# 编写脚本:提示用户输入用户名和密码,脚本自动创建相应的账户及配置密码。如果用户  \n# 不输入账户名,则提示必须输入账户名并退出脚本;如果用户不输入密码,则统一使用默  \n# 认的 123456 作为默认密码。  \nread -p "请输入用户名: " user  \n#使用‐z 可以判断一个变量是否为空,如果为空,提示用户必须输入账户名,并退出脚本,退出码为 2  \n#没有输入用户名脚本退出后,使用$?查看的返回码为 2  \nif [ -z $user ];then  \n     echo "您不需输入账户名"  \n   exit 2  \nfi  \n#使用 stty ‐echo 关闭 shell 的回显功能  \n#使用 stty  echo 打开 shell 的回显功能  \nstty -echo  \nread -p "请输入密码: " pass  \nstty echo  \npass=${pass:‐123456}  \nuseradd "$user"  \necho "$pass" | passwd ‐‐stdin "$user"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# 10）输入三个数并进行升序排序\n\n#!/bin/bash  \n  \n# 依次提示用户输入 3 个整数,脚本根据数字大小依次排序输出 3 个数字  \nread -p "请输入一个整数:" num1  \nread -p "请输入一个整数:" num2  \nread -p "请输入一个整数:" num3  \n# 不管谁大谁小,最后都打印 echo "$num1,$num2,$num3"  \n# num1 中永远存最小的值,num2 中永远存中间值,num3 永远存最大值  \n# 如果输入的不是这样的顺序,则改变数的存储顺序,如:可以将 num1 和 num2 的值对调  \ntmp=0  \n# 如果 num1 大于 num2,就把 num1 和和 num2 的值对调,确保 num1 变量中存的是最小值  \nif [ $num1 -gt $num2 ];then     \n  tmp=$num1  \n  num1=$num2  \n  num2=$tmp  \nfi  \n# 如果 num1 大于 num3,就把 num1 和 num3 对调,确保 num1 变量中存的是最小值  \nif [ $num1 -gt $num3 ];then     \n    tmp=$num1  \n    num1=$num3  \n    num3=$tmp  \nfi  \n# 如果 num2 大于 num3,就把 num2 和 num3 对标,确保 num2 变量中存的是小一点的值  \nif [ $num2 -gt $num3 ];then  \n    tmp=$num2  \n    num2=$num3  \n    num3=$tmp  \nfi  \necho "排序后数据(从小到大)为:$num1,$num2,$num3"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n# 11）石头、剪刀、布游戏\n\n#!/bin/bash  \n  \n# 编写脚本,实现人机<石头,剪刀,布>游戏  \ngame=(石头 剪刀 布)  \nnum=$[RANDOM%3]  \ncomputer=${game[$num]}  \n# 通过随机数获取计算机的出拳  \n# 出拳的可能性保存在一个数组中,game[0],game[1],game[2]分别是 3 中不同的可能  \n  \necho "请根据下列提示选择您的出拳手势"  \necho "1.石头"  \necho "2.剪刀"  \necho "3.布"  \n  \nread -p "请选择 1‐3:" person  \ncase  $person  in  \n1)  \n  if [ $num -eq 0 ]  \n  then  \n    echo "平局"  \n    elif [ $num -eq 1 ]  \n    then  \n      echo "你赢"  \n  else  \n    echo "计算机赢"  \n  fi;;  \n2)     \n  if [ $num -eq 0 ]  \n  then  \n    echo "计算机赢"  \n    elif [ $num -eq 1 ]  \n    then  \n      echo "平局"  \n  else  \n    echo "你赢"  \n  fi;;  \n3)  \n  if [ $num -eq 0 ]  \n  then  \n    echo "你赢"  \n    elif [ $num -eq 1 ]  \n    then  \n      echo "计算机赢"  \n  else  \n    echo "平局"  \n  fi;;  \n*)  \n  echo "必须输入 1‐3 的数字"  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n\n\n# 12）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(for 版本)\n\n#!/bin/bash  \n  \n# 编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机  \n# 状态(for 版本)  \nfor i in {1..254}  \ndo  \n  # 每隔0.3秒ping一次，一共ping2次，并以1毫秒为单位设置ping的超时时间  \n     ping ‐c 2 ‐i 0.3 ‐W 1 192.168.4.$i  &>/dev/null  \n    if  [ $? -eq 0 ];then  \n         echo "192.168.4.$i is up"  \n     else  \n         echo  "192.168.4.$i is down"  \n     fi  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 13）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(while 版本)\n\n#!/bin/bash  \n  \n# 编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机  \n# 状态(while 版本)   \ni=1  \nwhile [ $i -le 254 ]  \ndo  \n     ping ‐c 2 ‐i 0.3 ‐W 1 192.168.4.$i  &>/dev/null  \n     if  [ $? -eq 0 ];then  \n         echo "192.168.4.$i is up"  \n    else  \n         echo  "192.168.4.$i is down"  \n     fi  \n     let i++  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 14）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(多进程版)\n\n#!/bin/bash  \n  \n# 编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机  \n# 状态(多进程版)  \n#定义一个函数,ping 某一台主机,并检测主机的存活状态  \nmyping(){  \nping ‐c 2 ‐i 0.3 ‐W 1 $1  &>/dev/null  \nif  [ $? -eq 0 ];then  \n  echo "$1 is up"  \nelse  \n  echo "$1 is down"  \nfi  \n}  \nfor i in {1..254}  \ndo  \n     myping 192.168.4.$i &  \ndone  \n# 使用&符号,将执行的函数放入后台执行  \n# 这样做的好处是不需要等待ping第一台主机的回应,就可以继续并发ping第二台主机,依次类推。  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 15）编写脚本,显示进度条\n\n#!/bin/bash  \n  \n# 编写脚本,显示进度条  \njindu(){  \nwhile :  \ndo  \n     echo -n \'#\'  \n     sleep 0.2  \ndone  \n}  \njindu &  \ncp -a $1 $2  \nkillall $0  \necho "拷贝完成"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 16）进度条,动态时针版本；定义一个显示进度的函数,屏幕快速显示| / ‐ \\\n\n#!/bin/bash  \n  \n# 进度条,动态时针版本  \n# 定义一个显示进度的函数,屏幕快速显示|  / ‐ \\  \nrotate_line(){  \nINTERVAL=0.5  #设置间隔时间  \nCOUNT="0"     #设置4个形状的编号,默认编号为 0(不代表任何图像)  \nwhile :  \ndo  \n  COUNT=`expr $COUNT + 1` #执行循环,COUNT 每次循环加 1,(分别代表4种不同的形状)  \n  case $COUNT in          #判断 COUNT 的值,值不一样显示的形状就不一样  \n  "1")                    #值为 1 显示‐  \n          echo -e \'‐\'"\\b\\c"  \n          sleep $INTERVAL  \n          ;;  \n    "2")                  #值为 2 显示\\\\,第一个\\是转义  \n          echo -e \'\\\\\'"\\b\\c"  \n          sleep $INTERVAL  \n          ;;  \n    "3")                  #值为 3 显示|  \n          echo -e "|\\b\\c"  \n          sleep $INTERVAL  \n          ;;  \n   "4")                   #值为 4 显示/  \n          echo -e "/\\b\\c"  \n          sleep $INTERVAL  \n          ;;  \n    *)                    #值为其他时,将 COUNT 重置为 0  \n          COUNT="0";;  \n    esac  \ndone  \n}  \nrotate_line  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n# 17）9*9 乘法表\n\n#!/bin/bash  \n  \n# 9*9 乘法表(编写 shell 脚本,打印 9*9 乘法表)   \nfor i in `seq 9`  \ndo  \n    for j in `seq $i`  \n     do  \n         echo -n "$j*$i=$[i*j]  "  \n     done  \n    echo  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 18）使用死循环实时显示 eth0 网卡发送的数据包流量\n\n#!/bin/bash  \n  \n# 使用死循环实时显示 eth0 网卡发送的数据包流量   \nwhile :  \ndo  \n   echo  \'本地网卡 eth0 流量信息如下: \'  \n    ifconfig eth0 | grep "RX pack" | awk \'{print $5}\'  \n    ifconfig eth0 | grep "TX pack" | awk \'{print $5}\'  \n     sleep 1  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 19）使用 user.txt 文件中的人员名单,在计算机中自动创建对应的账户并配置初始密码本脚本执行,需要提前准备一个 user.txt 文件,该文件中包含有若干用户名信息\n\n#!/bin/bash  \n  \n# 使用 user.txt 文件中的人员名单,在计算机中自动创建对应的账户并配置初始密码  \n# 本脚本执行,需要提前准备一个 user.txt 文件,该文件中包含有若干用户名信息  \nfor i in `cat user.txt`  \ndo  \n     useradd  $i  \n     echo "123456" | passwd ‐‐stdin $i  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 20）编写批量修改扩展名脚本\n\n#!/bin/bash  \n  \n# 编写批量修改扩展名脚本,如批量将 txt 文件修改为 doc 文件   \n# 执行脚本时,需要给脚本添加位置参数  \n# 脚本名  txt  doc(可以将 txt 的扩展名修改为 doc)  \n# 脚本名  doc  jpg(可以将 doc 的扩展名修改为 jpg)  \nfor i in `ls *.$1`  \ndo  \n     mv $i ${i%.*}.$2  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 21）使用 expect 工具自动交互密码远程其他主机安装 httpd 软件\n\n#!/bin/bash  \n  \n# 使用 expect 工具自动交互密码远程其他主机安装 httpd 软件   \n  \n# 删除~/.ssh/known_hosts 后,ssh 远程任何主机都会询问是否确认要连接该主机  \nrm  ‐rf  ~/.ssh/known_hosts  \nexpect <<EOF  \nspawn ssh 192.168.4.254  \nexpect "yes/no" {send "yes\\r"}  \n# 根据自己的实际情况将密码修改为真实的密码字串  \nexpect "password" {send  "密码\\r"}  \nexpect "#" {send  "yum ‐y install httpd\\r"}  \nexpect "#" {send  "exit\\r"}  \nEOF  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 22）一键部署 LNMP(源码安装版本)\n\n#!/bin/bash  \n  \n# 一键部署 LNMP(源码安装版本)  \nmenu()  \n{  \nclear  \necho "  ##############‐‐‐‐Menu‐‐‐‐##############"  \necho "# 1. Install Nginx"  \necho "# 2. Install MySQL"  \necho "# 3. Install PHP"  \necho "# 4. Exit Program"  \necho "  ########################################"  \n}  \n  \nchoice()  \n{  \n  read -p "Please choice a menu[1‐9]:" select  \n}  \n  \ninstall_nginx()  \n{  \n  id nginx &>/dev/null  \n  if [ $? -ne 0 ];then  \n    useradd -s /sbin/nologin nginx  \n  fi  \n  if [ -f nginx‐1.8.0.tar.gz ];then  \n    tar -xf nginx‐1.8.0.tar.gz  \n    cd nginx‐1.8.0  \n    yum -y install  gcc pcre‐devel openssl‐devel zlib‐devel make  \n    ./configure ‐‐prefix=/usr/local/nginx ‐‐with‐http_ssl_module  \n    make  \n    make install  \n    ln -s /usr/local/nginx/sbin/nginx /usr/sbin/  \n    cd ..  \n  else  \n    echo "没有 Nginx 源码包"  \n  fi  \n}  \n  \ninstall_mysql()  \n{  \n  yum -y install gcc gcc‐c++ cmake ncurses‐devel perl  \n  id mysql &>/dev/null  \n  if [ $? -ne 0 ];then  \n    useradd -s /sbin/nologin mysql  \n  fi  \n  if [ -f mysql‐5.6.25.tar.gz ];then  \n    tar -xf mysql‐5.6.25.tar.gz  \n    cd mysql‐5.6.25  \n    cmake .  \n    make  \n    make install  \n    /usr/local/mysql/scripts/mysql_install_db ‐‐user=mysql ‐‐datadir=/usr/local/mysql/data/  \n‐‐basedir=/usr/local/mysql/  \n    chown -R root.mysql /usr/local/mysql  \n    chown -R mysql /usr/local/mysql/data  \n    /bin/cp -f /usr/local/mysql/support‐files/mysql.server /etc/init.d/mysqld  \n    chmod +x /etc/init.d/mysqld  \n    /bin/cp -f /usr/local/mysql/support‐files/my‐default.cnf /etc/my.cnf  \n    echo "/usr/local/mysql/lib/" >> /etc/ld.so.conf  \n    ldconfig  \n    echo \'PATH=\\$PATH:/usr/local/mysql/bin/\' >> /etc/profile  \n    export PATH  \n  else  \n    echo  "没有 mysql 源码包"  \n    exit  \n  fi  \n}  \n  \ninstall_php()  \n{  \n#安装 php 时没有指定启动哪些模块功能,如果的用户可以根据实际情况自行添加额外功能如‐‐with‐gd 等  \nyum  -y  install  gcc  libxml2‐devel  \nif [ -f mhash‐0.9.9.9.tar.gz ];then  \n  tar -xf mhash‐0.9.9.9.tar.gz  \n  cd mhash‐0.9.9.9  \n  ./configure  \n  make  \n  make install  \n  cd ..  \nif [ ! ‐f /usr/lib/libmhash.so ];then  \n  ln -s /usr/local/lib/libmhash.so /usr/lib/  \nfi  \nldconfig  \nelse  \n  echo "没有 mhash 源码包文件"  \n  exit  \nfi  \nif [ -f libmcrypt‐2.5.8.tar.gz ];then  \n  tar -xf libmcrypt‐2.5.8.tar.gz  \n  cd libmcrypt‐2.5.8  \n  ./configure  \n  make  \n  make install  \n  cd ..  \n  if [ ! -f /usr/lib/libmcrypt.so ];then    \n    ln -s /usr/local/lib/libmcrypt.so /usr/lib/  \n  fi  \n  ldconfig  \nelse  \n  echo "没有 libmcrypt 源码包文件"  \n  exit  \nfi  \nif [ -f php‐5.4.24.tar.gz ];then  \n  tar -xf php‐5.4.24.tar.gz  \n  cd php‐5.4.24  \n  ./configure  ‐‐prefix=/usr/local/php5  ‐‐with‐mysql=/usr/local/mysql  ‐‐enable‐fpm    ‐‐  \n  enable‐mbstring  ‐‐with‐mcrypt  ‐‐with‐mhash  ‐‐with‐config‐file‐path=/usr/local/php5/etc  ‐‐with‐  \n  mysqli=/usr/local/mysql/bin/mysql_config  \n  make && make install  \n  /bin/cp -f php.ini‐production /usr/local/php5/etc/php.ini  \n  /bin/cp -f /usr/local/php5/etc/php‐fpm.conf.default /usr/local/php5/etc/php‐fpm.conf  \n  cd ..  \nelse  \n  echo "没有 php 源码包文件"  \n  exit  \nfi   \n}  \n  \nwhile :  \ndo  \n  menu  \n  choice  \n  case $select in  \n  1)  \n    install_nginx  \n    ;;  \n  2)  \n    install_mysql  \n    ;;  \n  3)  \n    install_php  \n    ;;  \n  4)  \n    exit  \n    ;;  \n  *)  \n    echo Sorry!  \n  esac  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n\n\n# 23）编写脚本快速克隆 KVM 虚拟机\n\n#!/bin/bash  \n  \n# 编写脚本快速克隆 KVM 虚拟机  \n  \n# 本脚本针对 RHEL7.2 或 Centos7.2  \n# 本脚本需要提前准备一个 qcow2 格式的虚拟机模板,  \n# 名称为/var/lib/libvirt/images  /.rh7_template 的虚拟机模板  \n# 该脚本使用 qemu‐img 命令快速创建快照虚拟机  \n# 脚本使用 sed 修改模板虚拟机的配置文件,将虚拟机名称、UUID、磁盘文件名、MAC 地址  \n# exit code:    \n#    65 ‐> user input nothing  \n#    66 ‐> user input is not a number  \n#    67 ‐> user input out of range  \n#    68 ‐> vm disk image exists  \n  \nIMG_DIR=/var/lib/libvirt/images  \nBASEVM=rh7_template  \nread -p "Enter VM number: " VMNUM  \nif [ $VMNUM -le 9 ];then  \nVMNUM=0$VMNUM  \nfi  \n  \nif [ -z "${VMNUM}" ]; then  \n    echo "You must input a number."  \n    exit 65  \nelif [[  ${VMNUM} =~ [a‐z]  ]; then  \n    echo "You must input a number."  \n    exit 66  \nelif [ ${VMNUM} -lt 1 -o ${VMNUM} -gt 99 ]; then  \n    echo "Input out of range"  \n    exit 67  \nfi  \n  \nNEWVM=rh7_node${VMNUM}  \n  \nif [ -e $IMG_DIR/${NEWVM}.img ]; then  \n    echo "File exists."  \n    exit 68  \nfi  \n  \necho -en "Creating Virtual Machine disk image......\\t"  \nqemu‐img create -f qcow2 ‐b $IMG_DIR/.${BASEVM}.img $IMG_DIR/${NEWVM}.img &> /dev/null  \n  \necho -e "\\e[32;1m[OK]\\e[0m"  \n#virsh dumpxml ${BASEVM} > /tmp/myvm.xml  \n  \ncat /var/lib/libvirt/images/.rhel7.xml > /tmp/myvm.xml  \nsed -i "/<name>${BASEVM}/s/${BASEVM}/${NEWVM}/" /tmp/myvm.xml  \nsed -i "/uuid/s/<uuid>.*<\\/uuid>/<uuid>$(uuidgen)<\\/uuid>/" /tmp/myvm.xml  \nsed -i "/${BASEVM}\\.img/s/${BASEVM}/${NEWVM}/" /tmp/myvm.xml  \n  \n# 修改 MAC 地址,本例使用的是常量,每位使用该脚本的用户需要根据实际情况修改这些值   \n# 最好这里可以使用便利,这样更适合于批量操作,可以克隆更多虚拟机   \nsed -i "/mac /s/a1/0c/" /tmp/myvm.xml  \n  \necho -en "Defining new virtual machine......\\t\\t"  \nvirsh define /tmp/myvm.xml &> /dev/null  \necho -e "\\e[32;1m[OK]\\e[0m"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n\n\n# 24）点名器脚本\n\n#!/bin/bash  \n  \n# 编写一个点名器脚本  \n  \n# 该脚本,需要提前准备一个 user.txt 文件  \n# 该文件中需要包含所有姓名的信息,一行一个姓名,脚本每次随机显示一个姓名  \nwhile :  \ndo  \n#统计 user 文件中有多少用户  \nline=`cat user.txt |wc ‐l`  \nnum=$[RANDOM%line+1]  \nsed -n "${num}p"  user.txt  \nsleep 0.2  \nclear  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 25）查看有多少远程的 IP 在连接本机\n\n#!/bin/bash  \n  \n# 查看有多少远程的 IP 在连接本机(不管是通过 ssh 还是 web 还是 ftp 都统计)   \n# 使用 netstat ‐atn 可以查看本机所有连接的状态,‐a 查看所有,  \n# -t仅显示 tcp 连接的信息,‐n 数字格式显示  \n# Local Address(第四列是本机的 IP 和端口信息)  \n# Foreign Address(第五列是远程主机的 IP 和端口信息)  \n# 使用 awk 命令仅显示第 5 列数据,再显示第 1 列 IP 地址的信息  \n# sort 可以按数字大小排序,最后使用 uniq 将多余重复的删除,并统计重复的次数  \nnetstat -atn  |  awk  \'{print $5}\'  | awk  \'{print $1}\' | sort -nr  |  uniq -c  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 26）对 100 以内的所有正整数相加求和(1+2+3+4…+100)\n\n#!/bin/bash  \n  \n# 对 100 以内的所有正整数相加求和(1+2+3+4...+100)  \n#seq 100 可以快速自动生成 100 个整数  \nsum=0  \nfor i in `seq 100`  \ndo  \n    sum=$[sum+i]  \ndone  \necho "总和是:$sum"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 27）统计 13:30 到 14:30 所有访问 apache 服务器的请求有多少个\n\n#!/bin/bash  \n  \n# 统计 13:30 到 14:30 所有访问 apache 服务器的请求有多少个  \n  \n# awk 使用‐F 选项指定文件内容的分隔符是/或者:  \n# 条件判断$7:$8 大于等于 13:30,并且要求,$7:$8 小于等于 14:30  \n# 最后使用 wc ‐l 统计这样的数据有多少行,即多少个  \nawk -F "[ /:]" \'$7":"$8>="13:30" && $7":"$8<="14:30"\' /var/log/httpd/access_log |wc -l  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 28）统计 13:30 到 14:30 所有访问本机 Aapche 服务器的远程 IP 地址是什么\n\n#!/bin/bash  \n  \n# 统计 13:30 到 14:30 所有访问本机 Aapche 服务器的远程 IP 地址是什么   \n# awk 使用‐F 选项指定文件内容的分隔符是/或者:  \n# 条件判断$7:$8 大于等于 13:30,并且要求,$7:$8 小于等于 14:30  \n# 日志文档内容里面,第 1 列是远程主机的 IP 地址,使用 awk 单独显示第 1 列即可  \nawk -F "[ /:]" \'$7":"$8>="13:30" && $7":"$8<="14:30"{print $1}\' /var/log/httpd/access_log  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 29）打印国际象棋棋盘\n\n#!/bin/bash  \n  \n# 打印国际象棋棋盘  \n# 设置两个变量,i 和 j,一个代表行,一个代表列,国际象棋为 8*8 棋盘  \n# i=1 是代表准备打印第一行棋盘,第 1 行棋盘有灰色和蓝色间隔输出,总共为 8 列  \n# i=1,j=1 代表第 1 行的第 1 列;i=2,j=3 代表第 2 行的第 3 列  \n# 棋盘的规律是 i+j 如果是偶数,就打印蓝色色块,如果是奇数就打印灰色色块  \n# 使用 echo ‐ne 打印色块,并且打印完成色块后不自动换行,在同一行继续输出其他色块  \nfor i in {1..8}  \ndo  \n    for j in {1..8}  \n    do  \n      sum=$[i+j]  \n    if [  $[sum%2] -eq 0 ];then  \n       echo -ne "\\033[46m  \\033[0m"  \n    else  \n      echo -ne "\\033[47m  \\033[0m"  \n    fi  \n    done  \n    echo  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n# 30）统计每个远程 IP 访问了本机 apache 几次?\n\n#!/bin/bash  \n  \n# 统计每个远程 IP 访问了本机 apache 几次?   \nawk  \'{ip[$1]++}END{for(i in ip){print ip[i],i}}\'  /var/log/httpd/access_log  \n\n\n1\n2\n3\n4\n\n\n# 31）统计当前 Linux 系统中可以登录计算机的账户有多少个\n\n#!/bin/bash  \n  \n# 统计当前 Linux 系统中可以登录计算机的账户有多少个  \n#方法 1:  \ngrep "bash$" /etc/passwd | wc -l  \n#方法 2:  \nawk -f: \'/bash$/{x++}end{print x}\'  /etc/passwd  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 32）统计/var/log 有多少个文件,并显示这些文件名\n\n#!/bin/bash  \n  \n# 统计/var/log 有多少个文件,并显示这些文件名   \n# 使用 ls 递归显示所有,再判断是否为文件,如果是文件则计数器加 1  \ncd  /var/log  \nsum=0  \nfor i in `ls -r *`  \ndo  \n   if [ -f $i ];then  \n       let sum++  \n         echo "文件名:$i"  \n     fi  \ndone  \necho "总文件数量为:$sum"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 33）自动为其他脚本添加解释器信息\n\nDocker+K8s+Jenkins 主流技术全解视频资料【干货免费分享】  \n  \n#!/bin/bash  \n  \n# 自动为其他脚本添加解释器信息#!/bin/bash,如脚本名为 test.sh 则效果如下:   \n# ./test.sh  abc.sh  自动为 abc.sh 添加解释器信息  \n# ./test.sh  user.sh  自动为 user.sh 添加解释器信息  \n# 先使用 grep 判断对象脚本是否已经有解释器信息,如果没有则使用 sed 添加解释器以及描述信息  \nif  !  grep  -q  "^#!"  $1; then  \nsed  \'1i #!/bin/bash\'  $1  \nsed  \'2i #Description: \'  \nfi  \n# 因为每个脚本的功能不同,作用不同,所以在给对象脚本添加完解释器信息,以及 Description 后还希望  \n# 继续编辑具体的脚本功能的描述信息,这里直接使用 vim 把对象脚本打开,并且光标跳转到该文件的第 2 行  \nvim +2 $1  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 34）自动化部署 varnish 源码包软件\n\n#!/bin/bash  \n  \n# 自动化部署 varnish 源码包软件   \n# 本脚本需要提前下载 varnish‐3.0.6.tar.gz 这样一个源码包软件,该脚本即可用自动源码安装部署软件  \n  \nyum -y install gcc readline‐devel pcre‐devel  \nuseradd -s /sbin/nologin varnish  \ntar -xf varnish‐3.0.6.tar.gz  \ncd varnish‐3.0.6  \n  \n# 使用 configure,make,make install 源码安装软件包  \n./configure ‐‐prefix=/usr/local/varnish  \nmake && make install  \n  \n# 在源码包目录下,将相应的配置文件拷贝到 Linux 系统文件系统中  \n# 默认安装完成后,不会自动拷贝或安装配置文件到 Linux 系统,所以需要手动 cp 复制配置文件  \n# 并使用 uuidgen 生成一个随机密钥的配置文件  \ncp redhat/varnish.initrc /etc/init.d/varnish  \ncp redhat/varnish.sysconfig /etc/sysconfig/varnish  \ncp redhat/varnish_reload_vcl /usr/bin/  \nln -s /usr/local/varnish/sbin/varnishd /usr/sbin/  \nln -s /usr/local/varnish/bin/* /usr/bin  \nmkdir /etc/varnish  \ncp /usr/local/varnish/etc/varnish/default.vcl /etc/varnish/  \nuuidgen > /etc/varnish/secret  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n# 35）编写 nginx 启动脚本\n\n#!/bin/bash  \n  \n# 编写 nginx 启动脚本   \n# 本脚本编写完成后,放置在/etc/init.d/目录下,就可以被 Linux 系统自动识别到该脚本  \n# 如果本脚本名为/etc/init.d/nginx,则 service nginx start 就可以启动该服务  \n# service nginx stop 就可以关闭服务  \n# service nginx restart 可以重启服务  \n# service nginx status 可以查看服务状态  \nprogram=/usr/local/nginx/sbin/nginx  \npid=/usr/local/nginx/logs/nginx.pid  \nstart(){  \nif [ -f $pid ];then  \n  echo  "nginx 服务已经处于开启状态"  \nelse  \n  $program  \nfi  \nstop(){  \nif [ -! -f $pid ];then  \n  echo "nginx 服务已经关闭"  \nelse  \n  $program -s stop  \n  echo "关闭服务 ok"  \nfi  \n}  \nstatus(){  \nif [ -f $pid ];then  \n  echo "服务正在运行..."  \nelse  \n  echo "服务已经关闭"  \nfi  \n}  \n  \ncase $1 in  \nstart)  \n  start;;  \nstop)  \n  stop;;  \nrestart)  \n  stop  \n  sleep 1  \n  start;;  \nstatus)  \n  status;;  \n*)  \n  echo  "你输入的语法格式错误"  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\n\n# 36）自动对磁盘分区、格式化、挂载\n\n #!/bin/bash  \n  \n# 自动对磁盘分区、格式化、挂载  \n# 对虚拟机的 vdb 磁盘进行分区格式化,使用<<将需要的分区指令导入给程序 fdisk  \n# n(新建分区),p(创建主分区),1(分区编号为 1),两个空白行(两个回车,相当于将整个磁盘分一个区)  \n# 注意:1 后面的两个回车(空白行)是必须的!  \nfdisk /dev/vdb << EOF  \nn  \np  \n1  \n  \n  \nwq  \nEOF  \n#格式化刚刚创建好的分区  \nmkfs.xfs   /dev/vdb1  \n#创建挂载点目录  \nif [ -e /data ]; then  \nexit  \nfi  \nmkdir /data  \n#自动挂载刚刚创建的分区,并设置开机自动挂载该分区  \necho \'/dev/vdb1     /data    xfs    defaults        1 2\'  >> /etc/fstab  \nmount -a  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n# 37）自动优化 Linux 内核参数\n\n#!/bin/bash  \n  \n# 自动优化 Linux 内核参数  \n#脚本针对 RHEL7  \ncat >> /usr/lib/sysctl.d/00‐system.conf <<EOF  \nfs.file‐max=65535  \nnet.ipv4.tcp_timestamps = 0  \nnet.ipv4.tcp_synack_retries = 5  \nnet.ipv4.tcp_syn_retries = 5  \nnet.ipv4.tcp_tw_recycle = 1  \nnet.ipv4.tcp_tw_reuse = 1  \nnet.ipv4.tcp_fin_timeout = 30  \n#net.ipv4.tcp_keepalive_time = 120  \nnet.ipv4.ip_local_port_range = 1024  65535  \nkernel.shmall = 2097152  \nkernel.shmmax = 2147483648  \nkernel.shmmni = 4096  \nkernel.sem = 5010 641280 5010 128  \nnet.core.wmem_default=262144  \nnet.core.wmem_max=262144  \nnet.core.rmem_default=4194304  \nnet.core.rmem_max=4194304  \nnet.ipv4.tcp_fin_timeout = 10  \nnet.ipv4.tcp_keepalive_time = 30  \nnet.ipv4.tcp_window_scaling = 0  \nnet.ipv4.tcp_sack = 0  \nEOF  \n  \nsysctl –p  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n# 38）切割 Nginx 日志文件(防止单个文件过大,后期处理很困难)\n\n#mkdir  /data/scripts  \n#vim   /data/scripts/nginx_log.sh    \n#!/bin/bash  \n  \n# 切割 Nginx 日志文件(防止单个文件过大,后期处理很困难)   \nlogs_path="/usr/local/nginx/logs/"  \nmv ${logs_path}access.log ${logs_path}access_$(date -d "yesterday" +"%Y%m%d").log  \nkill -USR1  `cat /usr/local/nginx/logs/nginx.pid`  \n  \n# chmod +x  /data/scripts/nginx_log.sh  \n# crontab  ‐e                    #脚本写完后,将脚本放入计划任务每天执行一次脚本  \n0  1  *  *   *   /data/scripts/nginx_log.sh  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 39）检测 MySQL 数据库连接数量\n\n#!/bin/bash  \n  \n# 检测 MySQL 数据库连接数量   \n  \n# 本脚本每 2 秒检测一次 MySQL 并发连接数,可以将本脚本设置为开机启动脚本,或在特定时间段执行  \n# 以满足对 MySQL 数据库的监控需求,查看 MySQL 连接是否正常  \n# 本案例中的用户名和密码需要根据实际情况修改后方可使用  \nlog_file=/var/log/mysql_count.log  \nuser=root  \npasswd=123456  \nwhile :  \ndo  \n    sleep 2  \n    count=`mysqladmin  -u  "$user"  -p  "$passwd"   status |  awk \'{print $4}\'`  \n    echo "`date +%Y‐%m‐%d` 并发连接数为:$count" >> $log_file  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 40）根据 md5 校验码,检测文件是否被修改\n\n#!/bin/bash  \n  \n# 根据 md5 校验码,检测文件是否被修改   \n# 本示例脚本检测的是/etc 目录下所有的 conf 结尾的文件,根据实际情况,您可以修改为其他目录或文件  \n# 本脚本在目标数据没有被修改时执行一次,当怀疑数据被人篡改,再执行一次  \n# 将两次执行的结果做对比,MD5 码发生改变的文件,就是被人篡改的文件  \nfor i in $(ls /etc/*.conf)  \ndo  \n  md5sum "$i" >> /var/log/conf_file.log  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 41）检测 MySQL 服务是否存活\n\n#!/bin/bash  \n  \n# 检测 MySQL 服务是否存活   \n  \n# host 为你需要检测的 MySQL 主机的 IP 地址,user 为 MySQL 账户名,passwd 为密码  \n# 这些信息需要根据实际情况修改后方可使用  \nhost=192.168.51.198  \nuser=root  \npasswd=123456  \nmysqladmin -h \'$host\' -u \'$user\' -p\'$passwd\' ping &>/dev/null  \nif [ $? -eq 0 ]  \nthen  \n        echo "MySQL is UP"  \nelse  \n        echo "MySQL is down"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 42）备份 MySQL 的 shell 脚本(mysqldump版本)\n\n#!/bin/bash  \n  \n# 备份 MySQL 的 shell 脚本(mysqldump版本)   \n  \n# 定义变量 user(数据库用户名),passwd(数据库密码),date(备份的时间标签)  \n# dbname(需要备份的数据库名称,根据实际需求需要修改该变量的值,默认备份 mysql 数据库)  \n  \nuser=root  \npasswd=123456  \ndbname=mysql  \ndate=$(date +%Y%m%d)  \n  \n# 测试备份目录是否存在,不存在则自动创建该目录  \n[ ! -d /mysqlbackup ] && mkdir /mysqlbackup  \n# 使用 mysqldump 命令备份数据库  \nmysqldump -u "$user" -p "$passwd" "$dbname" > /mysqlbackup/"$dbname"-${date}.sql  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 43）将文件中所有的小写字母转换为大写字母\n\n#!/bin/bash  \n  \n# 将文件中所有的小写字母转换为大写字母   \n# $1是位置参数,是你需要转换大小写字母的文件名称  \n# 执行脚本,给定一个文件名作为参数,脚本就会将该文件中所有的小写字母转换为大写字母  \ntr "[a‐z]" "[A‐Z]" < $1  \n\n\n1\n2\n3\n4\n5\n6\n\n\n# 44）非交互自动生成 SSH 密钥文件\n\n#!/bin/bash  \n  \n# 非交互自动生成 SSH 密钥文件   \n# ‐t 指定 SSH 密钥的算法为 RSA 算法;‐N 设置密钥的密码为空;‐f 指定生成的密钥文件>存放在哪里  \nrm  -rf  ~/.ssh/{known_hosts,id_rsa*}  \nssh‐keygen -t RSA -N \'\' -f ~/.ssh/id_rsa  \n\n\n1\n2\n3\n4\n5\n6\n\n\n# 45）检查特定的软件包是否已经安装\n\n#!/bin/bash  \n  \n# 检查特定的软件包是否已经安装   \nif [ $# -eq 0 ];then  \n  echo "你需要制定一个软件包名称作为脚本参数"  \n  echo "用法:$0 软件包名称 ..."  \nfi  \n# $@提取所有的位置变量的值,相当于$*  \nfor package in "$@"  \ndo  \n    if rpm -q ${package} &>/dev/null ;then  \n    echo -e "${package}\\033[32m 已经安装\\033[0m"  \n    else  \n    echo -e "${package}\\033[34;1m 未安装\\033[0m"  \n    fi  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 46）监控 HTTP 服务器的状态(测试返回码)\n\n#!/bin/bash  \n  \n# 监控 HTTP 服务器的状态(测试返回码)  \n  \n# 设置变量,url为你需要检测的目标网站的网址(IP 或域名),比如百度  \nurl=http://http://183.232.231.172/index.html  \n  \n# 定义函数 check_http:  \n# 使用 curl 命令检查 http 服务器的状态  \n# ‐m 设置curl不管访问成功或失败,最大消耗的时间为 5 秒,5 秒连接服务为相应则视为无法连接  \n# ‐s 设置静默连接,不显示连接时的连接速度、时间消耗等信息  \n# ‐o 将 curl 下载的页面内容导出到/dev/null(默认会在屏幕显示页面内容)  \n# ‐w 设置curl命令需要显示的内容%{http_code},指定curl返回服务器的状态码  \ncheck_http()  \n{  \n        status_code=$(curl -m 5 -s -o /dev/null -w %{http_code} $url)  \n}  \n  \n  \nwhile :  \ndo  \n        check_http  \n        date=$(date +%Y%m%d‐%H:%M:%S)  \n  \n  \n# 生成报警邮件的内容  \n        echo "当前时间为:$date  \n        $url 服务器异常,状态码为${status_code}.  \n        请尽快排查异常." > /tmp/http$$.pid  \n  \n  \n# 指定测试服务器状态的函数,并根据返回码决定是发送邮件报警还是将正常信息写入日志  \n        if [ $status_code -ne 200 ];then  \n                mail -s Warning root < /tmp/http$$.pid  \n        else  \n                echo "$url 连接正常" >> /var/log/http.log  \n        fi  \n        sleep 5  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n# 47）自动添加防火墙规则,开启某些服务或端口(适用于 RHEL7)\n\n#!/bin/bash  \n  \n# 自动添加防火墙规则,开启某些服务或端口(适用于 RHEL7)  \n#   \n# 设置变量定义需要添加到防火墙规则的服务和端口号  \n# 使用 firewall‐cmd ‐‐get‐services 可以查看 firewall 支持哪些服务  \nservice="nfs http ssh"  \nport="80 22 8080"  \n  \n# 循环将每个服务添加到防火墙规则中  \nfor i in $service  \ndo  \n    echo "Adding $i service to firewall"  \n    firewall‐cmd  --add-service=${i}  \ndone  \n  \n#循环将每个端口添加到防火墙规则中  \nfor i in $port  \ndo  \n    echo "Adding $i Port to firewall"  \n    firewall‐cmd --add-port=${i}/tcp  \ndone  \n#将以上设置的临时防火墙规则,转换为永久有效的规则(确保重启后有效)  \nfirewall‐cmd  --runtime-to-permanent  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n# 48）使用脚本自动创建逻辑卷\n\n#!/bin/bash  \n  \n# 使用脚本自动创建逻辑卷   \n  \n  \n# 清屏,显示警告信息,创建将磁盘转换为逻辑卷会删除数据  \nclear  \necho -e "\\033[32m           !!!!!!警告(Warning)!!!!!!\\033[0m"  \necho  \necho "+++++++++++++++++++++++++++++++++++++++++++++++++"  \necho "脚本会将整个磁盘转换为 PV,并删除磁盘上所有数据!!!"  \necho "This Script will destroy all data on the Disk"  \necho "+++++++++++++++++++++++++++++++++++++++++++++++++"  \necho  \nread -p "请问是否继续 y/n?:" sure  \n  \n# 测试用户输入的是否为 y,如果不是则退出脚本  \n[ $sure != y ] && exit  \n  \n# 提示用户输入相关参数(磁盘、卷组名称等数据),并测试用户是否输入了这些值,如果没有输入,则脚本退出  \nread -p "请输入磁盘名称,如/dev/vdb:" disk  \n[ -z $disk ] && echo "没有输入磁盘名称" && exit  \nread -p "请输入卷组名称:" vg_name  \n[ -z $vg_name ] && echo "没有输入卷组名称" && exit  \nread -p "请输入逻辑卷名称:" lv_name  \n[ -z $lv_name ] && echo "没有输入逻辑卷名称" && exit  \nread -p "请输入逻辑卷大小:" lv_size  \n[ -z $lv_size ] && echo "没有输入逻辑卷大小" && exit  \n# 使用命令创建逻辑卷  \npvcreate $disk  \nvgcreate $vg_name $disk  \nlvcreate -L ${lv_size}M -n ${lv_name}  ${vg_name}  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n# 49）显示 CPU 厂商信息\n\n#!/bin/bash  \n  \n# 显示 CPU 厂商信息   \nawk \'/vendor_id/{print $3}\' /proc/cpuinfo | uniq  \n\n\n1\n2\n3\n4\n\n\n# 50）删除某个目录下大小为 0 的文件\n\n#!/bin/bash  \n  \n# 删除某个目录下大小为 0 的文件  \n  \n#/var/www/html 为测试目录,脚本会清空该目录下所有 0 字节的文件  \ndir="/var/www/html"  \nfind $dir -type f -size 0 -exec rm -rf {} \\;  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 51）查找 Linux 系统中的僵尸进程\n\n#!/bin/bash  \n  \n# 查找 Linux 系统中的僵尸进程  \n# awk 判断 ps 命令输出的第 8 列为 Z 是,显示该进程的 PID 和进程命令  \nps aux | awk \'{if($8 == "Z"){print $2,$11}}\'  \n\n\n1\n2\n3\n4\n5\n\n\n# 52）提示用户输入年份后判断该年是否为闰年\n\n#!/bin/bash  \n  \n# 提示用户输入年份后判断该年是否为闰年  \n  \n  \n# 能被4整除并且并不能被100整除的年份是闰年  \n# 能被400整除的年份也是闰年  \nread -p "请输入一个年份:" year  \n  \n  \nif [ "$year" = "" ];then  \n    echo "没有输入年份"  \n    exit  \nfi  \n#使用正则测试变量 year 中是否包含大小写字母  \nif [[ "$year" =~ [a‐Z] ]];then  \n    echo "你输入的不是数字"  \n    exit  \nfi  \n# 判断是否为闰年  \nif [ $[year % 4] -eq 0 ] && [ $[year % 100] -ne 0 ];then  \n    echo "$year年是闰年"    \nelif [ $[year % 400] -eq 0 ];then  \n    echo "$year年是闰年"  \nelse  \n    echo "$year年不是闰年"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n# 53）生成随机密码(urandom 版本)\n\n#!/bin/bash  \n  \n# 生成随机密码(urandom 版本)   \n  \n# /dev/urandom 文件是 Linux 内置的随机设备文件  \n# cat /dev/urandom 可以看看里面的内容,ctrl+c 退出查看  \n# 查看该文件内容后,发现内容有些太随机,包括很多特殊符号,我们需要的密码不希望使用这些符号  \n# tr ‐dc \'_A‐Za‐z0‐9\' < /dev/urandom  \n# 该命令可以将随机文件中其他的字符删除,仅保留大小写字母,数字,下划线,但是内容还是太多  \n# 我们可以继续将优化好的内容通过管道传递给 head 命令,在大量数据中仅显示头 10 个字节  \n# 注意 A 前面有个下划线  \ntr -dc \'_A‐Za‐z0‐9\' </dev/urandom | head -c 10  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 54）生成随机密码(字串截取版本)\n\n#!/bin/bash  \n  \n# 生成随机密码(字串截取版本)   \n  \n# 设置变量 key,存储密码的所有可能性(密码库),如果还需要其他字符请自行添加其他密码字符  \n# 使用$#统计密码库的长度  \nkey="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"  \nnum=${#key}  \n# 设置初始密码为空  \npass=\'\'  \n# 循环 8 次,生成随机密码  \n# 每次都是随机数对密码库的长度取余,确保提取的密码字符不超过密码库的长度  \n# 每次循环提取一位随机密码,并将该随机密码追加到 pass 变量的最后  \nfor i in {1..8}  \ndo    \n  index=$[RANDOM%num]  \n  pass=$pass${key:$index:1}  \ndone  \necho $pass  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 55）生成随机密码(UUID 版本,16 进制密码)\n\n#!/bin/bash  \n  \n# 生成随机密码(UUID 版本,16 进制密码)   \nuuidgen  \n\n\n1\n2\n3\n4\n\n\n# 56）生成随机密码(进程 ID 版本,数字密码)\n\n#!/bin/bash  \n  \n# 生成随机密码(进程 ID 版本,数字密码)  \necho $$  \n\n\n1\n2\n3\n4\n\n\n# 57）测试用户名与密码是否正确\n\n#!/bin/bash  \n  \n# 测试用户名与密码是否正确  \n#用户名为 tom 并且密码为 123456,则提示登录成功,否则提示登录失败  \nread -p "请输入用户名:"  user  \nread -p "请输入密码:"    pass  \nif [ "$user" == \'tom\' -a "$pass" == \'123456\' ];then  \n  echo "Login successful"  \nelse  \n  echo "Login Failed"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 58）循环测试用户名与密码是否正确\n\n#!/bin/bash  \n  \n# 循环测试用户名与密码是否正确   \n# 循环测试用户的账户名和密码,最大测试 3 次,输入正确提示登录成功,否则提示登录失败  \n# 用户名为 tom 并且密码为 123456    \nfor i in {1..3}  \ndo  \n  read -p "请输入用户名:" user  \n  read -p "请输入密码:"   pass  \nif [ "$user" == \'tom\' -a "$pass" == \'123456\' ];then  \n    echo "Login successful"  \n     exit  \nfi  \ndone  \necho "Login Failed"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 59）Shell 脚本的 fork 炸弹\n\n#!/bin/bash  \n  \n# Shell 脚本的 fork 炸弹   \n  \n  \n# 快速消耗计算机资源,致使计算机死机  \n# 定义函数名为.(点), 函数中递归调用自己并放入后台执行  \n.() { .|.& };.  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 60）批量下载有序文件(pdf、图片、视频等等)\n\n#!/bin/bash  \n  \n# 批量下载有序文件(pdf、图片、视频等等)  \n  \n# 本脚本准备有序的网络资料进行批量下载操作(如 01.jpg,02.jpg,03.jpg)  \n# 设置资源来源的域名连接  \nurl="http://www.baidu.com/"  \necho  "开始下载..."  \nsleep 2  \ntype=jpg  \nfor i in `seq 100`  \n     echo "正在下载$i.$type"  \n  curl $url/$i.$type -o /tmp/${i}$type  \n     sleep 1  \ndone  \n#curl 使用-o 选项指定下载文件另存到哪里.  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 61）显示当前计算机中所有账户的用户名称\n\n #!/bin/bash  \n  \n # 显示当前计算机中所有账户的用户名称  \n  \n# 下面使用3种不同的方式列出计算机中所有账户的用户名  \n# 指定以:为分隔符,打印/etc/passwd 文件的第 1 列  \nawk -F: \'{print $1}\' /etc/passwd  \n  \n# 指定以:为分隔符,打印/etc/passwd 文件的第 1 列  \ncut -d: -f1 /etc/passwd  \n  \n# 使用 sed 的替换功能,将/etc/passwd 文件中:后面的所有内容替换为空(仅显示用户名)  \nsed \'s/:.*//\' /etc/passwd  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n# 62）制定目录路径,脚本自动将该目录使用 tar 命令打包备份到/data目录\n\n#!/bin/bash  \n  \n# 制定目录路径,脚本自动将该目录使用 tar 命令打包备份到/data目录   \n  \n  \n[ ! -d /data ] && mkdir /data  \n[ -z $1 ] && exit  \nif [ -d $1 ];then  \n  tar -czf /data/$1.-`date +%Y%m%d`.tar.gz $1  \nelse  \n    echo "该目录不存在"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 63）显示进度条(回旋镖版)\n\n#!/bin/bash  \n  \n# 显示进度条(回旋镖版)  \n  \n  \nwhile :  \ndo  \n  clear  \n  for i in {1..20}  \n  do  \n    echo ‐e "\\033[3;${i}H*"  \n    sleep 0.1  \n    done  \n    clear  \n    for i in {20..1}  \n    do  \n    echo ‐e "\\033[3;${i}H*"  \n    sleep 0.1  \n    done  \n    clear  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n# 64）安装 LAMP 环境(yum 版本)\n\n#!/bin/bash  \n  \n# 安装 LAMP 环境(yum 版本)   \n# 本脚本适用于 RHEL7(RHEL6 中数据库为 mysql)  \nyum makecache &>/dev/null  \nnum=$(yum repolist | awk \'/repolist/{print $2}\' | sed \'s/,//\')  \nif [ $num -lt 0 ];then  \n  yum -y install httpd  \n  yum -y install mariadb mariadb-server mariadb-devel  \n  yum -y install php php-mysql  \nelse  \n  echo "未配置 yum 源..."  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n# 65）循环关闭局域网中所有主机\n\n#!/bin/bash  \n  \n# 循环关闭局域网中所有主机   \n# 假设本机为 192.168.4.100,编写脚本关闭除自己外的其他所有主机  \n# 脚本执行,需要提前给所有其他主机传递 ssh 密钥,满足无密码连接  \nfor i in {1..254}  \ndo  \n  [ $i -eq 100 ] && continue  \n  echo "正在关闭 192.168.4.$i..."  \n  ssh 192.168.4.$i poweroff  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 66）获取本机 MAC 地址\n\n#!/bin/bash  \n  \n# 获取本机 MAC 地址  \nip a s | awk \'BEGIN{print  " 本 机 MAC 地 址 信 息 如 下 :"}/^[0‐9]/{print $2;getline;if($0~/link\\/ether/){print $2}}\' | grep -v lo:  \n# awk 读取 ip 命令的输出,输出结果中如果有以数字开始的行,先显示该行的地 2 列(网卡名称),  \n# 接着使用 getline 再读取它的下一行数据,判断是否包含 link/ether  \n# 如果保护该关键词,就显示该行的第 2 列(MAC 地址)  \n# lo 回环设备没有 MAC,因此将其屏蔽,不显示  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 67）自动配置 rsynd 服务器的配置文件 rsyncd.conf\n\n#!/bin/bash  \n  \n# 自动配置 rsynd 服务器的配置文件 rsyncd.conf  \n  \n# See rsyncd.conf man page for more options.  \n  \n[ ! -d /home/ftp ] && mkdir /home/ftp  \necho \'uid = nobody  \ngid = nobody  \nuse chroot = yes  \nmax connections = 4  \npid file = /var/run/rsyncd.pid  \nexclude = lost+found/  \ntransfer logging = yes  \ntimeout = 900  \nignore nonreadable = yes  \ndont compress   = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2  \n[ftp]  \n    path = /home/ftp  \n    comment = share\' > /etc/rsyncd.conf  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# 68）修改 Linux 系统的最大打开文件数量\n\n#!/bin/bash  \n  \n# 修改 Linux 系统的最大打开文件数量   \n  \n# 往/etc/security/limits.conf 文件的末尾追加两行配置参数,修改最大打开文件数量为 65536  \ncat >> /etc/security/limits.conf <<EOF  \n* soft nofile  65536  \n* hard nofile  65536  \nEOF  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 69）设置 Python 支持自动命令补齐功能\n\n#!/bin/bash  \n  \n# 设置 Python 支持自动命令补齐功能   \n  \n# Summary:Enable tab complete for python  \n# Description:  \n  \nNeeds import readline and rlcompleter module  \n#  \nimport readline  \n#  \nimport rlcompleter  \n#  \nhelp(rlcompleter) display detail: readline.parse_and_bind(\'tab: complete\')  \n#  \nman python display detail: PYTHONSTARTUP variable  \n  \nif  [ ! -f /usr/bin/tab.py ];then  \n  cat >> /usr/bin/tab.py <<EOF  \nimport readline  \nimport rlcompleter  \nreadline.parse_and_bind(\'tab: complete\')  \nEOF  \nfi  \nsed  -i \'$a export PYTHONSTARTUP=/usr/bin/tab.py\' /etc/profile  \nsource /etc/profile  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n# 70）自动修改计划任务配置文件\n\nDocker+K8s+Jenkins 主流技术全解视频资料【干货免费分享】  \n  \n#!/bin/bash  \n  \n# 自动修改计划任务配置文件   \nread -p "请输入分钟信息(00‐59):" min  \nread -p "请输入小时信息(00‐24):" hour  \nread -p "请输入日期信息(01‐31):" date  \nread -p "请输入月份信息(01‐12):" month  \nread -p "请输入星期信息(00‐06):" weak  \nread -p "请输入计划任务需要执行的命令或脚本:" program  \necho "$min $hour $date $month $weak $program" >> /etc/crontab  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 71）使用脚本循环创建三位数字的文本文件(111-999 的文件)\n\n#!/bin/bash  \n  \n# 使用脚本循环创建三位数字的文本文件(111-999 的文件)   \n  \nfor i in {1..9}  \ndo  \n  for j in {1..9}  \n  do  \n    for k in {1..9}  \n    do  \n      touch /tmp/$i$j$k.txt  \n    done  \n    done  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 72）找出/etc/passwd 中能登录的用户,并将对应在/etc/shadow 中第二列密码提出处理\n\n#!/bin/bash  \n  \n# 找出/etc/passwd 中能登录的用户,并将对应在/etc/shadow 中第二列密码提出处理  \n  \nuser=$(awk -F: \'/bash$/{print $1}\' /etc/passwd)  \nfor i in $user  \ndo  \n  awk -F: -v x=$i \'$1==x{print $1,$2}\' /etc/shadow  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 73）统计/etc/passwd 中 root 出现的次数\n\n#!/bin/bash  \n  \n# 统计/etc/passwd 中 root 出现的次数   \n  \n#每读取一行文件内容,即从第 1 列循环到最后 1 列,依次判断是否包含 root 关键词,如果包含则 x++  \nawk -F: \'{i=1;while(i<=NF){if($i~/root/){x++};i++}} END{print "root 出现次数为"x}\' /etc/passwd  \n\n\n1\n2\n3\n4\n5\n6\n\n\n# 74）统计 Linux 进程相关数量信息\n\n#!/bin/bash  \n  \n# 统计 Linux 进程相关数量信息   \nrunning=0  \nsleeping=0  \nstoped=0  \nzombie=0  \n# 在 proc 目录下所有以数字开始的都是当前计算机正在运行的进程的进程 PID  \n# 每个 PID 编号的目录下记录有该进程相关的信息  \nfor pid in /proc/[1‐9]*  \ndo  \n  procs=$[procs+1]  \n  stat=$(awk \'{print $3}\' $pid/stat)  \n# 每个 pid 目录下都有一个 stat 文件,该文件的第 3 列是该进程的状态信息  \n    case $stat in  \n    R)  \n    running=$[running+1]  \n    ;;  \n    T)  \n    stoped=$[stoped+1]  \n    ;;  \n    S)  \n    sleeping=$[sleeping+1]  \n    ;;  \n    Z)  \n     zombie=$[zombie+1]  \n     ;;  \n    esac  \ndone  \necho "进程统计信息如下"  \necho "总进程数量为:$procs"  \necho "Running 进程数为:$running"  \necho "Stoped 进程数为:$stoped"  \necho "Sleeping 进程数为:$sleeping"  \necho "Zombie 进程数为:$zombie"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n# 75）从键盘读取一个论坛积分,判断论坛用户等级\n\n#!/bin/bash  \n  \n# 从键盘读取一个论坛积分,判断论坛用户等级  \n  \n#等级分类如下:  \n#  大于等于 90        神功绝世  \n#  大于等于 80,小于 90       登峰造极  \n#  大于等于 70,小于 80       炉火纯青  \n#  大于等于 60,小于 70       略有小成  \n#  小于 60               初学乍练  \nread -p "请输入积分(0‐100):" JF  \nif [ $JF -ge 90 ] ; then  \n  echo "$JF 分,神功绝世"  \nelif [ $JF -ge 80 ] ; then  \n    echo "$JF 分,登峰造极"  \nelif [ $JF -ge 70 ] ; then  \n    echo "$JF 分,炉火纯青"  \nelif [ $JF -lt 60 ] ; then  \n    echo "$JF 分,略有小成"  \nelse  \n    echo "$JF 分,初学乍练"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n# 76）判断用户输入的数据类型(字母、数字或其他)\n\n#!/bin/bash  \n  \n# 判断用户输入的数据类型(字母、数字或其他)   \nread -p "请输入一个字符:" KEY  \ncase "$KEY" in  \n  [a‐z]|[A‐Z])  \n    echo "字母"   \n    ;;  \n  [0‐9])  \n    echo "数字"   \n    ;;  \n  *)  \n    echo "空格、功能键或其他控制字符"  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 77）显示进度条(数字版)\n\n#!/bin/bash  \n  \n# 显示进度条(数字版)   \n# echo 使用‐e 选项后,在打印参数中可以指定 H,设置需要打印内容的 x,y 轴的定位坐标  \n# 设置需要打印内容在第几行,第几列  \nfor i in {1..100}  \ndo  \n    echo -e "\\033[6;8H["  \n    echo -e "\\033[6;9H$i%"  \n    echo -e "\\033[6;13H]"  \n    sleep 0.1  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 78）打印斐波那契数列\n\n#!/bin/bash  \n  \n# 打印斐波那契数列(该数列的特点是后一个数字,永远都是前 2 个数字之和)   \n  \n# 斐波那契数列后一个数字永远是前 2 个数字之和  \n# 如:0  1  1  2  3  5  8  13 ... ...  \nlist=(0 1)  \nfor i in `seq 2 11`  \ndo  \n  list[$i]=`expr ${list[‐1]} + ${list[‐2]}`  \ndone  \necho ${list[@]}  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 79）判断用户输入的是 Yes 或 NO\n\n#!/bin/bash  \n  \n# 判断用户输入的是 Yes 或 NO   \n  \nread -p  "Are you sure?[y/n]:"  sure  \ncase  $sure  in  \n  y|Y|Yes|YES)    \n    echo "you enter $a"  \n    ;;  \n    n|N|NO|no)  \n     echo "you enter $a"  \n     ;;  \n    *)  \n     echo "error";;  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 80）显示本机 Linux 系统上所有开放的端口列表\n\n#!/bin/bash  \n  \n# 显示本机 Linux 系统上所有开放的端口列表   \n  \n# 从端口列表中观测有没有没用的端口,有的话可以将该端口对应的服务关闭,防止意外的攻击可能性  \nss -nutlp | awk \'{print $1,$5}\' | awk -F"[: ]" \'{print "协议:"$1,"端口号:"$NF}\' | grep "[0‐9]" | uniq  \n\n\n1\n2\n3\n4\n5\n6\n\n\n# 81）将 Linux 系统中 UID 大于等于 1000 的普通用户都删除\n\n#!/bin/bash  \n  \n# 将 Linux 系统中 UID 大于等于 1000 的普通用户都删除   \n  \n# 先用 awk 提取所有 uid 大于等于 1000 的普通用户名称  \n# 再使用 for 循环逐个将每个用户删除即可  \nuser=$(awk -F: \'$3>=1000{print $1}\' /etc/passwd)  \nfor i in $user  \ndo  \n     userdel -r $i  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 82）使用脚本开启关闭虚拟机\n\n#!/bin/bash  \n  \n# 使用脚本开启关闭虚拟机   \n# 脚本通过调用virsh命令实现对虚拟机的管理,如果没有该命令,需要安装 libvirt‐client 软件包  \n# $1是脚本的第1个参数,$2是脚本的第2个参数  \n# 第1个参数是你希望对虚拟机进行的操作指令,第2个参数是虚拟机名称  \ncase $1 in  \n  list)  \n    virsh list --all  \n    ;;  \n  start)  \n    virsh start $2  \n    ;;  \n  stop)  \n    virsh destroy $2  \n    ;;  \n  enable)  \n    virsh autostart $2  \n    ;;  \n  disable)  \n    virsh autostart --disable $2  \n    ;;  \n  *)  \n    echo "Usage:$0 list"  \n    echo "Usage:$0 [start|stop|enable|disable]  VM_name"  \n    cat << EOF  \n    #list      显示虚拟机列表  \n    #start     启动虚拟机  \n    #stop      关闭虚拟机  \n    #enable    设置虚拟机为开机自启  \n    #disable   关闭虚拟机开机自启功能  \n    EOF  \n    ;;  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n# 83）调整虚拟机内存参数的 shell 脚本\n\n#!/bin/bash  \n  \n# 调整虚拟机内存参数的 shell 脚本   \n# 脚本通过调用 virsh 命令实现对虚拟机的管理,如果没有该命令,需要安装 libvirt‐client 软件包  \ncat << EOF  \n1.调整虚拟机最大内存数值  \n2.调整实际分配给虚拟机的内存数值  \nEOF  \nread -p "请选择[1‐2]:" select  \ncase $select in  \n  1)  \n      read -p "请输入虚拟机名称" name  \n      read -p "请输入最大内存数值(单位:k):" size  \n      virsh setmaxmem $name --size $size --config  \n      ;;  \n  2)  \n      read -p "请输入虚拟机名称" name  \n      read -p "请输入实际分配内存数值(单位:k):" size  \n      virsh setmem $name $size  \n      ;;  \n  *)  \n      echo "Error"  \n      ;;  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n# 84）查看 KVM 虚拟机中的网卡信息(不需要进入启动或进入虚拟机)\n\n#!/bin/bash  \n  \n# 查看 KVM 虚拟机中的网卡信息(不需要进入启动或进入虚拟机)   \n  \n# 该脚本使用 guestmount 工具,可以将虚拟机的磁盘系统挂载到真实机文件系统中  \n# Centos7.2 中安装 libguestfs‐tools‐c 可以获得 guestmount 工具  \n# 虚拟机可以启动或者不启动都不影响该脚本的使用  \n# 将虚拟机磁盘文件挂载到文件系统后,就可以直接读取磁盘文件中的网卡配置文件中的数据  \nclear  \nmountpoint="/media/virtimage"  \n[ ! -d $mountpoint ] && mkdir $mountpoint  \nread -p "输入虚拟机名称:" name  \necho "请稍后..."  \n# 如果有设备挂载到该挂载点,则先 umount 卸载  \nif mount | grep -q "$mountpoint" ;then  \n  umount $mountpoint  \nfi  \n# 只读的方式,将虚拟机的磁盘文件挂载到特定的目录下,这里是/media/virtimage 目录  \nguestmount -r -d $name -i $mountpoint  \necho  \necho "‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐"  \necho -e "\\033[32m$name 虚拟机中网卡列表如下:\\033[0m"  \ndev=$(ls /media/virtimage/etc/sysconfig/network‐scripts/ifcfg-* |awk -F"[/‐]" \'{print $9}\')  \necho $dev  \necho "‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐"  \necho  \necho  \necho "+++++++++++++++++++++++++++++++++++++++++++"  \necho -e "\\033[32m 网卡 IP 地址信息如下:\\033[0m"  \nfor i in $dev  \ndo  \n  echo -n "$i:"  \n  grep -q "IPADDR" /media/virtimage/etc/sysconfig/network‐scripts/ifcfg-$i || echo "未配置 IP地址"  \n  awk -F= \'/IPADDR/{print $2}\' /media/virtimage/etc/sysconfig/network-scripts/ifcfg-$i  \ndone  \necho "+++++++++++++++++++++++++++++++++++++++++++"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n# 85）不登陆虚拟机,修改虚拟机网卡 IP 地址\n\n#!/bin/bash  \n  \n# 不登陆虚拟机,修改虚拟机网卡 IP 地址   \n  \n# 该脚本使用 guestmount 工具,Centos7.2 中安装 libguestfs‐tools‐c 可以获得 guestmount 工具  \n# 脚本在不登陆虚拟机的情况下,修改虚拟机的 IP 地址信息  \n# 在某些环境下,虚拟机没有 IP 或 IP 地址与真实主机不在一个网段  \n# 真实主机在没有 virt‐manger 图形的情况下,远程连接虚拟机很麻烦  \n# 该脚本可以解决类似的问题  \nread -p "请输入虚拟机名称:" name  \nif virsh domstate $name | grep -q running ;then  \n  echo "修改虚拟机网卡数据,需要关闭虚拟机"  \n  virsh destroy $name  \nfi  \nmountpoint="/media/virtimage"  \n[ ! -d $mountpoint ] && mkdir $mountpoint  \necho "请稍后..."  \nif mount | grep -q "$mountpoint" ;then  \n  umount $mountpoint  \nfi  \nguestmount  -d $name -i $mountpoint  \nread -p "请输入需要修改的网卡名称:" dev  \nread -p "请输入 IP 地址:" addr  \n# 判断原本网卡配置文件中是否有 IP 地址,有就修改该 IP,没有就添加一个新的 IP 地址  \nif grep -q "IPADDR"  $mountpoint/etc/sysconfig/network‐scripts/ifcfg‐$dev ;then  \n  sed -i "/IPADDR/s/=.*/=$addr/"  $mountpoint/etc/sysconfig/network‐scripts/ifcfg‐$dev  \nelse  \n  echo "IPADDR=$addr" >> $mountpoint/etc/sysconfig/network‐scripts/ifcfg‐$dev  \nfi  \n# 如果网卡配置文件中有客户配置的 IP 地址,则脚本提示修改 IP 完成  \nawk -F= -v x=$addr \'$2==x{print "完成..."}\'  $mountpoint/etc/sysconfig/network‐scripts/ifcfg-$dev  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n# 86）破解虚拟机密码,无密码登陆虚拟机系统\n\n#!/bin/bash  \n  \n# 破解虚拟机密码,无密码登陆虚拟机系统   \n  \n# 该脚本使用 guestmount 工具,Centos7.2 中安装 libguestfs‐tools‐c 可以获得 guestmount 工具  \nread -p "请输入虚拟机名称:" name  \nif virsh domstate $name | grep -q running ;then  \n  echo "破解,需要关闭虚拟机"  \n  virsh destroy $name  \nfi  \nmountpoint="/media/virtimage"  \n[ ! -d $mountpoint ] && mkdir $mountpoint  \necho "请稍后..."  \nif mount | grep -q "$mountpoint" ;then  \n  umount $mountpoint  \nfi  \nguestmount -d $name -i $mountpoint  \n# 将 passwd 中密码占位符号 x 删除,该账户即可实现无密码登陆系统  \nsed -i "/^root/s/x//" $mountpoint/etc/passwd  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 87）Shell 脚本对信号的处理,执行脚本后,按键盘 Ctrl+C 无法终止的脚本\n\n#!/bin/bash  \n  \n# Shell 脚本对信号的处理,执行脚本后,按键盘 Ctrl+C 无法终止的脚本   \n# 使用 trap 命令可以拦截用户通过键盘或 kill 命令发送过来的信号  \n# 使用 kill ‐l 可以查看 Linux 系统中所有的信号列表,其中 2 代表 Ctrl+C  \n# trap 当发现有用户 ctrl+C 希望终端脚本时,就执行 echo "暂停 10s";sleep 10 这两条命令  \n# 另外用户使用命令:[ kill ‐2 脚本的 PID ] 也可以中断脚本和 Ctrl+C 一样的效果,都会被 trap 拦截  \ntrap \'echo "暂停 10s";sleep 10\' 2  \nwhile :  \ndo  \n  echo "go go go"  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 88）一键部署 memcached\n\n#!/bin/bash  \n  \n# 一键部署 memcached   \n# 脚本用源码来安装 memcached 服务器  \n# 注意:如果软件的下载链接过期了,请更新 memcached 的下载链接  \nwget http://www.memcached.org/files/memcached-1.5.1.tar.gz  \nyum -y install gcc  \ntar -xf  memcached‐1.5.1.tar.gz  \ncd memcached‐1.5.1  \n./configure  \nmake  \nmake install  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 89）一键配置 VNC 远程桌面服务器(无密码版本)\n\n#!/bin/bash  \n  \n# 一键配置 VNC 远程桌面服务器(无密码版本)  \n  \n# 脚本配置的 VNC 服务器,客户端无需密码即可连接  \n# 客户端仅有查看远程桌面的权限,没有鼠标和键盘的操作权限  \n  \nrpm --quiet -q tigervnc‐server  \nif [  $? -ne  0 ];then  \n  yum  -y  tigervnc‐server  \nfi  \nx0vncserver AcceptKeyEvents=0 AlwaysShared=1 \\  \nAcceptPointerEvents=0 SecurityTypes=None  rfbport=5908  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n# 90）关闭 SELinux\n\n#!/bin/bash  \n  \n# 关闭 SELinux   \n  \nsed -i  \'/^SELINUX/s/=.*/=disabled/\' /etc/selinux/config  \nsetenforce 0  \n\n\n1\n2\n3\n4\n5\n6\n\n\n# 91）查看所有虚拟机磁盘使用量以及CPU使用量信息\n\n#!/bin/bash  \n  \n# 查看所有虚拟机磁盘使用量以及CPU使用量信息   \n  \nvirt‐df  \nread -n1 "按任意键继续" key  \nvirt‐top  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 92）使用 shell 脚本打印图形\n\n#!/bin/bash  \n  \n# 使用 shell 脚本打印如下图形:   \n# 打印第一组图片  \n# for(())为类 C 语言的语法格式,也可以使用 for i  in;do  ;done 的格式替换  \n# for((i=1;i<=9;i++))循环会执行 9 次,i 从 1 开始到 9,每循环一次 i 自加 1  \nclear  \nfor (( i=1; i<=9; i++ ))  \ndo  \n  for (( j=1; j<=i; j++ ))  \n  do  \n    echo -n "$i"  \n  done  \n  echo ""  \ndone  \nread  -n1  "按任意键继续"  key  \n#打印第二组图片  \nclear  \nfor (( i=1; i<=5; i++ ))   \ndo  \n  for (( j=1; j<=i; j++ ))  \n  do  \n    echo -n " |"  \n  done  \n  echo "_ "  \ndone  \nread  -n1  "按任意键继续"  key  \n#打印第三组图片  \nclear  \nfor (( i=1; i<=5; i++ ))  \ndo  \n  for (( j=1; j<=i; j++ ))  \n  do  \n    echo -n " *"  \n  done  \n  echo ""  \ndone  \nfor (( i=5; i>=1; i‐‐ ))  \ndo  \n  for (( j=1; j<=i; j++ ))  \n  do  \n    echo -n " *"  \n  done  \n  echo ""  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n\n\n# 93）根据计算机当前时间,返回问候语,可以将该脚本设置为开机启动\n\n#!/bin/bash  \n  \n# 根据计算机当前时间,返回问候语,可以将该脚本设置为开机启动   \n  \n# 00‐12 点为早晨,12‐18 点为下午,18‐24 点为晚上  \n# 使用 date 命令获取时间后,if 判断时间的区间,确定问候语内容  \ntm=$(date +%H)  \nif [ $tm -le 12 ];then  \n  msg="Good Morning $USER"  \nelif [ $tm -gt 12 -a $tm -le 18 ];then  \n    msg="Good Afternoon $USER"  \nelse  \n    msg="Good Night $USER"  \nfi  \necho "当前时间是:$(date +"%Y‐%m‐%d %H:%M:%S")"  \necho -e "\\033[34m$msg\\033[0m"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 94）读取用户输入的账户名称,将账户名写入到数组保存\n\n#!/bin/bash  \n  \n# 读取用户输入的账户名称,将账户名写入到数组保存   \n# 定义数组名称为 name,数组的下标为 i,小标从 0 开始,每输入一个账户名,下标加 1,继续存下一个账户  \n# 最后,输入 over,脚本输出总结性信息后脚本退出  \ni=0  \nwhile :  \ndo  \n  read -p "请输入账户名,输入 over 结束:" key  \n  if [ $key == "over" ];then   \n    break  \n    else  \n    name[$i]=$key  \n    let i++  \n    fi  \ndone  \necho "总账户名数量:${#name[*]}"  \necho "${name[@]}"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# 95）判断文件或目录是否存在\n\n#!/bin/bash  \n  \n# 判断文件或目录是否存在   \nif [ $# -eq 0 ] ;then  \necho "未输入任何参数,请输入参数"  \necho "用法:$0 [文件名|目录名]"  \nfi  \nif [ -f $1 ];then  \n  echo "该文件,存在"  \n  ls -l $1  \nelse  \n  echo "没有该文件"  \nfi  \nif [ -d  $1 ];then  \n     echo "该目录,存在"  \n     ls -ld  $2  \nelse  \n     echo "没有该目录"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 96）打印各种格式的时间\n\n#!/bin/bash  \n  \n# 打印各种时间格式   \n  \necho "显示星期简称(如:Sun)"  \ndate +%a  \necho "显示星期全称(如:Sunday)"  \ndate +%A  \necho "显示月份简称(如:Jan)"  \ndate +%b  \necho "显示月份全称(如:January)"  \ndate +%B  \necho "显示数字月份(如:12)"  \ndate +%m  \necho "显示数字日期(如:01 号)"  \ndate +%d  \necho "显示数字年(如:01 号)"  \ndate +%Y echo "显示年‐月‐日"  \ndate +%F  \necho "显示小时(24 小时制)"  \ndate +%H  \necho "显示分钟(00..59)"  \ndate +%M  \necho "显示秒"  \ndate +%S  \necho "显示纳秒"  \ndate +%N  \necho "组合显示"  \ndate +"%Y%m%d %H:%M:%S"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n# 97）使用 egrep 过滤 MAC 地址\n\n#!/bin/bash  \n  \n# 使用 egrep 过滤 MAC 地址   \n  \n# MAC 地址由 16 进制组成,如 AA:BB:CC:DD:EE:FF  \n# [0‐9a‐fA‐F]{2}表示一段十六进制数值,{5}表示连续出现5组前置:的十六进制  \negrep "[0‐9a‐fA‐F]{2}(:[0‐9a‐fA‐F]{2}){5}" $1  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 98）统计双色球各个数字的中奖概率\n\n#!/bin/bash  \n  \n# 统计双色球各个数字的中奖概率   \n  \n# 往期双色球中奖号码如下:  \n# 01 04 11 28 31 32  16  \n# 04 07 08 18 23 24  02  \n# 02 05 06 16 28 29  04  \n# 04 19 22 27 30 33  01  \n# 05 10 18 19 30 31  03  \n# 02 06 11 12 19 29  06  \n# 统计篮球和红球数据出现的概率次数(篮球不分顺序,统计所有篮球混合在一起的概率)  \nawk \'{print $1"\\n"$2"\\n"$3"\\n"$4"\\n"$5"\\n"$6}\' 1.txt | sort | uniq -c | sort  \nawk \'{print $7}\' 1.txt | sort | uniq -c | sort  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 99）生成签名私钥和证书\n\n#!/bin/bash  \n  \n# 生成签名私钥和证书   \n  \nread -p "请输入存放证书的目录:" dir  \nif [ ! -d $dir ];then  \n  echo "该目录不存在"  \n  exit  \nfi  \nread -p "请输入密钥名称:" name  \n# 使用 openssl 生成私钥  \nopenssl genrsa -out ${dir}/${name}.key  \n# 使用 openssl 生成证书 #subj 选项可以在生成证书时,非交互自动填写 Common Name 信息  \nopenssl req -new -x509 -key ${dir}/${name}.key -subj "/CN=common" -out ${dir}/${name}.crt  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 100）使用awk编写的wc程序\n\n#!/bin/bash  \n  \n# 使用awk编写的wc程序   \n  \n# 自定义变量 chars 变量存储字符个数,自定义变量 words 变量存储单词个数  \n# awk 内置变量 NR 存储行数  \n# length()为 awk 内置函数,用来统计每行的字符数量,因为每行都会有一个隐藏的$,所以每次统计后都+1  \n# wc 程序会把文件结尾符$也统计在内,可以使用 cat ‐A 文件名,查看该隐藏字符  \nawk \'{chars+=length($0)+1;words+=NF} END{print NR,words,chars}\' $1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',normalizedContent:'# 1）编写hello world脚本\n\n#!/bin/bash  \n  \n# 编写hello world脚本  \n  \necho "hello world!"  \n\n\n1\n2\n3\n4\n5\n\n\n# 2）通过位置变量创建 linux 系统账户及密码\n\n#!/bin/bash  \n  \n# 通过位置变量创建 linux 系统账户及密码  \n  \n#$1 是执行脚本的第一个参数,$2 是执行脚本的第二个参数  \nuseradd    "$1"   \necho "$2"  |  passwd  ‐‐stdin  "$1"  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 3）备份日志\n\n#!/bin/bash  \n# 每周 5 使用 tar 命令备份/var/log 下的所有日志文件  \n# vim  /root/logbak.sh  \n# 编写备份脚本,备份后的文件名包含日期标签,防止后面的备份将前面的备份数据覆盖  \n# 注意 date 命令需要使用反引号括起来,反引号在键盘<tab>键上面  \ntar  -czf  log-`date +%y%m%d`.tar.gz  /var/log   \n  \n# crontab ‐e  #编写计划任务,执行备份脚本  \n00  03  *  *  5  /root/logbak.sh  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 4）一键部署 lnmp(rpm 包版本)\n\n#!/bin/bash  \n# 一键部署 lnmp(rpm 包版本)  \n# 使用 yum 安装部署 lnmp,需要提前配置好 yum 源,否则该脚本会失败  \n# 本脚本使用于 centos7.2 或 rhel7.2  \nyum ‐y install httpd  \nyum ‐y install mariadb mariadb‐devel mariadb‐server  \nyum ‐y install php  php‐mysql  \n  \nsystemctl start httpd mariadb  \nsystemctl enable httpd mariadb  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 5）监控内存和磁盘容量，小于给定值时报警\n\n#!/bin/bash  \n  \n# 实时监控本机内存和硬盘剩余空间,剩余内存小于500m、根分区剩余空间小于1000m时,发送报警邮件给root管理员  \n  \n# 提取根分区剩余空间  \ndisk_size=$(df / | awk \'/\\//{print $4}\')  \n  \n# 提取内存剩余空间  \nmem_size=$(free | awk \'/mem/{print $4}\')  \nwhile :  \ndo  \n# 注意内存和磁盘提取的空间大小都是以 kb 为单位  \nif  [  $disk_size -le 512000 -a $mem_size -le 1024000  ]  \nthen  \n    mail  ‐s  "warning"  root  <<eof  \n  insufficient resources,资源不足  \neof  \nfi  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 6）猜数字游戏\n\n#!/bin/bash  \n  \n# 脚本生成一个 100 以内的随机数,提示用户猜数字,根据用户的输入,提示用户猜对了,  \n# 猜小了或猜大了,直至用户猜对脚本结束。  \n  \n# random 为系统自带的系统变量,值为 0‐32767的随机数  \n# 使用取余算法将随机数变为 1‐100 的随机数  \nnum=$[random%100+1]  \necho "$num"  \n  \n# 使用 read 提示用户猜数字  \n# 使用 if 判断用户猜数字的大小关系:‐eq(等于),‐ne(不等于),‐gt(大于),‐ge(大于等于),  \n# ‐lt(小于),‐le(小于等于)  \nwhile  :  \ndo  \n  read -p "计算机生成了一个 1‐100 的随机数,你猜: " cai  \n    if [ $cai -eq $num ]  \n    then  \n         echo "恭喜,猜对了"  \n         exit  \n      elif [ $cai -gt $num ]  \n      then  \n             echo "oops,猜大了"  \n        else  \n             echo "oops,猜小了"  \n   fi  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n# 7）检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不是,则提示您非管理员(使用字串对比版本)\n\n#!/bin/bash  \n  \n# 检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不  \n# 是,则提示您非管理员(使用字串对比版本)   \nif [ $user == "root" ]  \nthen  \n  yum ‐y install vsftpd  \nelse  \n    echo "您不是管理员,没有权限安装软件"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 8）检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不是,则提示您非管理员(使用 uid 数字对比版本)\n\n#!/bin/bash  \n  \n# 检测本机当前用户是否为超级管理员,如果是管理员,则使用 yum 安装 vsftpd,如果不  \n# 是,则提示您非管理员(使用 uid 数字对比版本)  \nif [ $uid -eq 0 ];then  \n    yum ‐y install vsftpd  \nelse  \n    echo "您不是管理员,没有权限安装软件"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 9）编写脚本:提示用户输入用户名和密码,脚本自动创建相应的账户及配置密码。如果用户不输入账户名,则提示必须输入账户名并退出脚本;如果用户不输入密码,则统一使用默认的 123456 作为默认密码。\n\n#!/bin/bash  \n  \n# 编写脚本:提示用户输入用户名和密码,脚本自动创建相应的账户及配置密码。如果用户  \n# 不输入账户名,则提示必须输入账户名并退出脚本;如果用户不输入密码,则统一使用默  \n# 认的 123456 作为默认密码。  \nread -p "请输入用户名: " user  \n#使用‐z 可以判断一个变量是否为空,如果为空,提示用户必须输入账户名,并退出脚本,退出码为 2  \n#没有输入用户名脚本退出后,使用$?查看的返回码为 2  \nif [ -z $user ];then  \n     echo "您不需输入账户名"  \n   exit 2  \nfi  \n#使用 stty ‐echo 关闭 shell 的回显功能  \n#使用 stty  echo 打开 shell 的回显功能  \nstty -echo  \nread -p "请输入密码: " pass  \nstty echo  \npass=${pass:‐123456}  \nuseradd "$user"  \necho "$pass" | passwd ‐‐stdin "$user"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# 10）输入三个数并进行升序排序\n\n#!/bin/bash  \n  \n# 依次提示用户输入 3 个整数,脚本根据数字大小依次排序输出 3 个数字  \nread -p "请输入一个整数:" num1  \nread -p "请输入一个整数:" num2  \nread -p "请输入一个整数:" num3  \n# 不管谁大谁小,最后都打印 echo "$num1,$num2,$num3"  \n# num1 中永远存最小的值,num2 中永远存中间值,num3 永远存最大值  \n# 如果输入的不是这样的顺序,则改变数的存储顺序,如:可以将 num1 和 num2 的值对调  \ntmp=0  \n# 如果 num1 大于 num2,就把 num1 和和 num2 的值对调,确保 num1 变量中存的是最小值  \nif [ $num1 -gt $num2 ];then     \n  tmp=$num1  \n  num1=$num2  \n  num2=$tmp  \nfi  \n# 如果 num1 大于 num3,就把 num1 和 num3 对调,确保 num1 变量中存的是最小值  \nif [ $num1 -gt $num3 ];then     \n    tmp=$num1  \n    num1=$num3  \n    num3=$tmp  \nfi  \n# 如果 num2 大于 num3,就把 num2 和 num3 对标,确保 num2 变量中存的是小一点的值  \nif [ $num2 -gt $num3 ];then  \n    tmp=$num2  \n    num2=$num3  \n    num3=$tmp  \nfi  \necho "排序后数据(从小到大)为:$num1,$num2,$num3"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n# 11）石头、剪刀、布游戏\n\n#!/bin/bash  \n  \n# 编写脚本,实现人机<石头,剪刀,布>游戏  \ngame=(石头 剪刀 布)  \nnum=$[random%3]  \ncomputer=${game[$num]}  \n# 通过随机数获取计算机的出拳  \n# 出拳的可能性保存在一个数组中,game[0],game[1],game[2]分别是 3 中不同的可能  \n  \necho "请根据下列提示选择您的出拳手势"  \necho "1.石头"  \necho "2.剪刀"  \necho "3.布"  \n  \nread -p "请选择 1‐3:" person  \ncase  $person  in  \n1)  \n  if [ $num -eq 0 ]  \n  then  \n    echo "平局"  \n    elif [ $num -eq 1 ]  \n    then  \n      echo "你赢"  \n  else  \n    echo "计算机赢"  \n  fi;;  \n2)     \n  if [ $num -eq 0 ]  \n  then  \n    echo "计算机赢"  \n    elif [ $num -eq 1 ]  \n    then  \n      echo "平局"  \n  else  \n    echo "你赢"  \n  fi;;  \n3)  \n  if [ $num -eq 0 ]  \n  then  \n    echo "你赢"  \n    elif [ $num -eq 1 ]  \n    then  \n      echo "计算机赢"  \n  else  \n    echo "平局"  \n  fi;;  \n*)  \n  echo "必须输入 1‐3 的数字"  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n\n\n# 12）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(for 版本)\n\n#!/bin/bash  \n  \n# 编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机  \n# 状态(for 版本)  \nfor i in {1..254}  \ndo  \n  # 每隔0.3秒ping一次，一共ping2次，并以1毫秒为单位设置ping的超时时间  \n     ping ‐c 2 ‐i 0.3 ‐w 1 192.168.4.$i  &>/dev/null  \n    if  [ $? -eq 0 ];then  \n         echo "192.168.4.$i is up"  \n     else  \n         echo  "192.168.4.$i is down"  \n     fi  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 13）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(while 版本)\n\n#!/bin/bash  \n  \n# 编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机  \n# 状态(while 版本)   \ni=1  \nwhile [ $i -le 254 ]  \ndo  \n     ping ‐c 2 ‐i 0.3 ‐w 1 192.168.4.$i  &>/dev/null  \n     if  [ $? -eq 0 ];then  \n         echo "192.168.4.$i is up"  \n    else  \n         echo  "192.168.4.$i is down"  \n     fi  \n     let i++  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 14）编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机状态(多进程版)\n\n#!/bin/bash  \n  \n# 编写脚本测试 192.168.4.0/24 整个网段中哪些主机处于开机状态,哪些主机处于关机  \n# 状态(多进程版)  \n#定义一个函数,ping 某一台主机,并检测主机的存活状态  \nmyping(){  \nping ‐c 2 ‐i 0.3 ‐w 1 $1  &>/dev/null  \nif  [ $? -eq 0 ];then  \n  echo "$1 is up"  \nelse  \n  echo "$1 is down"  \nfi  \n}  \nfor i in {1..254}  \ndo  \n     myping 192.168.4.$i &  \ndone  \n# 使用&符号,将执行的函数放入后台执行  \n# 这样做的好处是不需要等待ping第一台主机的回应,就可以继续并发ping第二台主机,依次类推。  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 15）编写脚本,显示进度条\n\n#!/bin/bash  \n  \n# 编写脚本,显示进度条  \njindu(){  \nwhile :  \ndo  \n     echo -n \'#\'  \n     sleep 0.2  \ndone  \n}  \njindu &  \ncp -a $1 $2  \nkillall $0  \necho "拷贝完成"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 16）进度条,动态时针版本；定义一个显示进度的函数,屏幕快速显示| / ‐ \\\n\n#!/bin/bash  \n  \n# 进度条,动态时针版本  \n# 定义一个显示进度的函数,屏幕快速显示|  / ‐ \\  \nrotate_line(){  \ninterval=0.5  #设置间隔时间  \ncount="0"     #设置4个形状的编号,默认编号为 0(不代表任何图像)  \nwhile :  \ndo  \n  count=`expr $count + 1` #执行循环,count 每次循环加 1,(分别代表4种不同的形状)  \n  case $count in          #判断 count 的值,值不一样显示的形状就不一样  \n  "1")                    #值为 1 显示‐  \n          echo -e \'‐\'"\\b\\c"  \n          sleep $interval  \n          ;;  \n    "2")                  #值为 2 显示\\\\,第一个\\是转义  \n          echo -e \'\\\\\'"\\b\\c"  \n          sleep $interval  \n          ;;  \n    "3")                  #值为 3 显示|  \n          echo -e "|\\b\\c"  \n          sleep $interval  \n          ;;  \n   "4")                   #值为 4 显示/  \n          echo -e "/\\b\\c"  \n          sleep $interval  \n          ;;  \n    *)                    #值为其他时,将 count 重置为 0  \n          count="0";;  \n    esac  \ndone  \n}  \nrotate_line  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n# 17）9*9 乘法表\n\n#!/bin/bash  \n  \n# 9*9 乘法表(编写 shell 脚本,打印 9*9 乘法表)   \nfor i in `seq 9`  \ndo  \n    for j in `seq $i`  \n     do  \n         echo -n "$j*$i=$[i*j]  "  \n     done  \n    echo  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 18）使用死循环实时显示 eth0 网卡发送的数据包流量\n\n#!/bin/bash  \n  \n# 使用死循环实时显示 eth0 网卡发送的数据包流量   \nwhile :  \ndo  \n   echo  \'本地网卡 eth0 流量信息如下: \'  \n    ifconfig eth0 | grep "rx pack" | awk \'{print $5}\'  \n    ifconfig eth0 | grep "tx pack" | awk \'{print $5}\'  \n     sleep 1  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 19）使用 user.txt 文件中的人员名单,在计算机中自动创建对应的账户并配置初始密码本脚本执行,需要提前准备一个 user.txt 文件,该文件中包含有若干用户名信息\n\n#!/bin/bash  \n  \n# 使用 user.txt 文件中的人员名单,在计算机中自动创建对应的账户并配置初始密码  \n# 本脚本执行,需要提前准备一个 user.txt 文件,该文件中包含有若干用户名信息  \nfor i in `cat user.txt`  \ndo  \n     useradd  $i  \n     echo "123456" | passwd ‐‐stdin $i  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 20）编写批量修改扩展名脚本\n\n#!/bin/bash  \n  \n# 编写批量修改扩展名脚本,如批量将 txt 文件修改为 doc 文件   \n# 执行脚本时,需要给脚本添加位置参数  \n# 脚本名  txt  doc(可以将 txt 的扩展名修改为 doc)  \n# 脚本名  doc  jpg(可以将 doc 的扩展名修改为 jpg)  \nfor i in `ls *.$1`  \ndo  \n     mv $i ${i%.*}.$2  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 21）使用 expect 工具自动交互密码远程其他主机安装 httpd 软件\n\n#!/bin/bash  \n  \n# 使用 expect 工具自动交互密码远程其他主机安装 httpd 软件   \n  \n# 删除~/.ssh/known_hosts 后,ssh 远程任何主机都会询问是否确认要连接该主机  \nrm  ‐rf  ~/.ssh/known_hosts  \nexpect <<eof  \nspawn ssh 192.168.4.254  \nexpect "yes/no" {send "yes\\r"}  \n# 根据自己的实际情况将密码修改为真实的密码字串  \nexpect "password" {send  "密码\\r"}  \nexpect "#" {send  "yum ‐y install httpd\\r"}  \nexpect "#" {send  "exit\\r"}  \neof  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 22）一键部署 lnmp(源码安装版本)\n\n#!/bin/bash  \n  \n# 一键部署 lnmp(源码安装版本)  \nmenu()  \n{  \nclear  \necho "  ##############‐‐‐‐menu‐‐‐‐##############"  \necho "# 1. install nginx"  \necho "# 2. install mysql"  \necho "# 3. install php"  \necho "# 4. exit program"  \necho "  ########################################"  \n}  \n  \nchoice()  \n{  \n  read -p "please choice a menu[1‐9]:" select  \n}  \n  \ninstall_nginx()  \n{  \n  id nginx &>/dev/null  \n  if [ $? -ne 0 ];then  \n    useradd -s /sbin/nologin nginx  \n  fi  \n  if [ -f nginx‐1.8.0.tar.gz ];then  \n    tar -xf nginx‐1.8.0.tar.gz  \n    cd nginx‐1.8.0  \n    yum -y install  gcc pcre‐devel openssl‐devel zlib‐devel make  \n    ./configure ‐‐prefix=/usr/local/nginx ‐‐with‐http_ssl_module  \n    make  \n    make install  \n    ln -s /usr/local/nginx/sbin/nginx /usr/sbin/  \n    cd ..  \n  else  \n    echo "没有 nginx 源码包"  \n  fi  \n}  \n  \ninstall_mysql()  \n{  \n  yum -y install gcc gcc‐c++ cmake ncurses‐devel perl  \n  id mysql &>/dev/null  \n  if [ $? -ne 0 ];then  \n    useradd -s /sbin/nologin mysql  \n  fi  \n  if [ -f mysql‐5.6.25.tar.gz ];then  \n    tar -xf mysql‐5.6.25.tar.gz  \n    cd mysql‐5.6.25  \n    cmake .  \n    make  \n    make install  \n    /usr/local/mysql/scripts/mysql_install_db ‐‐user=mysql ‐‐datadir=/usr/local/mysql/data/  \n‐‐basedir=/usr/local/mysql/  \n    chown -r root.mysql /usr/local/mysql  \n    chown -r mysql /usr/local/mysql/data  \n    /bin/cp -f /usr/local/mysql/support‐files/mysql.server /etc/init.d/mysqld  \n    chmod +x /etc/init.d/mysqld  \n    /bin/cp -f /usr/local/mysql/support‐files/my‐default.cnf /etc/my.cnf  \n    echo "/usr/local/mysql/lib/" >> /etc/ld.so.conf  \n    ldconfig  \n    echo \'path=\\$path:/usr/local/mysql/bin/\' >> /etc/profile  \n    export path  \n  else  \n    echo  "没有 mysql 源码包"  \n    exit  \n  fi  \n}  \n  \ninstall_php()  \n{  \n#安装 php 时没有指定启动哪些模块功能,如果的用户可以根据实际情况自行添加额外功能如‐‐with‐gd 等  \nyum  -y  install  gcc  libxml2‐devel  \nif [ -f mhash‐0.9.9.9.tar.gz ];then  \n  tar -xf mhash‐0.9.9.9.tar.gz  \n  cd mhash‐0.9.9.9  \n  ./configure  \n  make  \n  make install  \n  cd ..  \nif [ ! ‐f /usr/lib/libmhash.so ];then  \n  ln -s /usr/local/lib/libmhash.so /usr/lib/  \nfi  \nldconfig  \nelse  \n  echo "没有 mhash 源码包文件"  \n  exit  \nfi  \nif [ -f libmcrypt‐2.5.8.tar.gz ];then  \n  tar -xf libmcrypt‐2.5.8.tar.gz  \n  cd libmcrypt‐2.5.8  \n  ./configure  \n  make  \n  make install  \n  cd ..  \n  if [ ! -f /usr/lib/libmcrypt.so ];then    \n    ln -s /usr/local/lib/libmcrypt.so /usr/lib/  \n  fi  \n  ldconfig  \nelse  \n  echo "没有 libmcrypt 源码包文件"  \n  exit  \nfi  \nif [ -f php‐5.4.24.tar.gz ];then  \n  tar -xf php‐5.4.24.tar.gz  \n  cd php‐5.4.24  \n  ./configure  ‐‐prefix=/usr/local/php5  ‐‐with‐mysql=/usr/local/mysql  ‐‐enable‐fpm    ‐‐  \n  enable‐mbstring  ‐‐with‐mcrypt  ‐‐with‐mhash  ‐‐with‐config‐file‐path=/usr/local/php5/etc  ‐‐with‐  \n  mysqli=/usr/local/mysql/bin/mysql_config  \n  make && make install  \n  /bin/cp -f php.ini‐production /usr/local/php5/etc/php.ini  \n  /bin/cp -f /usr/local/php5/etc/php‐fpm.conf.default /usr/local/php5/etc/php‐fpm.conf  \n  cd ..  \nelse  \n  echo "没有 php 源码包文件"  \n  exit  \nfi   \n}  \n  \nwhile :  \ndo  \n  menu  \n  choice  \n  case $select in  \n  1)  \n    install_nginx  \n    ;;  \n  2)  \n    install_mysql  \n    ;;  \n  3)  \n    install_php  \n    ;;  \n  4)  \n    exit  \n    ;;  \n  *)  \n    echo sorry!  \n  esac  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n\n\n# 23）编写脚本快速克隆 kvm 虚拟机\n\n#!/bin/bash  \n  \n# 编写脚本快速克隆 kvm 虚拟机  \n  \n# 本脚本针对 rhel7.2 或 centos7.2  \n# 本脚本需要提前准备一个 qcow2 格式的虚拟机模板,  \n# 名称为/var/lib/libvirt/images  /.rh7_template 的虚拟机模板  \n# 该脚本使用 qemu‐img 命令快速创建快照虚拟机  \n# 脚本使用 sed 修改模板虚拟机的配置文件,将虚拟机名称、uuid、磁盘文件名、mac 地址  \n# exit code:    \n#    65 ‐> user input nothing  \n#    66 ‐> user input is not a number  \n#    67 ‐> user input out of range  \n#    68 ‐> vm disk image exists  \n  \nimg_dir=/var/lib/libvirt/images  \nbasevm=rh7_template  \nread -p "enter vm number: " vmnum  \nif [ $vmnum -le 9 ];then  \nvmnum=0$vmnum  \nfi  \n  \nif [ -z "${vmnum}" ]; then  \n    echo "you must input a number."  \n    exit 65  \nelif [[  ${vmnum} =~ [a‐z]  ]; then  \n    echo "you must input a number."  \n    exit 66  \nelif [ ${vmnum} -lt 1 -o ${vmnum} -gt 99 ]; then  \n    echo "input out of range"  \n    exit 67  \nfi  \n  \nnewvm=rh7_node${vmnum}  \n  \nif [ -e $img_dir/${newvm}.img ]; then  \n    echo "file exists."  \n    exit 68  \nfi  \n  \necho -en "creating virtual machine disk image......\\t"  \nqemu‐img create -f qcow2 ‐b $img_dir/.${basevm}.img $img_dir/${newvm}.img &> /dev/null  \n  \necho -e "\\e[32;1m[ok]\\e[0m"  \n#virsh dumpxml ${basevm} > /tmp/myvm.xml  \n  \ncat /var/lib/libvirt/images/.rhel7.xml > /tmp/myvm.xml  \nsed -i "/<name>${basevm}/s/${basevm}/${newvm}/" /tmp/myvm.xml  \nsed -i "/uuid/s/<uuid>.*<\\/uuid>/<uuid>$(uuidgen)<\\/uuid>/" /tmp/myvm.xml  \nsed -i "/${basevm}\\.img/s/${basevm}/${newvm}/" /tmp/myvm.xml  \n  \n# 修改 mac 地址,本例使用的是常量,每位使用该脚本的用户需要根据实际情况修改这些值   \n# 最好这里可以使用便利,这样更适合于批量操作,可以克隆更多虚拟机   \nsed -i "/mac /s/a1/0c/" /tmp/myvm.xml  \n  \necho -en "defining new virtual machine......\\t\\t"  \nvirsh define /tmp/myvm.xml &> /dev/null  \necho -e "\\e[32;1m[ok]\\e[0m"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n\n\n# 24）点名器脚本\n\n#!/bin/bash  \n  \n# 编写一个点名器脚本  \n  \n# 该脚本,需要提前准备一个 user.txt 文件  \n# 该文件中需要包含所有姓名的信息,一行一个姓名,脚本每次随机显示一个姓名  \nwhile :  \ndo  \n#统计 user 文件中有多少用户  \nline=`cat user.txt |wc ‐l`  \nnum=$[random%line+1]  \nsed -n "${num}p"  user.txt  \nsleep 0.2  \nclear  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 25）查看有多少远程的 ip 在连接本机\n\n#!/bin/bash  \n  \n# 查看有多少远程的 ip 在连接本机(不管是通过 ssh 还是 web 还是 ftp 都统计)   \n# 使用 netstat ‐atn 可以查看本机所有连接的状态,‐a 查看所有,  \n# -t仅显示 tcp 连接的信息,‐n 数字格式显示  \n# local address(第四列是本机的 ip 和端口信息)  \n# foreign address(第五列是远程主机的 ip 和端口信息)  \n# 使用 awk 命令仅显示第 5 列数据,再显示第 1 列 ip 地址的信息  \n# sort 可以按数字大小排序,最后使用 uniq 将多余重复的删除,并统计重复的次数  \nnetstat -atn  |  awk  \'{print $5}\'  | awk  \'{print $1}\' | sort -nr  |  uniq -c  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 26）对 100 以内的所有正整数相加求和(1+2+3+4…+100)\n\n#!/bin/bash  \n  \n# 对 100 以内的所有正整数相加求和(1+2+3+4...+100)  \n#seq 100 可以快速自动生成 100 个整数  \nsum=0  \nfor i in `seq 100`  \ndo  \n    sum=$[sum+i]  \ndone  \necho "总和是:$sum"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 27）统计 13:30 到 14:30 所有访问 apache 服务器的请求有多少个\n\n#!/bin/bash  \n  \n# 统计 13:30 到 14:30 所有访问 apache 服务器的请求有多少个  \n  \n# awk 使用‐f 选项指定文件内容的分隔符是/或者:  \n# 条件判断$7:$8 大于等于 13:30,并且要求,$7:$8 小于等于 14:30  \n# 最后使用 wc ‐l 统计这样的数据有多少行,即多少个  \nawk -f "[ /:]" \'$7":"$8>="13:30" && $7":"$8<="14:30"\' /var/log/httpd/access_log |wc -l  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 28）统计 13:30 到 14:30 所有访问本机 aapche 服务器的远程 ip 地址是什么\n\n#!/bin/bash  \n  \n# 统计 13:30 到 14:30 所有访问本机 aapche 服务器的远程 ip 地址是什么   \n# awk 使用‐f 选项指定文件内容的分隔符是/或者:  \n# 条件判断$7:$8 大于等于 13:30,并且要求,$7:$8 小于等于 14:30  \n# 日志文档内容里面,第 1 列是远程主机的 ip 地址,使用 awk 单独显示第 1 列即可  \nawk -f "[ /:]" \'$7":"$8>="13:30" && $7":"$8<="14:30"{print $1}\' /var/log/httpd/access_log  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 29）打印国际象棋棋盘\n\n#!/bin/bash  \n  \n# 打印国际象棋棋盘  \n# 设置两个变量,i 和 j,一个代表行,一个代表列,国际象棋为 8*8 棋盘  \n# i=1 是代表准备打印第一行棋盘,第 1 行棋盘有灰色和蓝色间隔输出,总共为 8 列  \n# i=1,j=1 代表第 1 行的第 1 列;i=2,j=3 代表第 2 行的第 3 列  \n# 棋盘的规律是 i+j 如果是偶数,就打印蓝色色块,如果是奇数就打印灰色色块  \n# 使用 echo ‐ne 打印色块,并且打印完成色块后不自动换行,在同一行继续输出其他色块  \nfor i in {1..8}  \ndo  \n    for j in {1..8}  \n    do  \n      sum=$[i+j]  \n    if [  $[sum%2] -eq 0 ];then  \n       echo -ne "\\033[46m  \\033[0m"  \n    else  \n      echo -ne "\\033[47m  \\033[0m"  \n    fi  \n    done  \n    echo  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n# 30）统计每个远程 ip 访问了本机 apache 几次?\n\n#!/bin/bash  \n  \n# 统计每个远程 ip 访问了本机 apache 几次?   \nawk  \'{ip[$1]++}end{for(i in ip){print ip[i],i}}\'  /var/log/httpd/access_log  \n\n\n1\n2\n3\n4\n\n\n# 31）统计当前 linux 系统中可以登录计算机的账户有多少个\n\n#!/bin/bash  \n  \n# 统计当前 linux 系统中可以登录计算机的账户有多少个  \n#方法 1:  \ngrep "bash$" /etc/passwd | wc -l  \n#方法 2:  \nawk -f: \'/bash$/{x++}end{print x}\'  /etc/passwd  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 32）统计/var/log 有多少个文件,并显示这些文件名\n\n#!/bin/bash  \n  \n# 统计/var/log 有多少个文件,并显示这些文件名   \n# 使用 ls 递归显示所有,再判断是否为文件,如果是文件则计数器加 1  \ncd  /var/log  \nsum=0  \nfor i in `ls -r *`  \ndo  \n   if [ -f $i ];then  \n       let sum++  \n         echo "文件名:$i"  \n     fi  \ndone  \necho "总文件数量为:$sum"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 33）自动为其他脚本添加解释器信息\n\ndocker+k8s+jenkins 主流技术全解视频资料【干货免费分享】  \n  \n#!/bin/bash  \n  \n# 自动为其他脚本添加解释器信息#!/bin/bash,如脚本名为 test.sh 则效果如下:   \n# ./test.sh  abc.sh  自动为 abc.sh 添加解释器信息  \n# ./test.sh  user.sh  自动为 user.sh 添加解释器信息  \n# 先使用 grep 判断对象脚本是否已经有解释器信息,如果没有则使用 sed 添加解释器以及描述信息  \nif  !  grep  -q  "^#!"  $1; then  \nsed  \'1i #!/bin/bash\'  $1  \nsed  \'2i #description: \'  \nfi  \n# 因为每个脚本的功能不同,作用不同,所以在给对象脚本添加完解释器信息,以及 description 后还希望  \n# 继续编辑具体的脚本功能的描述信息,这里直接使用 vim 把对象脚本打开,并且光标跳转到该文件的第 2 行  \nvim +2 $1  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 34）自动化部署 varnish 源码包软件\n\n#!/bin/bash  \n  \n# 自动化部署 varnish 源码包软件   \n# 本脚本需要提前下载 varnish‐3.0.6.tar.gz 这样一个源码包软件,该脚本即可用自动源码安装部署软件  \n  \nyum -y install gcc readline‐devel pcre‐devel  \nuseradd -s /sbin/nologin varnish  \ntar -xf varnish‐3.0.6.tar.gz  \ncd varnish‐3.0.6  \n  \n# 使用 configure,make,make install 源码安装软件包  \n./configure ‐‐prefix=/usr/local/varnish  \nmake && make install  \n  \n# 在源码包目录下,将相应的配置文件拷贝到 linux 系统文件系统中  \n# 默认安装完成后,不会自动拷贝或安装配置文件到 linux 系统,所以需要手动 cp 复制配置文件  \n# 并使用 uuidgen 生成一个随机密钥的配置文件  \ncp redhat/varnish.initrc /etc/init.d/varnish  \ncp redhat/varnish.sysconfig /etc/sysconfig/varnish  \ncp redhat/varnish_reload_vcl /usr/bin/  \nln -s /usr/local/varnish/sbin/varnishd /usr/sbin/  \nln -s /usr/local/varnish/bin/* /usr/bin  \nmkdir /etc/varnish  \ncp /usr/local/varnish/etc/varnish/default.vcl /etc/varnish/  \nuuidgen > /etc/varnish/secret  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n# 35）编写 nginx 启动脚本\n\n#!/bin/bash  \n  \n# 编写 nginx 启动脚本   \n# 本脚本编写完成后,放置在/etc/init.d/目录下,就可以被 linux 系统自动识别到该脚本  \n# 如果本脚本名为/etc/init.d/nginx,则 service nginx start 就可以启动该服务  \n# service nginx stop 就可以关闭服务  \n# service nginx restart 可以重启服务  \n# service nginx status 可以查看服务状态  \nprogram=/usr/local/nginx/sbin/nginx  \npid=/usr/local/nginx/logs/nginx.pid  \nstart(){  \nif [ -f $pid ];then  \n  echo  "nginx 服务已经处于开启状态"  \nelse  \n  $program  \nfi  \nstop(){  \nif [ -! -f $pid ];then  \n  echo "nginx 服务已经关闭"  \nelse  \n  $program -s stop  \n  echo "关闭服务 ok"  \nfi  \n}  \nstatus(){  \nif [ -f $pid ];then  \n  echo "服务正在运行..."  \nelse  \n  echo "服务已经关闭"  \nfi  \n}  \n  \ncase $1 in  \nstart)  \n  start;;  \nstop)  \n  stop;;  \nrestart)  \n  stop  \n  sleep 1  \n  start;;  \nstatus)  \n  status;;  \n*)  \n  echo  "你输入的语法格式错误"  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\n\n# 36）自动对磁盘分区、格式化、挂载\n\n #!/bin/bash  \n  \n# 自动对磁盘分区、格式化、挂载  \n# 对虚拟机的 vdb 磁盘进行分区格式化,使用<<将需要的分区指令导入给程序 fdisk  \n# n(新建分区),p(创建主分区),1(分区编号为 1),两个空白行(两个回车,相当于将整个磁盘分一个区)  \n# 注意:1 后面的两个回车(空白行)是必须的!  \nfdisk /dev/vdb << eof  \nn  \np  \n1  \n  \n  \nwq  \neof  \n#格式化刚刚创建好的分区  \nmkfs.xfs   /dev/vdb1  \n#创建挂载点目录  \nif [ -e /data ]; then  \nexit  \nfi  \nmkdir /data  \n#自动挂载刚刚创建的分区,并设置开机自动挂载该分区  \necho \'/dev/vdb1     /data    xfs    defaults        1 2\'  >> /etc/fstab  \nmount -a  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n# 37）自动优化 linux 内核参数\n\n#!/bin/bash  \n  \n# 自动优化 linux 内核参数  \n#脚本针对 rhel7  \ncat >> /usr/lib/sysctl.d/00‐system.conf <<eof  \nfs.file‐max=65535  \nnet.ipv4.tcp_timestamps = 0  \nnet.ipv4.tcp_synack_retries = 5  \nnet.ipv4.tcp_syn_retries = 5  \nnet.ipv4.tcp_tw_recycle = 1  \nnet.ipv4.tcp_tw_reuse = 1  \nnet.ipv4.tcp_fin_timeout = 30  \n#net.ipv4.tcp_keepalive_time = 120  \nnet.ipv4.ip_local_port_range = 1024  65535  \nkernel.shmall = 2097152  \nkernel.shmmax = 2147483648  \nkernel.shmmni = 4096  \nkernel.sem = 5010 641280 5010 128  \nnet.core.wmem_default=262144  \nnet.core.wmem_max=262144  \nnet.core.rmem_default=4194304  \nnet.core.rmem_max=4194304  \nnet.ipv4.tcp_fin_timeout = 10  \nnet.ipv4.tcp_keepalive_time = 30  \nnet.ipv4.tcp_window_scaling = 0  \nnet.ipv4.tcp_sack = 0  \neof  \n  \nsysctl –p  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n# 38）切割 nginx 日志文件(防止单个文件过大,后期处理很困难)\n\n#mkdir  /data/scripts  \n#vim   /data/scripts/nginx_log.sh    \n#!/bin/bash  \n  \n# 切割 nginx 日志文件(防止单个文件过大,后期处理很困难)   \nlogs_path="/usr/local/nginx/logs/"  \nmv ${logs_path}access.log ${logs_path}access_$(date -d "yesterday" +"%y%m%d").log  \nkill -usr1  `cat /usr/local/nginx/logs/nginx.pid`  \n  \n# chmod +x  /data/scripts/nginx_log.sh  \n# crontab  ‐e                    #脚本写完后,将脚本放入计划任务每天执行一次脚本  \n0  1  *  *   *   /data/scripts/nginx_log.sh  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 39）检测 mysql 数据库连接数量\n\n#!/bin/bash  \n  \n# 检测 mysql 数据库连接数量   \n  \n# 本脚本每 2 秒检测一次 mysql 并发连接数,可以将本脚本设置为开机启动脚本,或在特定时间段执行  \n# 以满足对 mysql 数据库的监控需求,查看 mysql 连接是否正常  \n# 本案例中的用户名和密码需要根据实际情况修改后方可使用  \nlog_file=/var/log/mysql_count.log  \nuser=root  \npasswd=123456  \nwhile :  \ndo  \n    sleep 2  \n    count=`mysqladmin  -u  "$user"  -p  "$passwd"   status |  awk \'{print $4}\'`  \n    echo "`date +%y‐%m‐%d` 并发连接数为:$count" >> $log_file  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 40）根据 md5 校验码,检测文件是否被修改\n\n#!/bin/bash  \n  \n# 根据 md5 校验码,检测文件是否被修改   \n# 本示例脚本检测的是/etc 目录下所有的 conf 结尾的文件,根据实际情况,您可以修改为其他目录或文件  \n# 本脚本在目标数据没有被修改时执行一次,当怀疑数据被人篡改,再执行一次  \n# 将两次执行的结果做对比,md5 码发生改变的文件,就是被人篡改的文件  \nfor i in $(ls /etc/*.conf)  \ndo  \n  md5sum "$i" >> /var/log/conf_file.log  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 41）检测 mysql 服务是否存活\n\n#!/bin/bash  \n  \n# 检测 mysql 服务是否存活   \n  \n# host 为你需要检测的 mysql 主机的 ip 地址,user 为 mysql 账户名,passwd 为密码  \n# 这些信息需要根据实际情况修改后方可使用  \nhost=192.168.51.198  \nuser=root  \npasswd=123456  \nmysqladmin -h \'$host\' -u \'$user\' -p\'$passwd\' ping &>/dev/null  \nif [ $? -eq 0 ]  \nthen  \n        echo "mysql is up"  \nelse  \n        echo "mysql is down"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 42）备份 mysql 的 shell 脚本(mysqldump版本)\n\n#!/bin/bash  \n  \n# 备份 mysql 的 shell 脚本(mysqldump版本)   \n  \n# 定义变量 user(数据库用户名),passwd(数据库密码),date(备份的时间标签)  \n# dbname(需要备份的数据库名称,根据实际需求需要修改该变量的值,默认备份 mysql 数据库)  \n  \nuser=root  \npasswd=123456  \ndbname=mysql  \ndate=$(date +%y%m%d)  \n  \n# 测试备份目录是否存在,不存在则自动创建该目录  \n[ ! -d /mysqlbackup ] && mkdir /mysqlbackup  \n# 使用 mysqldump 命令备份数据库  \nmysqldump -u "$user" -p "$passwd" "$dbname" > /mysqlbackup/"$dbname"-${date}.sql  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 43）将文件中所有的小写字母转换为大写字母\n\n#!/bin/bash  \n  \n# 将文件中所有的小写字母转换为大写字母   \n# $1是位置参数,是你需要转换大小写字母的文件名称  \n# 执行脚本,给定一个文件名作为参数,脚本就会将该文件中所有的小写字母转换为大写字母  \ntr "[a‐z]" "[a‐z]" < $1  \n\n\n1\n2\n3\n4\n5\n6\n\n\n# 44）非交互自动生成 ssh 密钥文件\n\n#!/bin/bash  \n  \n# 非交互自动生成 ssh 密钥文件   \n# ‐t 指定 ssh 密钥的算法为 rsa 算法;‐n 设置密钥的密码为空;‐f 指定生成的密钥文件>存放在哪里  \nrm  -rf  ~/.ssh/{known_hosts,id_rsa*}  \nssh‐keygen -t rsa -n \'\' -f ~/.ssh/id_rsa  \n\n\n1\n2\n3\n4\n5\n6\n\n\n# 45）检查特定的软件包是否已经安装\n\n#!/bin/bash  \n  \n# 检查特定的软件包是否已经安装   \nif [ $# -eq 0 ];then  \n  echo "你需要制定一个软件包名称作为脚本参数"  \n  echo "用法:$0 软件包名称 ..."  \nfi  \n# $@提取所有的位置变量的值,相当于$*  \nfor package in "$@"  \ndo  \n    if rpm -q ${package} &>/dev/null ;then  \n    echo -e "${package}\\033[32m 已经安装\\033[0m"  \n    else  \n    echo -e "${package}\\033[34;1m 未安装\\033[0m"  \n    fi  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 46）监控 http 服务器的状态(测试返回码)\n\n#!/bin/bash  \n  \n# 监控 http 服务器的状态(测试返回码)  \n  \n# 设置变量,url为你需要检测的目标网站的网址(ip 或域名),比如百度  \nurl=http://http://183.232.231.172/index.html  \n  \n# 定义函数 check_http:  \n# 使用 curl 命令检查 http 服务器的状态  \n# ‐m 设置curl不管访问成功或失败,最大消耗的时间为 5 秒,5 秒连接服务为相应则视为无法连接  \n# ‐s 设置静默连接,不显示连接时的连接速度、时间消耗等信息  \n# ‐o 将 curl 下载的页面内容导出到/dev/null(默认会在屏幕显示页面内容)  \n# ‐w 设置curl命令需要显示的内容%{http_code},指定curl返回服务器的状态码  \ncheck_http()  \n{  \n        status_code=$(curl -m 5 -s -o /dev/null -w %{http_code} $url)  \n}  \n  \n  \nwhile :  \ndo  \n        check_http  \n        date=$(date +%y%m%d‐%h:%m:%s)  \n  \n  \n# 生成报警邮件的内容  \n        echo "当前时间为:$date  \n        $url 服务器异常,状态码为${status_code}.  \n        请尽快排查异常." > /tmp/http$$.pid  \n  \n  \n# 指定测试服务器状态的函数,并根据返回码决定是发送邮件报警还是将正常信息写入日志  \n        if [ $status_code -ne 200 ];then  \n                mail -s warning root < /tmp/http$$.pid  \n        else  \n                echo "$url 连接正常" >> /var/log/http.log  \n        fi  \n        sleep 5  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n# 47）自动添加防火墙规则,开启某些服务或端口(适用于 rhel7)\n\n#!/bin/bash  \n  \n# 自动添加防火墙规则,开启某些服务或端口(适用于 rhel7)  \n#   \n# 设置变量定义需要添加到防火墙规则的服务和端口号  \n# 使用 firewall‐cmd ‐‐get‐services 可以查看 firewall 支持哪些服务  \nservice="nfs http ssh"  \nport="80 22 8080"  \n  \n# 循环将每个服务添加到防火墙规则中  \nfor i in $service  \ndo  \n    echo "adding $i service to firewall"  \n    firewall‐cmd  --add-service=${i}  \ndone  \n  \n#循环将每个端口添加到防火墙规则中  \nfor i in $port  \ndo  \n    echo "adding $i port to firewall"  \n    firewall‐cmd --add-port=${i}/tcp  \ndone  \n#将以上设置的临时防火墙规则,转换为永久有效的规则(确保重启后有效)  \nfirewall‐cmd  --runtime-to-permanent  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n# 48）使用脚本自动创建逻辑卷\n\n#!/bin/bash  \n  \n# 使用脚本自动创建逻辑卷   \n  \n  \n# 清屏,显示警告信息,创建将磁盘转换为逻辑卷会删除数据  \nclear  \necho -e "\\033[32m           !!!!!!警告(warning)!!!!!!\\033[0m"  \necho  \necho "+++++++++++++++++++++++++++++++++++++++++++++++++"  \necho "脚本会将整个磁盘转换为 pv,并删除磁盘上所有数据!!!"  \necho "this script will destroy all data on the disk"  \necho "+++++++++++++++++++++++++++++++++++++++++++++++++"  \necho  \nread -p "请问是否继续 y/n?:" sure  \n  \n# 测试用户输入的是否为 y,如果不是则退出脚本  \n[ $sure != y ] && exit  \n  \n# 提示用户输入相关参数(磁盘、卷组名称等数据),并测试用户是否输入了这些值,如果没有输入,则脚本退出  \nread -p "请输入磁盘名称,如/dev/vdb:" disk  \n[ -z $disk ] && echo "没有输入磁盘名称" && exit  \nread -p "请输入卷组名称:" vg_name  \n[ -z $vg_name ] && echo "没有输入卷组名称" && exit  \nread -p "请输入逻辑卷名称:" lv_name  \n[ -z $lv_name ] && echo "没有输入逻辑卷名称" && exit  \nread -p "请输入逻辑卷大小:" lv_size  \n[ -z $lv_size ] && echo "没有输入逻辑卷大小" && exit  \n# 使用命令创建逻辑卷  \npvcreate $disk  \nvgcreate $vg_name $disk  \nlvcreate -l ${lv_size}m -n ${lv_name}  ${vg_name}  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n# 49）显示 cpu 厂商信息\n\n#!/bin/bash  \n  \n# 显示 cpu 厂商信息   \nawk \'/vendor_id/{print $3}\' /proc/cpuinfo | uniq  \n\n\n1\n2\n3\n4\n\n\n# 50）删除某个目录下大小为 0 的文件\n\n#!/bin/bash  \n  \n# 删除某个目录下大小为 0 的文件  \n  \n#/var/www/html 为测试目录,脚本会清空该目录下所有 0 字节的文件  \ndir="/var/www/html"  \nfind $dir -type f -size 0 -exec rm -rf {} \\;  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 51）查找 linux 系统中的僵尸进程\n\n#!/bin/bash  \n  \n# 查找 linux 系统中的僵尸进程  \n# awk 判断 ps 命令输出的第 8 列为 z 是,显示该进程的 pid 和进程命令  \nps aux | awk \'{if($8 == "z"){print $2,$11}}\'  \n\n\n1\n2\n3\n4\n5\n\n\n# 52）提示用户输入年份后判断该年是否为闰年\n\n#!/bin/bash  \n  \n# 提示用户输入年份后判断该年是否为闰年  \n  \n  \n# 能被4整除并且并不能被100整除的年份是闰年  \n# 能被400整除的年份也是闰年  \nread -p "请输入一个年份:" year  \n  \n  \nif [ "$year" = "" ];then  \n    echo "没有输入年份"  \n    exit  \nfi  \n#使用正则测试变量 year 中是否包含大小写字母  \nif [[ "$year" =~ [a‐z] ]];then  \n    echo "你输入的不是数字"  \n    exit  \nfi  \n# 判断是否为闰年  \nif [ $[year % 4] -eq 0 ] && [ $[year % 100] -ne 0 ];then  \n    echo "$year年是闰年"    \nelif [ $[year % 400] -eq 0 ];then  \n    echo "$year年是闰年"  \nelse  \n    echo "$year年不是闰年"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n# 53）生成随机密码(urandom 版本)\n\n#!/bin/bash  \n  \n# 生成随机密码(urandom 版本)   \n  \n# /dev/urandom 文件是 linux 内置的随机设备文件  \n# cat /dev/urandom 可以看看里面的内容,ctrl+c 退出查看  \n# 查看该文件内容后,发现内容有些太随机,包括很多特殊符号,我们需要的密码不希望使用这些符号  \n# tr ‐dc \'_a‐za‐z0‐9\' < /dev/urandom  \n# 该命令可以将随机文件中其他的字符删除,仅保留大小写字母,数字,下划线,但是内容还是太多  \n# 我们可以继续将优化好的内容通过管道传递给 head 命令,在大量数据中仅显示头 10 个字节  \n# 注意 a 前面有个下划线  \ntr -dc \'_a‐za‐z0‐9\' </dev/urandom | head -c 10  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 54）生成随机密码(字串截取版本)\n\n#!/bin/bash  \n  \n# 生成随机密码(字串截取版本)   \n  \n# 设置变量 key,存储密码的所有可能性(密码库),如果还需要其他字符请自行添加其他密码字符  \n# 使用$#统计密码库的长度  \nkey="0123456789abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz"  \nnum=${#key}  \n# 设置初始密码为空  \npass=\'\'  \n# 循环 8 次,生成随机密码  \n# 每次都是随机数对密码库的长度取余,确保提取的密码字符不超过密码库的长度  \n# 每次循环提取一位随机密码,并将该随机密码追加到 pass 变量的最后  \nfor i in {1..8}  \ndo    \n  index=$[random%num]  \n  pass=$pass${key:$index:1}  \ndone  \necho $pass  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 55）生成随机密码(uuid 版本,16 进制密码)\n\n#!/bin/bash  \n  \n# 生成随机密码(uuid 版本,16 进制密码)   \nuuidgen  \n\n\n1\n2\n3\n4\n\n\n# 56）生成随机密码(进程 id 版本,数字密码)\n\n#!/bin/bash  \n  \n# 生成随机密码(进程 id 版本,数字密码)  \necho $$  \n\n\n1\n2\n3\n4\n\n\n# 57）测试用户名与密码是否正确\n\n#!/bin/bash  \n  \n# 测试用户名与密码是否正确  \n#用户名为 tom 并且密码为 123456,则提示登录成功,否则提示登录失败  \nread -p "请输入用户名:"  user  \nread -p "请输入密码:"    pass  \nif [ "$user" == \'tom\' -a "$pass" == \'123456\' ];then  \n  echo "login successful"  \nelse  \n  echo "login failed"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 58）循环测试用户名与密码是否正确\n\n#!/bin/bash  \n  \n# 循环测试用户名与密码是否正确   \n# 循环测试用户的账户名和密码,最大测试 3 次,输入正确提示登录成功,否则提示登录失败  \n# 用户名为 tom 并且密码为 123456    \nfor i in {1..3}  \ndo  \n  read -p "请输入用户名:" user  \n  read -p "请输入密码:"   pass  \nif [ "$user" == \'tom\' -a "$pass" == \'123456\' ];then  \n    echo "login successful"  \n     exit  \nfi  \ndone  \necho "login failed"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 59）shell 脚本的 fork 炸弹\n\n#!/bin/bash  \n  \n# shell 脚本的 fork 炸弹   \n  \n  \n# 快速消耗计算机资源,致使计算机死机  \n# 定义函数名为.(点), 函数中递归调用自己并放入后台执行  \n.() { .|.& };.  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 60）批量下载有序文件(pdf、图片、视频等等)\n\n#!/bin/bash  \n  \n# 批量下载有序文件(pdf、图片、视频等等)  \n  \n# 本脚本准备有序的网络资料进行批量下载操作(如 01.jpg,02.jpg,03.jpg)  \n# 设置资源来源的域名连接  \nurl="http://www.baidu.com/"  \necho  "开始下载..."  \nsleep 2  \ntype=jpg  \nfor i in `seq 100`  \n     echo "正在下载$i.$type"  \n  curl $url/$i.$type -o /tmp/${i}$type  \n     sleep 1  \ndone  \n#curl 使用-o 选项指定下载文件另存到哪里.  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 61）显示当前计算机中所有账户的用户名称\n\n #!/bin/bash  \n  \n # 显示当前计算机中所有账户的用户名称  \n  \n# 下面使用3种不同的方式列出计算机中所有账户的用户名  \n# 指定以:为分隔符,打印/etc/passwd 文件的第 1 列  \nawk -f: \'{print $1}\' /etc/passwd  \n  \n# 指定以:为分隔符,打印/etc/passwd 文件的第 1 列  \ncut -d: -f1 /etc/passwd  \n  \n# 使用 sed 的替换功能,将/etc/passwd 文件中:后面的所有内容替换为空(仅显示用户名)  \nsed \'s/:.*//\' /etc/passwd  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n# 62）制定目录路径,脚本自动将该目录使用 tar 命令打包备份到/data目录\n\n#!/bin/bash  \n  \n# 制定目录路径,脚本自动将该目录使用 tar 命令打包备份到/data目录   \n  \n  \n[ ! -d /data ] && mkdir /data  \n[ -z $1 ] && exit  \nif [ -d $1 ];then  \n  tar -czf /data/$1.-`date +%y%m%d`.tar.gz $1  \nelse  \n    echo "该目录不存在"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 63）显示进度条(回旋镖版)\n\n#!/bin/bash  \n  \n# 显示进度条(回旋镖版)  \n  \n  \nwhile :  \ndo  \n  clear  \n  for i in {1..20}  \n  do  \n    echo ‐e "\\033[3;${i}h*"  \n    sleep 0.1  \n    done  \n    clear  \n    for i in {20..1}  \n    do  \n    echo ‐e "\\033[3;${i}h*"  \n    sleep 0.1  \n    done  \n    clear  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n# 64）安装 lamp 环境(yum 版本)\n\n#!/bin/bash  \n  \n# 安装 lamp 环境(yum 版本)   \n# 本脚本适用于 rhel7(rhel6 中数据库为 mysql)  \nyum makecache &>/dev/null  \nnum=$(yum repolist | awk \'/repolist/{print $2}\' | sed \'s/,//\')  \nif [ $num -lt 0 ];then  \n  yum -y install httpd  \n  yum -y install mariadb mariadb-server mariadb-devel  \n  yum -y install php php-mysql  \nelse  \n  echo "未配置 yum 源..."  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n# 65）循环关闭局域网中所有主机\n\n#!/bin/bash  \n  \n# 循环关闭局域网中所有主机   \n# 假设本机为 192.168.4.100,编写脚本关闭除自己外的其他所有主机  \n# 脚本执行,需要提前给所有其他主机传递 ssh 密钥,满足无密码连接  \nfor i in {1..254}  \ndo  \n  [ $i -eq 100 ] && continue  \n  echo "正在关闭 192.168.4.$i..."  \n  ssh 192.168.4.$i poweroff  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 66）获取本机 mac 地址\n\n#!/bin/bash  \n  \n# 获取本机 mac 地址  \nip a s | awk \'begin{print  " 本 机 mac 地 址 信 息 如 下 :"}/^[0‐9]/{print $2;getline;if($0~/link\\/ether/){print $2}}\' | grep -v lo:  \n# awk 读取 ip 命令的输出,输出结果中如果有以数字开始的行,先显示该行的地 2 列(网卡名称),  \n# 接着使用 getline 再读取它的下一行数据,判断是否包含 link/ether  \n# 如果保护该关键词,就显示该行的第 2 列(mac 地址)  \n# lo 回环设备没有 mac,因此将其屏蔽,不显示  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 67）自动配置 rsynd 服务器的配置文件 rsyncd.conf\n\n#!/bin/bash  \n  \n# 自动配置 rsynd 服务器的配置文件 rsyncd.conf  \n  \n# see rsyncd.conf man page for more options.  \n  \n[ ! -d /home/ftp ] && mkdir /home/ftp  \necho \'uid = nobody  \ngid = nobody  \nuse chroot = yes  \nmax connections = 4  \npid file = /var/run/rsyncd.pid  \nexclude = lost+found/  \ntransfer logging = yes  \ntimeout = 900  \nignore nonreadable = yes  \ndont compress   = *.gz *.tgz *.zip *.z *.z *.rpm *.deb *.bz2  \n[ftp]  \n    path = /home/ftp  \n    comment = share\' > /etc/rsyncd.conf  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# 68）修改 linux 系统的最大打开文件数量\n\n#!/bin/bash  \n  \n# 修改 linux 系统的最大打开文件数量   \n  \n# 往/etc/security/limits.conf 文件的末尾追加两行配置参数,修改最大打开文件数量为 65536  \ncat >> /etc/security/limits.conf <<eof  \n* soft nofile  65536  \n* hard nofile  65536  \neof  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 69）设置 python 支持自动命令补齐功能\n\n#!/bin/bash  \n  \n# 设置 python 支持自动命令补齐功能   \n  \n# summary:enable tab complete for python  \n# description:  \n  \nneeds import readline and rlcompleter module  \n#  \nimport readline  \n#  \nimport rlcompleter  \n#  \nhelp(rlcompleter) display detail: readline.parse_and_bind(\'tab: complete\')  \n#  \nman python display detail: pythonstartup variable  \n  \nif  [ ! -f /usr/bin/tab.py ];then  \n  cat >> /usr/bin/tab.py <<eof  \nimport readline  \nimport rlcompleter  \nreadline.parse_and_bind(\'tab: complete\')  \neof  \nfi  \nsed  -i \'$a export pythonstartup=/usr/bin/tab.py\' /etc/profile  \nsource /etc/profile  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n# 70）自动修改计划任务配置文件\n\ndocker+k8s+jenkins 主流技术全解视频资料【干货免费分享】  \n  \n#!/bin/bash  \n  \n# 自动修改计划任务配置文件   \nread -p "请输入分钟信息(00‐59):" min  \nread -p "请输入小时信息(00‐24):" hour  \nread -p "请输入日期信息(01‐31):" date  \nread -p "请输入月份信息(01‐12):" month  \nread -p "请输入星期信息(00‐06):" weak  \nread -p "请输入计划任务需要执行的命令或脚本:" program  \necho "$min $hour $date $month $weak $program" >> /etc/crontab  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 71）使用脚本循环创建三位数字的文本文件(111-999 的文件)\n\n#!/bin/bash  \n  \n# 使用脚本循环创建三位数字的文本文件(111-999 的文件)   \n  \nfor i in {1..9}  \ndo  \n  for j in {1..9}  \n  do  \n    for k in {1..9}  \n    do  \n      touch /tmp/$i$j$k.txt  \n    done  \n    done  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 72）找出/etc/passwd 中能登录的用户,并将对应在/etc/shadow 中第二列密码提出处理\n\n#!/bin/bash  \n  \n# 找出/etc/passwd 中能登录的用户,并将对应在/etc/shadow 中第二列密码提出处理  \n  \nuser=$(awk -f: \'/bash$/{print $1}\' /etc/passwd)  \nfor i in $user  \ndo  \n  awk -f: -v x=$i \'$1==x{print $1,$2}\' /etc/shadow  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 73）统计/etc/passwd 中 root 出现的次数\n\n#!/bin/bash  \n  \n# 统计/etc/passwd 中 root 出现的次数   \n  \n#每读取一行文件内容,即从第 1 列循环到最后 1 列,依次判断是否包含 root 关键词,如果包含则 x++  \nawk -f: \'{i=1;while(i<=nf){if($i~/root/){x++};i++}} end{print "root 出现次数为"x}\' /etc/passwd  \n\n\n1\n2\n3\n4\n5\n6\n\n\n# 74）统计 linux 进程相关数量信息\n\n#!/bin/bash  \n  \n# 统计 linux 进程相关数量信息   \nrunning=0  \nsleeping=0  \nstoped=0  \nzombie=0  \n# 在 proc 目录下所有以数字开始的都是当前计算机正在运行的进程的进程 pid  \n# 每个 pid 编号的目录下记录有该进程相关的信息  \nfor pid in /proc/[1‐9]*  \ndo  \n  procs=$[procs+1]  \n  stat=$(awk \'{print $3}\' $pid/stat)  \n# 每个 pid 目录下都有一个 stat 文件,该文件的第 3 列是该进程的状态信息  \n    case $stat in  \n    r)  \n    running=$[running+1]  \n    ;;  \n    t)  \n    stoped=$[stoped+1]  \n    ;;  \n    s)  \n    sleeping=$[sleeping+1]  \n    ;;  \n    z)  \n     zombie=$[zombie+1]  \n     ;;  \n    esac  \ndone  \necho "进程统计信息如下"  \necho "总进程数量为:$procs"  \necho "running 进程数为:$running"  \necho "stoped 进程数为:$stoped"  \necho "sleeping 进程数为:$sleeping"  \necho "zombie 进程数为:$zombie"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n# 75）从键盘读取一个论坛积分,判断论坛用户等级\n\n#!/bin/bash  \n  \n# 从键盘读取一个论坛积分,判断论坛用户等级  \n  \n#等级分类如下:  \n#  大于等于 90        神功绝世  \n#  大于等于 80,小于 90       登峰造极  \n#  大于等于 70,小于 80       炉火纯青  \n#  大于等于 60,小于 70       略有小成  \n#  小于 60               初学乍练  \nread -p "请输入积分(0‐100):" jf  \nif [ $jf -ge 90 ] ; then  \n  echo "$jf 分,神功绝世"  \nelif [ $jf -ge 80 ] ; then  \n    echo "$jf 分,登峰造极"  \nelif [ $jf -ge 70 ] ; then  \n    echo "$jf 分,炉火纯青"  \nelif [ $jf -lt 60 ] ; then  \n    echo "$jf 分,略有小成"  \nelse  \n    echo "$jf 分,初学乍练"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n# 76）判断用户输入的数据类型(字母、数字或其他)\n\n#!/bin/bash  \n  \n# 判断用户输入的数据类型(字母、数字或其他)   \nread -p "请输入一个字符:" key  \ncase "$key" in  \n  [a‐z]|[a‐z])  \n    echo "字母"   \n    ;;  \n  [0‐9])  \n    echo "数字"   \n    ;;  \n  *)  \n    echo "空格、功能键或其他控制字符"  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 77）显示进度条(数字版)\n\n#!/bin/bash  \n  \n# 显示进度条(数字版)   \n# echo 使用‐e 选项后,在打印参数中可以指定 h,设置需要打印内容的 x,y 轴的定位坐标  \n# 设置需要打印内容在第几行,第几列  \nfor i in {1..100}  \ndo  \n    echo -e "\\033[6;8h["  \n    echo -e "\\033[6;9h$i%"  \n    echo -e "\\033[6;13h]"  \n    sleep 0.1  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 78）打印斐波那契数列\n\n#!/bin/bash  \n  \n# 打印斐波那契数列(该数列的特点是后一个数字,永远都是前 2 个数字之和)   \n  \n# 斐波那契数列后一个数字永远是前 2 个数字之和  \n# 如:0  1  1  2  3  5  8  13 ... ...  \nlist=(0 1)  \nfor i in `seq 2 11`  \ndo  \n  list[$i]=`expr ${list[‐1]} + ${list[‐2]}`  \ndone  \necho ${list[@]}  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 79）判断用户输入的是 yes 或 no\n\n#!/bin/bash  \n  \n# 判断用户输入的是 yes 或 no   \n  \nread -p  "are you sure?[y/n]:"  sure  \ncase  $sure  in  \n  y|y|yes|yes)    \n    echo "you enter $a"  \n    ;;  \n    n|n|no|no)  \n     echo "you enter $a"  \n     ;;  \n    *)  \n     echo "error";;  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 80）显示本机 linux 系统上所有开放的端口列表\n\n#!/bin/bash  \n  \n# 显示本机 linux 系统上所有开放的端口列表   \n  \n# 从端口列表中观测有没有没用的端口,有的话可以将该端口对应的服务关闭,防止意外的攻击可能性  \nss -nutlp | awk \'{print $1,$5}\' | awk -f"[: ]" \'{print "协议:"$1,"端口号:"$nf}\' | grep "[0‐9]" | uniq  \n\n\n1\n2\n3\n4\n5\n6\n\n\n# 81）将 linux 系统中 uid 大于等于 1000 的普通用户都删除\n\n#!/bin/bash  \n  \n# 将 linux 系统中 uid 大于等于 1000 的普通用户都删除   \n  \n# 先用 awk 提取所有 uid 大于等于 1000 的普通用户名称  \n# 再使用 for 循环逐个将每个用户删除即可  \nuser=$(awk -f: \'$3>=1000{print $1}\' /etc/passwd)  \nfor i in $user  \ndo  \n     userdel -r $i  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 82）使用脚本开启关闭虚拟机\n\n#!/bin/bash  \n  \n# 使用脚本开启关闭虚拟机   \n# 脚本通过调用virsh命令实现对虚拟机的管理,如果没有该命令,需要安装 libvirt‐client 软件包  \n# $1是脚本的第1个参数,$2是脚本的第2个参数  \n# 第1个参数是你希望对虚拟机进行的操作指令,第2个参数是虚拟机名称  \ncase $1 in  \n  list)  \n    virsh list --all  \n    ;;  \n  start)  \n    virsh start $2  \n    ;;  \n  stop)  \n    virsh destroy $2  \n    ;;  \n  enable)  \n    virsh autostart $2  \n    ;;  \n  disable)  \n    virsh autostart --disable $2  \n    ;;  \n  *)  \n    echo "usage:$0 list"  \n    echo "usage:$0 [start|stop|enable|disable]  vm_name"  \n    cat << eof  \n    #list      显示虚拟机列表  \n    #start     启动虚拟机  \n    #stop      关闭虚拟机  \n    #enable    设置虚拟机为开机自启  \n    #disable   关闭虚拟机开机自启功能  \n    eof  \n    ;;  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n# 83）调整虚拟机内存参数的 shell 脚本\n\n#!/bin/bash  \n  \n# 调整虚拟机内存参数的 shell 脚本   \n# 脚本通过调用 virsh 命令实现对虚拟机的管理,如果没有该命令,需要安装 libvirt‐client 软件包  \ncat << eof  \n1.调整虚拟机最大内存数值  \n2.调整实际分配给虚拟机的内存数值  \neof  \nread -p "请选择[1‐2]:" select  \ncase $select in  \n  1)  \n      read -p "请输入虚拟机名称" name  \n      read -p "请输入最大内存数值(单位:k):" size  \n      virsh setmaxmem $name --size $size --config  \n      ;;  \n  2)  \n      read -p "请输入虚拟机名称" name  \n      read -p "请输入实际分配内存数值(单位:k):" size  \n      virsh setmem $name $size  \n      ;;  \n  *)  \n      echo "error"  \n      ;;  \nesac  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n# 84）查看 kvm 虚拟机中的网卡信息(不需要进入启动或进入虚拟机)\n\n#!/bin/bash  \n  \n# 查看 kvm 虚拟机中的网卡信息(不需要进入启动或进入虚拟机)   \n  \n# 该脚本使用 guestmount 工具,可以将虚拟机的磁盘系统挂载到真实机文件系统中  \n# centos7.2 中安装 libguestfs‐tools‐c 可以获得 guestmount 工具  \n# 虚拟机可以启动或者不启动都不影响该脚本的使用  \n# 将虚拟机磁盘文件挂载到文件系统后,就可以直接读取磁盘文件中的网卡配置文件中的数据  \nclear  \nmountpoint="/media/virtimage"  \n[ ! -d $mountpoint ] && mkdir $mountpoint  \nread -p "输入虚拟机名称:" name  \necho "请稍后..."  \n# 如果有设备挂载到该挂载点,则先 umount 卸载  \nif mount | grep -q "$mountpoint" ;then  \n  umount $mountpoint  \nfi  \n# 只读的方式,将虚拟机的磁盘文件挂载到特定的目录下,这里是/media/virtimage 目录  \nguestmount -r -d $name -i $mountpoint  \necho  \necho "‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐"  \necho -e "\\033[32m$name 虚拟机中网卡列表如下:\\033[0m"  \ndev=$(ls /media/virtimage/etc/sysconfig/network‐scripts/ifcfg-* |awk -f"[/‐]" \'{print $9}\')  \necho $dev  \necho "‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐"  \necho  \necho  \necho "+++++++++++++++++++++++++++++++++++++++++++"  \necho -e "\\033[32m 网卡 ip 地址信息如下:\\033[0m"  \nfor i in $dev  \ndo  \n  echo -n "$i:"  \n  grep -q "ipaddr" /media/virtimage/etc/sysconfig/network‐scripts/ifcfg-$i || echo "未配置 ip地址"  \n  awk -f= \'/ipaddr/{print $2}\' /media/virtimage/etc/sysconfig/network-scripts/ifcfg-$i  \ndone  \necho "+++++++++++++++++++++++++++++++++++++++++++"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n# 85）不登陆虚拟机,修改虚拟机网卡 ip 地址\n\n#!/bin/bash  \n  \n# 不登陆虚拟机,修改虚拟机网卡 ip 地址   \n  \n# 该脚本使用 guestmount 工具,centos7.2 中安装 libguestfs‐tools‐c 可以获得 guestmount 工具  \n# 脚本在不登陆虚拟机的情况下,修改虚拟机的 ip 地址信息  \n# 在某些环境下,虚拟机没有 ip 或 ip 地址与真实主机不在一个网段  \n# 真实主机在没有 virt‐manger 图形的情况下,远程连接虚拟机很麻烦  \n# 该脚本可以解决类似的问题  \nread -p "请输入虚拟机名称:" name  \nif virsh domstate $name | grep -q running ;then  \n  echo "修改虚拟机网卡数据,需要关闭虚拟机"  \n  virsh destroy $name  \nfi  \nmountpoint="/media/virtimage"  \n[ ! -d $mountpoint ] && mkdir $mountpoint  \necho "请稍后..."  \nif mount | grep -q "$mountpoint" ;then  \n  umount $mountpoint  \nfi  \nguestmount  -d $name -i $mountpoint  \nread -p "请输入需要修改的网卡名称:" dev  \nread -p "请输入 ip 地址:" addr  \n# 判断原本网卡配置文件中是否有 ip 地址,有就修改该 ip,没有就添加一个新的 ip 地址  \nif grep -q "ipaddr"  $mountpoint/etc/sysconfig/network‐scripts/ifcfg‐$dev ;then  \n  sed -i "/ipaddr/s/=.*/=$addr/"  $mountpoint/etc/sysconfig/network‐scripts/ifcfg‐$dev  \nelse  \n  echo "ipaddr=$addr" >> $mountpoint/etc/sysconfig/network‐scripts/ifcfg‐$dev  \nfi  \n# 如果网卡配置文件中有客户配置的 ip 地址,则脚本提示修改 ip 完成  \nawk -f= -v x=$addr \'$2==x{print "完成..."}\'  $mountpoint/etc/sysconfig/network‐scripts/ifcfg-$dev  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n# 86）破解虚拟机密码,无密码登陆虚拟机系统\n\n#!/bin/bash  \n  \n# 破解虚拟机密码,无密码登陆虚拟机系统   \n  \n# 该脚本使用 guestmount 工具,centos7.2 中安装 libguestfs‐tools‐c 可以获得 guestmount 工具  \nread -p "请输入虚拟机名称:" name  \nif virsh domstate $name | grep -q running ;then  \n  echo "破解,需要关闭虚拟机"  \n  virsh destroy $name  \nfi  \nmountpoint="/media/virtimage"  \n[ ! -d $mountpoint ] && mkdir $mountpoint  \necho "请稍后..."  \nif mount | grep -q "$mountpoint" ;then  \n  umount $mountpoint  \nfi  \nguestmount -d $name -i $mountpoint  \n# 将 passwd 中密码占位符号 x 删除,该账户即可实现无密码登陆系统  \nsed -i "/^root/s/x//" $mountpoint/etc/passwd  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 87）shell 脚本对信号的处理,执行脚本后,按键盘 ctrl+c 无法终止的脚本\n\n#!/bin/bash  \n  \n# shell 脚本对信号的处理,执行脚本后,按键盘 ctrl+c 无法终止的脚本   \n# 使用 trap 命令可以拦截用户通过键盘或 kill 命令发送过来的信号  \n# 使用 kill ‐l 可以查看 linux 系统中所有的信号列表,其中 2 代表 ctrl+c  \n# trap 当发现有用户 ctrl+c 希望终端脚本时,就执行 echo "暂停 10s";sleep 10 这两条命令  \n# 另外用户使用命令:[ kill ‐2 脚本的 pid ] 也可以中断脚本和 ctrl+c 一样的效果,都会被 trap 拦截  \ntrap \'echo "暂停 10s";sleep 10\' 2  \nwhile :  \ndo  \n  echo "go go go"  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 88）一键部署 memcached\n\n#!/bin/bash  \n  \n# 一键部署 memcached   \n# 脚本用源码来安装 memcached 服务器  \n# 注意:如果软件的下载链接过期了,请更新 memcached 的下载链接  \nwget http://www.memcached.org/files/memcached-1.5.1.tar.gz  \nyum -y install gcc  \ntar -xf  memcached‐1.5.1.tar.gz  \ncd memcached‐1.5.1  \n./configure  \nmake  \nmake install  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n# 89）一键配置 vnc 远程桌面服务器(无密码版本)\n\n#!/bin/bash  \n  \n# 一键配置 vnc 远程桌面服务器(无密码版本)  \n  \n# 脚本配置的 vnc 服务器,客户端无需密码即可连接  \n# 客户端仅有查看远程桌面的权限,没有鼠标和键盘的操作权限  \n  \nrpm --quiet -q tigervnc‐server  \nif [  $? -ne  0 ];then  \n  yum  -y  tigervnc‐server  \nfi  \nx0vncserver acceptkeyevents=0 alwaysshared=1 \\  \nacceptpointerevents=0 securitytypes=none  rfbport=5908  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n# 90）关闭 selinux\n\n#!/bin/bash  \n  \n# 关闭 selinux   \n  \nsed -i  \'/^selinux/s/=.*/=disabled/\' /etc/selinux/config  \nsetenforce 0  \n\n\n1\n2\n3\n4\n5\n6\n\n\n# 91）查看所有虚拟机磁盘使用量以及cpu使用量信息\n\n#!/bin/bash  \n  \n# 查看所有虚拟机磁盘使用量以及cpu使用量信息   \n  \nvirt‐df  \nread -n1 "按任意键继续" key  \nvirt‐top  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 92）使用 shell 脚本打印图形\n\n#!/bin/bash  \n  \n# 使用 shell 脚本打印如下图形:   \n# 打印第一组图片  \n# for(())为类 c 语言的语法格式,也可以使用 for i  in;do  ;done 的格式替换  \n# for((i=1;i<=9;i++))循环会执行 9 次,i 从 1 开始到 9,每循环一次 i 自加 1  \nclear  \nfor (( i=1; i<=9; i++ ))  \ndo  \n  for (( j=1; j<=i; j++ ))  \n  do  \n    echo -n "$i"  \n  done  \n  echo ""  \ndone  \nread  -n1  "按任意键继续"  key  \n#打印第二组图片  \nclear  \nfor (( i=1; i<=5; i++ ))   \ndo  \n  for (( j=1; j<=i; j++ ))  \n  do  \n    echo -n " |"  \n  done  \n  echo "_ "  \ndone  \nread  -n1  "按任意键继续"  key  \n#打印第三组图片  \nclear  \nfor (( i=1; i<=5; i++ ))  \ndo  \n  for (( j=1; j<=i; j++ ))  \n  do  \n    echo -n " *"  \n  done  \n  echo ""  \ndone  \nfor (( i=5; i>=1; i‐‐ ))  \ndo  \n  for (( j=1; j<=i; j++ ))  \n  do  \n    echo -n " *"  \n  done  \n  echo ""  \ndone  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n\n\n# 93）根据计算机当前时间,返回问候语,可以将该脚本设置为开机启动\n\n#!/bin/bash  \n  \n# 根据计算机当前时间,返回问候语,可以将该脚本设置为开机启动   \n  \n# 00‐12 点为早晨,12‐18 点为下午,18‐24 点为晚上  \n# 使用 date 命令获取时间后,if 判断时间的区间,确定问候语内容  \ntm=$(date +%h)  \nif [ $tm -le 12 ];then  \n  msg="good morning $user"  \nelif [ $tm -gt 12 -a $tm -le 18 ];then  \n    msg="good afternoon $user"  \nelse  \n    msg="good night $user"  \nfi  \necho "当前时间是:$(date +"%y‐%m‐%d %h:%m:%s")"  \necho -e "\\033[34m$msg\\033[0m"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 94）读取用户输入的账户名称,将账户名写入到数组保存\n\n#!/bin/bash  \n  \n# 读取用户输入的账户名称,将账户名写入到数组保存   \n# 定义数组名称为 name,数组的下标为 i,小标从 0 开始,每输入一个账户名,下标加 1,继续存下一个账户  \n# 最后,输入 over,脚本输出总结性信息后脚本退出  \ni=0  \nwhile :  \ndo  \n  read -p "请输入账户名,输入 over 结束:" key  \n  if [ $key == "over" ];then   \n    break  \n    else  \n    name[$i]=$key  \n    let i++  \n    fi  \ndone  \necho "总账户名数量:${#name[*]}"  \necho "${name[@]}"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# 95）判断文件或目录是否存在\n\n#!/bin/bash  \n  \n# 判断文件或目录是否存在   \nif [ $# -eq 0 ] ;then  \necho "未输入任何参数,请输入参数"  \necho "用法:$0 [文件名|目录名]"  \nfi  \nif [ -f $1 ];then  \n  echo "该文件,存在"  \n  ls -l $1  \nelse  \n  echo "没有该文件"  \nfi  \nif [ -d  $1 ];then  \n     echo "该目录,存在"  \n     ls -ld  $2  \nelse  \n     echo "没有该目录"  \nfi  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 96）打印各种格式的时间\n\n#!/bin/bash  \n  \n# 打印各种时间格式   \n  \necho "显示星期简称(如:sun)"  \ndate +%a  \necho "显示星期全称(如:sunday)"  \ndate +%a  \necho "显示月份简称(如:jan)"  \ndate +%b  \necho "显示月份全称(如:january)"  \ndate +%b  \necho "显示数字月份(如:12)"  \ndate +%m  \necho "显示数字日期(如:01 号)"  \ndate +%d  \necho "显示数字年(如:01 号)"  \ndate +%y echo "显示年‐月‐日"  \ndate +%f  \necho "显示小时(24 小时制)"  \ndate +%h  \necho "显示分钟(00..59)"  \ndate +%m  \necho "显示秒"  \ndate +%s  \necho "显示纳秒"  \ndate +%n  \necho "组合显示"  \ndate +"%y%m%d %h:%m:%s"  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n# 97）使用 egrep 过滤 mac 地址\n\n#!/bin/bash  \n  \n# 使用 egrep 过滤 mac 地址   \n  \n# mac 地址由 16 进制组成,如 aa:bb:cc:dd:ee:ff  \n# [0‐9a‐fa‐f]{2}表示一段十六进制数值,{5}表示连续出现5组前置:的十六进制  \negrep "[0‐9a‐fa‐f]{2}(:[0‐9a‐fa‐f]{2}){5}" $1  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 98）统计双色球各个数字的中奖概率\n\n#!/bin/bash  \n  \n# 统计双色球各个数字的中奖概率   \n  \n# 往期双色球中奖号码如下:  \n# 01 04 11 28 31 32  16  \n# 04 07 08 18 23 24  02  \n# 02 05 06 16 28 29  04  \n# 04 19 22 27 30 33  01  \n# 05 10 18 19 30 31  03  \n# 02 06 11 12 19 29  06  \n# 统计篮球和红球数据出现的概率次数(篮球不分顺序,统计所有篮球混合在一起的概率)  \nawk \'{print $1"\\n"$2"\\n"$3"\\n"$4"\\n"$5"\\n"$6}\' 1.txt | sort | uniq -c | sort  \nawk \'{print $7}\' 1.txt | sort | uniq -c | sort  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 99）生成签名私钥和证书\n\n#!/bin/bash  \n  \n# 生成签名私钥和证书   \n  \nread -p "请输入存放证书的目录:" dir  \nif [ ! -d $dir ];then  \n  echo "该目录不存在"  \n  exit  \nfi  \nread -p "请输入密钥名称:" name  \n# 使用 openssl 生成私钥  \nopenssl genrsa -out ${dir}/${name}.key  \n# 使用 openssl 生成证书 #subj 选项可以在生成证书时,非交互自动填写 common name 信息  \nopenssl req -new -x509 -key ${dir}/${name}.key -subj "/cn=common" -out ${dir}/${name}.crt  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n# 100）使用awk编写的wc程序\n\n#!/bin/bash  \n  \n# 使用awk编写的wc程序   \n  \n# 自定义变量 chars 变量存储字符个数,自定义变量 words 变量存储单词个数  \n# awk 内置变量 nr 存储行数  \n# length()为 awk 内置函数,用来统计每行的字符数量,因为每行都会有一个隐藏的$,所以每次统计后都+1  \n# wc 程序会把文件结尾符$也统计在内,可以使用 cat ‐a 文件名,查看该隐藏字符  \nawk \'{chars+=length($0)+1;words+=nf} end{print nr,words,chars}\' $1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',charsets:{cjk:!0},lastUpdated:"2023/06/28, 21:02:49",lastUpdatedTimestamp:1687957369e3},{title:"Windows Terminal美化",frontmatter:{title:"Windows Terminal美化",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/other/terminal/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"],readingShow:"top"},regularPath:"/14.%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/09.%E5%85%B6%E5%AE%83/03.Windows%20Terminal%E7%BE%8E%E5%8C%96.html",relativePath:"14.工具使用/09.其它/03.Windows Terminal美化.md",key:"v-5c2ec42e",path:"/tool/other/terminal/",headers:[{level:2,title:"安装 Windows Terminal",slug:"安装-windows-terminal",normalizedTitle:"安装 windows terminal",charIndex:3},{level:2,title:"设置",slug:"设置",normalizedTitle:"设置",charIndex:26},{level:3,title:"左下角打开JSON文件",slug:"左下角打开json文件",normalizedTitle:"左下角打开json文件",charIndex:34},{level:2,title:"主题",slug:"主题",normalizedTitle:"主题",charIndex:49},{level:3,title:"winget",slug:"winget",normalizedTitle:"winget",charIndex:57},{level:3,title:"安装主题",slug:"安装主题",normalizedTitle:"安装主题",charIndex:69},{level:3,title:"修改启动脚本",slug:"修改启动脚本",normalizedTitle:"修改启动脚本",charIndex:79},{level:2,title:"解决字体乱码",slug:"解决字体乱码",normalizedTitle:"解决字体乱码",charIndex:89},{level:2,title:"错误",slug:"错误",normalizedTitle:"错误",charIndex:99}],headersStr:"安装 Windows Terminal 设置 左下角打开JSON文件 主题 winget 安装主题 修改启动脚本 解决字体乱码 错误",content:' * 安装 Windows Terminal\n * 设置\n   * 左下角打开JSON文件\n * 主题\n   * winget\n   * 安装主题\n   * 修改启动脚本\n * 解决字体乱码\n * 错误\n\n\n\n\n# 安装 Windows Terminal\n\n微软应用商店搜索安装 Windows Terminal\n\n\n\n\n# 设置\n\n\n\n\n# 左下角打开JSON文件\n\n添加配置\n\n"defaults": {\n    /*使用亚克力效果*/\n    "useAcrylic": true,\n    "acrylicOpacity": 0.2,\n    /*设置背景*/\n    "backgroundImage": "E:\\\\vuepress-blog\\\\docs\\\\.vuepress\\\\public\\\\assets\\\\images\\\\bg.png", \n    "backgroundImageOpacity": 0.4,\n    /*修改字体*/\n    "fontFace": "Consolas", \n    "fontSize": 12\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 主题\n\n\n# winget\n\n微软商店搜索应用安装程序 更新\n\n\n# 安装主题\n\nwinget install JanDeDobbeleer.OhMyPosh -s winget\n\n\n1\n\n\n\n# 修改启动脚本\n\n用VSCode或记事本打开，code $PROFILE notepad $PROFILE\n\n写入\n\noh-my-posh init pwsh --config $env:POSH_THEMES_PATH\\montys.omp.json | Invoke-Expression \n\n\n1\n\n\n\n# 解决字体乱码\n\n安装Nerd字体 ，推荐： JetBrains Mono Medium Nerd Font Complete Mono\n\n\n# 错误\n\n * 无法加载文件\n\n"C:\\User\\XX\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1"，因为在此系统上禁止运行脚本。\n\n解决办法：\n\n计算机上启动 Windows PowerShell 时，执行策略很可能是 Restricted（默认设置），Restricted 执行策略不允许任何脚本运行。\n\nAllSigned 和 RemoteSigned 执行策略可防止 Windows PowerShell 运行没有数字签名的脚本。\n\n本主题说明如何运行所选未签名脚本（即使在执行策略为 RemoteSigned 的情况下），还说明如何对 脚本进行签名以便您自己使用。\n\n有关 Windows PowerShell 执行策略的详细信息，请参阅 about_Execution_Policy。\n\n以管理员身份打开PowerShell 输入set-executionpolicy remotesigned\n\n然后输入 Y 即可正确执行了。',normalizedContent:' * 安装 windows terminal\n * 设置\n   * 左下角打开json文件\n * 主题\n   * winget\n   * 安装主题\n   * 修改启动脚本\n * 解决字体乱码\n * 错误\n\n\n\n\n# 安装 windows terminal\n\n微软应用商店搜索安装 windows terminal\n\n\n\n\n# 设置\n\n\n\n\n# 左下角打开json文件\n\n添加配置\n\n"defaults": {\n    /*使用亚克力效果*/\n    "useacrylic": true,\n    "acrylicopacity": 0.2,\n    /*设置背景*/\n    "backgroundimage": "e:\\\\vuepress-blog\\\\docs\\\\.vuepress\\\\public\\\\assets\\\\images\\\\bg.png", \n    "backgroundimageopacity": 0.4,\n    /*修改字体*/\n    "fontface": "consolas", \n    "fontsize": 12\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 主题\n\n\n# winget\n\n微软商店搜索应用安装程序 更新\n\n\n# 安装主题\n\nwinget install jandedobbeleer.ohmyposh -s winget\n\n\n1\n\n\n\n# 修改启动脚本\n\n用vscode或记事本打开，code $profile notepad $profile\n\n写入\n\noh-my-posh init pwsh --config $env:posh_themes_path\\montys.omp.json | invoke-expression \n\n\n1\n\n\n\n# 解决字体乱码\n\n安装nerd字体 ，推荐： jetbrains mono medium nerd font complete mono\n\n\n# 错误\n\n * 无法加载文件\n\n"c:\\user\\xx\\documents\\windowspowershell\\microsoft.powershell_profile.ps1"，因为在此系统上禁止运行脚本。\n\n解决办法：\n\n计算机上启动 windows powershell 时，执行策略很可能是 restricted（默认设置），restricted 执行策略不允许任何脚本运行。\n\nallsigned 和 remotesigned 执行策略可防止 windows powershell 运行没有数字签名的脚本。\n\n本主题说明如何运行所选未签名脚本（即使在执行策略为 remotesigned 的情况下），还说明如何对 脚本进行签名以便您自己使用。\n\n有关 windows powershell 执行策略的详细信息，请参阅 about_execution_policy。\n\n以管理员身份打开powershell 输入set-executionpolicy remotesigned\n\n然后输入 y 即可正确执行了。',charsets:{cjk:!0},lastUpdated:"2024/01/25, 14:48:55",lastUpdatedTimestamp:1706165335e3},{title:"Windows小功能",frontmatter:{title:"Windows小功能",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/other/use/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"],readingShow:"top"},regularPath:"/14.%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/09.%E5%85%B6%E5%AE%83/05.Windows%E5%B0%8F%E5%8A%9F%E8%83%BD.html",relativePath:"14.工具使用/09.其它/05.Windows小功能.md",key:"v-413f1d48",path:"/tool/other/use/",headers:[{level:2,title:"查看Windows过期时间",slug:"查看windows过期时间",normalizedTitle:"查看windows过期时间",charIndex:3},{level:2,title:"系统版本识别",slug:"系统版本识别",normalizedTitle:"系统版本识别",charIndex:20}],headersStr:"查看Windows过期时间 系统版本识别",content:" * 查看Windows过期时间\n * 系统版本识别\n\n\n\n\n# 查看Windows过期时间\n\nslmgr.vbs -xpr\n\n\n1\n\n\n\n# 系统版本识别\n\nstart msinfo32\n\n\n1\n",normalizedContent:" * 查看windows过期时间\n * 系统版本识别\n\n\n\n\n# 查看windows过期时间\n\nslmgr.vbs -xpr\n\n\n1\n\n\n\n# 系统版本识别\n\nstart msinfo32\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2023/06/21, 15:43:04",lastUpdatedTimestamp:1687333384e3},{title:"数学小知识",frontmatter:{title:"数学小知识",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/other/math/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"],readingShow:"top"},regularPath:"/14.%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/09.%E5%85%B6%E5%AE%83/07.%E6%95%B0%E5%AD%A6%E5%B0%8F%E7%9F%A5%E8%AF%86.html",relativePath:"14.工具使用/09.其它/07.数学小知识.md",key:"v-58304bb1",path:"/tool/other/math/",headers:[{level:2,title:"角度与弧度转换",slug:"角度与弧度转换",normalizedTitle:"角度与弧度转换",charIndex:2}],headersStr:"角度与弧度转换",content:"# 角度与弧度转换\n\n圆心坐标：(x0,y0) \n半径：r \n角度：a \n\n圆周率： PI\n\n则圆上任一点为：（x1,y1） \nx1 = x0 + r * cos(a * PI/180) \ny1 = y0 + r * sin(a * PI/180) \n\n弧度转角度\ndegree = angle * (180 / PI)\n角度转弧度\nangle = degree * PI / 180\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n",normalizedContent:"# 角度与弧度转换\n\n圆心坐标：(x0,y0) \n半径：r \n角度：a \n\n圆周率： pi\n\n则圆上任一点为：（x1,y1） \nx1 = x0 + r * cos(a * pi/180) \ny1 = y0 + r * sin(a * pi/180) \n\n弧度转角度\ndegree = angle * (180 / pi)\n角度转弧度\nangle = degree * pi / 180\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"小记",frontmatter:{title:"小记",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/other/note/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"],readingShow:"top"},regularPath:"/14.%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/09.%E5%85%B6%E5%AE%83/99.%E5%B0%8F%E8%AE%B0.html",relativePath:"14.工具使用/09.其它/99.小记.md",key:"v-0e0588fe",path:"/tool/other/note/",headers:[{level:2,title:"天香石",slug:"天香石",normalizedTitle:"天香石",charIndex:2}],headersStr:"天香石",content:"# 天香石\n\n天香石是个小小的石头，不知自己是什么形态，只记得自己的上个主人是个温柔的女子，主人终究是人，是人就逃不开生老病死。\n\n天香石傻傻的看着面前的男子，比女人还好看的男子，它知道这是它的主人转世，因为他们除了性别，几乎没有区别，一眼就能认出。",normalizedContent:"# 天香石\n\n天香石是个小小的石头，不知自己是什么形态，只记得自己的上个主人是个温柔的女子，主人终究是人，是人就逃不开生老病死。\n\n天香石傻傻的看着面前的男子，比女人还好看的男子，它知道这是它的主人转世，因为他们除了性别，几乎没有区别，一眼就能认出。",charsets:{cjk:!0},lastUpdated:"2023/06/28, 20:08:08",lastUpdatedTimestamp:1687954088e3},{title:"Maven安装配置",frontmatter:{title:"Maven安装配置",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/maven/",private:!0,categories:["工具使用"],tags:["工具使用"],readingShow:"top"},regularPath:"/14.%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/22.Maven%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html",relativePath:"14.工具使用/22.Maven安装配置.md",key:"v-072668fe",path:"/tool/maven/",headers:[{level:2,title:"添加环境变量",slug:"添加环境变量",normalizedTitle:"添加环境变量",charIndex:2},{level:2,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:56},{level:3,title:"修改仓库路径",slug:"修改仓库路径",normalizedTitle:"修改仓库路径",charIndex:104},{level:3,title:"添加国内镜像源",slug:"添加国内镜像源",normalizedTitle:"添加国内镜像源",charIndex:185}],headersStr:"添加环境变量 配置 修改仓库路径 添加国内镜像源",content:"# 添加环境变量\n\nD:\\Design\\apache-maven-3.8.5\\bin\n\n打开cmd窗口测试一下看配置是否成功，输入mvn -v\n\n\n# 配置\n\n修改conf/settings.xml\n\n\n# 修改仓库路径\n\n<localRepository>D:\\Design\\apache-maven-3.8.5\\repo</localRepository>\n\n\n# 添加国内镜像源\n\n<mirror>\n    <id>alimaven</id>\n    <mirrorOf>central,public</mirrorOf>\n    <name>alimaven</name>\n    <url>https://maven.aliyun.com/repository/public</url>\n</mirror>\n\n\n1\n2\n3\n4\n5\n6\n",normalizedContent:"# 添加环境变量\n\nd:\\design\\apache-maven-3.8.5\\bin\n\n打开cmd窗口测试一下看配置是否成功，输入mvn -v\n\n\n# 配置\n\n修改conf/settings.xml\n\n\n# 修改仓库路径\n\n<localrepository>d:\\design\\apache-maven-3.8.5\\repo</localrepository>\n\n\n# 添加国内镜像源\n\n<mirror>\n    <id>alimaven</id>\n    <mirrorof>central,public</mirrorof>\n    <name>alimaven</name>\n    <url>https://maven.aliyun.com/repository/public</url>\n</mirror>\n\n\n1\n2\n3\n4\n5\n6\n",charsets:{cjk:!0},lastUpdated:"2023/06/30, 10:40:56",lastUpdatedTimestamp:1688092856e3},{title:"cdn加速GitHub图床",frontmatter:{title:"cdn加速GitHub图床",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/cdn/",private:!0,categories:["工具使用"],tags:["工具使用"],readingShow:"top"},regularPath:"/14.%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/21.cdn%E5%8A%A0%E9%80%9FGitHub%E5%9B%BE%E5%BA%8A.html",relativePath:"14.工具使用/21.cdn加速GitHub图床.md",key:"v-25ccd3aa",path:"/tool/cdn/",headers:[{level:2,title:"创建github仓库",slug:"创建github仓库",normalizedTitle:"创建github仓库",charIndex:2},{level:2,title:"发布新版本",slug:"发布新版本",normalizedTitle:"发布新版本",charIndex:19},{level:2,title:"查看所有文件",slug:"查看所有文件",normalizedTitle:"查看所有文件",charIndex:50},{level:2,title:"使用jsdelivr链接加速cdn",slug:"使用jsdelivr链接加速cdn",normalizedTitle:"使用jsdelivr链接加速cdn",charIndex:119}],headersStr:"创建github仓库 发布新版本 查看所有文件 使用jsdelivr链接加速cdn",content:"# 创建github仓库\n\n\n\n\n# 发布新版本\n\n克隆到本地后，添加资源，推送到仓库\n\n\n\n\n# 查看所有文件\n\n[https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.0/]\n\n\n# 使用jsdelivr链接加速cdn\n\n[https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.0/images/bg.jpg]\n\n[https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.0/images/avatar.png]\n\n[https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.0/images/cat1.gif] 头像",normalizedContent:"# 创建github仓库\n\n\n\n\n# 发布新版本\n\n克隆到本地后，添加资源，推送到仓库\n\n\n\n\n# 查看所有文件\n\n[https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.0/]\n\n\n# 使用jsdelivr链接加速cdn\n\n[https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.0/images/bg.jpg]\n\n[https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.0/images/avatar.png]\n\n[https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.0/images/cat1.gif] 头像",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"实用收藏",frontmatter:{title:"实用收藏",date:"2023-06-13T17:05:00.000Z",permalink:"/collect/web/",private:!0,categories:["收藏"],tags:["收藏"],readingShow:"top"},regularPath:"/78.%E6%94%B6%E8%97%8F/03.%E5%AE%9E%E7%94%A8%E6%94%B6%E8%97%8F.html",relativePath:"78.收藏/03.实用收藏.md",key:"v-1fdc0219",path:"/collect/web/",headers:[{level:2,title:"文档",slug:"文档",normalizedTitle:"文档",charIndex:2},{level:2,title:"社区",slug:"社区",normalizedTitle:"社区",charIndex:210},{level:2,title:"博客",slug:"博客",normalizedTitle:"博客",charIndex:449},{level:2,title:"电子书",slug:"电子书",normalizedTitle:"电子书",charIndex:557},{level:2,title:"文章",slug:"文章",normalizedTitle:"文章",charIndex:353},{level:2,title:"科学上网",slug:"科学上网",normalizedTitle:"科学上网",charIndex:649},{level:2,title:"视频",slug:"视频",normalizedTitle:"视频",charIndex:709},{level:3,title:"电视直播",slug:"电视直播",normalizedTitle:"电视直播",charIndex:842},{level:2,title:"Github",slug:"github",normalizedTitle:"github",charIndex:217},{level:2,title:"在线工具",slug:"在线工具",normalizedTitle:"在线工具",charIndex:963},{level:3,title:"开发",slug:"开发",normalizedTitle:"开发",charIndex:53},{level:3,title:"代码编辑",slug:"代码编辑",normalizedTitle:"代码编辑",charIndex:1041},{level:3,title:"Emoji表情",slug:"emoji表情",normalizedTitle:"emoji表情",charIndex:1102},{level:3,title:"图片工具",slug:"图片工具",normalizedTitle:"图片工具",charIndex:1202},{level:3,title:"作图",slug:"作图",normalizedTitle:"作图",charIndex:1554},{level:3,title:"CSS",slug:"css",normalizedTitle:"css",charIndex:637},{level:3,title:"CDN加速",slug:"cdn加速",normalizedTitle:"cdn加速",charIndex:1850},{level:3,title:"网站托管",slug:"网站托管",normalizedTitle:"网站托管",charIndex:1910},{level:3,title:"正则",slug:"正则",normalizedTitle:"正则",charIndex:1940},{level:3,title:"其他",slug:"其他",normalizedTitle:"其他",charIndex:2001},{level:2,title:"设计",slug:"设计",normalizedTitle:"设计",charIndex:379},{level:3,title:"图库",slug:"图库",normalizedTitle:"图库",charIndex:3102},{level:2,title:"有趣",slug:"有趣",normalizedTitle:"有趣",charIndex:3263},{level:2,title:"交互",slug:"交互",normalizedTitle:"交互",charIndex:2180},{level:2,title:"教程",slug:"教程",normalizedTitle:"教程",charIndex:86},{level:2,title:"产品",slug:"产品",normalizedTitle:"产品",charIndex:541},{level:2,title:"实用",slug:"实用",normalizedTitle:"实用",charIndex:4070},{level:2,title:"Talk",slug:"talk",normalizedTitle:"talk",charIndex:4443},{level:2,title:"算法",slug:"算法",normalizedTitle:"算法",charIndex:2090},{level:2,title:"生活",slug:"生活",normalizedTitle:"生活",charIndex:4523}],headersStr:"文档 社区 博客 电子书 文章 科学上网 视频 电视直播 Github 在线工具 开发 代码编辑 Emoji表情 图片工具 作图 CSS CDN加速 网站托管 正则 其他 设计 图库 有趣 交互 教程 产品 实用 Talk 算法 生活",content:"# 文档\n\n * MDN | MDN-JS标准内置对象 Web技术权威文档\n * DevDocs Web 开发技术文档，非常不错的学习手册！\n * 现代JavaScript教程 以最新标准为基准的JS教程\n * ES5教程 阮一峰的JS教程\n * ES6教程 阮一峰的ES6教程\n * Bash 脚本教程 阮一峰编写\n * ECMA ECMA官网\n * 菜鸟教程 涵盖多种语言的初级教程\n * 腾讯云开发者手册\n\n\n# 社区\n\n * Github 程序员同性交友社区\n * 掘金 一个帮助开发者成长的社区\n * 简书 有很多频道的创作社区\n * 思否 解决技术问题的社区\n * stack overflow 同上，外网的\n * InfoQ\n * V2EX\n * 鱼塘热榜 划水网站，收集了很多网站，当天热门文章\n * 码力全开资源库 很全很强大，独立开发者/设计干货/优质利器/工具资源...\n * EDA365-PCB Layout论坛 EDA365电子论坛-电子工程师硬件研发开发网站\n\n\n# 博客\n\n * 阮一峰的网络日志\n * samanthaming 对前端小知识点的总结，并为每个知识点制作精美的小卡片。\n * 吴川斌的博客 一个专注于智能硬件、嵌入式系统、物联网、电子产品设计美学的独立博客\n\n\n# 电子书\n\n * 高教书苑 高等教育出版社的书籍，包含多种学科。\n * 前端电子书收集\n * SoBooks 免费的电子书资源网站\n\n\n# 文章\n\n * 灵活运用CSS开发技巧\n\n\n# 科学上网\n\n * 谷歌chrome商店访问助手\n\n * 谷歌云(GCP)一键搭建 V2Ray 让你畅快科学上网\n\n\n# 视频\n\n * 慕课网 实战视频教程\n * 妙味课堂 比较系统的前端入门视频教程\n * 中国大学MOOC 涵盖计算机、外语、心理学等专业免费课程\n * bilibili B站，上面也有一些可供学习的免费视频\n * egghead 质量还不错的短视频教程，外网\n\n\n# 电视直播\n\n * CCTV、卫视高清直播\n\n\n# Github\n\n * github 短域名服务\n * shields 徽章图标\n * followers 全球排名\n * star-history 展示一个项目 Stars 增长曲线\n\n\n# 在线工具\n\n\n# 开发\n\n * Can I use 查看属性和方法的兼容性\n * 30 seconds of code 收集了许多有用的代码小片段\n\n\n# 代码编辑\n\n * codepen 在线代码编辑与演示\n * codesandbox 内嵌VSCode的在线IDE\n\n\n# Emoji表情\n\n * emoji表情\n * emoji表情备忘录\n * gitmoji 通过 emoji 表达 git 的操作内容\n\n> windows系统下按Win+.快速打开表情选择框\n\n\n# 图片工具\n\n * tinypng图片压缩 压缩png很有用\n * Squoosh 谷歌出品在线免费图片压缩工具（jpg、png等,压缩效果比tinypng稍好）\n * waifu2x 通过卷积网络放大图片\n * vectormagic 转换矢量图\n * vectorizer 真正的 png 转 svg 神器\n * 在线AI图片处理 黑白修复、无损放大、动漫化、铅笔画等。\n * remove AI抠图\n * backgroundremover 又一个抠图的\n * [Text to ASCII Art Generator (TAAG)](http://patorjk.com/software/taag/#p=display&f=Graffiti&t=Type Something ) 字符画\n\n\n# 作图\n\n * processon在线作图 流程图、思维导图、原型图等\n * 百度脑图 思维导图\n\n\n# CSS\n\n * CSS Tricks CSS技巧收集与演示\n * CSS生成器\n * CSS渐变生成器\n * CSS3-Box Shadow(阴影)\n * 贝塞尔曲线生成器\n * 花纹背景生成器\n * 花纹背景-pattern.css\n * 3D字体\n * css-tricks css技巧文章\n * You-need-to-know-css CSS的各种DEMO，很全\n * animista CSS动画可视化工具，复制代码就能用\n * navnav 各种炫酷的CSS动画组件\n\n\n# CDN加速\n\n * jsDelivr 国外的一家优秀的公共 CDN 服务提供商\n * unpkg cdn 服务\n\n\n# 网站托管\n\n * vercel 好用的网站托管服务\n\n\n# 正则\n\n * 正则可视化\n * iHateRegex 正则搜索，细节做得很好\n * 正则迷你书 学习正则的小手册\n\n\n# 其他\n\n * Linux命令手册\n * carbon代码图片生成器 生成好看的代码图片\n\n\n# 设计\n\n * 创造师导航\n * 设计师网址导航\n * remove AI抠图，抠图算法很厉害\n * Manypixels 插画\n * Undraw 插画\n * storytale 插画，种类丰富，包含3D插画\n * uimovement 能从这个网站找到不少动画交互的灵感\n * awwwards是一个一个专门为设计精美的网站以及富有创意的网站颁奖的网站\n * dribbble 经常能在上面找到很多有创意好看的 gif 或者图片\n * Bēhance dribbble 是设计师的微博，Bēhance 是设计师的博客\n * Logojoy 使用 ai 做 logo 的网站，做出来的 logo 质量还不错。\n * brandmark 另一个在线制作 logo 网站\n * instant 又一个 logo 制作网站\n * namecheap又一个 logo 制作网站\n * logo-maker 又一个 logo 制作网站 这个更简单点 就是选模板之后微调\n * coolors 帮你在线配色的网站 你能找到不少配色灵感\n * colorhunt 另一个配色网站\n * uigradients 渐变色网站\n * designcap 在线海报设计\n * Flat UI 色表 Flat UI 色表\n * 0to255 颜色梯度\n * Ikonate 提供免费的图标 icons\n * remixicon 又一个提供免费图标 icons\n * feather 免费的 icons\n * nord 北欧性冷淡风主题配色\n * Unsplash 提供免费的高清图片\n * Pexels 提供免费的高清图片\n * colorkitty 从你的图片中提取配色\n * design.youzan 有赞设计原则\n * iconfont 阿里巴巴矢量图标库\n * undraw 免费的矢量插画\n * icomoon 矢量图标库\n * cssicon 所有的 icon 都是纯 css 画的 缺点：icon 不够多\n * CSS triangle generator 帮你快速用 css 做出三角形\n * clippy 在线帮你使用 css clip-path 做出各种形状的图形\n * Lorem Picsum 提供免费的占位图\n * Canva 可画 生成插画、封面、海报、头像等\n * 404页 404页素材\n * collectui 按功能组件分类的设计图\n * smartmockups 产品模板生成工具\n\n\n# 图库\n\n * uigradients 渐变色生成工具\n * freepik banner 图库\n * 觅元素一天免费下载十张 psd\n * 搞定设计 可以抠图\n * vectorizer 真正的 png 转 svg 神器\n * 站酷\n * 花瓣\n * 虎克 Ps 学习教程\n * beTheme\n * UI 中国\n\n\n# 有趣\n\n * 奇趣网站收藏家 收藏了很多有趣的网站\n * FC在线模拟器(小霸王游戏机) 童年回忆\n * 帮你百度一下 可以 点我测试一下-\n * 国际版 同帮我百度一下-点我测试一下-\n * wallhaven 壁纸网站-\n * URL 地址播放 Emojis 动画 在地址栏里面播放 emoji\n * Can't Unsee 强烈建议前端、客户端、UI 开发的同学玩下，检查一下自己对设计稿的敏感度怎么样\n * ggtalk 平时一直在听的一个技术博客\n * awesome-comment 里面收集了很多有趣的代码注释\n * text-img 都将图片转化为 ascii 用来写注释\n * weird-fonts 将普通字母转化为 特殊 unicode\n * snake 在地址栏里面玩贪吃蛇\n * zero-width-lib 利用零宽度字符实现 隐形水印、加密信息分享、逃脱词匹配，很有创意\n * abbreviations 查看一个简写是什么意思的网站\n * magi ai 搜索神器，超屌\n * 诺基亚短信图片生成器\n\n\n# 交互\n\n * 微交互 里面收集了市面上很多很好的微交互例子 值得学习\n * Little Big Details 同上，一个国外微交互汇集网站\n * cruip 登录页的各种页面设计，可以免费下载模板\n * Comixify 一个波兰团队做了非常好玩的工具，可以把视频自动转成漫画，上图是他们提供的 demo，效果很棒。\n * taiko-web 太鼓达人网页版 只能说很 6\n\n\n# 教程\n\n * npx 教你怎么合理的使用 npx\n * hacksplaining 网络安全学习网站\n * mobile-web-best-practice 移动 web 最佳实践\n\n\n# 产品\n\n * 产品大牛 什么有很多完整的产品原型可以借鉴\n * 磨刀 快速出 ui 原型\n\n\n# 实用\n\n * webden 在线网页编辑器，轻便快捷\n * browser-update 浏览器版本更新提示插件\n * typeform 一个国外的在线调查问卷网站\n * VideoFk VideoFk 视频在线解析下载\n * 全历史 历史内容聚合网站\n * UzerMe 云端办公工具\n * SoBooks 强大的电子书资源网站\n * 稿定设计 键式设计工具+智能抠图\n * 大力盘 百度网盘搜索\n * ENFI 下载器 不限速下载器\n * 来画视频 像做 PPT 一样做短视频\n * Arkie 海报制作工具\n * 优品 PPT\n * 比格 PPT\n * 高清免费图片\n * 高清免费图片 2\n * shapedivider 生成波浪分隔线\n * Notion 知识库、快速笔记、TaskList、日记、读书清单，各种类型，应有尽有\n\n\n# Talk\n\n * peerigon-talks 收集了不少有意思的 talks\n\n\n# 算法\n\n * leetcode 用 js 刷 leetcode\n\n\n# 生活\n\n * Ventusky 风雨气温图",normalizedContent:"# 文档\n\n * mdn | mdn-js标准内置对象 web技术权威文档\n * devdocs web 开发技术文档，非常不错的学习手册！\n * 现代javascript教程 以最新标准为基准的js教程\n * es5教程 阮一峰的js教程\n * es6教程 阮一峰的es6教程\n * bash 脚本教程 阮一峰编写\n * ecma ecma官网\n * 菜鸟教程 涵盖多种语言的初级教程\n * 腾讯云开发者手册\n\n\n# 社区\n\n * github 程序员同性交友社区\n * 掘金 一个帮助开发者成长的社区\n * 简书 有很多频道的创作社区\n * 思否 解决技术问题的社区\n * stack overflow 同上，外网的\n * infoq\n * v2ex\n * 鱼塘热榜 划水网站，收集了很多网站，当天热门文章\n * 码力全开资源库 很全很强大，独立开发者/设计干货/优质利器/工具资源...\n * eda365-pcb layout论坛 eda365电子论坛-电子工程师硬件研发开发网站\n\n\n# 博客\n\n * 阮一峰的网络日志\n * samanthaming 对前端小知识点的总结，并为每个知识点制作精美的小卡片。\n * 吴川斌的博客 一个专注于智能硬件、嵌入式系统、物联网、电子产品设计美学的独立博客\n\n\n# 电子书\n\n * 高教书苑 高等教育出版社的书籍，包含多种学科。\n * 前端电子书收集\n * sobooks 免费的电子书资源网站\n\n\n# 文章\n\n * 灵活运用css开发技巧\n\n\n# 科学上网\n\n * 谷歌chrome商店访问助手\n\n * 谷歌云(gcp)一键搭建 v2ray 让你畅快科学上网\n\n\n# 视频\n\n * 慕课网 实战视频教程\n * 妙味课堂 比较系统的前端入门视频教程\n * 中国大学mooc 涵盖计算机、外语、心理学等专业免费课程\n * bilibili b站，上面也有一些可供学习的免费视频\n * egghead 质量还不错的短视频教程，外网\n\n\n# 电视直播\n\n * cctv、卫视高清直播\n\n\n# github\n\n * github 短域名服务\n * shields 徽章图标\n * followers 全球排名\n * star-history 展示一个项目 stars 增长曲线\n\n\n# 在线工具\n\n\n# 开发\n\n * can i use 查看属性和方法的兼容性\n * 30 seconds of code 收集了许多有用的代码小片段\n\n\n# 代码编辑\n\n * codepen 在线代码编辑与演示\n * codesandbox 内嵌vscode的在线ide\n\n\n# emoji表情\n\n * emoji表情\n * emoji表情备忘录\n * gitmoji 通过 emoji 表达 git 的操作内容\n\n> windows系统下按win+.快速打开表情选择框\n\n\n# 图片工具\n\n * tinypng图片压缩 压缩png很有用\n * squoosh 谷歌出品在线免费图片压缩工具（jpg、png等,压缩效果比tinypng稍好）\n * waifu2x 通过卷积网络放大图片\n * vectormagic 转换矢量图\n * vectorizer 真正的 png 转 svg 神器\n * 在线ai图片处理 黑白修复、无损放大、动漫化、铅笔画等。\n * remove ai抠图\n * backgroundremover 又一个抠图的\n * [text to ascii art generator (taag)](http://patorjk.com/software/taag/#p=display&f=graffiti&t=type something ) 字符画\n\n\n# 作图\n\n * processon在线作图 流程图、思维导图、原型图等\n * 百度脑图 思维导图\n\n\n# css\n\n * css tricks css技巧收集与演示\n * css生成器\n * css渐变生成器\n * css3-box shadow(阴影)\n * 贝塞尔曲线生成器\n * 花纹背景生成器\n * 花纹背景-pattern.css\n * 3d字体\n * css-tricks css技巧文章\n * you-need-to-know-css css的各种demo，很全\n * animista css动画可视化工具，复制代码就能用\n * navnav 各种炫酷的css动画组件\n\n\n# cdn加速\n\n * jsdelivr 国外的一家优秀的公共 cdn 服务提供商\n * unpkg cdn 服务\n\n\n# 网站托管\n\n * vercel 好用的网站托管服务\n\n\n# 正则\n\n * 正则可视化\n * ihateregex 正则搜索，细节做得很好\n * 正则迷你书 学习正则的小手册\n\n\n# 其他\n\n * linux命令手册\n * carbon代码图片生成器 生成好看的代码图片\n\n\n# 设计\n\n * 创造师导航\n * 设计师网址导航\n * remove ai抠图，抠图算法很厉害\n * manypixels 插画\n * undraw 插画\n * storytale 插画，种类丰富，包含3d插画\n * uimovement 能从这个网站找到不少动画交互的灵感\n * awwwards是一个一个专门为设计精美的网站以及富有创意的网站颁奖的网站\n * dribbble 经常能在上面找到很多有创意好看的 gif 或者图片\n * behance dribbble 是设计师的微博，behance 是设计师的博客\n * logojoy 使用 ai 做 logo 的网站，做出来的 logo 质量还不错。\n * brandmark 另一个在线制作 logo 网站\n * instant 又一个 logo 制作网站\n * namecheap又一个 logo 制作网站\n * logo-maker 又一个 logo 制作网站 这个更简单点 就是选模板之后微调\n * coolors 帮你在线配色的网站 你能找到不少配色灵感\n * colorhunt 另一个配色网站\n * uigradients 渐变色网站\n * designcap 在线海报设计\n * flat ui 色表 flat ui 色表\n * 0to255 颜色梯度\n * ikonate 提供免费的图标 icons\n * remixicon 又一个提供免费图标 icons\n * feather 免费的 icons\n * nord 北欧性冷淡风主题配色\n * unsplash 提供免费的高清图片\n * pexels 提供免费的高清图片\n * colorkitty 从你的图片中提取配色\n * design.youzan 有赞设计原则\n * iconfont 阿里巴巴矢量图标库\n * undraw 免费的矢量插画\n * icomoon 矢量图标库\n * cssicon 所有的 icon 都是纯 css 画的 缺点：icon 不够多\n * css triangle generator 帮你快速用 css 做出三角形\n * clippy 在线帮你使用 css clip-path 做出各种形状的图形\n * lorem picsum 提供免费的占位图\n * canva 可画 生成插画、封面、海报、头像等\n * 404页 404页素材\n * collectui 按功能组件分类的设计图\n * smartmockups 产品模板生成工具\n\n\n# 图库\n\n * uigradients 渐变色生成工具\n * freepik banner 图库\n * 觅元素一天免费下载十张 psd\n * 搞定设计 可以抠图\n * vectorizer 真正的 png 转 svg 神器\n * 站酷\n * 花瓣\n * 虎克 ps 学习教程\n * betheme\n * ui 中国\n\n\n# 有趣\n\n * 奇趣网站收藏家 收藏了很多有趣的网站\n * fc在线模拟器(小霸王游戏机) 童年回忆\n * 帮你百度一下 可以 点我测试一下-\n * 国际版 同帮我百度一下-点我测试一下-\n * wallhaven 壁纸网站-\n * url 地址播放 emojis 动画 在地址栏里面播放 emoji\n * can't unsee 强烈建议前端、客户端、ui 开发的同学玩下，检查一下自己对设计稿的敏感度怎么样\n * ggtalk 平时一直在听的一个技术博客\n * awesome-comment 里面收集了很多有趣的代码注释\n * text-img 都将图片转化为 ascii 用来写注释\n * weird-fonts 将普通字母转化为 特殊 unicode\n * snake 在地址栏里面玩贪吃蛇\n * zero-width-lib 利用零宽度字符实现 隐形水印、加密信息分享、逃脱词匹配，很有创意\n * abbreviations 查看一个简写是什么意思的网站\n * magi ai 搜索神器，超屌\n * 诺基亚短信图片生成器\n\n\n# 交互\n\n * 微交互 里面收集了市面上很多很好的微交互例子 值得学习\n * little big details 同上，一个国外微交互汇集网站\n * cruip 登录页的各种页面设计，可以免费下载模板\n * comixify 一个波兰团队做了非常好玩的工具，可以把视频自动转成漫画，上图是他们提供的 demo，效果很棒。\n * taiko-web 太鼓达人网页版 只能说很 6\n\n\n# 教程\n\n * npx 教你怎么合理的使用 npx\n * hacksplaining 网络安全学习网站\n * mobile-web-best-practice 移动 web 最佳实践\n\n\n# 产品\n\n * 产品大牛 什么有很多完整的产品原型可以借鉴\n * 磨刀 快速出 ui 原型\n\n\n# 实用\n\n * webden 在线网页编辑器，轻便快捷\n * browser-update 浏览器版本更新提示插件\n * typeform 一个国外的在线调查问卷网站\n * videofk videofk 视频在线解析下载\n * 全历史 历史内容聚合网站\n * uzerme 云端办公工具\n * sobooks 强大的电子书资源网站\n * 稿定设计 键式设计工具+智能抠图\n * 大力盘 百度网盘搜索\n * enfi 下载器 不限速下载器\n * 来画视频 像做 ppt 一样做短视频\n * arkie 海报制作工具\n * 优品 ppt\n * 比格 ppt\n * 高清免费图片\n * 高清免费图片 2\n * shapedivider 生成波浪分隔线\n * notion 知识库、快速笔记、tasklist、日记、读书清单，各种类型，应有尽有\n\n\n# talk\n\n * peerigon-talks 收集了不少有意思的 talks\n\n\n# 算法\n\n * leetcode 用 js 刷 leetcode\n\n\n# 生活\n\n * ventusky 风雨气温图",charsets:{cjk:!0},lastUpdated:"2023/06/18, 23:24:16",lastUpdatedTimestamp:1687101856e3},{title:"Obsidian教程",frontmatter:{title:"Obsidian教程",date:"2024-01-23T22:24:21.000Z",permalink:"/pages/dc200c/",categories:["收藏"],tags:[null],readingShow:"top"},regularPath:"/78.%E6%94%B6%E8%97%8F/04.Obsidian%E6%95%99%E7%A8%8B.html",relativePath:"78.收藏/04.Obsidian教程.md",key:"v-a2cfc232",path:"/pages/dc200c/",headers:[{level:2,title:"该教程所需知道的常用操作",slug:"该教程所需知道的常用操作",normalizedTitle:"该教程所需知道的常用操作",charIndex:581},{level:2,title:"下载 AnuPpuccin 主题",slug:"下载-anuppuccin-主题",normalizedTitle:"下载 anuppuccin 主题",charIndex:760},{level:2,title:"安装插件",slug:"安装插件",normalizedTitle:"安装插件",charIndex:1007},{level:2,title:"案例：悬浮窗",slug:"案例-悬浮窗",normalizedTitle:"案例：悬浮窗",charIndex:1022},{level:3,title:"一键呼出",slug:"一键呼出-样式设置悬浮面板",normalizedTitle:"一键呼出",charIndex:1033},{level:2,title:"代码块示例",slug:"代码块示例",normalizedTitle:"代码块示例",charIndex:1097},{level:2,title:"CheckBox 示例样式",slug:"checkbox-示例样式",normalizedTitle:"checkbox 示例样式",charIndex:1479},{level:2,title:"泡泡条示例样式",slug:"泡泡条示例样式",normalizedTitle:"泡泡条示例样式",charIndex:1938},{level:2,title:"案例：一键记灵感/日记",slug:"案例-一键记灵感-日记",normalizedTitle:"案例：一键记灵感/日记",charIndex:2268},{level:3,title:"一键写灵感，一个灵感一篇笔记",slug:"一键写灵感-一个灵感一篇笔记",normalizedTitle:"一键写灵感，一个灵感一篇笔记",charIndex:2338},{level:4,title:"1.  新建文件夹，用来存放 灵感/日记",slug:"_1-新建文件夹-用来存放-灵感-日记",normalizedTitle:"1.  新建文件夹，用来存放 灵感/日记",charIndex:null},{level:4,title:"2. 设置笔记模板文件",slug:"_2-设置笔记模板文件",normalizedTitle:"2. 设置笔记模板文件",charIndex:2467},{level:4,title:"3.  打开 QuickAdd 插件设置界面（设置界面，第三方插件下面找到对应插件）",slug:"_3-打开-quickadd-插件设置界面-设置界面-第三方插件下面找到对应插件",normalizedTitle:"3.  打开 quickadd 插件设置界面（设置界面，第三方插件下面找到对应插件）",charIndex:null},{level:4,title:"4. 设置 QuickAdd-创建自定义动作",slug:"_4-设置-quickadd-创建自定义动作",normalizedTitle:"4. 设置 quickadd-创建自定义动作",charIndex:2779},{level:4,title:"5. 设置创建的动作，点击动作后面的齿轮，进入设置界面",slug:"_5-设置创建的动作-点击动作后面的齿轮-进入设置界面",normalizedTitle:"5. 设置创建的动作，点击动作后面的齿轮，进入设置界面",charIndex:2836},{level:4,title:"6. 使用方式",slug:"_6-使用方式",normalizedTitle:"6. 使用方式",charIndex:3150},{level:3,title:"一键写灵感，所有灵感都记在一篇笔记",slug:"一键写灵感-所有灵感都记在一篇笔记",normalizedTitle:"一键写灵感，所有灵感都记在一篇笔记",charIndex:3342},{level:4,title:"1. 新建笔记，用来记录所有灵感",slug:"_1-新建笔记-用来记录所有灵感",normalizedTitle:"1. 新建笔记，用来记录所有灵感",charIndex:3363},{level:4,title:"2 . 打开 QuickAdd 插件设置界面【同上】",slug:"_2-打开-quickadd-插件设置界面【同上】",normalizedTitle:"2 . 打开 quickadd 插件设置界面【同上】",charIndex:3463},{level:4,title:"3 . 设置 QuickAdd-创建自定义动作，【同上】，修改下动作名 2inspire",slug:"_3-设置-quickadd-创建自定义动作-【同上】-修改下动作名-2inspire",normalizedTitle:"3 . 设置 quickadd-创建自定义动作，【同上】，修改下动作名 2inspire",charIndex:3493},{level:4,title:"4 . 设置创建的动作，点击动作后面的齿轮，进入设置界面",slug:"_4-设置创建的动作-点击动作后面的齿轮-进入设置界面",normalizedTitle:"4 . 设置创建的动作，点击动作后面的齿轮，进入设置界面",charIndex:3541},{level:4,title:"5. 使用方式【同上】",slug:"_5-使用方式【同上】",normalizedTitle:"5. 使用方式【同上】",charIndex:3980},{level:3,title:"将日记内容添加到当天的日记文件中，我主要快速写待办用",slug:"将日记内容添加到当天的日记文件中-我主要快速写待办用",normalizedTitle:"将日记内容添加到当天的日记文件中，我主要快速写待办用",charIndex:3996},{level:4,title:"1. 创建文件夹，用来存放日记，命名“日记”",slug:"_1-创建文件夹-用来存放日记-命名-日记",normalizedTitle:"1. 创建文件夹，用来存放日记，命名“日记”",charIndex:4026},{level:4,title:"2. 设置笔记模板文件",slug:"_2-设置笔记模板文件-2",normalizedTitle:"2. 设置笔记模板文件",charIndex:2467},{level:4,title:"3. 设置日记插件",slug:"_3-设置日记插件",normalizedTitle:"3. 设置日记插件",charIndex:4377},{level:4,title:"4. 设置 QuickAdd-创建自定义动作，【同上】，修改下动作名 todo",slug:"_4-设置-quickadd-创建自定义动作-【同上】-修改下动作名-todo",normalizedTitle:"4. 设置 quickadd-创建自定义动作，【同上】，修改下动作名 todo",charIndex:4390},{level:4,title:"5 . 设置创建的动作，点击动作后面的齿轮，进入设置界面",slug:"_5-设置创建的动作-点击动作后面的齿轮-进入设置界面-2",normalizedTitle:"5 . 设置创建的动作，点击动作后面的齿轮，进入设置界面",charIndex:4433},{level:4,title:"6. 使用方式",slug:"_6-使用方式-2",normalizedTitle:"6. 使用方式",charIndex:3150},{level:2,title:"案例：自定义文件排序",slug:"案例-自定义文件排序",normalizedTitle:"案例：自定义文件排序",charIndex:4773},{level:2,title:"自定义按钮",slug:"自定义按钮",normalizedTitle:"自定义按钮",charIndex:168},{level:2,title:"标签管理",slug:"标签管理",normalizedTitle:"标签管理",charIndex:178},{level:2,title:"最近使用文件",slug:"最近使用文件",normalizedTitle:"最近使用文件",charIndex:183},{level:2,title:"链接预览",slug:"链接预览",normalizedTitle:"链接预览",charIndex:190},{level:2,title:"自定义 callout 样式",slug:"自定义-callout-样式",normalizedTitle:"自定义 callout 样式",charIndex:5318},{level:2,title:"卡片界面",slug:"卡片界面",normalizedTitle:"卡片界面",charIndex:55},{level:2,title:"彩虹文件管理",slug:"彩虹文件管理",normalizedTitle:"彩虹文件管理",charIndex:5541},{level:2,title:"案例：文件/文件夹的 ICON 设置",slug:"案例-文件-文件夹的-icon-设置",normalizedTitle:"案例：文件/文件夹的 icon 设置",charIndex:5644},{level:2,title:"显示 todo 任务汇总侧边栏",slug:"显示-todo-任务汇总侧边栏",normalizedTitle:"显示 todo 任务汇总侧边栏",charIndex:5813},{level:2,title:"文字色块",slug:"文字色块",normalizedTitle:"文字色块",charIndex:102},{level:2,title:"工具栏",slug:"工具栏",normalizedTitle:"工具栏",charIndex:79},{level:2,title:"设置搜索框",slug:"设置搜索框",normalizedTitle:"设置搜索框",charIndex:5994},{level:2,title:"多级标题自定义颜色",slug:"多级标题自定义颜色",normalizedTitle:"多级标题自定义颜色",charIndex:6100}],headersStr:"该教程所需知道的常用操作 下载 AnuPpuccin 主题 安装插件 案例：悬浮窗 一键呼出 代码块示例 CheckBox 示例样式 泡泡条示例样式 案例：一键记灵感/日记 一键写灵感，一个灵感一篇笔记 1.  新建文件夹，用来存放 灵感/日记 2. 设置笔记模板文件 3.  打开 QuickAdd 插件设置界面（设置界面，第三方插件下面找到对应插件） 4. 设置 QuickAdd-创建自定义动作 5. 设置创建的动作，点击动作后面的齿轮，进入设置界面 6. 使用方式 一键写灵感，所有灵感都记在一篇笔记 1. 新建笔记，用来记录所有灵感 2 . 打开 QuickAdd 插件设置界面【同上】 3 . 设置 QuickAdd-创建自定义动作，【同上】，修改下动作名 2inspire 4 . 设置创建的动作，点击动作后面的齿轮，进入设置界面 5. 使用方式【同上】 将日记内容添加到当天的日记文件中，我主要快速写待办用 1. 创建文件夹，用来存放日记，命名“日记” 2. 设置笔记模板文件 3. 设置日记插件 4. 设置 QuickAdd-创建自定义动作，【同上】，修改下动作名 todo 5 . 设置创建的动作，点击动作后面的齿轮，进入设置界面 6. 使用方式 案例：自定义文件排序 自定义按钮 标签管理 最近使用文件 链接预览 自定义 callout 样式 卡片界面 彩虹文件管理 案例：文件/文件夹的 ICON 设置 显示 todo 任务汇总侧边栏 文字色块 工具栏 设置搜索框 多级标题自定义颜色",content:'#obsidian #教程 #菜有隐 #插件\n\n\n# obsidian 内容点集锦\n\n * [3] 外观主题：卡片界面，配色，彩虹文件样式，文件图标，泡泡条，工具栏，callout 样式，程序块高亮样式，文字色块，ckecklist 样式\n\n * [0] 功能：一键记灵感/日记，自定义文件夹/文件排序，日历，简易 todo list，自定义按钮，悬浮窗，标签管理，最近使用文件，链接预览\n\n> [!download] 需要插件 Admonition，Calendar，Checklist，Commander，Customer File Explore sorting，Dataview，Easy Typing，Editing Toolbar，File Tree Alternative Plugin，Highlightr，Hover Editor，Iconize，Minimal Theme Settings，obsidian markmind，Paste URL into selection，QuickAdd，Recent Files，Style Settings，TagFolder，Templater，Convert url to preview (iframe), Tag Wrangler, Editor Syntax Highlight\n\n\n# 该教程所需知道的常用操作\n\n插件和主题下载需要梯子，没有梯子在我的视频的简介下自取 插件下载后需要激活 安装的插件在左下角的设置界面可以管理，大多数插件可以在这里设置\n\n> [!tip]\n> \n> 另外，插件命令可以 Ctrl+P 呼出命令面板，输入插件名，会出现该插件相应的命令 例如 Checklist 插件，激活插件后没有显示，可以用这个方式\n\n\n# 下载 AnuPpuccin 主题\n\n> [!info] 说明\n> \n> 该主题是后续很多外观样式的前置条件，需要下载激活后，后续的例如泡泡条，checklist 样式，卡片界面等才可以设置\n\n> [!download] 新主题下载激活 如果有梯子的，自己下载，没有梯子打不开 obsidian 主题商店的，看下面的说明下载\n\n> 没有梯子的，在我的视频简介下载的文件里，把“主题”文件夹下的，AnuPpuccin 文件夹放入 obsidian 的主题文件夹（找到该文件夹的方式见下图）\n\n\n# 安装插件\n\n查看视频\n\n\n# 案例：悬浮窗\n\n\n# 一键呼出 <样式设置悬浮面板>\n\n> [!download] 需要插件\n\nHover Editor，Commander\n\n\n# 代码块示例\n\n> [!download] 需要插件\n> \n> Editor Syntax Highlight\n\nimport pandas as pd\n\nvideoProduceSpeed = 1.0 //初始视频生产速度\n\ndef thumbUp(👍,🌟):\n\tif IsThumbUp or IsFavorite: \n\t\tvideoProduceSpeed *= 10\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nusing System；\n\npublic float videoProduceSpeed = 1.0； //初始视频生产速度\n\npublic void touBi(   ){\n\n\tif (touBi){\n\n\t\tvideoProduceSpeed *= 20;\n\n\t}\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# CheckBox 示例样式\n\n> [!download] 需要插件\n> \n> Style Settings\n\n> [!download] 需要下载主题\n> \n> AnuPpuccin\n\n> [!info] 需要设置\n> \n> 打开插件 Style Settings 中的开关\n\n * [ ] ⏳\n * [p] 点赞\n * [x] 收藏 :coin_bcoin: 投币\n * [ ] Unchecked\n * [ ] Checked\n * [>] Rescheduled\n * [<] Scheduled\n * [!] Important\n * [-] Cancelled\n * [/] In Progress\n * [ ] Question\n * [n] Note\n * [l] Location\n * [i] Information\n * [I] Idea\n * [S] Amount\n * [c] Con\n * [b] Bookmark\n * ["] Quote\n\n         \n******   \n\n\n# 泡泡条示例样式\n\n> [!info] PS\n> \n> 与 CheckBox 设置相同\n\n * [0] 泡泡条示例样式 0 泡泡条示例样式 0 泡泡条示例样式 0 泡泡条示例样式 0\n * [1] 泡泡条示例样式 1 泡泡条示例样式 1 泡泡条示例样式 1\n * [2] 泡泡条示例样式 2 泡泡条示例样式 2\n * [3] 泡泡条示例样式 3\n * [4] 示例样式 4\n * [5] 样式 5\n * [6] 泡泡条示例样式 6\n * [7] 泡泡条示例样式 7 泡泡条示例样式 7\n * [8] 泡泡条示例样式 8 泡泡条示例样式 8 泡泡条示例样式 8\n * [9] 泡泡条示例样式 9 泡泡条示例样式 9 泡泡条示例样式 9 泡泡条示例样式 9\n\n\n# 案例：一键记灵感/日记\n\n> [!download] 需要插件 安装核心插件 日记，第三方插件 QuickAdd，Calendar\n\n\n# 一键写灵感，一个灵感一篇笔记\n\n# 1. 新建文件夹，用来存放 灵感/日记\n\n> [!info] 文件创建 设置完之后写的笔记会放在灵感 memo 文件夹下，如灵感 20231016. md 文件，该路径为 灵感/灵感memo ，路径第 4 步会用到\n\n# 2. 设置笔记模板文件\n\n> [!example] 流程 新建笔记 :luc_arrow_big_right: 放到指示文件位置 :luc_arrow_big_right: 开头输入 --- 会出现文档属性 :luc_arrow_big_right: created 先用文本的格式，等输入 {{date}} 后再改成日期格式 :luc_arrow_big_right: 之后按示例完成设置，\n\n> [!info] 文件位置 文件存放路径为 obsidian使用相关/templater/灵感模板.md ，路径第 4 步会用到\n\n# 3. 打开 QuickAdd 插件设置界面（设置界面，第三方插件下面找到对应插件）\n\n# 4. 设置 QuickAdd-创建自定义动作\n\n> [!important] 重要 记得点亮动作的黄色闪电\n\n# 5. 设置创建的动作，点击动作后面的齿轮，进入设置界面\n\n\nlet text = ""\ntext = await this.quickAddApi.inputPrompt("Inspire","输入灵感",text);\ntext = text.replace("\\n","<br>");\ntext = "\\n"+  "> [! tip] ins" + "\\n"  +">" + text + "\\n" + "#灵感"\nreturn text\n\n// 这是说明不用复制， 将这段代码复制到截图所示输入框中，并补全首尾缺失部分。\n// 另外在该代码的段落上下各留1行空行，重要!!！\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 6. 使用方式\n\n> [!赞] 使用方式1：使用命令行 按快捷键 Ctrl + P 呼出命令行，搜索之前设置的动作名称 inspire 或者插件名 quickadd,之后弹出第一个名为 灵感标题 窗口，该窗口输入笔记标题。按下确定后，弹出第二个窗口，这里输出的是笔记内容。\n\n> [!收藏] 使用方式2：设置快捷键 设置 - 快捷键 - 搜索 inspire - 设置快捷键\n\n\n# 一键写灵感，所有灵感都记在一篇笔记\n\n# 1. 新建笔记，用来记录所有灵感\n\n> [!info] 文件创建 设置完之后写的笔记会添加到 灵感 文件夹下的 灵感散记.md 文件中，该路径为 灵感/灵感 散记.md ，路径第 4 步会用到\n\n# 2 . 打开 QuickAdd 插件设置界面【同上】\n\n# 3 . 设置 QuickAdd-创建自定义动作，【同上】，修改下动作名 2inspire\n\n# 4 . 设置创建的动作，点击动作后面的齿轮，进入设置界面\n\n//这留1个空行\n//```js quickadd\nlet text = ""\ntext = await this.quickAddApi.inputPrompt("Inspire","输入灵感",text);\ntext = text.replace("\\n","<br>");\ntext = "\\n"+  "> [! tip] ins" + "\\n"  +">" + text + "\\n" + "#灵感 " \nlet nowDate = new Date()\ntext += nowDate.toLocaleDateString()\nreturn text\n//```\n//这留1个空行\n\n// 这是说明不用复制， 将这段代码复制到截图所示输入框中，并补全首尾缺失部分。\n// 另外在该代码的段落上下各留1行空行，重要!!！\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n 5. \n\n# 5. 使用方式【同上】\n\n\n# 将日记内容添加到当天的日记文件中，我主要快速写待办用\n\n# 1. 创建文件夹，用来存放日记，命名“日记”\n\n> [!info] 创建文件夹 文件夹路径 日记 ，路径第 3 步会用到\n\n# 2. 设置笔记模板文件\n\n> [!example] 流程 新建笔记 :luc_arrow_big_right: 放到指示文件位置 :luc_arrow_big_right: 开头输入 --- 会出现文档属性 :luc_arrow_big_right: created 先用文本的格式，等输入 {{date}} 后再改成日期格式 :luc_arrow_big_right: 之后按示例完成设置，\n\n> [!info] 文件位置 文件存放路径为 obsidian使用相关/templater/日记模板.md ，路径第 3 步会用到\n\n> [!info] 模板设置最终示例\n\n# 3. 设置日记插件\n\n# 4. 设置 QuickAdd-创建自定义动作，【同上】，修改下动作名 todo\n\n# 5 . 设置创建的动作，点击动作后面的齿轮，进入设置界面\n\n//```js quickadd\nlet text = ""\ntext = await this.quickAddApi.inputPrompt("todo","输入todo",text);\ntext = text.replace("\\n","<br>");\ntext =  "- [ ] " + text\nreturn text\n//```\n\n// 这是说明不用复制， 将这段代码复制到截图所示输入框中，并补全首尾缺失部分。\n// 这次不用留空行\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 6. 使用方式\n\n> [!important] 每天点击日历上当天日期，创建当天日记，然后使用方式【同上】\n\n\n# 案例：自定义文件排序\n\n> [!download] 需要插件\n> \n> Customer File Explore sorting\n\n> [!tip]\n> \n> Shift + enter 可以在属性编辑输入多行\n\n> [!warning] 设置\n> \n> 这一案例的设置请查看视频\n\n\n# 自定义按钮\n\n> [!download] 需要插件\n> \n> Commander\n\n\n# 标签管理\n\n> [!download] 需要插件 Tag Wrangler, TagFolder\n\n\n# 最近使用文件\n\n> [!download] 需要插件 Recent Files\n\nCtrl + P 呼出命令面板，搜索 recent files：open，最近使用文件的按钮就会出现了\n\n\n# 链接预览\n\n> [!download] 需要插件 Convert url to preview (iframe)\n\n将链接粘贴到 obsidian https://space.bilibili.com/2080168582 选择链接 Ctrl + P 呼出命令面板，搜索 convert 点击 Convert url to preview(iframe):URL to Preview/Iframe\n\n\n# 自定义 callout 样式\n\n> [!good] 点赞\n> \n> 自定义 callout\n\n> [!download] 使用示例说明 Ctrl + P ，搜索 callout，选择 Admonition:Insert Callout\n\n\n# 卡片界面\n\n> [!download] 需要插件\n> \n> Style Settings\n\n> [!download] 需要下载主题\n> \n> AnuPpuccin\n\n> [!info] 设置\n\n\n# 彩虹文件管理\n\n> [!download] 需要插件\n> \n> Style Settings\n\n> [!download] 需要下载主题\n> \n> AnuPpuccin\n\n> [!info] 设置\n\n\n# 案例：文件/文件夹的 ICON 设置\n\n> [!download] 需要插件\n> \n> Iconize\n\n> [!download] 安装 Icon 包 有梯子的自己下载 没有梯子的，icon 包我放视频简介了，下面是安装方法\n\n> [!info] 使用方法1\n> \n> 右键文件/文件夹\n\n> [!info] 使用方法2：规则\n\n\n# 显示 todo 任务汇总侧边栏\n\n> [!download] 需要插件\n> \n> Checklist\n\n\n# 文字色块\n\n你们的一键三连，是我创作的动力~ 你们的一键三连，是我创作的动力！\n\n\n# 工具栏\n\n下划线\n\n> [!download] 需要插件\n> \n> Editing Toolbar\n\n> [!info] 显示工具栏 Ctrl+ P，搜索\n\n\n# 设置搜索框\n\n> [!download] 需要插件\n> \n> Settings search\n\n当安装了很多插件后，有时候不知道某些设置在哪个插件，或者哪里设置，有了这个就会方便很多\n\n比如： 显示行号\n\n\n# 多级标题自定义颜色',normalizedContent:'#obsidian #教程 #菜有隐 #插件\n\n\n# obsidian 内容点集锦\n\n * [3] 外观主题：卡片界面，配色，彩虹文件样式，文件图标，泡泡条，工具栏，callout 样式，程序块高亮样式，文字色块，ckecklist 样式\n\n * [0] 功能：一键记灵感/日记，自定义文件夹/文件排序，日历，简易 todo list，自定义按钮，悬浮窗，标签管理，最近使用文件，链接预览\n\n> [!download] 需要插件 admonition，calendar，checklist，commander，customer file explore sorting，dataview，easy typing，editing toolbar，file tree alternative plugin，highlightr，hover editor，iconize，minimal theme settings，obsidian markmind，paste url into selection，quickadd，recent files，style settings，tagfolder，templater，convert url to preview (iframe), tag wrangler, editor syntax highlight\n\n\n# 该教程所需知道的常用操作\n\n插件和主题下载需要梯子，没有梯子在我的视频的简介下自取 插件下载后需要激活 安装的插件在左下角的设置界面可以管理，大多数插件可以在这里设置\n\n> [!tip]\n> \n> 另外，插件命令可以 ctrl+p 呼出命令面板，输入插件名，会出现该插件相应的命令 例如 checklist 插件，激活插件后没有显示，可以用这个方式\n\n\n# 下载 anuppuccin 主题\n\n> [!info] 说明\n> \n> 该主题是后续很多外观样式的前置条件，需要下载激活后，后续的例如泡泡条，checklist 样式，卡片界面等才可以设置\n\n> [!download] 新主题下载激活 如果有梯子的，自己下载，没有梯子打不开 obsidian 主题商店的，看下面的说明下载\n\n> 没有梯子的，在我的视频简介下载的文件里，把“主题”文件夹下的，anuppuccin 文件夹放入 obsidian 的主题文件夹（找到该文件夹的方式见下图）\n\n\n# 安装插件\n\n查看视频\n\n\n# 案例：悬浮窗\n\n\n# 一键呼出 <样式设置悬浮面板>\n\n> [!download] 需要插件\n\nhover editor，commander\n\n\n# 代码块示例\n\n> [!download] 需要插件\n> \n> editor syntax highlight\n\nimport pandas as pd\n\nvideoproducespeed = 1.0 //初始视频生产速度\n\ndef thumbup(👍,🌟):\n\tif isthumbup or isfavorite: \n\t\tvideoproducespeed *= 10\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nusing system；\n\npublic float videoproducespeed = 1.0； //初始视频生产速度\n\npublic void toubi(   ){\n\n\tif (toubi){\n\n\t\tvideoproducespeed *= 20;\n\n\t}\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# checkbox 示例样式\n\n> [!download] 需要插件\n> \n> style settings\n\n> [!download] 需要下载主题\n> \n> anuppuccin\n\n> [!info] 需要设置\n> \n> 打开插件 style settings 中的开关\n\n * [ ] ⏳\n * [p] 点赞\n * [x] 收藏 :coin_bcoin: 投币\n * [ ] unchecked\n * [ ] checked\n * [>] rescheduled\n * [<] scheduled\n * [!] important\n * [-] cancelled\n * [/] in progress\n * [ ] question\n * [n] note\n * [l] location\n * [i] information\n * [i] idea\n * [s] amount\n * [c] con\n * [b] bookmark\n * ["] quote\n\n         \n******   \n\n\n# 泡泡条示例样式\n\n> [!info] ps\n> \n> 与 checkbox 设置相同\n\n * [0] 泡泡条示例样式 0 泡泡条示例样式 0 泡泡条示例样式 0 泡泡条示例样式 0\n * [1] 泡泡条示例样式 1 泡泡条示例样式 1 泡泡条示例样式 1\n * [2] 泡泡条示例样式 2 泡泡条示例样式 2\n * [3] 泡泡条示例样式 3\n * [4] 示例样式 4\n * [5] 样式 5\n * [6] 泡泡条示例样式 6\n * [7] 泡泡条示例样式 7 泡泡条示例样式 7\n * [8] 泡泡条示例样式 8 泡泡条示例样式 8 泡泡条示例样式 8\n * [9] 泡泡条示例样式 9 泡泡条示例样式 9 泡泡条示例样式 9 泡泡条示例样式 9\n\n\n# 案例：一键记灵感/日记\n\n> [!download] 需要插件 安装核心插件 日记，第三方插件 quickadd，calendar\n\n\n# 一键写灵感，一个灵感一篇笔记\n\n# 1. 新建文件夹，用来存放 灵感/日记\n\n> [!info] 文件创建 设置完之后写的笔记会放在灵感 memo 文件夹下，如灵感 20231016. md 文件，该路径为 灵感/灵感memo ，路径第 4 步会用到\n\n# 2. 设置笔记模板文件\n\n> [!example] 流程 新建笔记 :luc_arrow_big_right: 放到指示文件位置 :luc_arrow_big_right: 开头输入 --- 会出现文档属性 :luc_arrow_big_right: created 先用文本的格式，等输入 {{date}} 后再改成日期格式 :luc_arrow_big_right: 之后按示例完成设置，\n\n> [!info] 文件位置 文件存放路径为 obsidian使用相关/templater/灵感模板.md ，路径第 4 步会用到\n\n# 3. 打开 quickadd 插件设置界面（设置界面，第三方插件下面找到对应插件）\n\n# 4. 设置 quickadd-创建自定义动作\n\n> [!important] 重要 记得点亮动作的黄色闪电\n\n# 5. 设置创建的动作，点击动作后面的齿轮，进入设置界面\n\n\nlet text = ""\ntext = await this.quickaddapi.inputprompt("inspire","输入灵感",text);\ntext = text.replace("\\n","<br>");\ntext = "\\n"+  "> [! tip] ins" + "\\n"  +">" + text + "\\n" + "#灵感"\nreturn text\n\n// 这是说明不用复制， 将这段代码复制到截图所示输入框中，并补全首尾缺失部分。\n// 另外在该代码的段落上下各留1行空行，重要!!！\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 6. 使用方式\n\n> [!赞] 使用方式1：使用命令行 按快捷键 ctrl + p 呼出命令行，搜索之前设置的动作名称 inspire 或者插件名 quickadd,之后弹出第一个名为 灵感标题 窗口，该窗口输入笔记标题。按下确定后，弹出第二个窗口，这里输出的是笔记内容。\n\n> [!收藏] 使用方式2：设置快捷键 设置 - 快捷键 - 搜索 inspire - 设置快捷键\n\n\n# 一键写灵感，所有灵感都记在一篇笔记\n\n# 1. 新建笔记，用来记录所有灵感\n\n> [!info] 文件创建 设置完之后写的笔记会添加到 灵感 文件夹下的 灵感散记.md 文件中，该路径为 灵感/灵感 散记.md ，路径第 4 步会用到\n\n# 2 . 打开 quickadd 插件设置界面【同上】\n\n# 3 . 设置 quickadd-创建自定义动作，【同上】，修改下动作名 2inspire\n\n# 4 . 设置创建的动作，点击动作后面的齿轮，进入设置界面\n\n//这留1个空行\n//```js quickadd\nlet text = ""\ntext = await this.quickaddapi.inputprompt("inspire","输入灵感",text);\ntext = text.replace("\\n","<br>");\ntext = "\\n"+  "> [! tip] ins" + "\\n"  +">" + text + "\\n" + "#灵感 " \nlet nowdate = new date()\ntext += nowdate.tolocaledatestring()\nreturn text\n//```\n//这留1个空行\n\n// 这是说明不用复制， 将这段代码复制到截图所示输入框中，并补全首尾缺失部分。\n// 另外在该代码的段落上下各留1行空行，重要!!！\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n 5. \n\n# 5. 使用方式【同上】\n\n\n# 将日记内容添加到当天的日记文件中，我主要快速写待办用\n\n# 1. 创建文件夹，用来存放日记，命名“日记”\n\n> [!info] 创建文件夹 文件夹路径 日记 ，路径第 3 步会用到\n\n# 2. 设置笔记模板文件\n\n> [!example] 流程 新建笔记 :luc_arrow_big_right: 放到指示文件位置 :luc_arrow_big_right: 开头输入 --- 会出现文档属性 :luc_arrow_big_right: created 先用文本的格式，等输入 {{date}} 后再改成日期格式 :luc_arrow_big_right: 之后按示例完成设置，\n\n> [!info] 文件位置 文件存放路径为 obsidian使用相关/templater/日记模板.md ，路径第 3 步会用到\n\n> [!info] 模板设置最终示例\n\n# 3. 设置日记插件\n\n# 4. 设置 quickadd-创建自定义动作，【同上】，修改下动作名 todo\n\n# 5 . 设置创建的动作，点击动作后面的齿轮，进入设置界面\n\n//```js quickadd\nlet text = ""\ntext = await this.quickaddapi.inputprompt("todo","输入todo",text);\ntext = text.replace("\\n","<br>");\ntext =  "- [ ] " + text\nreturn text\n//```\n\n// 这是说明不用复制， 将这段代码复制到截图所示输入框中，并补全首尾缺失部分。\n// 这次不用留空行\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 6. 使用方式\n\n> [!important] 每天点击日历上当天日期，创建当天日记，然后使用方式【同上】\n\n\n# 案例：自定义文件排序\n\n> [!download] 需要插件\n> \n> customer file explore sorting\n\n> [!tip]\n> \n> shift + enter 可以在属性编辑输入多行\n\n> [!warning] 设置\n> \n> 这一案例的设置请查看视频\n\n\n# 自定义按钮\n\n> [!download] 需要插件\n> \n> commander\n\n\n# 标签管理\n\n> [!download] 需要插件 tag wrangler, tagfolder\n\n\n# 最近使用文件\n\n> [!download] 需要插件 recent files\n\nctrl + p 呼出命令面板，搜索 recent files：open，最近使用文件的按钮就会出现了\n\n\n# 链接预览\n\n> [!download] 需要插件 convert url to preview (iframe)\n\n将链接粘贴到 obsidian https://space.bilibili.com/2080168582 选择链接 ctrl + p 呼出命令面板，搜索 convert 点击 convert url to preview(iframe):url to preview/iframe\n\n\n# 自定义 callout 样式\n\n> [!good] 点赞\n> \n> 自定义 callout\n\n> [!download] 使用示例说明 ctrl + p ，搜索 callout，选择 admonition:insert callout\n\n\n# 卡片界面\n\n> [!download] 需要插件\n> \n> style settings\n\n> [!download] 需要下载主题\n> \n> anuppuccin\n\n> [!info] 设置\n\n\n# 彩虹文件管理\n\n> [!download] 需要插件\n> \n> style settings\n\n> [!download] 需要下载主题\n> \n> anuppuccin\n\n> [!info] 设置\n\n\n# 案例：文件/文件夹的 icon 设置\n\n> [!download] 需要插件\n> \n> iconize\n\n> [!download] 安装 icon 包 有梯子的自己下载 没有梯子的，icon 包我放视频简介了，下面是安装方法\n\n> [!info] 使用方法1\n> \n> 右键文件/文件夹\n\n> [!info] 使用方法2：规则\n\n\n# 显示 todo 任务汇总侧边栏\n\n> [!download] 需要插件\n> \n> checklist\n\n\n# 文字色块\n\n你们的一键三连，是我创作的动力~ 你们的一键三连，是我创作的动力！\n\n\n# 工具栏\n\n下划线\n\n> [!download] 需要插件\n> \n> editing toolbar\n\n> [!info] 显示工具栏 ctrl+ p，搜索\n\n\n# 设置搜索框\n\n> [!download] 需要插件\n> \n> settings search\n\n当安装了很多插件后，有时候不知道某些设置在哪个插件，或者哪里设置，有了这个就会方便很多\n\n比如： 显示行号\n\n\n# 多级标题自定义颜色',charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Markdown语法",frontmatter:{title:"Markdown语法",date:"2023-06-18T22:05:00.000Z",permalink:"/collect/markdown/syntax/",private:!0,categories:["收藏"],tags:["收藏"],readingShow:"top"},regularPath:"/78.%E6%94%B6%E8%97%8F/05.Markdown/05.Markdown%E8%AF%AD%E6%B3%95.html",relativePath:"78.收藏/05.Markdown/05.Markdown语法.md",key:"v-5a105456",path:"/collect/markdown/syntax/",headers:[{level:2,title:"使用 emoji 表情",slug:"使用-emoji-表情",normalizedTitle:"使用 emoji 表情",charIndex:3},{level:2,title:"外部链接",slug:"外部链接",normalizedTitle:"外部链接",charIndex:18},{level:2,title:"文本高亮",slug:"文本高亮",normalizedTitle:"文本高亮",charIndex:26},{level:2,title:"代码高亮",slug:"代码高亮",normalizedTitle:"代码高亮",charIndex:34},{level:2,title:"徽章",slug:"徽章",normalizedTitle:"徽章",charIndex:42},{level:3,title:"内置",slug:"内置",normalizedTitle:"内置",charIndex:50},{level:4,title:"《沁园春·雪》",slug:"《沁园春·雪》",normalizedTitle:"《沁园春·雪》",charIndex:1631},{level:3,title:"外置",slug:"外置",normalizedTitle:"外置",charIndex:58},{level:2,title:"信息框容器",slug:"信息框容器",normalizedTitle:"信息框容器",charIndex:64},{level:2,title:"布局容器",slug:"布局容器",normalizedTitle:"布局容器",charIndex:73},{level:3,title:"我是居中的内容",slug:"我是居中的内容",normalizedTitle:"我是居中的内容",charIndex:83},{level:2,title:"代码块选项卡",slug:"代码块选项卡",normalizedTitle:"代码块选项卡",charIndex:94},{level:2,title:"普通卡片列表",slug:"普通卡片列表",normalizedTitle:"普通卡片列表",charIndex:104},{level:3,title:"语法",slug:"语法",normalizedTitle:"语法",charIndex:116},{level:2,title:"图文卡片列表",slug:"图文卡片列表",normalizedTitle:"图文卡片列表",charIndex:122},{level:3,title:"语法",slug:"语法-2",normalizedTitle:"语法",charIndex:116},{level:2,title:"Tabs插件",slug:"tabs插件",normalizedTitle:"tabs插件",charIndex:140},{level:2,title:"Demo插件（因为兼容问题，目前已经不使用）",slug:"demo插件-因为兼容问题-目前已经不使用",normalizedTitle:"demo插件（因为兼容问题，目前已经不使用）",charIndex:150}],headersStr:"使用 emoji 表情 外部链接 文本高亮 代码高亮 徽章 内置 《沁园春·雪》 外置 信息框容器 布局容器 我是居中的内容 代码块选项卡 普通卡片列表 语法 图文卡片列表 语法 Tabs插件 Demo插件（因为兼容问题，目前已经不使用）",content:" * 使用 emoji 表情\n * 外部链接\n * 文本高亮\n * 代码高亮\n * 徽章\n   * 内置\n   * 外置\n * 信息框容器\n * 布局容器\n   * 我是居中的内容\n * 代码块选项卡\n * 普通卡片列表\n   * 语法\n * 图文卡片列表\n   * 语法\n * Tabs插件\n * Demo插件（因为兼容问题，目前已经不使用）\n\n\n\n\n# 使用 emoji 表情\n\n阅读大片大片的文字难免产生视觉疲劳，而使用 emoji 表情，不仅缓解精神的渐眠，也会胜过千言。\n\n在 markdown 里，使用 :表情: 输入表情，如\n\n你好:smile:，我喜欢:dog:，我小时候经常拿:100:分哦~~~，欢迎来到我的博客:heart:，一起学习吧:muscle:\n\n\n1\n\n\n效果如下：\n\n> 你好😄，我喜欢🐶，我小时候经常拿💯分哦~~~，欢迎来到我的博客❤️，一起学习吧💪\n\n很多指令肯定是记不了的，我们可以也可以去特定的网站获取表情的格式。也可以 copy 一个表情过来，markdown 自动解析表情。\n\n分享一些 emoji 网站：\n\n * emoji 表情备忘录：有很多表情的格式(:表情:)\n * emoji 表情：有很多表情可以copy\n * gitmoji 通过 emoji 表达 git 的操作内容\n\n> windows 系统下按 Win + . 快速打开表情选择框（不是右侧小键盘的 .）\n\n\n# 外部链接\n\n使用外部链接，文字会变色，并且可以点击跳转，格式如下：\n\n[VuePress官网](https://vuepress.vuejs.org/zh/)\n\n\n1\n\n\n效果：\n\nVuePress官网\n\n\n# 文本高亮\n\n使用 <mark> 标签或者 `` 让文本高亮。\n\n<mark> 标签我经常用于文字的突出，如果是一段字符串，我是用的是 `` 包裹起来。\n\n`Vdoing` 是一款简洁高效的 <mark>知识管理&博客</mark> 主题\n\n\n1\n\n\nVdoing 是一款简洁高效的 知识管理&博客 主题\n\n\n# 代码高亮\n\n突出代码块的某些行，使用 {行数-行数}、{行数,行数} 格式，如\n\n输入：\n\n``` js {2,5-7,13}\nreturn {\n      // 数据\n      options,\n      activeKey,\n      sourceLabels,\n      sourceForm,\n      addForm,\n      addRules,\n      sourceRules,\n      // 函数\n      displayRender,\n      submitProdoce,\n      onAddClose,\n    };\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n输出：\n\n\n\n \n\n\n \n \n \n\n\n\n\n\n \n\n\n\nreturn {\n      // 数据\n      options,\n      activeKey,\n      sourceLabels,\n      sourceForm,\n      addForm,\n      addRules,\n      sourceRules,\n      // 函数\n      displayRender,\n      submitProdoce,\n      onAddClose,\n    };\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n * 行数区间: 例如 {5-8}, {3-10}, {10-17}\n * 多个单行: 例如 {4,7,9}\n * 行数区间与多个单行: 例如 {4,7-13,16,23-27,40}\n\n\n# 徽章\n\n\n# 内置\n\n官方自带。详细使用可前往官网 Badge。\n\n#### 《沁园春·雪》 <Badge text=\"摘\"/>\n北国风光<Badge text=\"注释\" type=\"warning\"/>，千里冰封，万里雪飘。\n\n> <Badge text=\"译文\" type=\"error\" vertical=\"middle\"/>: 北方的风光。\n\n\n1\n2\n3\n4\n\n\n * type 有三个参数：tip、warning、error。默认是 tip\n\n * vertical 有两个参数：top、middle。默认是 top\n\n直接在 markdown 文件使用，效果如下：\n\n# 《沁园春·雪》\n\n北国风光，千里冰封，万里雪飘。\n\n> : 北方的风光。\n\n\n# 外置\n\n如果想用更多的自定义徽章，可使用 Shields来生成\n\n![stars](https://img.shields.io/github/stars/Kele-Bingtang/notes-blog)\n![stars](https://img.shields.io/github/stars/Kele-Bingtang/notes-blog?style=social)\n![kbt](https://img.shields.io/badge/kbt-冰糖-green)\n\n\n1\n2\n3\n\n\n\n\n如果没接触过 Shields，Shields 教程传送门\n\n\n# 信息框容器\n\n以下一些内容是 Vdoing 主题提供，并非官方提供。\n\n输入：\n\n::: tip\n这是一条提示\n:::\n\n::: warning\n这是一条注意\n:::\n\n::: danger\n这是一条警告\n:::\n\n::: note\n这是笔记容器，主题自带，官方没有\n:::\n\n::: tip 我的自定义标题\n自定义标题的提示框\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n输出：\n\n提示\n\n这是一条提示\n\n注意\n\n这是一条注意\n\n警告\n\n这是一条警告\n\n笔记\n\n这是笔记容器，主题自带，官方没有\n\n我的自定义标题\n\n自定义标题的提示框\n\n如果想要折叠的容器，如下：也可以自定义标题\n\n::: details\n这是一个详情块，在 IE / Edge 中不生效\n```js\nconsole.log('这是一个详情块')\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n\n点击查看\n\n这是一个详情块，在 IE / Edge 中不生效\n\nconsole.log('这是一个详情块')\n\n\n1\n\n\n\n# 布局容器\n\n::: center\n  ### 我是居中的内容\n  （可用于标题、图片等的居中）\n:::\n\n::: right\n  [我是右浮动的内容](https://cdn.staticaly.com/gh/Kele-Bingtang/static@master/user/avatar2.png)\n:::\n\n::: theorem VuePress\nVue 驱动的静态网站生成器\n::: right\n来自 [官网](https://vuepress.vuejs.org/zh/)\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 我是居中的内容\n\n（可用于标题、图片等的居中）\n\n我是右浮动的内容\n\nVuePress\n\nVue 驱动的静态网站生成器\n\n来自 VuePress官网\n\n提示\n\n没有 left 和 top、bottom\n\n\n# 代码块选项卡\n\n在 <code-group> 中嵌套 <code-block> 来配合使用。在 <code-block> 标签添加 title 来指定 tab 标题，active 指定当前 tab：\n\n<code-group>\n  <code-block title=\"YARN\" active>\n  ```bash\n  yarn add vuepress-theme-vdoing -D\n  ```\n  </code-block>\n\n  <code-block title=\"NPM\">\n  ```bash\n  npm install vuepress-theme-vdoing -D\n  ```\n  </code-block>\n</code-group>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n效果：\n\nyarn add vuepress-theme-vdoing -D\n\n\n1\n\n\nnpm install vuepress-theme-vdoing -D\n\n\n1\n\n\n注意\n\n请在 <code-group> 标签与 markdown 内容之间使用空行隔开，否则可能会解析不出来。\n\n提示\n\nVdoing 解释该组件仅适用于放置代码块，放其他内容在体验上并不友好。经过测试，我放入文字也是可以的。\n\n而且 <code-block> 放在 <code-group> 里时，首行需要缩进两个空格，经过测试，四个空格出问题。\n\n如果你喜欢 ::: tabs 代替 <code-group>，那么我们可以下载 vuepress-plugin-tabs 插件。点击跳到 Tabs 插件安装。\n\n\n# 普通卡片列表\n\n如果想使用 友链 功能，但是 vdoing 主题并没有直接在首页实现该功能，要么使用 卡片列表，要么自己手动实现html。而 卡片列表 目前只能使用在 markdown 文档里，下方介绍。\n\n普通卡片列表容器，可用于 友情链接、项目推荐、诗词展示 等。\n\n输入：\n\n::: cardList\n```yaml\n- name: George Chan\n  desc: 让我给你讲讲他的传奇故事吧\n  avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://cyc0819.top/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n  \n- name: butcher2000\n  desc: 即使再小的帆，也能远航\n  avatar: https://cdn.staticaly.com/gh/Kele-Bingtang/static@master/user/20211029181901.png\n  link: https://blog.csdn.net/weixin_46827107\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n  \n- name: Evan's blog\n  desc: 前端的小学生\n  avatar: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200103123203.jpg\n  link: https://xugaoyi.com/\n  bgColor: '#B9D59C'\n  textColor: '#3B551F'\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n输出：\n\nGeorge Chan\n\n让我给你讲讲他的传奇故事吧\n\nbutcher2000\n\n即使再小的帆，也能远航\n\nEvan's blog\n\n前端的小学生\n\n- name: George Chan\n  desc: 让我给你讲讲他的传奇故事吧\n  avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://cyc0819.top/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n  \n- name: butcher2000\n  desc: 即使再小的帆，也能远航\n  avatar: https://cdn.staticaly.com/gh/Kele-Bingtang/static@master/user/20211029181901.png\n  link: https://blog.csdn.net/weixin_46827107\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n  \n- name: Evan's blog\n  desc: 前端的小学生\n  avatar: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200103123203.jpg\n  link: https://xugaoyi.com/\n  bgColor: '#B9D59C'\n  textColor: '#3B551F'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 语法\n\n::: cardList <每行显示数量>\n``` yaml\n- name: 名称\n  desc: 描述\n  avatar: https://xxx.jpg # 头像，可选\n  link: https://xxx/ # 链接，可选\n  bgColor: '#CBEAFA' # 背景色，可选，默认var(--bodyBg)。颜色值有#号时请添加引号\n  textColor: '#6854A1' # 文本色，可选，默认var(--textColor)\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n * <每行显示数量>：一行内显示多少个卡片，值范围 1~4，默认是 3 个，上方的卡片正好是三个，如果再多一个卡片，就会被换到下一行\n\n * 代码块需指定语言为 yaml\n\n * 代码块内是一个 yaml 格式的数组列表\n\n * 数组成员的属性有：\n   \n   * name：名称\n   * desc：描述\n   * avatar：头像，可选\n   * link：链接，可选\n   * bgColor：背景色，可选，默认 var(--bodyBg)。颜色值有 # 号时请添加引号\n   * textColor：文本色，可选，默认 var(--textColor)\n\n不指定颜色，默认为白色，如下演示：\n\n::: cardList 2\n```yaml\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  bgColor: '#F0DFB1'\n  textColor: '#242A38'\n  \n- name: Vdoing\n  desc: 🚀一款简洁高效的VuePress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgColor: '#DFEEE7'\n  textColor: '#2A3344'\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n《静夜思》\n\n床前明月光，疑是地上霜。举头望明月，低头思故乡。\n\nVdoing\n\n🚀一款简洁高效的VuePress 知识管理&博客(blog) 主题\n\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  \n- name: Vdoing\n  desc: 🚀一款简洁高效的VuePress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgColor: '#DFEEE7'\n  textColor: '#2A3344'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 图文卡片列表\n\n图文卡片列表容器，可用于 项目展示、产品展示 等。\n\n先看效果：\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nYoung Kbt\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nYoung Kbt\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nYoung Kbt\n\n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: Young Kbt # 作者，可选\n  avatar: https://cdn.staticaly.com/gh/Kele-Bingtang/static@master/user/avatar2.png # 头像，可选\n  \n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Young Kbt\n  avatar: https://cdn.staticaly.com/gh/Kele-Bingtang/static@master/user/avatar2.png\n  \n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Young Kbt\n  avatar: https://cdn.staticaly.com/gh/Kele-Bingtang/static@master/user/avatar2.png\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n::: cardImgList\n```yaml\n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: Young Kbt # 作者，可选\n  avatar: https://cdn.staticaly.com/gh/Kele-Bingtang/static@master/user/avatar2.png # 头像，可选\n  \n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Young Kbt\n  avatar: https://cdn.staticaly.com/gh/Kele-Bingtang/static@master/user/avatar2.png\n  \n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: Young Kbt\n  avatar: https://cdn.staticaly.com/gh/Kele-Bingtang/static@master/user/avatar2.png\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 语法\n\n::: cardImgList <每行显示数量>\n``` yaml\n- img: https://xxx.jpg # 图片地址\n  link: https://xxx.com # 链接地址\n  name: 标题\n  desc: 描述 # 可选\n  author: 作者名称 # 可选\n  avatar: https://xxx.jpg # 作者头像，可选\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n * <每行显示数量> 数字，表示每行最多显示多少个，选值范围 1~4，默认 3。在小屏时会根据屏幕宽度减少每行显示数量。\n * 代码块需指定语言为 yaml\n * 代码块内是一个 yaml 格式的数组列表\n * 数组成员的属性有：\n   * img：图片地址\n   * link：链接地址\n   * name：标题\n   * desc：描述，可选\n   * author：作者名称，可选\n   * avatar：作者头像，可选\n\n\n# Tabs插件\n\n官网：https://github.com/pskordilakis/vuepress-plugin-tabs\n\n安装插件：\n\nyarn add vuepress-plugin-tabs vue-tabs-component\n\n\n1\n\n\nnpm install vuepress-plugin-tabs vue-tabs-component\n\n\n1\n\n\n在 .vuepress/styles/index.styl 添加如下内容：\n\n@require '~vuepress-plugin-tabs/dist/themes/default.styl'\n\n\n1\n\n\n在 .vuepress/config.js 中添加如下内容：\n\nmodule.exports = {\n  plugins: [ 'tabs' ]\n}\n\n\n1\n2\n3\n\n\n启动项目，下面是使用的 demo。\n\n:::: tabs cache-lifetime=\"5\" :options=\"{ useUrlFragment: false }\"\n::: tab title \n**markdown content**\n:::\n::: tab javascript \n``` javascript\n() => {\n  console.log('Javascript code example')\n}\n```\n:::\n::::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\ncache-lifetime 是存活时间，默认 5 分钟，即关闭网页五分钟内回来，当时选中的哪个 tabs，就会显示该内容，5 分钟后默认回到到第一个 tabs。\n\n:options=\"{ useUrlFragment: false }\" 建议写上，不然每次点击任意 tabs，都会刷新一次当前页面，没有必要。\n\n效果：\n\nmarkdown content\n\n() => {\n  console.log('Javascript code example')\n}\n\n\n1\n2\n3\n\n\n\n# Demo插件（因为兼容问题，目前已经不使用）\n\n为了更直观的展示一些代码的效果，博客添加了 demo 模块插件，可查看 demo、源码，以及跳转到 codepen 在线编辑。目前支持 vue、react 或 native js 示例。 demo 目前支持 [vanilla] 、[React]、[Vue]，如果不填写 []，默认是 [vue]。\n\n插件官网：https://github.com/xiguaxigua/vuepress-plugin-demo-block/\n\n演示代码：\n\n\x3c!-- Vue 的 demo --\x3e\n::: demo\n```html\n<template>\n  <div class=\"box-vue\">Vue {{ message }}</div>\n</template>\n<script>\nexport default {\n  data: () => ({ message: 'Hello World' })\n}\n<\/script>\n<style>\n.box-vue { color: red; }\n</style>\n```\n:::\n\n\x3c!-- React 的 demo --\x3e\n::: demo [react]\n```js\nexport default class App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { message: 'Hello World' }\n  }\n  render () {\n    return (\n      <div className=\"box-react\">\n        React {this.state.message}\n      </div>\n    )\n  }\n}\nApp.__style__ = `\n  .box-react { color: red; }   \n`\n```\n:::\n\n\x3c!-- vanilla 的 demo --\x3e\n::: demo [vanilla]\n```html\n<html>\n  <div id=\"vanilla-box\"></div>\n</html>\n<script>\n  var box = document.getElementById('vanilla-box')\n  box.innerHTML = 'Hello World! Welcome to EB'\n<\/script>\n<style>\n#vanilla-box {\n  color: #11a8cd;   /* 标题颜色 */\n}\n</style>\n\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n输出结果：\n\n::: demo\n\n<template>\n  <div class=\"box-vue\">Vue {{ message }}</div>\n</template>\n<script>\nexport default {\n  data: () => ({ message: 'Hello World' })\n}\n<\/script>\n<style>\n.box-vue { color: red; }\n</style>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n:::\n\n::: demo [react]\n\nexport default class App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { message: 'Hello World' }\n  }\n  render () {\n    return (\n      <div className=\"box-react\">\n        React {this.state.message}\n      </div>\n    )\n  }\n}\nApp.__style__ = `\n  .box-react { color: #621529; }\n`\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n:::\n\n::: demo [vanilla]\n\n<html>\n  <div id=\"vanilla-box\"></div>\n</html>\n<script>\n  var box = document.getElementById('vanilla-box')\n  box.innerHTML = 'Hello World! Welcome to EB'\n<\/script>\n<style>\n#vanilla-box {\n  color: #11a8cd;   /* 标题颜色 */\n}\n</style>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n:::",normalizedContent:" * 使用 emoji 表情\n * 外部链接\n * 文本高亮\n * 代码高亮\n * 徽章\n   * 内置\n   * 外置\n * 信息框容器\n * 布局容器\n   * 我是居中的内容\n * 代码块选项卡\n * 普通卡片列表\n   * 语法\n * 图文卡片列表\n   * 语法\n * tabs插件\n * demo插件（因为兼容问题，目前已经不使用）\n\n\n\n\n# 使用 emoji 表情\n\n阅读大片大片的文字难免产生视觉疲劳，而使用 emoji 表情，不仅缓解精神的渐眠，也会胜过千言。\n\n在 markdown 里，使用 :表情: 输入表情，如\n\n你好:smile:，我喜欢:dog:，我小时候经常拿:100:分哦~~~，欢迎来到我的博客:heart:，一起学习吧:muscle:\n\n\n1\n\n\n效果如下：\n\n> 你好😄，我喜欢🐶，我小时候经常拿💯分哦~~~，欢迎来到我的博客❤️，一起学习吧💪\n\n很多指令肯定是记不了的，我们可以也可以去特定的网站获取表情的格式。也可以 copy 一个表情过来，markdown 自动解析表情。\n\n分享一些 emoji 网站：\n\n * emoji 表情备忘录：有很多表情的格式(:表情:)\n * emoji 表情：有很多表情可以copy\n * gitmoji 通过 emoji 表达 git 的操作内容\n\n> windows 系统下按 win + . 快速打开表情选择框（不是右侧小键盘的 .）\n\n\n# 外部链接\n\n使用外部链接，文字会变色，并且可以点击跳转，格式如下：\n\n[vuepress官网](https://vuepress.vuejs.org/zh/)\n\n\n1\n\n\n效果：\n\nvuepress官网\n\n\n# 文本高亮\n\n使用 <mark> 标签或者 `` 让文本高亮。\n\n<mark> 标签我经常用于文字的突出，如果是一段字符串，我是用的是 `` 包裹起来。\n\n`vdoing` 是一款简洁高效的 <mark>知识管理&博客</mark> 主题\n\n\n1\n\n\nvdoing 是一款简洁高效的 知识管理&博客 主题\n\n\n# 代码高亮\n\n突出代码块的某些行，使用 {行数-行数}、{行数,行数} 格式，如\n\n输入：\n\n``` js {2,5-7,13}\nreturn {\n      // 数据\n      options,\n      activekey,\n      sourcelabels,\n      sourceform,\n      addform,\n      addrules,\n      sourcerules,\n      // 函数\n      displayrender,\n      submitprodoce,\n      onaddclose,\n    };\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n输出：\n\n\n\n \n\n\n \n \n \n\n\n\n\n\n \n\n\n\nreturn {\n      // 数据\n      options,\n      activekey,\n      sourcelabels,\n      sourceform,\n      addform,\n      addrules,\n      sourcerules,\n      // 函数\n      displayrender,\n      submitprodoce,\n      onaddclose,\n    };\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n * 行数区间: 例如 {5-8}, {3-10}, {10-17}\n * 多个单行: 例如 {4,7,9}\n * 行数区间与多个单行: 例如 {4,7-13,16,23-27,40}\n\n\n# 徽章\n\n\n# 内置\n\n官方自带。详细使用可前往官网 badge。\n\n#### 《沁园春·雪》 <badge text=\"摘\"/>\n北国风光<badge text=\"注释\" type=\"warning\"/>，千里冰封，万里雪飘。\n\n> <badge text=\"译文\" type=\"error\" vertical=\"middle\"/>: 北方的风光。\n\n\n1\n2\n3\n4\n\n\n * type 有三个参数：tip、warning、error。默认是 tip\n\n * vertical 有两个参数：top、middle。默认是 top\n\n直接在 markdown 文件使用，效果如下：\n\n# 《沁园春·雪》\n\n北国风光，千里冰封，万里雪飘。\n\n> : 北方的风光。\n\n\n# 外置\n\n如果想用更多的自定义徽章，可使用 shields来生成\n\n![stars](https://img.shields.io/github/stars/kele-bingtang/notes-blog)\n![stars](https://img.shields.io/github/stars/kele-bingtang/notes-blog?style=social)\n![kbt](https://img.shields.io/badge/kbt-冰糖-green)\n\n\n1\n2\n3\n\n\n\n\n如果没接触过 shields，shields 教程传送门\n\n\n# 信息框容器\n\n以下一些内容是 vdoing 主题提供，并非官方提供。\n\n输入：\n\n::: tip\n这是一条提示\n:::\n\n::: warning\n这是一条注意\n:::\n\n::: danger\n这是一条警告\n:::\n\n::: note\n这是笔记容器，主题自带，官方没有\n:::\n\n::: tip 我的自定义标题\n自定义标题的提示框\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n输出：\n\n提示\n\n这是一条提示\n\n注意\n\n这是一条注意\n\n警告\n\n这是一条警告\n\n笔记\n\n这是笔记容器，主题自带，官方没有\n\n我的自定义标题\n\n自定义标题的提示框\n\n如果想要折叠的容器，如下：也可以自定义标题\n\n::: details\n这是一个详情块，在 ie / edge 中不生效\n```js\nconsole.log('这是一个详情块')\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n\n点击查看\n\n这是一个详情块，在 ie / edge 中不生效\n\nconsole.log('这是一个详情块')\n\n\n1\n\n\n\n# 布局容器\n\n::: center\n  ### 我是居中的内容\n  （可用于标题、图片等的居中）\n:::\n\n::: right\n  [我是右浮动的内容](https://cdn.staticaly.com/gh/kele-bingtang/static@master/user/avatar2.png)\n:::\n\n::: theorem vuepress\nvue 驱动的静态网站生成器\n::: right\n来自 [官网](https://vuepress.vuejs.org/zh/)\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 我是居中的内容\n\n（可用于标题、图片等的居中）\n\n我是右浮动的内容\n\nvuepress\n\nvue 驱动的静态网站生成器\n\n来自 vuepress官网\n\n提示\n\n没有 left 和 top、bottom\n\n\n# 代码块选项卡\n\n在 <code-group> 中嵌套 <code-block> 来配合使用。在 <code-block> 标签添加 title 来指定 tab 标题，active 指定当前 tab：\n\n<code-group>\n  <code-block title=\"yarn\" active>\n  ```bash\n  yarn add vuepress-theme-vdoing -d\n  ```\n  </code-block>\n\n  <code-block title=\"npm\">\n  ```bash\n  npm install vuepress-theme-vdoing -d\n  ```\n  </code-block>\n</code-group>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n效果：\n\nyarn add vuepress-theme-vdoing -d\n\n\n1\n\n\nnpm install vuepress-theme-vdoing -d\n\n\n1\n\n\n注意\n\n请在 <code-group> 标签与 markdown 内容之间使用空行隔开，否则可能会解析不出来。\n\n提示\n\nvdoing 解释该组件仅适用于放置代码块，放其他内容在体验上并不友好。经过测试，我放入文字也是可以的。\n\n而且 <code-block> 放在 <code-group> 里时，首行需要缩进两个空格，经过测试，四个空格出问题。\n\n如果你喜欢 ::: tabs 代替 <code-group>，那么我们可以下载 vuepress-plugin-tabs 插件。点击跳到 tabs 插件安装。\n\n\n# 普通卡片列表\n\n如果想使用 友链 功能，但是 vdoing 主题并没有直接在首页实现该功能，要么使用 卡片列表，要么自己手动实现html。而 卡片列表 目前只能使用在 markdown 文档里，下方介绍。\n\n普通卡片列表容器，可用于 友情链接、项目推荐、诗词展示 等。\n\n输入：\n\n::: cardlist\n```yaml\n- name: george chan\n  desc: 让我给你讲讲他的传奇故事吧\n  avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://cyc0819.top/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n  \n- name: butcher2000\n  desc: 即使再小的帆，也能远航\n  avatar: https://cdn.staticaly.com/gh/kele-bingtang/static@master/user/20211029181901.png\n  link: https://blog.csdn.net/weixin_46827107\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n  \n- name: evan's blog\n  desc: 前端的小学生\n  avatar: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200103123203.jpg\n  link: https://xugaoyi.com/\n  bgcolor: '#b9d59c'\n  textcolor: '#3b551f'\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n输出：\n\ngeorge chan\n\n让我给你讲讲他的传奇故事吧\n\nbutcher2000\n\n即使再小的帆，也能远航\n\nevan's blog\n\n前端的小学生\n\n- name: george chan\n  desc: 让我给你讲讲他的传奇故事吧\n  avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://cyc0819.top/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n  \n- name: butcher2000\n  desc: 即使再小的帆，也能远航\n  avatar: https://cdn.staticaly.com/gh/kele-bingtang/static@master/user/20211029181901.png\n  link: https://blog.csdn.net/weixin_46827107\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n  \n- name: evan's blog\n  desc: 前端的小学生\n  avatar: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200103123203.jpg\n  link: https://xugaoyi.com/\n  bgcolor: '#b9d59c'\n  textcolor: '#3b551f'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 语法\n\n::: cardlist <每行显示数量>\n``` yaml\n- name: 名称\n  desc: 描述\n  avatar: https://xxx.jpg # 头像，可选\n  link: https://xxx/ # 链接，可选\n  bgcolor: '#cbeafa' # 背景色，可选，默认var(--bodybg)。颜色值有#号时请添加引号\n  textcolor: '#6854a1' # 文本色，可选，默认var(--textcolor)\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n * <每行显示数量>：一行内显示多少个卡片，值范围 1~4，默认是 3 个，上方的卡片正好是三个，如果再多一个卡片，就会被换到下一行\n\n * 代码块需指定语言为 yaml\n\n * 代码块内是一个 yaml 格式的数组列表\n\n * 数组成员的属性有：\n   \n   * name：名称\n   * desc：描述\n   * avatar：头像，可选\n   * link：链接，可选\n   * bgcolor：背景色，可选，默认 var(--bodybg)。颜色值有 # 号时请添加引号\n   * textcolor：文本色，可选，默认 var(--textcolor)\n\n不指定颜色，默认为白色，如下演示：\n\n::: cardlist 2\n```yaml\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  bgcolor: '#f0dfb1'\n  textcolor: '#242a38'\n  \n- name: vdoing\n  desc: 🚀一款简洁高效的vuepress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgcolor: '#dfeee7'\n  textcolor: '#2a3344'\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n《静夜思》\n\n床前明月光，疑是地上霜。举头望明月，低头思故乡。\n\nvdoing\n\n🚀一款简洁高效的vuepress 知识管理&博客(blog) 主题\n\n- name: 《静夜思》\n  desc: 床前明月光，疑是地上霜。举头望明月，低头思故乡。\n  \n- name: vdoing\n  desc: 🚀一款简洁高效的vuepress 知识管理&博客(blog) 主题\n  link: https://github.com/xugaoyi/vuepress-theme-vdoing\n  bgcolor: '#dfeee7'\n  textcolor: '#2a3344'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 图文卡片列表\n\n图文卡片列表容器，可用于 项目展示、产品展示 等。\n\n先看效果：\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nyoung kbt\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nyoung kbt\n\n标题\n\n描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n\nyoung kbt\n\n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: young kbt # 作者，可选\n  avatar: https://cdn.staticaly.com/gh/kele-bingtang/static@master/user/avatar2.png # 头像，可选\n  \n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: young kbt\n  avatar: https://cdn.staticaly.com/gh/kele-bingtang/static@master/user/avatar2.png\n  \n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: young kbt\n  avatar: https://cdn.staticaly.com/gh/kele-bingtang/static@master/user/avatar2.png\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n::: cardimglist\n```yaml\n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200529162253.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容 # 描述，可选\n  author: young kbt # 作者，可选\n  avatar: https://cdn.staticaly.com/gh/kele-bingtang/static@master/user/avatar2.png # 头像，可选\n  \n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200530100256.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: young kbt\n  avatar: https://cdn.staticaly.com/gh/kele-bingtang/static@master/user/avatar2.png\n  \n- img: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200530100257.jpg\n  link: https://xugaoyi.com/\n  name: 标题\n  desc: 描述内容描述内容描述内容描述内容描述内容描述内容描述内容描述内容\n  author: young kbt\n  avatar: https://cdn.staticaly.com/gh/kele-bingtang/static@master/user/avatar2.png\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 语法\n\n::: cardimglist <每行显示数量>\n``` yaml\n- img: https://xxx.jpg # 图片地址\n  link: https://xxx.com # 链接地址\n  name: 标题\n  desc: 描述 # 可选\n  author: 作者名称 # 可选\n  avatar: https://xxx.jpg # 作者头像，可选\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n * <每行显示数量> 数字，表示每行最多显示多少个，选值范围 1~4，默认 3。在小屏时会根据屏幕宽度减少每行显示数量。\n * 代码块需指定语言为 yaml\n * 代码块内是一个 yaml 格式的数组列表\n * 数组成员的属性有：\n   * img：图片地址\n   * link：链接地址\n   * name：标题\n   * desc：描述，可选\n   * author：作者名称，可选\n   * avatar：作者头像，可选\n\n\n# tabs插件\n\n官网：https://github.com/pskordilakis/vuepress-plugin-tabs\n\n安装插件：\n\nyarn add vuepress-plugin-tabs vue-tabs-component\n\n\n1\n\n\nnpm install vuepress-plugin-tabs vue-tabs-component\n\n\n1\n\n\n在 .vuepress/styles/index.styl 添加如下内容：\n\n@require '~vuepress-plugin-tabs/dist/themes/default.styl'\n\n\n1\n\n\n在 .vuepress/config.js 中添加如下内容：\n\nmodule.exports = {\n  plugins: [ 'tabs' ]\n}\n\n\n1\n2\n3\n\n\n启动项目，下面是使用的 demo。\n\n:::: tabs cache-lifetime=\"5\" :options=\"{ useurlfragment: false }\"\n::: tab title \n**markdown content**\n:::\n::: tab javascript \n``` javascript\n() => {\n  console.log('javascript code example')\n}\n```\n:::\n::::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\ncache-lifetime 是存活时间，默认 5 分钟，即关闭网页五分钟内回来，当时选中的哪个 tabs，就会显示该内容，5 分钟后默认回到到第一个 tabs。\n\n:options=\"{ useurlfragment: false }\" 建议写上，不然每次点击任意 tabs，都会刷新一次当前页面，没有必要。\n\n效果：\n\nmarkdown content\n\n() => {\n  console.log('javascript code example')\n}\n\n\n1\n2\n3\n\n\n\n# demo插件（因为兼容问题，目前已经不使用）\n\n为了更直观的展示一些代码的效果，博客添加了 demo 模块插件，可查看 demo、源码，以及跳转到 codepen 在线编辑。目前支持 vue、react 或 native js 示例。 demo 目前支持 [vanilla] 、[react]、[vue]，如果不填写 []，默认是 [vue]。\n\n插件官网：https://github.com/xiguaxigua/vuepress-plugin-demo-block/\n\n演示代码：\n\n\x3c!-- vue 的 demo --\x3e\n::: demo\n```html\n<template>\n  <div class=\"box-vue\">vue {{ message }}</div>\n</template>\n<script>\nexport default {\n  data: () => ({ message: 'hello world' })\n}\n<\/script>\n<style>\n.box-vue { color: red; }\n</style>\n```\n:::\n\n\x3c!-- react 的 demo --\x3e\n::: demo [react]\n```js\nexport default class app extends react.component {\n  constructor (props) {\n    super(props)\n    this.state = { message: 'hello world' }\n  }\n  render () {\n    return (\n      <div classname=\"box-react\">\n        react {this.state.message}\n      </div>\n    )\n  }\n}\napp.__style__ = `\n  .box-react { color: red; }   \n`\n```\n:::\n\n\x3c!-- vanilla 的 demo --\x3e\n::: demo [vanilla]\n```html\n<html>\n  <div id=\"vanilla-box\"></div>\n</html>\n<script>\n  var box = document.getelementbyid('vanilla-box')\n  box.innerhtml = 'hello world! welcome to eb'\n<\/script>\n<style>\n#vanilla-box {\n  color: #11a8cd;   /* 标题颜色 */\n}\n</style>\n\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n输出结果：\n\n::: demo\n\n<template>\n  <div class=\"box-vue\">vue {{ message }}</div>\n</template>\n<script>\nexport default {\n  data: () => ({ message: 'hello world' })\n}\n<\/script>\n<style>\n.box-vue { color: red; }\n</style>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n:::\n\n::: demo [react]\n\nexport default class app extends react.component {\n  constructor (props) {\n    super(props)\n    this.state = { message: 'hello world' }\n  }\n  render () {\n    return (\n      <div classname=\"box-react\">\n        react {this.state.message}\n      </div>\n    )\n  }\n}\napp.__style__ = `\n  .box-react { color: #621529; }\n`\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n:::\n\n::: demo [vanilla]\n\n<html>\n  <div id=\"vanilla-box\"></div>\n</html>\n<script>\n  var box = document.getelementbyid('vanilla-box')\n  box.innerhtml = 'hello world! welcome to eb'\n<\/script>\n<style>\n#vanilla-box {\n  color: #11a8cd;   /* 标题颜色 */\n}\n</style>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n:::",charsets:{cjk:!0},lastUpdated:"2023/06/18, 23:24:16",lastUpdatedTimestamp:1687101856e3},{title:"全局私密文章测试",frontmatter:{title:"全局私密文章测试",date:"2022-01-07T17:00:36.000Z",permalink:"/private/test1/",private:!0,titleTag:"测试",categories:["测试"],tags:[null],readingShow:"top"},regularPath:"/78.%E6%94%B6%E8%97%8F/90.%E7%A7%81%E5%AF%86%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/01.%E5%85%A8%E5%B1%80%E7%A7%81%E5%AF%86%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95.html",relativePath:"78.收藏/90.私密文章测试/01.全局私密文章测试.md",key:"v-cbc4daea",path:"/private/test1/",headersStr:null,content:"恭喜您，访问成功！！！\n\n全局的私密文章仅需要在 frontmatter 额外 添加如下信息：\n\n---\nprivate: true     # 开启文章私密，必须\n---\n\n\n1\n2\n3\n\n\n此时在 themeConfig 里的管理员用户名和密码或者 loginInfo 里的用户名和密码生效。\n\n如果您想单独给一个文章设为私密，则请访问 单个私密文章测试\n\n本文章的全部 frontmatter 内容：\n\n---\ntitle: 全局私密文章测试\ndate: 2022-01-07 17:00:36\npermalink: /private/test1/\nprivate: true\ntitleTag: 测试\ncategories: \n  - 测试\ntags: \n  - \n---\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n",normalizedContent:"恭喜您，访问成功！！！\n\n全局的私密文章仅需要在 frontmatter 额外 添加如下信息：\n\n---\nprivate: true     # 开启文章私密，必须\n---\n\n\n1\n2\n3\n\n\n此时在 themeconfig 里的管理员用户名和密码或者 logininfo 里的用户名和密码生效。\n\n如果您想单独给一个文章设为私密，则请访问 单个私密文章测试\n\n本文章的全部 frontmatter 内容：\n\n---\ntitle: 全局私密文章测试\ndate: 2022-01-07 17:00:36\npermalink: /private/test1/\nprivate: true\ntitletag: 测试\ncategories: \n  - 测试\ntags: \n  - \n---\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"Markdown排版",frontmatter:{title:"Markdown排版",date:"2023-06-18T22:05:00.000Z",permalink:"/collect/markdown/settype/",private:!0,categories:["收藏"],tags:["收藏"],readingShow:"top"},regularPath:"/78.%E6%94%B6%E8%97%8F/05.Markdown/07.Markdown%E6%8E%92%E7%89%88.html",relativePath:"78.收藏/05.Markdown/07.Markdown排版.md",key:"v-4754ed5a",path:"/collect/markdown/settype/",headers:[{level:2,title:"空格",slug:"空格",normalizedTitle:"空格",charIndex:3},{level:3,title:"中英文之间需要增加空格",slug:"中英文之间需要增加空格",normalizedTitle:"中英文之间需要增加空格",charIndex:11},{level:3,title:"中文与数字之间需要增加空格",slug:"中文与数字之间需要增加空格",normalizedTitle:"中文与数字之间需要增加空格",charIndex:28},{level:3,title:"数字与单位之间无需增加空格",slug:"数字与单位之间无需增加空格",normalizedTitle:"数字与单位之间无需增加空格",charIndex:47},{level:3,title:"全角标点与其他字符之间不加空格",slug:"全角标点与其他字符之间不加空格",normalizedTitle:"全角标点与其他字符之间不加空格",charIndex:66},{level:3,title:"-ms-text-autospace to the rescue?",slug:"ms-text-autospace-to-the-rescue",normalizedTitle:"-ms-text-autospace to the rescue?",charIndex:87},{level:2,title:"标点符号",slug:"标点符号",normalizedTitle:"标点符号",charIndex:124},{level:3,title:"不重复使用标点符号",slug:"不重复使用标点符号",normalizedTitle:"不重复使用标点符号",charIndex:134},{level:2,title:"全角和半角",slug:"全角和半角",normalizedTitle:"全角和半角",charIndex:147},{level:3,title:"直角符号",slug:"直角符号",normalizedTitle:"直角符号",charIndex:158},{level:3,title:"使用全角中文标点",slug:"使用全角中文标点",normalizedTitle:"使用全角中文标点",charIndex:168},{level:3,title:"数字使用半角字符",slug:"数字使用半角字符",normalizedTitle:"数字使用半角字符",charIndex:182},{level:3,title:"遇到完整的英文整句、特殊名词，其內容使用半角标点",slug:"遇到完整的英文整句、特殊名词-其內容使用半角标点",normalizedTitle:"遇到完整的英文整句、特殊名词，其內容使用半角标点",charIndex:196},{level:2,title:"名词",slug:"名词",normalizedTitle:"名词",charIndex:208},{level:3,title:"专有名词使用正确的大小写",slug:"专有名词使用正确的大小写",normalizedTitle:"专有名词使用正确的大小写",charIndex:232},{level:3,title:"不要使用不地道的缩写",slug:"不要使用不地道的缩写",normalizedTitle:"不要使用不地道的缩写",charIndex:250},{level:2,title:"争议",slug:"争议",normalizedTitle:"争议",charIndex:264},{level:3,title:"链接之间增加空格",slug:"链接之间增加空格",normalizedTitle:"链接之间增加空格",charIndex:272},{level:3,title:"简体中文使用直角引号",slug:"简体中文使用直角引号",normalizedTitle:"简体中文使用直角引号",charIndex:286},{level:2,title:"自我",slug:"自我",normalizedTitle:"自我",charIndex:300},{level:3,title:"文档命名规范",slug:"文档命名规范",normalizedTitle:"文档命名规范",charIndex:308},{level:3,title:"加粗文字增加空格",slug:"加粗文字增加空格",normalizedTitle:"加粗文字增加空格",charIndex:320},{level:3,title:"加粗文字与标点符号",slug:"加粗文字与标点符号",normalizedTitle:"加粗文字与标点符号",charIndex:334},{level:3,title:"加粗标题使用引号（可选）",slug:"加粗标题使用引号-可选",normalizedTitle:"加粗标题使用引号（可选）",charIndex:349},{level:3,title:"体系化文档开头添加目录",slug:"体系化文档开头添加目录",normalizedTitle:"体系化文档开头添加目录",charIndex:367},{level:3,title:"有序/无序列表末尾不加标点符合",slug:"有序-无序列表末尾不加标点符合",normalizedTitle:"有序/无序列表末尾不加标点符合",charIndex:384},{level:2,title:"格式化工具",slug:"格式化工具",normalizedTitle:"格式化工具",charIndex:403},{level:2,title:"谁在这样做？",slug:"谁在这样做",normalizedTitle:"谁在这样做？",charIndex:412},{level:2,title:"本文转载",slug:"本文转载",normalizedTitle:"本文转载",charIndex:422},{level:2,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:430}],headersStr:"空格 中英文之间需要增加空格 中文与数字之间需要增加空格 数字与单位之间无需增加空格 全角标点与其他字符之间不加空格 -ms-text-autospace to the rescue? 标点符号 不重复使用标点符号 全角和半角 直角符号 使用全角中文标点 数字使用半角字符 遇到完整的英文整句、特殊名词，其內容使用半角标点 名词 专有名词使用正确的大小写 不要使用不地道的缩写 争议 链接之间增加空格 简体中文使用直角引号 自我 文档命名规范 加粗文字增加空格 加粗文字与标点符号 加粗标题使用引号（可选） 体系化文档开头添加目录 有序/无序列表末尾不加标点符合 格式化工具 谁在这样做？ 本文转载 参考文献",content:' * 空格\n   * 中英文之间需要增加空格\n   * 中文与数字之间需要增加空格\n   * 数字与单位之间无需增加空格\n   * 全角标点与其他字符之间不加空格\n   * -ms-text-autospace to the rescue?\n * 标点符号\n   * 不重复使用标点符号\n * 全角和半角\n   * 直角符号\n   * 使用全角中文标点\n   * 数字使用半角字符\n   * 遇到完整的英文整句、特殊名词，其內容使用半角标点\n * 名词\n   * 专有名词使用正确的大小写\n   * 不要使用不地道的缩写\n * 争议\n   * 链接之间增加空格\n   * 简体中文使用直角引号\n * 自我\n   * 文档命名规范\n   * 加粗文字增加空格\n   * 加粗文字与标点符号\n   * 加粗标题使用引号（可选）\n   * 体系化文档开头添加目录\n   * 有序/无序列表末尾不加标点符合\n * 格式化工具\n * 谁在这样做？\n * 本文转载\n * 参考文献\n\n\n\n\n# 空格\n\n「有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。\n\n与大家共勉之。\n\n来自—— vinta/paranoid-auto-spacing\n\n\n# 中英文之间需要增加空格\n\n正确：\n\n> 在 LeanCloud 上，数据存储是围绕 AVObject 进行的。\n\n错误：\n\n> 在LeanCloud上，数据存储是围绕AVObject进行的。\n\n> 在 LeanCloud上，数据存储是围绕AVObject 进行的。\n\n完整的正确用法：\n\n> 在 LeanCloud 上，数据存储是围绕 AVObject 进行的。每个 AVObject 都包含了与 JSON 兼容的 key-value 对应的数据。数据是 schema-free 的，你不需要在每个 AVObject 上提前指定存在哪些键，只要直接设定对应的 key-value 即可。\n\n例外：「豆瓣FM」等产品名词，按照官方所定义的格式书写。\n\n\n# 中文与数字之间需要增加空格\n\n正确：\n\n> 今天出去买菜花了 5000 元。\n\n错误：\n\n> 今天出去买菜花了 5000元。\n\n> 今天出去买菜花了5000元。\n\n\n# 数字与单位之间无需增加空格\n\n正确：\n\n> 我家的光纤入户宽带有 10Gbps，SSD 一共有 10TB。\n\n错误：\n\n> 我家的光纤入户宽带有 10 Gbps，SSD 一共有 20 TB。\n\n另外，度／百分比与数字之间不需要增加空格：\n\n正确：\n\n> 今天是 233° 的高温。\n\n> 新 MacBook Pro 有 15% 的 CPU 性能提升。\n\n错误：\n\n> 今天是 233 ° 的高温。\n\n> 新 MacBook Pro 有 15 % 的 CPU 性能提升。\n\n\n# 全角标点与其他字符之间不加空格\n\n正确：\n\n> 刚刚买了一部 iPhone，好开心！\n\n错误：\n\n> 刚刚买了一部 iPhone ，好开心！\n\n\n# -ms-text-autospace to the rescue?\n\nMicrosoft 有个 -ms-text-autospace 的 CSS 属性可以实现自动为中英文之间增加空白。不过目前并未普及，另外在其他应用场景，例如 OS X、iOS 的用户界面目前并不存在这个特性，所以请继续保持随手加空格的习惯。\n\n\n# 标点符号\n\n\n# 不重复使用标点符号\n\n正确：\n\n> 德国队竟然战胜了巴西队！\n\n> 她竟然对你说「喵」？！\n\n错误：\n\n> 德国队竟然战胜了巴西队！！\n\n> 德国队竟然战胜了巴西队！！！！！！！！\n\n> 她竟然对你说「喵」？？！！\n\n> 她竟然对你说「喵」？！？！？？！！\n\n\n# 全角和半角\n\n不明白什么是全角（全形）与半角（半形）符号？请查看维基百科词条『全角和半角』或者百度百科词条『全角』和『半角』。\n\n简单介绍：\n\n「全角」指一个字符占用两个标准字符位置的状态，如中文模式下的逗号、句号等：，。？「」\n\n「半角」就是 ASCII 方式的字符，在没有中文输入法起作用的时候输入的字母数字和字符都是半角的，如英文模式下的逗号、句号等: , . ; ? ""\n\n\n# 直角符号\n\n英文单词使用 "" 或者 \'\'；\n\n中文词语使用 「」或者『』，不使用弯角符号 “” 和 ‘’，弯角符号更适用于手写。\n\n其中 "" 对应「」，\'\' 对应『』\n\n\n# 使用全角中文标点\n\n正确：\n\n> 嗨！你知道嘛？今天前台的小妹跟我说「喵」了哎！\n\n> 核磁共振成像（NMRI）是什么原理都不知道？JFGI！\n\n错误：\n\n> 嗨! 你知道嘛? 今天前台的小妹跟我说 "喵" 了哎!\n\n> 嗨!你知道嘛?今天前台的小妹跟我说"喵"了哎!\n\n> 核磁共振成像 (NMRI) 是什么原理都不知道? JFGI!\n\n> 核磁共振成像(NMRI)是什么原理都不知道?JFGI!\n\n\n# 数字使用半角字符\n\n正确：\n\n> 这件蛋糕只卖 1000 元。\n\n错误：\n\n> 这件蛋糕只卖 １０００ 元。\n\n例外：在设计稿、宣传海报中如出现极少量数字的情形时，为方便文字对齐，是可以使用全角数字的。\n\n\n# 遇到完整的英文整句、特殊名词，其內容使用半角标点\n\n正确：\n\n> 乔布斯那句话是怎么说的？「Stay hungry, stay foolish.」\n\n> 推荐你阅读《Hackers & Painters: Big Ideas from the Computer Age》，非常的有趣。\n\n错误：\n\n> 乔布斯那句话是怎么说的？「Stay hungry，stay foolish。」\n\n> 推荐你阅读《Hackers＆Painters：Big Ideas from the Computer Age》，非常的有趣。\n\n\n# 名词\n\n\n# 专有名词使用正确的大小写\n\n大小写相关用法原属于英文书写范畴，不属于本 wiki 讨论內容，在这里只对部分易错用法进行简述。\n\n正确：\n\n> 使用 GitHub 登录\n\n> 我们的客户有 GitHub、Foursquare、Microsoft Corporation、Google、Facebook, Inc.。\n\n错误：\n\n> 使用 github 登录\n\n> 使用 GITHUB 登录\n\n> 使用 Github 登录\n\n> 使用 gitHub 登录\n\n> 使用 gｲんĤЦ8 登录\n\n> 我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。\n\n> 我们的客户有 GITHUB、FOURSQUARE、MICROSOFT CORPORATION、GOOGLE、FACEBOOK, INC.。\n\n> 我们的客户有 Github、FourSquare、MicroSoft Corporation、Google、FaceBook, Inc.。\n\n> 我们的客户有 gitHub、fourSquare、microSoft Corporation、google、faceBook, Inc.。\n\n> 我们的客户有 gｲんĤЦ8、ｷouЯƧquﾑгє、๓เςг๏ร๏Ŧt ς๏гק๏гคtเ๏ภn、900913、ƒ4ᄃëв๏๏к, IПᄃ.。\n\n注意：当网页中需要配合整体视觉风格而出现全部大写／小写的情形，HTML 中请使用标准的大小写规范进行书写；并通过 text-transform: uppercase;／text-transform: lowercase; 对表现形式进行定义。\n\n\n# 不要使用不地道的缩写\n\n正确：\n\n> 我们需要一位熟悉 JavaScript、HTML5，至少理解一种框架（如 Backbone.js、AngularJS、React 等）的前端开发者。\n\n错误：\n\n> 我们需要一位熟悉 Js、h5，至少理解一种框架（如 backbone、angular、RJS 等）的 FED。\n\n\n# 争议\n\n以下用法略带有个人色彩，即：无论是否遵循下述规则，从语法的角度来讲都是正确的。\n\n\n# 链接之间增加空格\n\n用法：\n\n> 请 提交一个 issue 并分配给相关同事。\n\n> 访问我们网站的最新动态，请 点击这里 进行订阅！\n\n对比用法：\n\n> 请提交一个 issue 并分配给相关同事。\n\n> 访问我们网站的最新动态，请点击这里进行订阅！\n\n\n# 简体中文使用直角引号\n\n用法：\n\n> 「老师，『有条不紊』的『紊』是什么意思？」\n\n对比用法：\n\n> “老师，‘有条不紊’的‘紊’是什么意思？”\n\n\n# 自我\n\n\n# 文档命名规范\n\n正确：\n\n> 关于 - 技巧\n> \n> 笔记 - 技巧\n> \n> 排版 - 技巧\n\n错误：\n\n> 关于技巧\n> \n> 笔记 技巧\n> \n> 排版 ~ 技巧\n\n\n# 加粗文字增加空格\n\n正确：\n\n> 一个好的 排版 彰显好的文档。\n\n错误：\n\n> 一个好的排版彰显好的文档。\n\n\n# 加粗文字与标点符号\n\n加粗的文字如果是最后一行，或者独处一行，那么加粗范围包括标点符号；\n\n加粗的文字如果后面还有文字，则加粗范围不包括标点符号。\n\n正确：\n\n> 欢迎来到我的博客，请慢慢食用。\n\n> 欢迎来到我的博客，请慢慢食用。\n\n错误：\n\n> 欢迎来到我的博客，请慢慢食用。\n> \n> 欢迎来到我的博客， 请慢慢食用。\n\n可能看不太清楚，这里解释一下：\n\n * 错误的例子中，句号在加粗范围外面，逗号在加粗范围里面\n\n * 正确的例子中，句号在加粗范围里面，逗号在加粗范围外面\n\n\n# 加粗标题使用引号（可选）\n\n加粗的字体在手机端显示失效，阅读的效果与普通文字一样，所以加引号既可以在电脑端双重突出，也可以在手机端突出。\n\n这里的引号指的是 Markdown 的引号，即开头添加的 > 符号，特征是左侧有阴影竖条块，如本内容的例子都是通过引号突出。\n\n正确：\n\n> > 什么是 Young\n> \n> Young 代表年轻、朝气、希望、活力 ......\n\n错误：\n\n> 什么是 Young\n> \n> Young 代表年轻、朝气、希望、活力 ......\n\n\n# 体系化文档开头添加目录\n\n生成可以跳转的目录，方便他人阅读和选择。\n\n如 VuePress 可以解析 [[TOC]] 字符串从而生成目录。\n\n\n# 有序/无序列表末尾不加标点符合\n\n因为开头的符号已经代表句号/感叹号/问号了。\n\n正确：\n\n>  * 欢迎来到我的博客\n>  * 希望能入你法眼\n> \n>  1. 酒菜不多，但都是精华。请慢慢食用\n>  2. 文章内容不恰当，可以在评论区留言\n\n错误：\n\n>  * 欢迎来到我的博客。\n>  * 希望能入你法眼。\n> \n>  1. 酒菜不多，但都是精华。请慢慢食用。\n>  2. 文章内容不恰当，可以在评论区留言。\n\n\n# 格式化工具\n\n使用这些工具，可以一次性把需要的文章按照工具的规定进行格式化，类似于杂乱的代码被格式化有序。\n\n仓库                                               语言\nvinta/paranoid-auto-spacing                      JavaScript\nhuei90/pangu.node                                Node.js\nhuacnlee/auto-correct                            Ruby\nsparanoid/space-lover                            PHP (WordPress)\nnauxliu/auto-correct                             PHP\nricoa/copywriting-correct                        PHP\nhotoo/pangu.vim                                  Vim\nsparanoid/grunt-auto-spacing                     Node.js (Grunt)\nhjiang/scripts/add-space-between-latin-and-cjk   Python\n\n\n# 谁在这样做？\n\n网站             文案    UGC\nApple 中国       Yes   N/A\nApple 香港       Yes   N/A\nApple 台湾       Yes   N/A\nMicrosoft 中国   Yes   N/A\nMicrosoft 香港   Yes   N/A\nMicrosoft 台湾   Yes   N/A\nLeanCloud      Yes   N/A\n知乎             Yes   部分用户达成\nV2EX           Yes   Yes\nSegmentFault   Yes   部分用户达成\nApple4us       Yes   N/A\n豌豆荚            Yes   N/A\nRuby China     Yes   标题达成\nPHPHub         Yes   标题达成\n少数派            Yes   N/A\n力扣 LeetCode    Yes   Yes\n\n\n# 本文转载\n\n添加了一些自己的理解\n\n中文文案排版指北\n\n\n# 参考文献\n\n * Guidelines for Using Capital Letters\n * Letter case - Wikipedia\n * Punctuation - Oxford Dictionaries\n * Punctuation - The Purdue OWL\n * How to Use English Punctuation Corrently - wikiHow\n * 格式 - openSUSE\n * 全角和半角 - 维基百科\n * 引号 - 维基百科\n * 疑问惊叹号 - 维基百科\n * 全角 - 百度百科\n * 半角 - 百度百科',normalizedContent:' * 空格\n   * 中英文之间需要增加空格\n   * 中文与数字之间需要增加空格\n   * 数字与单位之间无需增加空格\n   * 全角标点与其他字符之间不加空格\n   * -ms-text-autospace to the rescue?\n * 标点符号\n   * 不重复使用标点符号\n * 全角和半角\n   * 直角符号\n   * 使用全角中文标点\n   * 数字使用半角字符\n   * 遇到完整的英文整句、特殊名词，其內容使用半角标点\n * 名词\n   * 专有名词使用正确的大小写\n   * 不要使用不地道的缩写\n * 争议\n   * 链接之间增加空格\n   * 简体中文使用直角引号\n * 自我\n   * 文档命名规范\n   * 加粗文字增加空格\n   * 加粗文字与标点符号\n   * 加粗标题使用引号（可选）\n   * 体系化文档开头添加目录\n   * 有序/无序列表末尾不加标点符合\n * 格式化工具\n * 谁在这样做？\n * 本文转载\n * 参考文献\n\n\n\n\n# 空格\n\n「有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。\n\n与大家共勉之。\n\n来自—— vinta/paranoid-auto-spacing\n\n\n# 中英文之间需要增加空格\n\n正确：\n\n> 在 leancloud 上，数据存储是围绕 avobject 进行的。\n\n错误：\n\n> 在leancloud上，数据存储是围绕avobject进行的。\n\n> 在 leancloud上，数据存储是围绕avobject 进行的。\n\n完整的正确用法：\n\n> 在 leancloud 上，数据存储是围绕 avobject 进行的。每个 avobject 都包含了与 json 兼容的 key-value 对应的数据。数据是 schema-free 的，你不需要在每个 avobject 上提前指定存在哪些键，只要直接设定对应的 key-value 即可。\n\n例外：「豆瓣fm」等产品名词，按照官方所定义的格式书写。\n\n\n# 中文与数字之间需要增加空格\n\n正确：\n\n> 今天出去买菜花了 5000 元。\n\n错误：\n\n> 今天出去买菜花了 5000元。\n\n> 今天出去买菜花了5000元。\n\n\n# 数字与单位之间无需增加空格\n\n正确：\n\n> 我家的光纤入户宽带有 10gbps，ssd 一共有 10tb。\n\n错误：\n\n> 我家的光纤入户宽带有 10 gbps，ssd 一共有 20 tb。\n\n另外，度／百分比与数字之间不需要增加空格：\n\n正确：\n\n> 今天是 233° 的高温。\n\n> 新 macbook pro 有 15% 的 cpu 性能提升。\n\n错误：\n\n> 今天是 233 ° 的高温。\n\n> 新 macbook pro 有 15 % 的 cpu 性能提升。\n\n\n# 全角标点与其他字符之间不加空格\n\n正确：\n\n> 刚刚买了一部 iphone，好开心！\n\n错误：\n\n> 刚刚买了一部 iphone ，好开心！\n\n\n# -ms-text-autospace to the rescue?\n\nmicrosoft 有个 -ms-text-autospace 的 css 属性可以实现自动为中英文之间增加空白。不过目前并未普及，另外在其他应用场景，例如 os x、ios 的用户界面目前并不存在这个特性，所以请继续保持随手加空格的习惯。\n\n\n# 标点符号\n\n\n# 不重复使用标点符号\n\n正确：\n\n> 德国队竟然战胜了巴西队！\n\n> 她竟然对你说「喵」？！\n\n错误：\n\n> 德国队竟然战胜了巴西队！！\n\n> 德国队竟然战胜了巴西队！！！！！！！！\n\n> 她竟然对你说「喵」？？！！\n\n> 她竟然对你说「喵」？！？！？？！！\n\n\n# 全角和半角\n\n不明白什么是全角（全形）与半角（半形）符号？请查看维基百科词条『全角和半角』或者百度百科词条『全角』和『半角』。\n\n简单介绍：\n\n「全角」指一个字符占用两个标准字符位置的状态，如中文模式下的逗号、句号等：，。？「」\n\n「半角」就是 ascii 方式的字符，在没有中文输入法起作用的时候输入的字母数字和字符都是半角的，如英文模式下的逗号、句号等: , . ; ? ""\n\n\n# 直角符号\n\n英文单词使用 "" 或者 \'\'；\n\n中文词语使用 「」或者『』，不使用弯角符号 “” 和 ‘’，弯角符号更适用于手写。\n\n其中 "" 对应「」，\'\' 对应『』\n\n\n# 使用全角中文标点\n\n正确：\n\n> 嗨！你知道嘛？今天前台的小妹跟我说「喵」了哎！\n\n> 核磁共振成像（nmri）是什么原理都不知道？jfgi！\n\n错误：\n\n> 嗨! 你知道嘛? 今天前台的小妹跟我说 "喵" 了哎!\n\n> 嗨!你知道嘛?今天前台的小妹跟我说"喵"了哎!\n\n> 核磁共振成像 (nmri) 是什么原理都不知道? jfgi!\n\n> 核磁共振成像(nmri)是什么原理都不知道?jfgi!\n\n\n# 数字使用半角字符\n\n正确：\n\n> 这件蛋糕只卖 1000 元。\n\n错误：\n\n> 这件蛋糕只卖 １０００ 元。\n\n例外：在设计稿、宣传海报中如出现极少量数字的情形时，为方便文字对齐，是可以使用全角数字的。\n\n\n# 遇到完整的英文整句、特殊名词，其內容使用半角标点\n\n正确：\n\n> 乔布斯那句话是怎么说的？「stay hungry, stay foolish.」\n\n> 推荐你阅读《hackers & painters: big ideas from the computer age》，非常的有趣。\n\n错误：\n\n> 乔布斯那句话是怎么说的？「stay hungry，stay foolish。」\n\n> 推荐你阅读《hackers＆painters：big ideas from the computer age》，非常的有趣。\n\n\n# 名词\n\n\n# 专有名词使用正确的大小写\n\n大小写相关用法原属于英文书写范畴，不属于本 wiki 讨论內容，在这里只对部分易错用法进行简述。\n\n正确：\n\n> 使用 github 登录\n\n> 我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。\n\n错误：\n\n> 使用 github 登录\n\n> 使用 github 登录\n\n> 使用 github 登录\n\n> 使用 github 登录\n\n> 使用 gｲんhц8 登录\n\n> 我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。\n\n> 我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。\n\n> 我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。\n\n> 我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。\n\n> 我们的客户有 gｲんhц8、ｷouяƨquﾑгє、๓เςг๏ร๏ŧt ς๏гק๏гคtเ๏ภn、900913、ƒ4ᄃeв๏๏к, iпᄃ.。\n\n注意：当网页中需要配合整体视觉风格而出现全部大写／小写的情形，html 中请使用标准的大小写规范进行书写；并通过 text-transform: uppercase;／text-transform: lowercase; 对表现形式进行定义。\n\n\n# 不要使用不地道的缩写\n\n正确：\n\n> 我们需要一位熟悉 javascript、html5，至少理解一种框架（如 backbone.js、angularjs、react 等）的前端开发者。\n\n错误：\n\n> 我们需要一位熟悉 js、h5，至少理解一种框架（如 backbone、angular、rjs 等）的 fed。\n\n\n# 争议\n\n以下用法略带有个人色彩，即：无论是否遵循下述规则，从语法的角度来讲都是正确的。\n\n\n# 链接之间增加空格\n\n用法：\n\n> 请 提交一个 issue 并分配给相关同事。\n\n> 访问我们网站的最新动态，请 点击这里 进行订阅！\n\n对比用法：\n\n> 请提交一个 issue 并分配给相关同事。\n\n> 访问我们网站的最新动态，请点击这里进行订阅！\n\n\n# 简体中文使用直角引号\n\n用法：\n\n> 「老师，『有条不紊』的『紊』是什么意思？」\n\n对比用法：\n\n> “老师，‘有条不紊’的‘紊’是什么意思？”\n\n\n# 自我\n\n\n# 文档命名规范\n\n正确：\n\n> 关于 - 技巧\n> \n> 笔记 - 技巧\n> \n> 排版 - 技巧\n\n错误：\n\n> 关于技巧\n> \n> 笔记 技巧\n> \n> 排版 ~ 技巧\n\n\n# 加粗文字增加空格\n\n正确：\n\n> 一个好的 排版 彰显好的文档。\n\n错误：\n\n> 一个好的排版彰显好的文档。\n\n\n# 加粗文字与标点符号\n\n加粗的文字如果是最后一行，或者独处一行，那么加粗范围包括标点符号；\n\n加粗的文字如果后面还有文字，则加粗范围不包括标点符号。\n\n正确：\n\n> 欢迎来到我的博客，请慢慢食用。\n\n> 欢迎来到我的博客，请慢慢食用。\n\n错误：\n\n> 欢迎来到我的博客，请慢慢食用。\n> \n> 欢迎来到我的博客， 请慢慢食用。\n\n可能看不太清楚，这里解释一下：\n\n * 错误的例子中，句号在加粗范围外面，逗号在加粗范围里面\n\n * 正确的例子中，句号在加粗范围里面，逗号在加粗范围外面\n\n\n# 加粗标题使用引号（可选）\n\n加粗的字体在手机端显示失效，阅读的效果与普通文字一样，所以加引号既可以在电脑端双重突出，也可以在手机端突出。\n\n这里的引号指的是 markdown 的引号，即开头添加的 > 符号，特征是左侧有阴影竖条块，如本内容的例子都是通过引号突出。\n\n正确：\n\n> > 什么是 young\n> \n> young 代表年轻、朝气、希望、活力 ......\n\n错误：\n\n> 什么是 young\n> \n> young 代表年轻、朝气、希望、活力 ......\n\n\n# 体系化文档开头添加目录\n\n生成可以跳转的目录，方便他人阅读和选择。\n\n如 vuepress 可以解析 [[toc]] 字符串从而生成目录。\n\n\n# 有序/无序列表末尾不加标点符合\n\n因为开头的符号已经代表句号/感叹号/问号了。\n\n正确：\n\n>  * 欢迎来到我的博客\n>  * 希望能入你法眼\n> \n>  1. 酒菜不多，但都是精华。请慢慢食用\n>  2. 文章内容不恰当，可以在评论区留言\n\n错误：\n\n>  * 欢迎来到我的博客。\n>  * 希望能入你法眼。\n> \n>  1. 酒菜不多，但都是精华。请慢慢食用。\n>  2. 文章内容不恰当，可以在评论区留言。\n\n\n# 格式化工具\n\n使用这些工具，可以一次性把需要的文章按照工具的规定进行格式化，类似于杂乱的代码被格式化有序。\n\n仓库                                               语言\nvinta/paranoid-auto-spacing                      javascript\nhuei90/pangu.node                                node.js\nhuacnlee/auto-correct                            ruby\nsparanoid/space-lover                            php (wordpress)\nnauxliu/auto-correct                             php\nricoa/copywriting-correct                        php\nhotoo/pangu.vim                                  vim\nsparanoid/grunt-auto-spacing                     node.js (grunt)\nhjiang/scripts/add-space-between-latin-and-cjk   python\n\n\n# 谁在这样做？\n\n网站             文案    ugc\napple 中国       yes   n/a\napple 香港       yes   n/a\napple 台湾       yes   n/a\nmicrosoft 中国   yes   n/a\nmicrosoft 香港   yes   n/a\nmicrosoft 台湾   yes   n/a\nleancloud      yes   n/a\n知乎             yes   部分用户达成\nv2ex           yes   yes\nsegmentfault   yes   部分用户达成\napple4us       yes   n/a\n豌豆荚            yes   n/a\nruby china     yes   标题达成\nphphub         yes   标题达成\n少数派            yes   n/a\n力扣 leetcode    yes   yes\n\n\n# 本文转载\n\n添加了一些自己的理解\n\n中文文案排版指北\n\n\n# 参考文献\n\n * guidelines for using capital letters\n * letter case - wikipedia\n * punctuation - oxford dictionaries\n * punctuation - the purdue owl\n * how to use english punctuation corrently - wikihow\n * 格式 - opensuse\n * 全角和半角 - 维基百科\n * 引号 - 维基百科\n * 疑问惊叹号 - 维基百科\n * 全角 - 百度百科\n * 半角 - 百度百科',charsets:{cyrillic:!0,cjk:!0},lastUpdated:"2023/06/21, 15:43:04",lastUpdatedTimestamp:1687333384e3},{title:"单个私密文章测试",frontmatter:{title:"单个私密文章测试",date:"2022-01-07T17:01:37.000Z",permalink:"/private/test2/",titleTag:"测试",private:!0,username:"vdoing",password:123456,expire:"7h",loginInfo:[{username:"1",password:"1"},{username:"2",password:"2"}],categories:["测试"],tags:[null],readingShow:"top"},regularPath:"/78.%E6%94%B6%E8%97%8F/90.%E7%A7%81%E5%AF%86%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/03.%E5%8D%95%E4%B8%AA%E7%A7%81%E5%AF%86%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95.html",relativePath:"78.收藏/90.私密文章测试/03.单个私密文章测试.md",key:"v-3e488684",path:"/private/test2/",headersStr:null,content:"恭喜您，访问成功！！！\n\n单独的私密文章，需要在 frontmatter 额外添加如下信息：\n\n---\nprivate: true     # 开启文章私密，必须\nusername: vdoing  # 用户名\npassword: 123456  # 密码\nexpire: 7h     # 登录状态超时清除时间，可选（不填则以全局超时时间为准，如果全局没有设置，则默认是一天）\nloginInfo: [   # 多组用户名密码登录\n  {username: '1', password: '1'},\n  {username: '2', password: '2'},\n]\n---\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n此时该文章使用 themeConfig 里的 loginInfo 信息登录 不会生效。仅仅该 frontmatter 的用户名和密码或者管理员用户名和密码 生效。\n\n如果您想全局给一个文章设为私密，则请访问 全局私密文章测试\n\n本文章的全部 frontmatter 内容：\n\n---\ntitle: 单个私密文章测试\ndate: 2022-01-07 17:01:37\npermalink: /private/test2/\ntitleTag: 测试\nprivate: true\nusername: vdoing\npassword: 123456\nexpire: 7h\nloginInfo: [\n  {username: '1', password: '1'},\n  {username: '2', password: '2'},\n]\ncategories: \n  - 测试\ntags: \n  - \n---\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n",normalizedContent:"恭喜您，访问成功！！！\n\n单独的私密文章，需要在 frontmatter 额外添加如下信息：\n\n---\nprivate: true     # 开启文章私密，必须\nusername: vdoing  # 用户名\npassword: 123456  # 密码\nexpire: 7h     # 登录状态超时清除时间，可选（不填则以全局超时时间为准，如果全局没有设置，则默认是一天）\nlogininfo: [   # 多组用户名密码登录\n  {username: '1', password: '1'},\n  {username: '2', password: '2'},\n]\n---\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n此时该文章使用 themeconfig 里的 logininfo 信息登录 不会生效。仅仅该 frontmatter 的用户名和密码或者管理员用户名和密码 生效。\n\n如果您想全局给一个文章设为私密，则请访问 全局私密文章测试\n\n本文章的全部 frontmatter 内容：\n\n---\ntitle: 单个私密文章测试\ndate: 2022-01-07 17:01:37\npermalink: /private/test2/\ntitletag: 测试\nprivate: true\nusername: vdoing\npassword: 123456\nexpire: 7h\nlogininfo: [\n  {username: '1', password: '1'},\n  {username: '2', password: '2'},\n]\ncategories: \n  - 测试\ntags: \n  - \n---\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"自我介绍",frontmatter:{title:"自我介绍",date:"2023-06-13T17:05:00.000Z",permalink:"/about/me/",private:!0,titleTag:"原创",categories:["关于"],tags:["关于"],readingShow:"top"},regularPath:"/80.%E5%85%B3%E4%BA%8E/03.%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D.html",relativePath:"80.关于/03.自我介绍.md",key:"v-44df8956",path:"/about/me/",headers:[{level:2,title:"Hello (\\/ω＼) 👋",slug:"hello-ω-👋",normalizedTitle:"hello (/ω＼) 👋",charIndex:null},{level:2,title:"技术栈 Tech Stacks 🐾",slug:"技术栈-tech-stacks-🐾",normalizedTitle:"技术栈 tech stacks 🐾",charIndex:22},{level:3,title:"EDA技能树",slug:"eda技能树",normalizedTitle:"eda技能树",charIndex:46},{level:3,title:"开发语言技能树",slug:"开发语言技能树",normalizedTitle:"开发语言技能树",charIndex:58},{level:2,title:"工作内容 Job Contents✨",slug:"工作内容-job-contents✨",normalizedTitle:"工作内容 job contents✨",charIndex:69},{level:2,title:"项目经验 Project Experience🍻",slug:"项目经验-project-experience🍻",normalizedTitle:"项目经验 project experience🍻",charIndex:91},{level:3,title:"刚性板设计",slug:"刚性板设计",normalizedTitle:"刚性板设计",charIndex:122},{level:3,title:"刚挠结合板设计",slug:"刚挠结合板设计",normalizedTitle:"刚挠结合板设计",charIndex:133},{level:3,title:"微波射频板设计",slug:"微波射频板设计",normalizedTitle:"微波射频板设计",charIndex:146},{level:3,title:"项目管理系统",slug:"项目管理系统",normalizedTitle:"项目管理系统",charIndex:159},{level:3,title:"库管理系统",slug:"库管理系统",normalizedTitle:"库管理系统",charIndex:171},{level:2,title:"联系我 💬",slug:"联系我-💬",normalizedTitle:"联系我 💬",charIndex:180}],excerpt:'<p><div class="table-of-contents"><ul></ul></div></p>\n<div class="custom-block note"><p class="custom-block-title">序言</p>\n<p>采薇笔记，不断积累！</p>\n<div class="custom-block right">\n<p>2023-06-13 @icaiwei</p>\n</div>\n</div>\n',headersStr:"Hello (\\/ω＼) 👋 技术栈 Tech Stacks 🐾 EDA技能树 开发语言技能树 工作内容 Job Contents✨ 项目经验 Project Experience🍻 刚性板设计 刚挠结合板设计 微波射频板设计 项目管理系统 库管理系统 联系我 💬",content:" * Hello (\\/ω＼) 👋\n * 技术栈 Tech Stacks 🐾\n   * EDA技能树\n   * 开发语言技能树\n * 工作内容 Job Contents✨\n * 项目经验 Project Experience🍻\n   * 刚性板设计\n   * 刚挠结合板设计\n   * 微波射频板设计\n   * 项目管理系统\n   * 库管理系统\n * 联系我 💬\n\n\n\n序言\n\n采薇笔记，不断积累！\n\n2023-06-13 @icaiwei\n\n\n# Hello (*/ω＼*) 👋\n\n * 🖥︎ 岗位：Layout工程师\n * 🏢 公司：中电科普天科技股份有限公司\n * 🗓︎ 工作经验：十年\n * 📩 邮箱：476090432@qq.com\n * 💖 爱好：徒步，登山，学习，写代码\n * 💬 座右铭：创新是引领发展的第一动力，实践是检验真理的唯一标准\n\n\n# 技术栈 Tech Stacks 🐾\n\n\n# EDA技能树\n\n\n\n\n\n\n# 开发语言技能树\n\n\n\n\n# 工作内容 Job Contents✨\n\n * 根据原理图，环境要求，对元器件进行布局及layout研发设计工作，独立完成PCB设计。\n * 建立元器件库、标准PCB元器件封装，检查并核对原理图和PCB一致性。\n * 根据产品需求进行layout可行性评估。\n * 负责制作Gerber文件，制板要求，钢网文件，坐标文件等生产文件及版本变更文件。\n * 制定PCB Layout及封装设计规范文档。\n * 根据PCB类型开发对应工具提高工作效率。\n\n\n# 项目经验 Project Experience🍻\n\n\n# 刚性板设计\n\n 1. 可根据结构设计不同类型的背板，子板，熟练应用背钻，盲孔，盲槽的设计与加工知识；\n 2. 电源板，数字板，数模结合板有丰富的设计经验；\n 3. 最高设计层数26层，最大Pin数1.8万。\n\n\n# 刚挠结合板设计\n\n 1. 根据结构设计出合理方案，满足弯折性及电气要求；\n 2. 最高设计层数28层，其中26层挠性层。\n\n\n# 微波射频板设计\n\n 1. 了解射频设计基本要求，主要设计相控阵微波板，应用盲孔，背钻，激光钻孔，铜浆烧结等多种工艺技术设计加工；\n 2. 根据相控阵特点做出二次开发工具，极大的提高设计效率。\n\n\n# 项目管理系统\n\n 1. 根据公司业务需求，使用编程语言设计项目管理系统；\n 2. 使用基本的增删改查完成项目管理；\n 3. 使用流程管控项目进度；\n 4. 清晰的项目报表，用于项目数据分析。\n\n\n# 库管理系统\n\n 1. 根据公司设计需求，使用编程语言设计库管理系统；\n\n 2. 使用基本的增删改查完成库管理，可一键生成符合公司标准的常规封装；\n\n 3. 使用流程管控库的申请与使用，增加库的正确性与可利用性；\n\n 4. 在线预览datasheet与下载对应的库。\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n\n# 联系我 💬\n\n📧：🐧：476090432@qq.com\n\n🐧：476090432",normalizedContent:" * hello (\\/ω＼) 👋\n * 技术栈 tech stacks 🐾\n   * eda技能树\n   * 开发语言技能树\n * 工作内容 job contents✨\n * 项目经验 project experience🍻\n   * 刚性板设计\n   * 刚挠结合板设计\n   * 微波射频板设计\n   * 项目管理系统\n   * 库管理系统\n * 联系我 💬\n\n\n\n序言\n\n采薇笔记，不断积累！\n\n2023-06-13 @icaiwei\n\n\n# hello (*/ω＼*) 👋\n\n * 🖥︎ 岗位：layout工程师\n * 🏢 公司：中电科普天科技股份有限公司\n * 🗓︎ 工作经验：十年\n * 📩 邮箱：476090432@qq.com\n * 💖 爱好：徒步，登山，学习，写代码\n * 💬 座右铭：创新是引领发展的第一动力，实践是检验真理的唯一标准\n\n\n# 技术栈 tech stacks 🐾\n\n\n# eda技能树\n\n\n\n\n\n\n# 开发语言技能树\n\n\n\n\n# 工作内容 job contents✨\n\n * 根据原理图，环境要求，对元器件进行布局及layout研发设计工作，独立完成pcb设计。\n * 建立元器件库、标准pcb元器件封装，检查并核对原理图和pcb一致性。\n * 根据产品需求进行layout可行性评估。\n * 负责制作gerber文件，制板要求，钢网文件，坐标文件等生产文件及版本变更文件。\n * 制定pcb layout及封装设计规范文档。\n * 根据pcb类型开发对应工具提高工作效率。\n\n\n# 项目经验 project experience🍻\n\n\n# 刚性板设计\n\n 1. 可根据结构设计不同类型的背板，子板，熟练应用背钻，盲孔，盲槽的设计与加工知识；\n 2. 电源板，数字板，数模结合板有丰富的设计经验；\n 3. 最高设计层数26层，最大pin数1.8万。\n\n\n# 刚挠结合板设计\n\n 1. 根据结构设计出合理方案，满足弯折性及电气要求；\n 2. 最高设计层数28层，其中26层挠性层。\n\n\n# 微波射频板设计\n\n 1. 了解射频设计基本要求，主要设计相控阵微波板，应用盲孔，背钻，激光钻孔，铜浆烧结等多种工艺技术设计加工；\n 2. 根据相控阵特点做出二次开发工具，极大的提高设计效率。\n\n\n# 项目管理系统\n\n 1. 根据公司业务需求，使用编程语言设计项目管理系统；\n 2. 使用基本的增删改查完成项目管理；\n 3. 使用流程管控项目进度；\n 4. 清晰的项目报表，用于项目数据分析。\n\n\n# 库管理系统\n\n 1. 根据公司设计需求，使用编程语言设计库管理系统；\n\n 2. 使用基本的增删改查完成库管理，可一键生成符合公司标准的常规封装；\n\n 3. 使用流程管控库的申请与使用，增加库的正确性与可利用性；\n\n 4. 在线预览datasheet与下载对应的库。\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n\n# 联系我 💬\n\n📧：🐧：476090432@qq.com\n\n🐧：476090432",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"学习记录",frontmatter:{title:"学习记录",date:"2023-06-13T17:05:00.000Z",permalink:"/about/learn-history/",private:!0,titleTag:"原创",categories:["关于"],tags:["关于"],readingShow:"top"},regularPath:"/80.%E5%85%B3%E4%BA%8E/07.%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html",relativePath:"80.关于/07.学习记录.md",key:"v-414ce414",path:"/about/learn-history/",headers:[{level:2,title:"学习记录",slug:"学习记录",normalizedTitle:"学习记录",charIndex:3}],excerpt:'<p><div class="table-of-contents"><ul></ul></div></p>\n<div class="custom-block note"><p class="custom-block-title">笔记</p>\n<p>知其所以然，才能知其然。</p>\n<div class="custom-block right">\n<p>2023-06-13 @icaiwei</p>\n</div>\n</div>\n',headersStr:"学习记录",content:" * 学习记录\n\n\n\n笔记\n\n知其所以然，才能知其然。\n\n2023-06-13 @icaiwei\n\n\n# 学习记录\n\n路线       链接                              时间           类型\ndocker   黑马程序员Docker容器化技术，从零学会Docker教程   2023-06-24   视频\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      ",normalizedContent:" * 学习记录\n\n\n\n笔记\n\n知其所以然，才能知其然。\n\n2023-06-13 @icaiwei\n\n\n# 学习记录\n\n路线       链接                              时间           类型\ndocker   黑马程序员docker容器化技术，从零学会docker教程   2023-06-24   视频\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                      ",charsets:{cjk:!0},lastUpdated:"2023/06/24, 19:04:40",lastUpdatedTimestamp:168760468e4},{title:"机智一批",frontmatter:{title:"机智一批",date:"2023-06-13T17:05:00.000Z",permalink:"/idea/",private:!0,titleTag:"原创",categories:["灵机一闪"],tags:["灵机一闪"],readingShow:"top"},regularPath:"/99.%E7%81%B5%E6%9C%BA%E4%B8%80%E9%97%AA/01.%E6%9C%BA%E6%99%BA%E4%B8%80%E6%89%B9.html",relativePath:"99.灵机一闪/01.机智一批.md",key:"v-e6b17824",path:"/idea/",headersStr:null,content:"> [! tip] ins 随机一动 #灵机一闪 2024/1/16\n\n> [! tip] ins 直接输入灵机 #灵机一闪 2024/1/16 Call [!note]\n> \n> Scac\n\n> [!seealso]\n> \n> Dsjhduewi\n\n> [! tip] ins 彩彩 #灵机一闪 2024/1/24",normalizedContent:"> [! tip] ins 随机一动 #灵机一闪 2024/1/16\n\n> [! tip] ins 直接输入灵机 #灵机一闪 2024/1/16 call [!note]\n> \n> scac\n\n> [!seealso]\n> \n> dsjhduewi\n\n> [! tip] ins 彩彩 #灵机一闪 2024/1/24",charsets:{cjk:!0},lastUpdated:"2024/01/25, 10:52:11",lastUpdatedTimestamp:1706151131e3},{title:"归档",frontmatter:{archivesPage:!0,title:"归档",permalink:"/archives/",article:!1,readingShow:"top"},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-cc639d82",path:"/archives/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2023/06/10, 10:33:55",lastUpdatedTimestamp:1686364435e3},{title:"Home",frontmatter:{home:!0,heroText:"i采薇",tagline:"昔我往矣，杨柳依依，今我来思，雨雪霏霏。",private:!0,pageClass:"vdoing-index-class",postList:"detailed",readingShow:"top"},regularPath:"/",relativePath:"index.md",key:"v-659a8c2a",path:"/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2023/06/18, 23:24:16",lastUpdatedTimestamp:1687101856e3},{title:"标签",frontmatter:{tagsPage:!0,title:"标签",permalink:"/tags/",article:!1,readingShow:"top"},regularPath:"/@pages/tagsPage.html",relativePath:"@pages/tagsPage.md",key:"v-48e9f0bf",path:"/tags/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2023/06/10, 10:33:55",lastUpdatedTimestamp:1686364435e3},{title:"私密文章登录",frontmatter:{title:"私密文章登录",date:"2022-01-07T14:26:04.000Z",permalink:"/vdoing/login/",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/99.Vdoing%E7%A7%81%E5%AF%86%E6%96%87%E7%AB%A0%E7%99%BB%E5%BD%95.html",relativePath:"99.Vdoing私密文章登录.md",key:"v-2e5da65e",path:"/vdoing/login/",headersStr:null,content:"您当前访问的是博主的私密文章，请输入有效的用户名和密码，如果没有，请在评论区或者其他途径向博主获取。",normalizedContent:"您当前访问的是博主的私密文章，请输入有效的用户名和密码，如果没有，请在评论区或者其他途径向博主获取。",charsets:{cjk:!0},lastUpdated:"2023/06/27, 10:58:03",lastUpdatedTimestamp:1687834683e3},{title:"分类",frontmatter:{categoriesPage:!0,title:"分类",permalink:"/categories/",article:!1,readingShow:"top"},regularPath:"/@pages/categoriesPage.html",relativePath:"@pages/categoriesPage.md",key:"v-2544bf9f",path:"/categories/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2023/06/10, 10:33:55",lastUpdatedTimestamp:1686364435e3}],themeConfig:{nav:[{text:"首页",link:"/"},{text:"导航站",link:"/navigation/"},{text:"硬件知识",link:"/hardware/technology/hole/",items:[{text:"工艺基础",link:"/hardware/technology/hole/"},{text:"信号完整性",link:"/hardware/si/sparam/"},{text:"原理设计",link:"/hardware/use/way/"},{text:"电源设计",link:"/hardware/use/power/"},{text:"器件手册",link:"/hardware/datasheet/"},{text:"C51",link:"/hardware/c51/led/"},{text:"STM32",link:"/hardware/stm32/info/"},{text:"Vivado",link:"/hardware/vivado/ver/"},{text:"软件技巧",items:[{text:"Cadence",link:"/hardware/cadence/device/"},{text:"Altium Designer",link:"/hardware/ad/rou/"},{text:"Mentor Graphics",link:"/hardware/mentor/shortkey/"},{text:"Pads",link:"/hardware/pads/command/"}]}]},{text:"前端构建",link:"/front/vuepress/install/",items:[{text:"VuePress",link:"/front/vuepress/install/"},{text:"C#",link:"/software/csharp/"}]},{text:"软件开发",link:"/soft/springboot/use/multi/",items:[{text:"SpringBoot使用",link:"/soft/springboot/use/multi/"},{text:"WPF",link:"/soft/webapi/info/"},{text:"Python",link:"/soft/python/note/"},{text:"Qt",link:"/soft/qt/note/"},{text:"Win32",link:"/soft/win32/hello/"},{text:"COM",link:"/project/cplusplus/com/"},{text:"Allegro Skill",link:"/soft/skill/function/"},{text:"Mentor VBS",link:"/soft/mentor/use/"},{text:"ObjectArx二次开发",link:"/soft/objectarx/version/"}]},{text:"运维管理",link:"/operation/docker/install/",items:[{text:"Docker",link:"/operation/docker/install/"},{text:"CentOS",link:"/operation/centos/deploy/"},{text:"群晖NAS",link:"/operation/nas/install/"},{text:"NodeJS",link:"/operation/npm/"},{text:"Git",link:"/operation/git/error/"}]},{text:"Linux",items:[{text:"Shell例子",link:"/linux/shell/example/"}]},{text:"工具使用",link:"/tool/office/excel/formula/",items:[{text:"Excel常用方法",link:"/tool/office/excel/formula/"},{text:"Typora过期解决",link:"/tool/other/typora/"},{text:"Windows Terminal美化",link:"/tool/other/terminal/"}]},{text:"收藏",link:"/collect/web/",items:[{text:"实用网站",link:"/collect/web/"},{text:"Markdown",link:"/collect/markdown/syntax/",items:[{text:"语法",link:"/collect/markdown/syntax/"},{text:"排版",link:"/collect/markdown/settype/"}]}]},{text:"关于",link:"/about/me/",items:[{text:"自我介绍",link:"/about/me/"},{text:"学习记录",link:"/about/learn-history/"}]},{text:"索引",link:"/archives/",items:[{items:[{text:"分类",link:"/categories/"},{text:"标签",link:"/tags/"},{text:"归档",link:"/archives/"}]}]}],sidebarDepth:2,logo:"/img/index/logo.png",repo:"icaiwei.github.io",searchMaxSuggestions:10,lastUpdated:"更新时间",docsDir:"docs",categoryText:"随笔",defaultMode:"dark",bodyBgImg:["https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.3/images/a1.jpg","https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.3/images/a2.jpg","https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.3/images/a3.jpg","https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.3/images/a4.jpg","https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.3/images/a5.jpg"],bodyBgImgOpacity:1,sidebar:{"/03.硬件知识/":[{title:"工艺基础",collapsable:!0,children:[["01.工艺基础/01.塞孔工艺.md","塞孔工艺","/hardware/technology/hole/"],["01.工艺基础/02.PIH通孔回流焊.md","通孔回流焊PIH","/hardware/technology/pih/"],["01.工艺基础/03.立碑现象.md","立碑现象","/hardware/technology/libei/"]]},{title:"信号完整性",collapsable:!0,children:[{title:"射频工程师工作笔记",collapsable:!0,children:[["02.信号完整性/01.射频工程师工作笔记/01.常用仪器仪表之矢量信号发生器1.1.md","常用仪器仪表之矢量信号发生器1.1","/hardware/rf/vector/signal/"],["02.信号完整性/01.射频工程师工作笔记/02.常用仪器仪表之频谱仪1.2.md","常用仪器仪表之频谱仪1.2","/hardware/rf/spectrum/"],["02.信号完整性/01.射频工程师工作笔记/04.常用仪器仪表之功率计和探头1.4.md","常用仪器仪表之功率计和探头1.4","/hardware/rf/power/"],["02.信号完整性/01.射频工程师工作笔记/05.射频无源器件之功分器.md","射频无源器件之功分器","/hardware/si/splitter/"],["02.信号完整性/01.射频工程师工作笔记/06.射频无源器件之耦合器.md","射频无源器件之耦合器","/hardware/si/coupling/"],["02.信号完整性/01.射频工程师工作笔记/08.射频无源器件之环形器.md","射频无源器件之环形器","/hardware/si/circulator/"],["02.信号完整性/01.射频工程师工作笔记/09.射频无源器件之巴伦.md","射频无源器件之巴伦","/hardware/si/barron/"],["02.信号完整性/01.射频工程师工作笔记/10.射频无源器件之天线.md","射频无源器件之天线","/hardware/si/wire/"],["02.信号完整性/01.射频工程师工作笔记/11.射频无源器件之衰减器.md","射频无源器件之衰减器","/hardware/si/attenuator"],["02.信号完整性/01.射频工程师工作笔记/12.射频有源器件之放大器PA.md","射频有源器件之放大器PA","/hardware/si/maxpa/"],["02.信号完整性/01.射频工程师工作笔记/13.射频有源器件之低噪放.md","射频有源器件之低噪放","/hardware/si/lowpa/"],["02.信号完整性/01.射频工程师工作笔记/14.射频有源器件之射频开关.md","射频有源器件之射频开关","/hardware/si/switch/"],["02.信号完整性/01.射频工程师工作笔记/15.射频有源器件之混频器.md","射频有源器件之混频器","/hardware/si/Mixer/"]]},{title:"相控阵",collapsable:!0,children:[["02.信号完整性/02.相控阵/01.Ka频段双极化低剖面卫通相控阵天线.md","Ka频段双极化低剖面卫通相控阵天线","/hardware/si/phased-array/ka"]]},["02.信号完整性/03.阻抗变换器.md","阻抗变换器","/hardware/si/impedance-tran/"],["02.信号完整性/04.电磁波中的波段划分.md","电磁波中的波段划分","/hardware/si/wave/"],["02.信号完整性/05.HFSS端口区分.md","HFSS端口区分","/hardware/si/hfss/port"]]},{title:"原理模块设计",collapsable:!0,children:[["03.原理模块设计/01.设计方法.md","设计方法","/hardware/use/way/"],["03.原理模块设计/02.以太网设计.md","以太网设计","/hardware/use/eth/"],["03.原理模块设计/03.万兆以太网设计.md","万兆以太网设计","/hardware/use/eth/gbit/"],["03.原理模块设计/04.RS232设计.md","RS232设计","/hardware/use/rs232/"],["03.原理模块设计/05.RS485设计.md","RS485设计","/hardware/use/rs485/"],["03.原理模块设计/06.CAN设计.md","CAN设计","/hardware/use/can/"],["03.原理模块设计/07.USB转串口.md","USB转串口","/hardware/use/usb2serialport/"],["03.原理模块设计/08.SD卡.md","SD卡","/hardware/use/sd/"],["03.原理模块设计/09.蜂鸣器.md","蜂鸣器","/hardware/use/beep/"],["03.原理模块设计/10.红外.md","红外","/hardware/use/infrared/"],["03.原理模块设计/11.数字温度湿度传感器.md","数字温度湿度传感器","/hardware/use/temp/"],["03.原理模块设计/12.风扇.md","风扇","/hardware/use/fan/"],["03.原理模块设计/13.HDMI.md","HDMI","/hardware/use/hdmi/"],["03.原理模块设计/14.DVI.md","DVI","/hardware/use/dvi/"],["03.原理模块设计/15.VGA.md","VGA","/hardware/use/vga/"],["03.原理模块设计/16.DP.md","DP","/hardware/use/dp/"],["03.原理模块设计/17.LVDS.md","LVDS","/hardware/use/lvds/"],["03.原理模块设计/18.LCD.md","LCD","/hardware/use/lcd/"],["03.原理模块设计/19.时钟.md","时钟","/hardware/use/clk/"],["03.原理模块设计/20.复位.md","复位","/hardware/use/reset/"],["03.原理模块设计/21.EEPROM.md","EEPROM","/hardware/use/eeprom/"],["03.原理模块设计/22.SPI Flash.md","SPI Flash","/hardware/use/spi/"],["03.原理模块设计/23.DDR3.md","DDR3","/hardware/use/ddr3/"],["03.原理模块设计/24.DDR4.md","DDR4","/hardware/use/ddr4/"],["03.原理模块设计/25.SODIMM.md","SODIMM","/hardware/use/sodimm/"],["03.原理模块设计/26.QDR.md","QDR","/hardware/use/qdr/"],["03.原理模块设计/27.EMMC.md","EMMC","/hardware/use/emmc/"],["03.原理模块设计/28.NAND FLASH.md","NAND FLASH","/hardware/use/nand/"],["03.原理模块设计/29.NOR FLASH.md","NOR FLASH","/hardware/use/nor/"],["03.原理模块设计/30.SDRAM.md","SDRAM","/hardware/use/sdram/"],["03.原理模块设计/31.JTAG.md","JTAG","/hardware/use/jtag/"],["03.原理模块设计/32.SWD.md","SWD","/hardware/use/swd/"],["03.原理模块设计/33.PS2.md","PS2","/hardware/use/ps2/"],["03.原理模块设计/34.USB.md","USB","/hardware/use/usb/"],["03.原理模块设计/35.USB PHY.md","USB PHY","/hardware/use/usbphy/"],["03.原理模块设计/36.USB HUB.md","USB HUB","/hardware/use/usbhub/"],["03.原理模块设计/37.USB HOST.md","USB HOST","/hardware/use/usbhost/"],["03.原理模块设计/38.USB30.md","USB3.0","/hardware/use/usb30/"],["03.原理模块设计/39.PCIE转USB.md","PCIE转USB","/hardware/use/pcie2usb/"],["03.原理模块设计/40.TypeC.md","TypeC","/hardware/use/typec/"],["03.原理模块设计/41.音频.md","音频","/hardware/use/audio/"],["03.原理模块设计/42.LED.md","LED","/hardware/use/led/"],["03.原理模块设计/43.SATA.md","SATA","/hardware/use/sata/"],["03.原理模块设计/44.mSATA.md","mSATA","/hardware/use/msata/"],["03.原理模块设计/45.M2.md","M.2 SSD","/hardware/use/m2/"],["03.原理模块设计/46.PCIe转SATA.md","PCIe转SATA","/hardware/use/pcie2sata/"],["03.原理模块设计/47.PCIe.md","PCIe","/hardware/use/pcie/"],["03.原理模块设计/48.PCIe转串口并口.md","PCIe转串口并口","/hardware/use/pcie2serial/"],["03.原理模块设计/49.PCIe转网口.md","PCIe转网口","/hardware/use/pcie2eth/"],["03.原理模块设计/50.RGMII.md","RGMII","/hardware/use/rgmii/"],["03.原理模块设计/51.M2-5G-SIM卡.md","M2-5G-SIM卡","/hardware/use/sim/"],["03.原理模块设计/52.M2-WIFI-蓝牙.md","M2-WIFI-蓝牙","/hardware/use/m2wifi/"],["03.原理模块设计/53.WIFI-蓝牙.md","WIFI-蓝牙","/hardware/use/wifi/"],["03.原理模块设计/54.摄像头DVP.md","摄像头DVP","/hardware/use/dvp/"],["03.原理模块设计/55.MIPI.md","MIPI","/hardware/use/mipi/"],["03.原理模块设计/56.FMC.md","FMC","/hardware/use/fmc/"],["03.原理模块设计/57.VPX.md","VPX","/hardware/use/vpx/"]]},{title:"原理电源设计",collapsable:!0,children:[["04.原理电源设计/01.电源设计方法.md","电源设计方法","/hardware/use/power/"],["04.原理电源设计/02.ATX.md","ATX","/hardware/use/power/atx/"],["04.原理电源设计/03.12V电源适配器.md","12V电源适配器","/hardware/use/power/12v/"],["04.原理电源设计/04.TPS62130.md","TPS62130","/hardware/use/power/tps62130/"],["04.原理电源设计/05.TPS54620.md","TPS54620","/hardware/use/power/tps54620/"],["04.原理电源设计/06.TPS51200.md","TPS51200","/hardware/use/power/tps51200/"],["04.原理电源设计/07.IS6608A.md","IS6608A","/hardware/use/power/is6608a/"]]},{title:"Cadence",collapsable:!0,children:[["07.Cadence/01.Allegro Device文件详解.md","Allegro Device文件详解","/hardware/cadence/device/"],["07.Cadence/02.Allegro小知识.md","Allegro小知识","/hardware/cadence/allegro/"],["07.Cadence/03.OrCAD小知识.md","OrCAD小知识","/hardware/cadence/orcad/"]]},{title:"Altium Designer",collapsable:!0,children:[["08.Altium Designer/01.刚挠设计.md","刚挠设计","/hardware/ad/rou/"],["08.Altium Designer/02.AD小知识.md","AD小知识","/hardware/ad/"]]},{title:"Mentor",collapsable:!0,children:[["09.Mentor/01.快捷键.md","快捷键","/hardware/mentor/shortkey/"],["09.Mentor/02.Mentor小知识.md","Mentor小知识","/hardware/mentor/"]]},{title:"Pads",collapsable:!0,children:[["10.Pads/01.Pads无模命令.md","Pads无模命令","/hardware/pads/command/"]]},{title:"C51汇编",collapsable:!0,children:[["11.C51汇编/01.点亮LED.md","点亮LED","/hardware/c51/led/"],["11.C51汇编/02.多LED亮灭.md","多灯亮灭","/hardware/c51/led/multi"],["11.C51汇编/03.开关控制灯亮灭.md","多开关控制灯亮灭","/hardware/c51/switch/"],["11.C51汇编/04.多开关控制灯亮灭.md","开关控制灯亮灭","/hardware/c51/switch/multi/"],["11.C51汇编/05.多开关控制灯亮灭-软件防抖.md","开关控制灯亮灭-软件防抖","/hardware/c51/switch/antishake/"],["11.C51汇编/06.查表方式灯循环亮灭.md","查表方式灯循环亮灭","/hardware/c51/led/table/"],["11.C51汇编/07.查表方式按键控制灯亮灭.md","查表方式按键控制灯亮灭","/hardware/c51/switch/table/"],["11.C51汇编/08.查表方式霓虹灯.md","查表方式霓虹灯","/hardware/c51/led/neonlamp/"]]},{title:"STM32",collapsable:!0,children:[["12.STM32/01.介绍.md","介绍","/hardware/stm32/info/"],["12.STM32/02.STM32F407芯片内部.md","STM32F407芯片内部","/hardware/stm32/inner/"],["12.STM32/03.环境安装与下载方式.md","环境安装与下载方式","/hardware/stm32/path/"],["12.STM32/04.新建工程.md","新建工程","/hardware/stm32/new/"],["12.STM32/05.GPIO工作原理.md","GPIO工作原理","/hardware/stm32/gpio/"],["12.STM32/06.跑马灯-寄存器.md","跑马灯-寄存器","/hardware/stm32/led/bit/"],["12.STM32/07.跑马灯-库函数.md","跑马灯-寄存器","/hardware/stm32/led/fun/"],["12.STM32/08.蜂鸣器.md","蜂鸣器","/hardware/stm32/beep/"],["12.STM32/09.按键.md","按键","/hardware/stm32/key/"]]},{title:"Vivado",collapsable:!0,children:[["13.Vivado/01.Vivado与Matlab版本匹配.md","Vivado与Matlab版本匹配","/hardware/vivado/ver/"],["13.Vivado/02.Vivado安装.md","Vivado安装","/hardware/vivado/install/"],["13.Vivado/03.Vivado生成Pin Delay.md","Vivado安装","/hardware/vivado/pindelay/"],["13.Vivado/04.Vivado创建工程.md","Vivado创建工程","/hardware/vivado/project/"]]},{title:"常见电路",collapsable:!0,children:[["14.常见电路/01.滤波电路及原理.md","滤波电路及原理","/hardware/dl/filter/"],["14.常见电路/02.STM32的GPIO介绍.md","STM32的GPIO介绍","/hardware/dl/gpio/info/"],["14.常见电路/03.GPIO的推挽输出和开漏输出.md","GPIO的推挽输出和开漏输出","/hardware/dl/gpio/output/"]]}],catalogue:{},"/04.前端构建/":[{title:"VuePress",collapsable:!0,children:[["07.VuePress/01.VuePress安装配置.md","VuePress安装配置","/front/vuepress/install/"],["07.VuePress/02.VuePress-reco主题安装配置.md","VuePress-reco主题安装配置","/front/vuepress/reco/"],["07.VuePress/05.插件的使用.md","插件的使用","/front/vuepress/plugin/"],["07.VuePress/06.部署.md","部署","/front/vuepress/deploy/"]]}],"/06.软件开发/":[{title:"Springboot使用",collapsable:!0,children:[["01.Springboot使用/01.多模块项目.md","多模块项目","/soft/springboot/use/multi"],["01.Springboot使用/02.banner使用.md","banner使用","/soft/springboot/use/banner"],["01.Springboot使用/03.log使用.md","log使用","/soft/springboot/use/log"],["01.Springboot使用/04.springdoc.md","springdoc","/soft/springboot/use/springdoc"],["01.Springboot使用/05.全局异常.md","全局异常","/soft/springboot/use/exception"],["01.Springboot使用/06.统一返回结果.md","统一返回结果","/soft/springboot/use/result"],["01.Springboot使用/07.mysql-druid-mybatisplus.md","mysql-druid-mybatisplus","/soft/springboot/use/mysql"],["01.Springboot使用/08.mybatis-plus多表关联查询.md","mybatis-plus多表关联查询","/soft/springboot/use/join"],["01.Springboot使用/09.分页查询.md","分页查询","/soft/springboot/use/page"],["01.Springboot使用/10.表CRUD.md","表CRUD","/soft/springboot/use/crud"]]},{title:"前端Vue",collapsable:!0,children:[]},{title:"WPF",collapsable:!0,children:[{title:"WebAPI增删改查",collapsable:!0,children:[["05.WPF/01.WebAPI增删改查/01.WebApi增删改查01-说明.md","WebApi增删改查01-说明","/soft/webapi/info/"],["05.WPF/01.WebAPI增删改查/02.WebApi增删改查02-新建工程.md","WebApi增删改查02-新建工程","/soft/webapi/newproject/"],["05.WPF/01.WebAPI增删改查/03.WebApi增删改查03-Swagger配置.md","WebApi增删改查03-Swagger配置","/soft/webapi/swagger/"],["05.WPF/01.WebAPI增删改查/04.WebApi增删改查04-SqlSugar配置.md","WebApi增删改查04-SqlSugar配置","/soft/webapi/sqlsugar/"],["05.WPF/01.WebAPI增删改查/05.WebApi增删改查05-Log4Net配置.md","WebApi增删改查05-Log4Net配置","/soft/webapi/log4net/"],["05.WPF/01.WebAPI增删改查/06.WebApi增删改查06-AutoMapper配置.md","WebApi增删改查06-AutoMapper配置","/soft/webapi/automapper/"],["05.WPF/01.WebAPI增删改查/07.WebApi增删改查07-用户增删改查.md","WebApi增删改查07-用户增删改查","/soft/webapi/user/"],["05.WPF/01.WebAPI增删改查/08.WebApi增删改查08-JWT配置实现.md","WebApi增删改查08-JWT配置实现","/soft/webapi/jwt/"],["05.WPF/01.WebAPI增删改查/09.WebApi增删改查09-登录.md","WebApi增删改查09-登录","/soft/webapi/login/"],["05.WPF/01.WebAPI增删改查/10.WebApi增删改查10-Redis配置.md","WebApi增删改查10-Redis配置","/soft/webapi/redis/"],["05.WPF/01.WebAPI增删改查/11.WebApi增删改查11-跨域CORS解决.md","WebApi增删改查11-跨域CORS解决","/soft/webapi/cors/"],["05.WPF/01.WebAPI增删改查/12.WebApi增删改查12-Docker发布.md","WebApi增删改查12-Docker发布","/soft/webapi/docker/"]]},{title:"WPF增删改查",collapsable:!0,children:[["05.WPF/02.WPF增删改查/01.WPF项增删改查01-说明.md","WPF项增删改查01-说明","/soft/wpf/info/"],["05.WPF/02.WPF增删改查/02.WPF项增删改查02-新建工程.md","WPF项增删改查02-新建工程","/soft/wpf/newproject/"],["05.WPF/02.WPF增删改查/03.WPF项增删改查03-Caliburn配置.md","WPF项增删改查03-Caliburn配置","/soft/wpf/caliburn/"],["05.WPF/02.WPF增删改查/04.WPF项增删改查04-HandyControl配置.md","WPF项增删改查04-HandyControl配置","/soft/wpf/handycontrol/"],["05.WPF/02.WPF增删改查/05.WPF增删改查05-页面切换.md","WPF增删改查05-页面切换","/soft/wpf/pages/"],["05.WPF/02.WPF增删改查/06.WPF增删改查06-RestSharp.md","WPF增删改查06-RestHttp配置","/soft/wpf/restsharp/"],["05.WPF/02.WPF增删改查/07.WPF增删改查07-用户增删改查.md","WPF增删改查07-用户增删改查","/soft/wpf/user/"],["05.WPF/02.WPF增删改查/08.WPF增删改查08-登录实现.md","WPF增删改查08-登录实现","/soft/wpf/login/"],["05.WPF/02.WPF增删改查/09.WPF增删改查09-美化.md","WPF增删改查09-美化","/soft/wpf/beautify/"],["05.WPF/02.WPF增删改查/10.WPF增删改查10-发布.md","WPF增删改查10-发布","/soft/wpf/publish/"]]},{title:"MaterialDesign",collapsable:!0,children:[["05.WPF/03.MaterialDesign/01.引用MaterialDesign主题.md","引用MaterialDesign主题","/soft/wpf/material/theme/"],["05.WPF/03.MaterialDesign/02.窗口切换.md","窗口切换","/soft/wpf/material/window/"],["05.WPF/03.MaterialDesign/03.动画显示.md","动画显示","/soft/wpf/material/animation/"],["05.WPF/03.MaterialDesign/04.Password绑定.md","Password绑定","/soft/wpf/material/password/"],["05.WPF/03.MaterialDesign/05.Command绑定.md","Command绑定","/soft/wpf/material/command/"],["05.WPF/03.MaterialDesign/06.属性变化通知.md","属性变化通知","/soft/wpf/material/property/"]]}]},{title:"Python",collapsable:!0,children:[{title:"笔记",collapsable:!0,children:[["07.Python/01.笔记/01.Python笔记.md","Python笔记","/soft/python/note/"],["07.Python/01.笔记/02.Python-Excel笔记.md","Python-Excel笔记","/soft/python/note/excel/"],["07.Python/01.笔记/04.Python-Word笔记.md","Python-Word笔记","/soft/python/note/word/"]]},{title:"办公自动化",collapsable:!0,children:[["07.Python/03.办公自动化/01.处理Excel的类库.md","处理Excel的类库","/soft/python/autowork/lib"],["07.Python/03.办公自动化/02.批量处理Excel文件.md","批量新建Excel文件","/soft/python/autowork/batnew"],["07.Python/03.办公自动化/03.批量打开目录下所有Excel.md","批量打开目录下所有Excel","/soft/python/autowork/batopen"]]},["07.Python/10.pip使用.md","pip使用","/soft/python/pip/"],["07.Python/99.PyQt安装.md","PyQt安装","/soft/python/pyqt/install/"]]},{title:"Qt",collapsable:!0,children:[["09.Qt/01.Qt笔记.md","Qt笔记","/soft/qt/note/"],["09.Qt/02.类型互换.md","类型互换","/soft/qt/convert/"],["09.Qt/03.字符串.md","字符串","/soft/qt/string/"],["09.Qt/04.窗口设置.md","窗口设置","/soft/qt/window/"],["09.Qt/05.编译XLSX模块.md","编译XLSX模块","/soft/qt/xlsx/"],["09.Qt/06.添加应用程序图标和版本信息.md","添加应用程序图标和版本信息","/soft/qt/version/"],["09.Qt/07.QSS 自定义QMessageBox.md","QSS 自定义QMessageBox","/soft/qt/messagebox/"],["09.Qt/08.MySQL使用.md","QSS 自定义QMessageBox","/soft/qt/mysql/"],["09.Qt/09.TreeWidget去除虚线.md","MySQL使用","/soft/qt/tree/"],["09.Qt/10.Clion配置QT.md","TreeWidget去除虚线","/soft/qt/clion/"],["09.Qt/11.QT Creator配置One Dark主题.md","TreeWidget去除虚线","/soft/qt/theme/"]]},{title:"Win32",collapsable:!0,children:[["11.Win32/01.HelloWord.md","HelloWord","/soft/win32/hello/"],["11.Win32/02.第一个Windows窗口程序.md","第一个Windows窗口程序","/soft/win32/first/"],["11.Win32/03.消息.md","消息","/soft/win32/message/"],["11.Win32/04.键盘消息.md","键盘消息","/soft/win32/key/"],["11.Win32/05.鼠标消息.md","鼠标消息","/soft/win32/mouse/"],["11.Win32/06.定时器消息.md","定时器消息","/soft/win32/clock/"],["11.Win32/07.菜单资源.md","菜单资源","/soft/win32/menu/"],["11.Win32/08.图标资源.md","08-图标资源","/soft/win32/icon/"],["11.Win32/09.光标资源.md","09-光标资源","/soft/win32/cursor/"],["11.Win32/10.字符串加速键资源.md","10-字符串加速键资源","/soft/win32/string/"],["11.Win32/11.绘图编程.md","绘图编程","/soft/win32/graphic/"],["11.Win32/12.GDI绘图对象.md","GDI绘图对象","/soft/win32/gdi/"],["11.Win32/13.位图.md","13-位图","/soft/win32/bitmap/"],["11.Win32/14.文本绘制.md","文本绘制","/soft/win32/text/"],["11.Win32/15.对话框.md","15-对话框","/soft/win32/dialog/"],["11.Win32/16.静态库.md","16-静态库","/soft/win32/staticlib/"],["11.Win32/17.动态库.md","17-动态库","/soft/win32/dynamiclib/"],["11.Win32/18.线程.md","线程","/soft/win32/thread/"],["11.Win32/19.线程同步.md","线程同步","/soft/win32/threadsync/"]]},{title:"COM",collapsable:!0,children:[["13.COM/01.VBScript调用DLL.md","VBScript调用DLL","/project/cplusplus/com/"]]},{title:"Allegro Skill",collapsable:!0,children:[["15.Allegro Skill/00.常用函数.md","待办记录","/soft/skill/function/"],["15.Allegro Skill/01.待办记录.md","待办记录","/soft/skill/todo/"],["15.Allegro Skill/03.改变过孔网络.md","改变过孔网络","/soft/skill/changevianet/"],["15.Allegro Skill/04.阵列对象.md","阵列对象","/project/skill/arrayobject/"],["15.Allegro Skill/05.Shape批量赋网络.md","Shape批量赋网络","/soft/skill/shapeassignnet/"]]},{title:"Mentor VBS",collapsable:!0,children:[["17.Mentor VBS/01.脚本使用.md","脚本使用","/soft/mentor/use"],["17.Mentor VBS/02.获取license.md","获取license","/soft/mentor/license"],["17.Mentor VBS/03.调用Command.md","调用Command","/soft/mentor/command"],["17.Mentor VBS/04.定义新Command.md","定义新Command","/soft/mentor/newcommand"],["17.Mentor VBS/05.编辑图形.md","编辑图形","/soft/mentor/graphics"],["17.Mentor VBS/06.对象集合.md","对象集合","/soft/mentor/object"],["17.Mentor VBS/07.修改器件.md","修改器件","/soft/mentor/component"],["17.Mentor VBS/08.点.md","点","/soft/mentor/point"],["17.Mentor VBS/09.Contour.md","Contour","/soft/mentor/contour"]]},{title:"ObjectArx二次开发",collapsable:!0,children:[["19.ObjectArx二次开发/01.ObjectArx版本01.md","ObjectArx版本01","/soft/objectarx/version"],["19.ObjectArx二次开发/02.ObjectArx软件配置02.md","ObjectArx软件配置02","/soft/objectarx/config"],["19.ObjectArx二次开发/03.ObjectArx体验03.md","ObjectArx体验03","/soft/objectarx/hello"],["19.ObjectArx二次开发/04.ObjectArx术语04.md","ObjectArx术语04","/soft/objectarx/term"],["19.ObjectArx二次开发/05.ObjectArx数据库操作05.md","ObjectArx数据库操作05","/soft/objectarx/database"],["19.ObjectArx二次开发/06.ObjectArx创建线段06.md","ObjectArx创建线段06","/soft/objectarx/entity/line"],["19.ObjectArx二次开发/07.ObjectArx修改线段样式07.md","ObjectArx修改线段样式07","/soft/objectarx/entity/line/modify"],["19.ObjectArx二次开发/08.ObjectArx创建圆08.md","ObjectArx创建圆","/soft/objectarx/entity/circle"],["19.ObjectArx二次开发/09.ObjectArx创建弧09.md","ObjectArx创建弧09","/soft/objectarx/entity/arc"],["19.ObjectArx二次开发/20.ObjectArx应用20.md","ObjectArx应用20","/soft/objectarx/apply"]]},{title:"开发日志",collapsable:!0,children:[["21.开发日志/01.开发日志.md","开发日志","/soft/record"]]}],"/10.运维管理/":[{title:"Docker",collapsable:!0,children:[["01.Docker/01.安装配置Docker.md","安装配置Docker","/operation/docker/install/"],["01.Docker/02.Docker命令.md","Docker命令","/operation/docker/command/"],["01.Docker/03.Docker容器数据卷.md","Docker容器数据卷","/operation/docker/data/"],["01.Docker/04.Docker应用部署.md","Docker应用部署","/operation/docker/deploy/"],["01.Docker/05.Dockerfile使用.md","Dockerfile使用","/operation/docker/dockerfile/"],["01.Docker/06.Docker Compose 使用.md","Docker Compose使用","/operation/docker/dockercompose/"],["01.Docker/07.Docker私有仓库.md","Docker私有仓库","/operation/docker/repo/"]]},{title:"CentOS",collapsable:!0,children:[["02.CentOS/01.CentOS部署.md","CentOS部署","/operation/centos/deploy/"],["02.CentOS/02.CentOS最小化安装.md","CentOS最小化安装","/operation/centos/install/"],["02.CentOS/03.CentOS更改源.md","CentOS更改源","/operation/centos/repo/"],["02.CentOS/04.CentOS安装搜狗输入法.md","CentOS安装搜狗输入法","/operation/centos/sougou/"],["02.CentOS/05.CentOS安装JDK8-Maven.md","CentOS安装JDK8-Maven","/operation/centos/jdk/"],["02.CentOS/06.CentOS安装Redis.md","CentOS安装Redis","/operation/centos/redis/"],["02.CentOS/07.CentOS安装Nginx.md","CentOS安装Nginx","/operation/centos/nginx/"],["02.CentOS/08.CentOS安装Mysql.md","CentOS安装Mysql","/operation/centos/mysql/"],["02.CentOS/09.CentOS安装Minio.md","08-CentOS安装Minio","/operation/centos/minio/"],["02.CentOS/10.CentOS安装kkFileView.md","CentOS安装kkFileView","/operation/centos/kkfileview/"],["02.CentOS/11.CentOS防火墙管理.md","CentOS防火墙管理","/operation/centos/firewall/"],["02.CentOS/12.CentOS安装VMWareTools.md","CentOS安装VMWareTools","/operation/centos/vmwaretools/"],["02.CentOS/13.CentOS安装主题.md","CentOS安装主题","/operation/centos/theme/"],["02.CentOS/14.CentOS解压缩.md","CentOS解压缩","/operation/centos/tar/"],["02.CentOS/15.CentOS-安装NodeJS.md","CentOS安装NodeJS","/operation/centos/nodejs/"],["02.CentOS/16.CentOS设置静态IP.md","CentOS设置静态IP","/operation/centos/ip/"],["02.CentOS/17.CentOS frp内网穿透.md","CentOS frp内网穿透","/operation/centos/frp/"],["02.CentOS/18.CentOS-安装Git.md","CentOS安装Git","/operation/centos/git/"],["02.CentOS/19.CentOS-安装Jenkins.md","CentOS安装Jenkins","/operation/centos/jenkins/"],["02.CentOS/20.CentOS-Docker使用.md","CentOS-Docker使用","/operation/centos/docker/"],["02.CentOS/21.CentOS-Syncthing使用.md","CentOS-Syncthing使用","/operation/centos/syncthing/"],["02.CentOS/22.CentOS-更新gcc.md","CentOS-更新gcc","/operation/centos/gcc/"]]},{title:"群晖NAS",collapsable:!0,children:[["03.群晖NAS/01.VMWare安装黑群晖.md","VMWare安装黑群晖","/operation/nas/install/"],["03.群晖NAS/02.Docker安装MySQL.md","Docker安装MySQL","/operation/nas/mysql/"],["03.群晖NAS/03.Docker安装Nginx.md","Docker安装Nginx","/operation/nas/nginx/"],["03.群晖NAS/04.Docker安装Redis.md","Docker安装Redis","/operation/nas/redis/"],["03.群晖NAS/05.Docker安装Minio.md","Docker安装Minio","/operation/nas/minio/"],["03.群晖NAS/06.Docker安装KKFileView.md","Docker安装KKFileView","/operation/nas/kkfileview/"],["03.群晖NAS/07.Docker部署Springboot.md","Docker部署Springboot","/operation/nas/springboot/"]]},{title:"NodeJS",collapsable:!0,children:[["04.NodeJS/01.npm使用.md","npm使用","/operation/npm/","原创"],["04.NodeJS/02.yarn安装使用.md","yarn安装使用","/tool/yarn/install/","原创"],["04.NodeJS/03.NodeJS更改路径.md","nodejs更改路径","/operation/nodejs/changedir/","原创"]]},{title:"Git",collapsable:!0,children:[["05.Git/03.常见错误.md","常见错误","/operation/git/error/","原创"]]},{title:"云服务器",collapsable:!0,children:[["06.云服务器/01.云服务器开启虚拟内存 SWAP.md","云服务器开启虚拟内存SWAP","/cloud/swapon/","原创"]]}],"/100.模板/":[["01.新建模板.md","新建文档","/template/newnote","原创"],["02.我的待办模板.md","我的待办","/todo/","原创"]],"/12.Linux/":[{title:"Shell",collapsable:!0,children:[["03.Shell/01.Shell例子.md","Shell例子","/linux/shell/example/"]]}],"/14.工具使用/":[{title:"Excel",collapsable:!0,children:[["01.Excel/01.Excel常用公式.md","Excel常用公式","/tool/office/excel/formula/","原创"],["01.Excel/03.Excel常用快捷键.md","Excel常用快捷键","/tool/office/excel/shortkey/","原创"]]},{title:"其它",collapsable:!0,children:[["09.其它/01.Typora过期解决.md","Typora过期解决","/tool/other/typora/","原创"],["09.其它/03.Windows Terminal美化.md","Windows Terminal美化","/tool/other/terminal/","原创"],["09.其它/05.Windows小功能.md","Windows小功能","/tool/other/use/","原创"],["09.其它/07.数学小知识.md","数学小知识","/tool/other/math/","原创"],["09.其它/99.小记.md","小记","/tool/other/note/","原创"]]},["21.cdn加速GitHub图床.md","cdn加速GitHub图床","/tool/cdn/"],["22.Maven安装配置.md","Maven安装配置","/tool/maven/"]],"/78.收藏/":[["03.实用收藏.md","实用收藏","/collect/web/"],["04.Obsidian教程.md","Obsidian教程","/pages/dc200c/"],{title:"Markdown",collapsable:!0,children:[["05.Markdown/05.Markdown语法.md","Markdown语法","/collect/markdown/syntax/"],["05.Markdown/07.Markdown排版.md","Markdown排版","/collect/markdown/settype/"]]},{title:"私密文章测试",collapsable:!0,children:[["90.私密文章测试/01.全局私密文章测试.md","全局私密文章测试","/private/test1/","测试"],["90.私密文章测试/03.单个私密文章测试.md","单个私密文章测试","/private/test2/","测试"]]}],"/80.关于/":[["03.自我介绍.md","自我介绍","/about/me/","原创"],["07.学习记录.md","学习记录","/about/learn-history/","原创"]],"/99.灵机一闪/":[["01.机智一批.md","机智一批","/idea/","原创"]]},blogInfo:{blogCreate:"2023-06-10",indexView:!0,pageView:!0,readingTime:!0,eachFileWords:[{name:"README",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\.obsidian\\plugins\\obsidian-proxy-github\\README.md",wordsCount:256,readingTime:"1.1m",title:"README",date:"2024-01-23T21:39:26.000Z",permalink:"/pages/cbf2a0/",categories:["obsidian","plugins","obsidian-proxy-github"],tags:[null]},{name:"2024-01-24",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\01.我的待办\\2024-01-24.md",wordsCount:29,readingTime:"1",title:"我的待办",date:"2024-01-01T00:00:00.000Z",permalink:"/todo/",private:!0,titleTag:"原创",categories:["我的待办"],tags:["我的待办"]},{name:"塞孔工艺",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\01.工艺基础\\01.塞孔工艺.md",wordsCount:224,readingTime:"1",title:"塞孔工艺",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/technology/hole/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"PIH通孔回流焊",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\01.工艺基础\\02.PIH通孔回流焊.md",wordsCount:945,readingTime:"5.2m",title:"通孔回流焊PIH",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/technology/pih/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"立碑现象",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\01.工艺基础\\03.立碑现象.md",wordsCount:"2.5k",readingTime:"8.9m",title:"立碑现象",date:"2024-01-05T21:00:00.000Z",permalink:"/hardware/technology/libei/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"S参数",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\01.S参数.md",wordsCount:"1.1k",readingTime:"4.3m",title:"S参数",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/si/sparam/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"射频无源器件之功分器",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\01.射频工程师工作笔记\\05.射频无源器件之功分器.md",wordsCount:982,readingTime:"3.8m",title:"射频无源器件之功分器",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/splitter/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"射频无源器件之耦合器",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\01.射频工程师工作笔记\\06.射频无源器件之耦合器.md",wordsCount:680,readingTime:"2.7m",title:"射频无源器件之耦合器",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/coupling/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"射频无源器件之环形器",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\01.射频工程师工作笔记\\08.射频无源器件之环形器.md",wordsCount:832,readingTime:"3m",title:"射频无源器件之环形器",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/circulator/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"射频无源器件之巴伦",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\01.射频工程师工作笔记\\09.射频无源器件之巴伦.md",wordsCount:689,readingTime:"2.6m",title:"射频无源器件之巴伦",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/barron/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"射频无源器件之天线",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\01.射频工程师工作笔记\\10.射频无源器件之天线.md",wordsCount:"2.4k",readingTime:"8.8m",title:"射频无源器件之天线",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/wire/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"射频无源器件之衰减器",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\01.射频工程师工作笔记\\11.射频无源器件之衰减器.md",wordsCount:"1.1k",readingTime:"4.4m",title:"射频无源器件之衰减器",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/attenuator",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"射频有源器件之放大器PA",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\01.射频工程师工作笔记\\12.射频有源器件之放大器PA.md",wordsCount:"1.9k",readingTime:"7.2m",title:"射频有源器件之放大器PA",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/maxpa/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"射频有源器件之低噪放",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\01.射频工程师工作笔记\\13.射频有源器件之低噪放.md",wordsCount:975,readingTime:"3.8m",title:"射频有源器件之低噪放",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/lowpa/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"射频有源器件之射频开关",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\01.射频工程师工作笔记\\14.射频有源器件之射频开关.md",wordsCount:865,readingTime:"3.2m",title:"射频有源器件之射频开关",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/switch/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"射频有源器件之混频器",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\01.射频工程师工作笔记\\15.射频有源器件之混频器.md",wordsCount:"1.4k",readingTime:"5.4m",title:"射频有源器件之混频器",date:"2024-01-30T21:00:00.000Z",permalink:"/hardware/si/Mixer/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"dB概念",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\02.dB概念.md",wordsCount:"1k",readingTime:"4.4m",title:"dB概念",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/si/db/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"Ka频段双极化低剖面卫通相控阵天线",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\02.相控阵\\01.Ka频段双极化低剖面卫通相控阵天线.md",wordsCount:"2.3k",readingTime:"8.3m",title:"Ka频段双极化低剖面卫通相控阵天线",date:"2024-02-22T21:00:00.000Z",permalink:"/hardware/si/phased-array/ka",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"阻抗变换器",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\03.阻抗变换器.md",wordsCount:"1.3k",readingTime:"5.6m",title:"阻抗变换器",date:"2024-01-27T21:00:00.000Z",permalink:"/hardware/si/impedance-tran/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"电磁波中的波段划分",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\04.电磁波中的波段划分.md",wordsCount:385,readingTime:"2m",title:"电磁波中的波段划分",date:"2024-01-27T21:00:00.000Z",permalink:"/hardware/si/wave/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"HFSS端口区分",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\02.信号完整性\\05.HFSS端口区分.md",wordsCount:"1k",readingTime:"3.8m",title:"HFSS端口区分",date:"2024-03-06T21:00:00.000Z",permalink:"/hardware/si/hfss/port",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"设计方法",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\01.设计方法.md",wordsCount:143,readingTime:"1",title:"设计方法",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/way/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"以太网设计",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\02.以太网设计.md",wordsCount:103,readingTime:"1",title:"以太网设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/eth/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"万兆以太网设计",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\03.万兆以太网设计.md",wordsCount:86,readingTime:"1",title:"万兆以太网设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/eth/gbit/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"RS232设计",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\04.RS232设计.md",wordsCount:127,readingTime:"1",title:"RS232设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/rs232/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"RS485设计",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\05.RS485设计.md",wordsCount:111,readingTime:"1",title:"RS485设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/rs485/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"CAN设计",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\06.CAN设计.md",wordsCount:99,readingTime:"1",title:"CAN设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/can/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"USB转串口",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\07.USB转串口.md",wordsCount:64,readingTime:"1",title:"USB转串口",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usb2serialport/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"SD卡",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\08.SD卡.md",wordsCount:68,readingTime:"1",title:"SD卡",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/sd/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"蜂鸣器",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\09.蜂鸣器.md",wordsCount:117,readingTime:"1",title:"蜂鸣器",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/beep/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"红外",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\10.红外.md",wordsCount:110,readingTime:"1",title:"红外",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/infrared/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"数字温度湿度传感器",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\11.数字温度湿度传感器.md",wordsCount:39,readingTime:"1",title:"数字温度湿度传感器",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/temp/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"风扇",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\12.风扇.md",wordsCount:68,readingTime:"1",title:"风扇",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/fan/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"HDMI",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\13.HDMI.md",wordsCount:115,readingTime:"1",title:"HDMI",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/hdmi/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"DVI",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\14.DVI.md",wordsCount:85,readingTime:"1",title:"DVI",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/dvi/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"VGA",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\15.VGA.md",wordsCount:121,readingTime:"1",title:"VGA",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/vga/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"DP",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\16.DP.md",wordsCount:85,readingTime:"1",title:"DP",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/dp/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"LVDS",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\17.LVDS.md",wordsCount:109,readingTime:"1",title:"LVDS",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/lvds/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"LCD",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\18.LCD.md",wordsCount:91,readingTime:"1",title:"LCD",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/lcd/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"时钟",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\19.时钟.md",wordsCount:140,readingTime:"1",title:"时钟",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/clk/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"复位",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\20.复位.md",wordsCount:146,readingTime:"1",title:"复位",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/reset/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"EEPROM",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\21.EEPROM.md",wordsCount:121,readingTime:"1",title:"EEPROM",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/eeprom/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"SPI Flash",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\22.SPI Flash.md",wordsCount:110,readingTime:"1",title:"SPI Flash",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/spi/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"DDR3",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\23.DDR3.md",wordsCount:187,readingTime:"1.1m",title:"DDR3",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/ddr3/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"DDR4",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\24.DDR4.md",wordsCount:247,readingTime:"1.5m",title:"DDR4",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/ddr4/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"SODIMM",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\25.SODIMM.md",wordsCount:133,readingTime:"1",title:"SODIMM",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/sodimm/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"QDR",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\26.QDR.md",wordsCount:247,readingTime:"1.5m",title:"QDR",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/qdr/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"EMMC",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\27.EMMC.md",wordsCount:157,readingTime:"1",title:"EMMC",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/emmc/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"NAND FLASH",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\28.NAND FLASH.md",wordsCount:98,readingTime:"1",title:"NAND FLASH",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/nand/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"NOR FLASH",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\29.NOR FLASH.md",wordsCount:86,readingTime:"1",title:"NOR FLASH",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/nor/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"SDRAM",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\30.SDRAM.md",wordsCount:67,readingTime:"1",title:"SDRAM",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/sdram/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"JTAG",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\31.JTAG.md",wordsCount:73,readingTime:"1",title:"JTAG",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/jtag/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"SWD",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\32.SWD.md",wordsCount:49,readingTime:"1",title:"SWD",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/swd/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"PS2",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\33.PS2.md",wordsCount:61,readingTime:"1",title:"PS2",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/ps2/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"USB",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\34.USB.md",wordsCount:67,readingTime:"1",title:"USB",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usb/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"USB PHY",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\35.USB PHY.md",wordsCount:62,readingTime:"1",title:"USB PHY",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usbphy/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"USB HUB",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\36.USB HUB.md",wordsCount:38,readingTime:"1",title:"USB HUB",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usbhub/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"USB HOST",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\37.USB HOST.md",wordsCount:26,readingTime:"1",title:"USB HOST",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usbhost/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"USB30",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\38.USB30.md",wordsCount:62,readingTime:"1",title:"USB3.0",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/usb30/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"PCIE转USB",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\39.PCIE转USB.md",wordsCount:278,readingTime:"1.7m",title:"PCIE转USB",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/use/pcie2usb/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"TypeC",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\40.TypeC.md",wordsCount:325,readingTime:"2m",title:"TypeC",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/typec/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"音频",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\41.音频.md",wordsCount:428,readingTime:"2.6m",title:"音频",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/audio/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"LED",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\42.LED.md",wordsCount:199,readingTime:"1.2m",title:"LED",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/led/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"SATA",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\43.SATA.md",wordsCount:199,readingTime:"1.2m",title:"SATA",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/sata/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"mSATA",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\44.mSATA.md",wordsCount:301,readingTime:"1.8m",title:"mSATA",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/msata/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"M2",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\45.M2.md",wordsCount:399,readingTime:"2.4m",title:"M.2 SSD",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/m2/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"PCIe转SATA",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\46.PCIe转SATA.md",wordsCount:158,readingTime:"1",title:"PCIe转SATA",date:"2023-07-05T21:00:00.000Z",permalink:"/hardware/use/pcie2sata/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"PCIe",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\47.PCIe.md",wordsCount:329,readingTime:"2m",title:"PCIe",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/pcie/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"PCIe转串口并口",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\48.PCIe转串口并口.md",wordsCount:216,readingTime:"1.3m",title:"PCIe转串口并口",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/pcie2serial/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"PCIe转网口",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\49.PCIe转网口.md",wordsCount:346,readingTime:"2.1m",title:"PCIe转网口",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/pcie2eth/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"RGMII",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\50.RGMII.md",wordsCount:217,readingTime:"1.3m",title:"RGMII",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/rgmii/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"M2-5G-SIM卡",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\51.M2-5G-SIM卡.md",wordsCount:280,readingTime:"1.7m",title:"M2-5G-SIM卡",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/sim/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"M2-WIFI-蓝牙",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\52.M2-WIFI-蓝牙.md",wordsCount:130,readingTime:"1",title:"M2-WIFI-蓝牙",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/m2wifi/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"WIFI-蓝牙",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\53.WIFI-蓝牙.md",wordsCount:261,readingTime:"1.6m",title:"WIFI-蓝牙",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/wifi/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"摄像头DVP",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\54.摄像头DVP.md",wordsCount:202,readingTime:"1.2m",title:"摄像头DVP",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/dvp/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"MIPI",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\55.MIPI.md",wordsCount:211,readingTime:"1.2m",title:"MIPI",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/mipi/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"FMC",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\56.FMC.md",wordsCount:235,readingTime:"1.4m",title:"FMC",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/fmc/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"VPX",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\03.原理模块设计\\57.VPX.md",wordsCount:343,readingTime:"2.1m",title:"VPX",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/vpx/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"电源设计方法",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\04.原理电源设计\\01.电源设计方法.md",wordsCount:174,readingTime:"1m",title:"电源设计方法",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"ATX",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\04.原理电源设计\\02.ATX.md",wordsCount:182,readingTime:"1.1m",title:"ATX",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/atx/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"12V电源适配器",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\04.原理电源设计\\03.12V电源适配器.md",wordsCount:91,readingTime:"1",title:"12V电源适配器",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/12v/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"TPS62130",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\04.原理电源设计\\04.TPS62130.md",wordsCount:296,readingTime:"1.8m",title:"TPS62130",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/tps62130/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"TPS54620",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\04.原理电源设计\\05.TPS54620.md",wordsCount:260,readingTime:"1.6m",title:"TPS54620",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/tps54620/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"TPS51200",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\04.原理电源设计\\06.TPS51200.md",wordsCount:188,readingTime:"1.1m",title:"TPS51200",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/tps51200/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"IS6608A",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\04.原理电源设计\\07.IS6608A.md",wordsCount:398,readingTime:"2.4m",title:"IS6608A",date:"2023-07-07T21:00:00.000Z",permalink:"/hardware/use/power/is6608a/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"Allegro Device文件详解",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\07.Cadence\\01.Allegro Device文件详解.md",wordsCount:"1.9k",readingTime:"7.3m",title:"Allegro Device文件详解",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/cadence/device/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"Allegro小知识",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\07.Cadence\\02.Allegro小知识.md",wordsCount:187,readingTime:"1",title:"Allegro小知识",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/cadence/allegro/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"OrCAD小知识",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\07.Cadence\\03.OrCAD小知识.md",wordsCount:118,readingTime:"1",title:"OrCAD小知识",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/cadence/orcad/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"刚挠设计",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\08.Altium Designer\\01.刚挠设计.md",wordsCount:400,readingTime:"1.7m",title:"刚挠设计",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/ad/rou/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"AD小知识",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\08.Altium Designer\\02.AD小知识.md",wordsCount:114,readingTime:"1",title:"AD小知识",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/ad/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"快捷键",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\09.Mentor\\01.快捷键.md",wordsCount:324,readingTime:"1.8m",title:"快捷键",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/mentor/shortkey/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"Mentor小知识",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\09.Mentor\\02.Mentor小知识.md",wordsCount:86,readingTime:"1",title:"Mentor小知识",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/mentor/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"Pads无模命令",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\10.Pads\\01.Pads无模命令.md",wordsCount:"1.2k",readingTime:"4.4m",title:"Pads无模命令",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/pads/command/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"点亮LED",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\11.C51汇编\\01.点亮LED.md",wordsCount:183,readingTime:"1",title:"点亮LED",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/led/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"多LED亮灭",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\11.C51汇编\\02.多LED亮灭.md",wordsCount:126,readingTime:"1",title:"多灯亮灭",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/led/multi",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"开关控制灯亮灭",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\11.C51汇编\\03.开关控制灯亮灭.md",wordsCount:146,readingTime:"1",title:"多开关控制灯亮灭",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/switch/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"多开关控制灯亮灭",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\11.C51汇编\\04.多开关控制灯亮灭.md",wordsCount:84,readingTime:"1",title:"开关控制灯亮灭",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/switch/multi/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"多开关控制灯亮灭-软件防抖",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\11.C51汇编\\05.多开关控制灯亮灭-软件防抖.md",wordsCount:149,readingTime:"1",title:"开关控制灯亮灭-软件防抖",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/switch/antishake/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"查表方式灯循环亮灭",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\11.C51汇编\\06.查表方式灯循环亮灭.md",wordsCount:521,readingTime:"2.2m",title:"查表方式灯循环亮灭",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/led/table/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"查表方式按键控制灯亮灭",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\11.C51汇编\\07.查表方式按键控制灯亮灭.md",wordsCount:260,readingTime:"1.3m",title:"查表方式按键控制灯亮灭",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/switch/table/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"查表方式霓虹灯",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\11.C51汇编\\08.查表方式霓虹灯.md",wordsCount:147,readingTime:"1",title:"查表方式霓虹灯",date:"2023-06-29T21:00:00.000Z",permalink:"/hardware/c51/led/neonlamp/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"介绍",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\12.STM32\\01.介绍.md",wordsCount:368,readingTime:"1.6m",title:"介绍",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/info/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"STM32F407芯片内部",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\12.STM32\\02.STM32F407芯片内部.md",wordsCount:473,readingTime:"1.8m",title:"STM32F407芯片内部",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/inner/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"环境安装与下载方式",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\12.STM32\\03.环境安装与下载方式.md",wordsCount:373,readingTime:"1.5m",title:"环境安装与下载方式",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/path/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"新建工程",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\12.STM32\\04.新建工程.md",wordsCount:"1.1k",readingTime:"4.5m",title:"新建工程",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/new/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"GPIO工作原理",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\12.STM32\\05.GPIO工作原理.md",wordsCount:303,readingTime:"1.5m",title:"GPIO工作原理",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/gpio/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"跑马灯-寄存器",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\12.STM32\\06.跑马灯-寄存器.md",wordsCount:201,readingTime:"1.1m",title:"跑马灯-寄存器",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/led/bit/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"跑马灯-库函数",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\12.STM32\\07.跑马灯-库函数.md",wordsCount:813,readingTime:"3.6m",title:"跑马灯-寄存器",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/led/fun/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"蜂鸣器",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\12.STM32\\08.蜂鸣器.md",wordsCount:156,readingTime:"1",title:"蜂鸣器",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/beep/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"按键",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\12.STM32\\09.按键.md",wordsCount:155,readingTime:"1",title:"按键",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/stm32/key/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"Vivado与Matlab版本匹配",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\13.Vivado\\01.Vivado与Matlab版本匹配.md",wordsCount:142,readingTime:"1",title:"Vivado与Matlab版本匹配",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/vivado/ver/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"Vivado安装",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\13.Vivado\\02.Vivado安装.md",wordsCount:81,readingTime:"1",title:"Vivado安装",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/vivado/install/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"Vivado生成Pin Delay",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\13.Vivado\\03.Vivado生成Pin Delay.md",wordsCount:64,readingTime:"1",title:"Vivado安装",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/vivado/pindelay/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"Vivado创建工程",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\13.Vivado\\04.Vivado创建工程.md",wordsCount:250,readingTime:"1.2m",title:"Vivado创建工程",date:"2023-08-03T21:00:00.000Z",permalink:"/hardware/vivado/project/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"滤波电路及原理",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\14.常见电路\\01.滤波电路及原理.md",wordsCount:"1k",readingTime:"3.9m",title:"滤波电路及原理",date:"2024-03-07T21:00:00.000Z",permalink:"/hardware/dl/filter/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"STM32的GPIO介绍",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\14.常见电路\\02.STM32的GPIO介绍.md",wordsCount:"2k",readingTime:"7.4m",title:"STM32的GPIO介绍",date:"2024-03-07T21:00:00.000Z",permalink:"/hardware/dl/gpio/info/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"GPIO的推挽输出和开漏输出",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\03.硬件知识\\14.常见电路\\03.GPIO的推挽输出和开漏输出.md",wordsCount:744,readingTime:"2.7m",title:"GPIO的推挽输出和开漏输出",date:"2024-03-07T21:00:00.000Z",permalink:"/hardware/dl/gpio/output/",private:!0,categories:["硬件知识"],tags:["硬件知识"]},{name:"VuePress安装配置",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\04.前端构建\\07.VuePress\\01.VuePress安装配置.md",wordsCount:135,readingTime:"1",title:"VuePress安装配置",date:"2023-06-17T21:00:00.000Z",permalink:"/front/vuepress/install/",private:!0,categories:["前端构建"],tags:["前端构建","VuePress"]},{name:"VuePress-reco主题安装配置",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\04.前端构建\\07.VuePress\\02.VuePress-reco主题安装配置.md",wordsCount:"1.5k",readingTime:"6.5m",title:"VuePress-reco主题安装配置",date:"2023-06-17T21:00:00.000Z",permalink:"/front/vuepress/reco/",private:!0,categories:["前端构建"],tags:["前端构建","VuePress"]},{name:"插件的使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\04.前端构建\\07.VuePress\\05.插件的使用.md",wordsCount:372,readingTime:"1.9m",title:"插件的使用",date:"2023-06-17T21:00:00.000Z",permalink:"/front/vuepress/plugin/",private:!0,categories:["前端构建"],tags:["前端构建","VuePress"]},{name:"部署",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\04.前端构建\\07.VuePress\\06.部署.md",wordsCount:169,readingTime:"1",title:"部署",date:"2023-06-17T21:00:00.000Z",permalink:"/front/vuepress/deploy/",private:!0,categories:["前端构建"],tags:["前端构建","VuePress"]},{name:"多模块项目",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\01.Springboot使用\\01.多模块项目.md",wordsCount:444,readingTime:"2.5m",title:"多模块项目",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/multi",private:!0,categories:["软件开发"],tags:["软件开发"]},{name:"banner使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\01.Springboot使用\\02.banner使用.md",wordsCount:71,readingTime:"1",title:"banner使用",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/banner",private:!0,categories:["软件开发"],tags:["软件开发"]},{name:"log使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\01.Springboot使用\\03.log使用.md",wordsCount:"1.8k",readingTime:"8m",title:"log使用",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/log",private:!0,categories:["软件开发"],tags:["软件开发"]},{name:"springdoc",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\01.Springboot使用\\04.springdoc.md",wordsCount:272,readingTime:"1.4m",title:"springdoc",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/springdoc",private:!0,categories:["软件开发"],tags:["软件开发"]},{name:"全局异常",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\01.Springboot使用\\05.全局异常.md",wordsCount:827,readingTime:"4.2m",title:"全局异常",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/exception",private:!0,categories:["软件开发"],tags:["软件开发"]},{name:"统一返回结果",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\01.Springboot使用\\06.统一返回结果.md",wordsCount:"1.1k",readingTime:"5.1m",title:"统一返回结果",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/result",private:!0,categories:["软件开发"],tags:["软件开发"]},{name:"mysql-druid-mybatisplus",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\01.Springboot使用\\07.mysql-druid-mybatisplus.md",wordsCount:"1.9k",readingTime:"9.9m",title:"mysql-druid-mybatisplus",date:"2024-03-14T22:05:00.000Z",permalink:"/soft/springboot/use/mysql",private:!0,categories:["软件开发"],tags:["软件开发"]},{name:"mybatis-plus多表关联查询",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\01.Springboot使用\\08.mybatis-plus多表关联查询.md",wordsCount:273,readingTime:"1.5m",title:"mybatis-plus多表关联查询",date:"2024-03-15T22:05:00.000Z",permalink:"/soft/springboot/use/join",private:!0,categories:["软件开发"],tags:["软件开发"]},{name:"分页查询",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\01.Springboot使用\\09.分页查询.md",wordsCount:"4.6k",readingTime:"25.6m",title:"分页查询",date:"2024-03-15T22:05:00.000Z",permalink:"/soft/springboot/use/page",private:!0,categories:["软件开发"],tags:["软件开发"]},{name:"表CRUD",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\01.Springboot使用\\10.表CRUD.md",wordsCount:424,readingTime:"2.5m",title:"表CRUD",date:"2024-03-22T22:05:00.000Z",permalink:"/soft/springboot/use/crud",private:!0,categories:["软件开发"],tags:["软件开发"]},{name:"WebApi增删改查01-说明",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\01.WebApi增删改查01-说明.md",wordsCount:276,readingTime:"1.3m",title:"WebApi增删改查01-说明",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/info/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WebApi增删改查02-新建工程",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\02.WebApi增删改查02-新建工程.md",wordsCount:210,readingTime:"1m",title:"WebApi增删改查02-新建工程",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/newproject/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WebApi增删改查03-Swagger配置",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\03.WebApi增删改查03-Swagger配置.md",wordsCount:613,readingTime:"3.1m",title:"WebApi增删改查03-Swagger配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/swagger/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WebApi增删改查04-SqlSugar配置",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\04.WebApi增删改查04-SqlSugar配置.md",wordsCount:549,readingTime:"2.3m",title:"WebApi增删改查04-SqlSugar配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/sqlsugar/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WebApi增删改查05-Log4Net配置",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\05.WebApi增删改查05-Log4Net配置.md",wordsCount:"2.4k",readingTime:"11.2m",title:"WebApi增删改查05-Log4Net配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/log4net/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WebApi增删改查06-AutoMapper配置",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\06.WebApi增删改查06-AutoMapper配置.md",wordsCount:434,readingTime:"1.6m",title:"WebApi增删改查06-AutoMapper配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/automapper/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WebApi增删改查07-用户增删改查",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\07.WebApi增删改查07-用户增删改查.md",wordsCount:"2.2k",readingTime:"12m",title:"WebApi增删改查07-用户增删改查",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/user/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WebApi增删改查08-JWT配置实现",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\08.WebApi增删改查08-JWT配置实现.md",wordsCount:489,readingTime:"2.4m",title:"WebApi增删改查08-JWT配置实现",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/jwt/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WebApi增删改查09-登录",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\09.WebApi增删改查09-登录.md",wordsCount:226,readingTime:"1.1m",title:"WebApi增删改查09-登录",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/login/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WebApi增删改查10-Redis配置",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\10.WebApi增删改查10-Redis配置.md",wordsCount:560,readingTime:"2.9m",title:"WebApi增删改查10-Redis配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/redis/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WebApi增删改查11-跨域CORS解决",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\11.WebApi增删改查11-跨域CORS解决.md",wordsCount:461,readingTime:"1.9m",title:"WebApi增删改查11-跨域CORS解决",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/cors/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WebApi增删改查12-Docker发布",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\01.WebAPI增删改查\\12.WebApi增删改查12-Docker发布.md",wordsCount:504,readingTime:"2.5m",title:"WebApi增删改查12-Docker发布",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/webapi/docker/",private:!0,categories:["软件开发"],tags:["软件开发","WebApi"]},{name:"WPF项增删改查01-说明",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\02.WPF增删改查\\01.WPF项增删改查01-说明.md",wordsCount:237,readingTime:"1.1m",title:"WPF项增删改查01-说明",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/info/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"WPF项增删改查02-新建工程",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\02.WPF增删改查\\02.WPF项增删改查02-新建工程.md",wordsCount:112,readingTime:"1",title:"WPF项增删改查02-新建工程",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/newproject/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"WPF项增删改查03-Caliburn配置",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\02.WPF增删改查\\03.WPF项增删改查03-Caliburn配置.md",wordsCount:340,readingTime:"1.7m",title:"WPF项增删改查03-Caliburn配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/caliburn/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"WPF项增删改查04-HandyControl配置",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\02.WPF增删改查\\04.WPF项增删改查04-HandyControl配置.md",wordsCount:121,readingTime:"1",title:"WPF项增删改查04-HandyControl配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/handycontrol/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"WPF增删改查05-页面切换",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\02.WPF增删改查\\05.WPF增删改查05-页面切换.md",wordsCount:887,readingTime:"5.4m",title:"WPF增删改查05-页面切换",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/pages/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"WPF增删改查06-RestSharp",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\02.WPF增删改查\\06.WPF增删改查06-RestSharp.md",wordsCount:328,readingTime:"1.8m",title:"WPF增删改查06-RestHttp配置",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/restsharp/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"WPF增删改查07-用户增删改查",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\02.WPF增删改查\\07.WPF增删改查07-用户增删改查.md",wordsCount:"1.1k",readingTime:"6.4m",title:"WPF增删改查07-用户增删改查",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/user/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"WPF增删改查08-登录实现",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\02.WPF增删改查\\08.WPF增删改查08-登录实现.md",wordsCount:411,readingTime:"2.3m",title:"WPF增删改查08-登录实现",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/login/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"WPF增删改查09-美化",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\02.WPF增删改查\\09.WPF增删改查09-美化.md",wordsCount:"1.3k",readingTime:"8.1m",title:"WPF增删改查09-美化",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/beautify/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"WPF增删改查10-发布",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\02.WPF增删改查\\10.WPF增删改查10-发布.md",wordsCount:63,readingTime:"1",title:"WPF增删改查10-发布",date:"2023-10-17T21:00:00.000Z",permalink:"/soft/wpf/publish/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"引用MaterialDesign主题",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\03.MaterialDesign\\01.引用MaterialDesign主题.md",wordsCount:165,readingTime:"1",title:"引用MaterialDesign主题",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/theme/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"窗口切换",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\03.MaterialDesign\\02.窗口切换.md",wordsCount:100,readingTime:"1",title:"窗口切换",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/window/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"动画显示",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\03.MaterialDesign\\03.动画显示.md",wordsCount:80,readingTime:"1",title:"动画显示",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/animation/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"Password绑定",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\03.MaterialDesign\\04.Password绑定.md",wordsCount:254,readingTime:"1.5m",title:"Password绑定",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/password/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"Command绑定",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\03.MaterialDesign\\05.Command绑定.md",wordsCount:120,readingTime:"1",title:"Command绑定",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/command/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"属性变化通知",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\05.WPF\\03.MaterialDesign\\06.属性变化通知.md",wordsCount:97,readingTime:"1",title:"属性变化通知",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/wpf/material/property/",private:!0,categories:["软件开发"],tags:["软件开发","WPF"]},{name:"Python笔记",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\07.Python\\01.笔记\\01.Python笔记.md",wordsCount:299,readingTime:"1.5m",title:"Python笔记",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/python/note/",private:!0,categories:["软件开发"],tags:["软件开发","Python"]},{name:"Python-Excel笔记",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\07.Python\\01.笔记\\02.Python-Excel笔记.md",wordsCount:"1.6k",readingTime:"7.3m",title:"Python-Excel笔记",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/python/note/excel/",private:!0,categories:["软件开发"],tags:["软件开发","Python"]},{name:"Python-Word笔记",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\07.Python\\01.笔记\\04.Python-Word笔记.md",wordsCount:"1.2k",readingTime:"5.2m",title:"Python-Word笔记",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/python/note/word/",private:!0,categories:["软件开发"],tags:["软件开发","Python"]},{name:"处理Excel的类库",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\07.Python\\03.办公自动化\\01.处理Excel的类库.md",wordsCount:108,readingTime:"1",title:"处理Excel的类库",date:"2023-09-02T21:00:00.000Z",permalink:"/soft/python/autowork/lib",private:!0,categories:["软件开发"],tags:["软件开发","Python"]},{name:"批量处理Excel文件",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\07.Python\\03.办公自动化\\02.批量处理Excel文件.md",wordsCount:697,readingTime:"3.7m",title:"批量新建Excel文件",date:"2023-09-02T21:00:00.000Z",permalink:"/soft/python/autowork/batnew",private:!0,categories:["软件开发"],tags:["软件开发","Python"]},{name:"批量打开目录下所有Excel",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\07.Python\\03.办公自动化\\03.批量打开目录下所有Excel.md",wordsCount:93,readingTime:"1",title:"批量打开目录下所有Excel",date:"2023-09-02T21:00:00.000Z",permalink:"/soft/python/autowork/batopen",private:!0,categories:["软件开发"],tags:["软件开发","Python"]},{name:"pip使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\07.Python\\10.pip使用.md",wordsCount:403,readingTime:"1.7m",title:"pip使用",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/python/pip/",private:!0,categories:["软件开发"],tags:["软件开发","Python"]},{name:"PyQt安装",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\07.Python\\99.PyQt安装.md",wordsCount:73,readingTime:"1",title:"PyQt安装",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/python/pyqt/install/",private:!0,categories:["软件开发"],tags:["软件开发","Python"]},{name:"Qt笔记",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\09.Qt\\01.Qt笔记.md",wordsCount:197,readingTime:"1m",title:"Qt笔记",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/note/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"]},{name:"类型互换",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\09.Qt\\02.类型互换.md",wordsCount:188,readingTime:"1m",title:"类型互换",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/convert/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"]},{name:"字符串",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\09.Qt\\03.字符串.md",wordsCount:485,readingTime:"2m",title:"字符串",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/string/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"]},{name:"窗口设置",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\09.Qt\\04.窗口设置.md",wordsCount:235,readingTime:"1",title:"窗口设置",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/window/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"]},{name:"编译XLSX模块",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\09.Qt\\05.编译XLSX模块.md",wordsCount:164,readingTime:"1",title:"编译XLSX模块",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/xlsx/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"]},{name:"添加应用程序图标和版本信息",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\09.Qt\\06.添加应用程序图标和版本信息.md",wordsCount:125,readingTime:"1",title:"添加应用程序图标和版本信息",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/version/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"]},{name:"QSS 自定义QMessageBox",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\09.Qt\\07.QSS 自定义QMessageBox.md",wordsCount:263,readingTime:"1.3m",title:"QSS 自定义QMessageBox",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/messagebox/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"]},{name:"MySQL使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\09.Qt\\08.MySQL使用.md",wordsCount:214,readingTime:"1.1m",title:"QSS 自定义QMessageBox",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/mysql/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"]},{name:"TreeWidget去除虚线",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\09.Qt\\09.TreeWidget去除虚线.md",wordsCount:89,readingTime:"1",title:"MySQL使用",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/tree/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"]},{name:"Clion配置QT",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\09.Qt\\10.Clion配置QT.md",wordsCount:54,readingTime:"1",title:"TreeWidget去除虚线",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/clion/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"]},{name:"QT Creator配置One Dark主题",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\09.Qt\\11.QT Creator配置One Dark主题.md",wordsCount:"1.1k",readingTime:"6.4m",title:"TreeWidget去除虚线",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/qt/theme/",private:!0,categories:["软件开发"],tags:["软件开发","Qt"]},{name:"HelloWord",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\01.HelloWord.md",wordsCount:53,readingTime:"1",title:"HelloWord",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/hello/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"第一个Windows窗口程序",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\02.第一个Windows窗口程序.md",wordsCount:669,readingTime:"2.7m",title:"第一个Windows窗口程序",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/first/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"消息",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\03.消息.md",wordsCount:"1.4k",readingTime:"6m",title:"消息",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/message/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"键盘消息",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\04.键盘消息.md",wordsCount:455,readingTime:"2.2m",title:"键盘消息",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/key/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"鼠标消息",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\05.鼠标消息.md",wordsCount:734,readingTime:"3.5m",title:"鼠标消息",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/mouse/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"定时器消息",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\06.定时器消息.md",wordsCount:454,readingTime:"2.1m",title:"定时器消息",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/clock/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"菜单资源",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\07.菜单资源.md",wordsCount:620,readingTime:"2.9m",title:"菜单资源",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/menu/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"图标资源",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\08.图标资源.md",wordsCount:286,readingTime:"1.4m",title:"08-图标资源",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/icon/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"光标资源",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\09.光标资源.md",wordsCount:142,readingTime:"1",title:"09-光标资源",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/cursor/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"字符串加速键资源",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\10.字符串加速键资源.md",wordsCount:203,readingTime:"1",title:"10-字符串加速键资源",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/string/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"绘图编程",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\11.绘图编程.md",wordsCount:585,readingTime:"2.8m",title:"绘图编程",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/graphic/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"GDI绘图对象",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\12.GDI绘图对象.md",wordsCount:764,readingTime:"3.5m",title:"GDI绘图对象",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/gdi/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"位图",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\13.位图.md",wordsCount:401,readingTime:"1.7m",title:"13-位图",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/bitmap/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"文本绘制",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\14.文本绘制.md",wordsCount:599,readingTime:"3m",title:"文本绘制",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/text/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"对话框",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\15.对话框.md",wordsCount:314,readingTime:"1.1m",title:"15-对话框",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/dialog/",private:!0,categories:["软件开发"],tags:["软件开发","win32"],publish:!0},{name:"静态库",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\16.静态库.md",wordsCount:445,readingTime:"2.2m",title:"16-静态库",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/staticlib/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"动态库",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\17.动态库.md",wordsCount:967,readingTime:"4.4m",title:"17-动态库",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/dynamiclib/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"线程",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\18.线程.md",wordsCount:546,readingTime:"2.3m",title:"线程",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/thread/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"线程同步",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\11.Win32\\19.线程同步.md",wordsCount:950,readingTime:"4.4m",title:"线程同步",date:"2023-06-28T21:00:00.000Z",permalink:"/soft/win32/threadsync/",private:!0,categories:["软件开发"],tags:["软件开发","win32"]},{name:"VBScript调用DLL",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\13.COM\\01.VBScript调用DLL.md",wordsCount:418,readingTime:"2m",title:"VBScript调用DLL",date:"2023-06-19T23:00:00.000Z",permalink:"/project/cplusplus/com/",private:!0,categories:["C++"],tags:["C++","COM"]},{name:"常用函数",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\15.Allegro Skill\\00.常用函数.md",wordsCount:35,readingTime:"1",title:"待办记录",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/skill/function/",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Allegro"]},{name:"待办记录",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\15.Allegro Skill\\01.待办记录.md",wordsCount:81,readingTime:"1",title:"待办记录",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/skill/todo/",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Allegro"]},{name:"改变过孔网络",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\15.Allegro Skill\\03.改变过孔网络.md",wordsCount:94,readingTime:"1",title:"改变过孔网络",date:"2023-06-28T22:05:00.000Z",permalink:"/soft/skill/changevianet/",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Allegro"]},{name:"阵列对象",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\15.Allegro Skill\\04.阵列对象.md",wordsCount:"2.6k",readingTime:"15.7m",title:"阵列对象",date:"2023-06-28T22:05:00.000Z",permalink:"/project/skill/arrayobject/",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Allegro"]},{name:"Shape批量赋网络",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\15.Allegro Skill\\05.Shape批量赋网络.md",wordsCount:688,readingTime:"3.9m",title:"Shape批量赋网络",date:"2023-06-28T22:05:00.000Z",permalink:"/soft/skill/shapeassignnet/",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Allegro"]},{name:"脚本使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\17.Mentor VBS\\01.脚本使用.md",wordsCount:93,readingTime:"1",title:"脚本使用",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/use",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"]},{name:"获取license",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\17.Mentor VBS\\02.获取license.md",wordsCount:355,readingTime:"1.9m",title:"获取license",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/license",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"]},{name:"调用Command",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\17.Mentor VBS\\03.调用Command.md",wordsCount:433,readingTime:"2.2m",title:"调用Command",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/command",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"]},{name:"定义新Command",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\17.Mentor VBS\\04.定义新Command.md",wordsCount:610,readingTime:"3.6m",title:"定义新Command",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/newcommand",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"]},{name:"编辑图形",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\17.Mentor VBS\\05.编辑图形.md",wordsCount:709,readingTime:"4.3m",title:"编辑图形",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/graphics",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"]},{name:"对象集合",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\17.Mentor VBS\\06.对象集合.md",wordsCount:259,readingTime:"1.5m",title:"对象集合",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/object",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"]},{name:"修改器件",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\17.Mentor VBS\\07.修改器件.md",wordsCount:"1.4k",readingTime:"8.6m",title:"修改器件",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/component",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"]},{name:"点",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\17.Mentor VBS\\08.点.md",wordsCount:570,readingTime:"3.2m",title:"点",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/point",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"]},{name:"Contour",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\17.Mentor VBS\\09.Contour.md",wordsCount:304,readingTime:"1.8m",title:"Contour",date:"2023-06-18T22:05:00.000Z",permalink:"/soft/mentor/contour",private:!0,username:"vdoing",password:"123vdoing456",expire:"8h",categories:["二次开发"],tags:["二次开发","Mentor"]},{name:"ObjectArx版本01",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\19.ObjectArx二次开发\\01.ObjectArx版本01.md",wordsCount:54,readingTime:"1",title:"ObjectArx版本01",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/version",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"]},{name:"ObjectArx软件配置02",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\19.ObjectArx二次开发\\02.ObjectArx软件配置02.md",wordsCount:160,readingTime:"1",title:"ObjectArx软件配置02",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/config",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"]},{name:"ObjectArx体验03",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\19.ObjectArx二次开发\\03.ObjectArx体验03.md",wordsCount:422,readingTime:"1.7m",title:"ObjectArx体验03",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/hello",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"]},{name:"ObjectArx术语04",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\19.ObjectArx二次开发\\04.ObjectArx术语04.md",wordsCount:106,readingTime:"1",title:"ObjectArx术语04",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/term",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"]},{name:"ObjectArx数据库操作05",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\19.ObjectArx二次开发\\05.ObjectArx数据库操作05.md",wordsCount:301,readingTime:"1.6m",title:"ObjectArx数据库操作05",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/database",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"]},{name:"ObjectArx创建线段06",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\19.ObjectArx二次开发\\06.ObjectArx创建线段06.md",wordsCount:215,readingTime:"1.1m",title:"ObjectArx创建线段06",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/entity/line",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"]},{name:"ObjectArx修改线段样式07",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\19.ObjectArx二次开发\\07.ObjectArx修改线段样式07.md",wordsCount:385,readingTime:"1.9m",title:"ObjectArx修改线段样式07",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/entity/line/modify",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"]},{name:"ObjectArx创建圆08",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\19.ObjectArx二次开发\\08.ObjectArx创建圆08.md",wordsCount:"1.1k",readingTime:"6.2m",title:"ObjectArx创建圆",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/entity/circle",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"]},{name:"ObjectArx创建弧09",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\19.ObjectArx二次开发\\09.ObjectArx创建弧09.md",wordsCount:604,readingTime:"3.3m",title:"ObjectArx创建弧09",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/entity/arc",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"]},{name:"ObjectArx应用20",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\19.ObjectArx二次开发\\20.ObjectArx应用20.md",wordsCount:186,readingTime:"1",title:"ObjectArx应用20",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/objectarx/apply",private:!0,categories:["二次开发"],tags:["二次开发","AutoCAD","ObjectArx"]},{name:"开发日志",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\06.软件开发\\21.开发日志\\01.开发日志.md",wordsCount:166,readingTime:"1",title:"开发日志",date:"2023-10-22T22:05:00.000Z",permalink:"/soft/record",private:!0,categories:["软件开发"],tags:["软件开发"]},{name:"安装配置Docker",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\01.Docker\\01.安装配置Docker.md",wordsCount:370,readingTime:"1.6m",title:"安装配置Docker",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/docker/install/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"]},{name:"Docker命令",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\01.Docker\\02.Docker命令.md",wordsCount:835,readingTime:"3.3m",title:"Docker命令",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/docker/command/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"]},{name:"Docker容器数据卷",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\01.Docker\\03.Docker容器数据卷.md",wordsCount:332,readingTime:"1.3m",title:"Docker容器数据卷",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/docker/data/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"]},{name:"Docker应用部署",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\01.Docker\\04.Docker应用部署.md",wordsCount:625,readingTime:"2.9m",title:"Docker应用部署",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/docker/deploy/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"]},{name:"Dockerfile使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\01.Docker\\05.Dockerfile使用.md",wordsCount:"1.4k",readingTime:"5.4m",title:"Dockerfile使用",date:"2023-06-24T21:00:00.000Z",permalink:"/operation/docker/dockerfile/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"]},{name:"Docker Compose 使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\01.Docker\\06.Docker Compose 使用.md",wordsCount:297,readingTime:"1.4m",title:"Docker Compose使用",date:"2023-06-24T21:00:00.000Z",permalink:"/operation/docker/dockercompose/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"]},{name:"Docker私有仓库",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\01.Docker\\07.Docker私有仓库.md",wordsCount:204,readingTime:"1",title:"Docker私有仓库",date:"2023-06-24T21:00:00.000Z",permalink:"/operation/docker/repo/",private:!0,categories:["运维管理"],tags:["运维管理","Docker"]},{name:"CentOS部署",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\01.CentOS部署.md",wordsCount:841,readingTime:"4.3m",title:"CentOS部署",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/deploy/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS最小化安装",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\02.CentOS最小化安装.md",wordsCount:680,readingTime:"2.7m",title:"CentOS最小化安装",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/install/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS更改源",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\03.CentOS更改源.md",wordsCount:534,readingTime:"2.4m",title:"CentOS更改源",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/repo/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS安装搜狗输入法",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\04.CentOS安装搜狗输入法.md",wordsCount:502,readingTime:"2.6m",title:"CentOS安装搜狗输入法",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/sougou/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS安装JDK8-Maven",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\05.CentOS安装JDK8-Maven.md",wordsCount:199,readingTime:"1.1m",title:"CentOS安装JDK8-Maven",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/jdk/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS安装Redis",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\06.CentOS安装Redis.md",wordsCount:630,readingTime:"2.9m",title:"CentOS安装Redis",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/redis/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS安装Nginx",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\07.CentOS安装Nginx.md",wordsCount:225,readingTime:"1.1m",title:"CentOS安装Nginx",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/nginx/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS安装Mysql",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\08.CentOS安装Mysql.md",wordsCount:339,readingTime:"1.7m",title:"CentOS安装Mysql",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/mysql/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS安装Minio",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\09.CentOS安装Minio.md",wordsCount:493,readingTime:"2.5m",title:"08-CentOS安装Minio",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/minio/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS安装kkFileView",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\10.CentOS安装kkFileView.md",wordsCount:322,readingTime:"1.7m",title:"CentOS安装kkFileView",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/kkfileview/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS防火墙管理",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\11.CentOS防火墙管理.md",wordsCount:350,readingTime:"1.7m",title:"CentOS防火墙管理",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/firewall/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS安装VMWareTools",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\12.CentOS安装VMWareTools.md",wordsCount:39,readingTime:"1",title:"CentOS安装VMWareTools",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/vmwaretools/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS安装主题",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\13.CentOS安装主题.md",wordsCount:99,readingTime:"1",title:"CentOS安装主题",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/theme/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS解压缩",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\14.CentOS解压缩.md",wordsCount:307,readingTime:"1.6m",title:"CentOS解压缩",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/tar/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS-安装NodeJS",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\15.CentOS-安装NodeJS.md",wordsCount:189,readingTime:"1",title:"CentOS安装NodeJS",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/nodejs/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS设置静态IP",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\16.CentOS设置静态IP.md",wordsCount:87,readingTime:"1",title:"CentOS设置静态IP",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/ip/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS frp内网穿透",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\17.CentOS frp内网穿透.md",wordsCount:558,readingTime:"2.8m",title:"CentOS frp内网穿透",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/frp/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS-安装Git",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\18.CentOS-安装Git.md",wordsCount:172,readingTime:"1",title:"CentOS安装Git",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/git/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS-安装Jenkins",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\19.CentOS-安装Jenkins.md",wordsCount:"1.9k",readingTime:"9m",title:"CentOS安装Jenkins",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/jenkins/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS-Docker使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\20.CentOS-Docker使用.md",wordsCount:"2.6k",readingTime:"14.6m",title:"CentOS-Docker使用",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/docker/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS-Syncthing使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\21.CentOS-Syncthing使用.md",wordsCount:357,readingTime:"1.6m",title:"CentOS-Syncthing使用",date:"2023-06-21T21:00:00.000Z",permalink:"/operation/centos/syncthing/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"CentOS-更新gcc",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\02.CentOS\\22.CentOS-更新gcc.md",wordsCount:207,readingTime:"1.1m",title:"CentOS-更新gcc",date:"2024-03-12T21:00:00.000Z",permalink:"/operation/centos/gcc/",private:!0,categories:["运维管理"],tags:["运维管理","CentOS"]},{name:"VMWare安装黑群晖",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\03.群晖NAS\\01.VMWare安装黑群晖.md",wordsCount:379,readingTime:"1.9m",title:"VMWare安装黑群晖",date:"2023-06-24T21:00:00.000Z",permalink:"/operation/nas/install/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"]},{name:"Docker安装MySQL",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\03.群晖NAS\\02.Docker安装MySQL.md",wordsCount:333,readingTime:"1.7m",title:"Docker安装MySQL",date:"2023-06-26T21:00:00.000Z",permalink:"/operation/nas/mysql/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"]},{name:"Docker安装Nginx",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\03.群晖NAS\\03.Docker安装Nginx.md",wordsCount:756,readingTime:"4.3m",title:"Docker安装Nginx",date:"2023-06-26T21:00:00.000Z",permalink:"/operation/nas/nginx/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"]},{name:"Docker安装Redis",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\03.群晖NAS\\04.Docker安装Redis.md",wordsCount:230,readingTime:"1.2m",title:"Docker安装Redis",date:"2023-06-26T21:00:00.000Z",permalink:"/operation/nas/redis/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"]},{name:"Docker安装Minio",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\03.群晖NAS\\05.Docker安装Minio.md",wordsCount:285,readingTime:"1.3m",title:"Docker安装Minio",date:"2023-06-26T21:00:00.000Z",permalink:"/operation/nas/minio/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"]},{name:"Docker安装KKFileView",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\03.群晖NAS\\06.Docker安装KKFileView.md",wordsCount:288,readingTime:"1.4m",title:"Docker安装KKFileView",date:"2023-06-26T21:00:00.000Z",permalink:"/operation/nas/kkfileview/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"]},{name:"Docker部署Springboot",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\03.群晖NAS\\07.Docker部署Springboot.md",wordsCount:309,readingTime:"1.7m",title:"Docker部署Springboot",date:"2023-06-28T21:00:00.000Z",permalink:"/operation/nas/springboot/",private:!0,categories:["运维管理"],tags:["运维管理","群晖"]},{name:"npm使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\04.NodeJS\\01.npm使用.md",wordsCount:"1.3k",readingTime:"6.1m",title:"npm使用",date:"2023-06-17T21:00:00.000Z",permalink:"/operation/npm/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"]},{name:"yarn安装使用",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\04.NodeJS\\02.yarn安装使用.md",wordsCount:639,readingTime:"2.7m",title:"yarn安装使用",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/yarn/install/",private:!0,titleTag:"原创",categories:["运维管理"],tags:["运维管理"]},{name:"NodeJS更改路径",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\04.NodeJS\\03.NodeJS更改路径.md",wordsCount:245,readingTime:"1m",title:"nodejs更改路径",date:"2023-06-17T21:00:00.000Z",permalink:"/operation/nodejs/changedir/",private:!0,titleTag:"原创",categories:["运维管理"],tags:["运维管理"]},{name:"常见错误",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\05.Git\\03.常见错误.md",wordsCount:144,readingTime:"1",title:"常见错误",date:"2023-07-03T21:00:00.000Z",permalink:"/operation/git/error/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"]},{name:"云服务器开启虚拟内存 SWAP",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\10.运维管理\\06.云服务器\\01.云服务器开启虚拟内存 SWAP.md",wordsCount:247,readingTime:"1.1m",title:"云服务器开启虚拟内存SWAP",date:"2023-09-10T21:00:00.000Z",permalink:"/cloud/swapon/",private:!0,titleTag:"原创",categories:["运维管理"],tags:["运维管理","云服务器"]},{name:"新建模板",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\100.模板\\01.新建模板.md",wordsCount:22,readingTime:"1",title:"新建文档",date:"2024-01-01T00:00:00.000Z",permalink:"/template/newnote",private:!0,titleTag:"原创",categories:null,tags:null},{name:"我的待办模板",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\100.模板\\02.我的待办模板.md",wordsCount:29,readingTime:"1",title:"我的待办",date:"2024-01-01T00:00:00.000Z",permalink:"/todo/",private:!0,titleTag:"原创",categories:["我的待办"],tags:["我的待办"]},{name:"Shell例子",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\12.Linux\\03.Shell\\01.Shell例子.md",wordsCount:"13.9k",readingTime:"1h1m",title:"Shell例子",date:"2023-06-24T21:00:00.000Z",permalink:"/linux/shell/example/",private:!0,categories:["Linux"],tags:["Linux"]},{name:"Excel常用公式",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\14.工具使用\\01.Excel\\01.Excel常用公式.md",wordsCount:186,readingTime:"1",title:"Excel常用公式",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/office/excel/formula/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用","Excel"]},{name:"Excel常用快捷键",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\14.工具使用\\01.Excel\\03.Excel常用快捷键.md",wordsCount:70,readingTime:"1",title:"Excel常用快捷键",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/office/excel/shortkey/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用","Excel"]},{name:"Typora过期解决",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\14.工具使用\\09.其它\\01.Typora过期解决.md",wordsCount:100,readingTime:"1",title:"Typora过期解决",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/other/typora/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"]},{name:"Windows Terminal美化",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\14.工具使用\\09.其它\\03.Windows Terminal美化.md",wordsCount:379,readingTime:"1.6m",title:"Windows Terminal美化",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/other/terminal/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"]},{name:"Windows小功能",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\14.工具使用\\09.其它\\05.Windows小功能.md",wordsCount:52,readingTime:"1",title:"Windows小功能",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/other/use/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"]},{name:"数学小知识",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\14.工具使用\\09.其它\\07.数学小知识.md",wordsCount:97,readingTime:"1",title:"数学小知识",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/other/math/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"]},{name:"小记",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\14.工具使用\\09.其它\\99.小记.md",wordsCount:137,readingTime:"1",title:"小记",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/other/note/",private:!0,titleTag:"原创",categories:["工具使用"],tags:["工具使用"]},{name:"cdn加速GitHub图床",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\14.工具使用\\21.cdn加速GitHub图床.md",wordsCount:139,readingTime:"1",title:"cdn加速GitHub图床",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/cdn/",private:!0,categories:["工具使用"],tags:["工具使用"]},{name:"Maven安装配置",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\14.工具使用\\22.Maven安装配置.md",wordsCount:112,readingTime:"1",title:"Maven安装配置",date:"2023-06-17T21:00:00.000Z",permalink:"/tool/maven/",private:!0,categories:["工具使用"],tags:["工具使用"]},{name:"实用收藏",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\78.收藏\\03.实用收藏.md",wordsCount:"2.9k",readingTime:"12.8m",title:"实用收藏",date:"2023-06-13T17:05:00.000Z",permalink:"/collect/web/",private:!0,categories:["收藏"],tags:["收藏"]},{name:"Obsidian教程",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\78.收藏\\04.Obsidian教程.md",wordsCount:"2.3k",readingTime:"9m",title:"Obsidian教程",date:"2024-01-23T22:24:21.000Z",permalink:"/pages/dc200c/",categories:["收藏"],tags:[null]},{name:"Markdown语法",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\78.收藏\\05.Markdown\\05.Markdown语法.md",wordsCount:"3.2k",readingTime:"14.3m",title:"Markdown语法",date:"2023-06-18T22:05:00.000Z",permalink:"/collect/markdown/syntax/",private:!0,categories:["收藏"],tags:["收藏"]},{name:"Markdown排版",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\78.收藏\\05.Markdown\\07.Markdown排版.md",wordsCount:"2.8k",readingTime:"11m",title:"Markdown排版",date:"2023-06-18T22:05:00.000Z",permalink:"/collect/markdown/settype/",private:!0,categories:["收藏"],tags:["收藏"]},{name:"全局私密文章测试",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\78.收藏\\90.私密文章测试\\01.全局私密文章测试.md",wordsCount:163,readingTime:"1",title:"全局私密文章测试",date:"2022-01-07T17:00:36.000Z",permalink:"/private/test1/",private:!0,titleTag:"测试",categories:["测试"],tags:[null]},{name:"单个私密文章测试",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\78.收藏\\90.私密文章测试\\03.单个私密文章测试.md",wordsCount:272,readingTime:"1.1m",title:"单个私密文章测试",date:"2022-01-07T17:01:37.000Z",permalink:"/private/test2/",titleTag:"测试",private:!0,username:"vdoing",password:123456,expire:"7h",loginInfo:[{username:"1",password:"1"},{username:"2",password:"2"}],categories:["测试"],tags:[null]},{name:"自我介绍",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\80.关于\\03.自我介绍.md",wordsCount:923,readingTime:"3.9m",title:"自我介绍",date:"2023-06-13T17:05:00.000Z",permalink:"/about/me/",private:!0,titleTag:"原创",categories:["关于"],tags:["关于"]},{name:"学习记录",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\80.关于\\07.学习记录.md",wordsCount:93,readingTime:"1",title:"学习记录",date:"2023-06-13T17:05:00.000Z",permalink:"/about/learn-history/",private:!0,titleTag:"原创",categories:["关于"],tags:["关于"]},{name:"机智一批",filePath:"E:\\study\\java\\icaiwei-blog\\docs\\99.灵机一闪\\01.机智一批.md",wordsCount:73,readingTime:"1",title:"机智一批",date:"2023-06-13T17:05:00.000Z",permalink:"/idea/",private:!0,titleTag:"原创",categories:["灵机一闪"],tags:["灵机一闪"]}],mdFileCountType:"archives",totalWords:"archives",moutedEvent:".tags-wrapper",indexIteration:2500,pageIteration:2500},privatePage:{openPrivate:!0,username:"icaiwei",password:"caiwei#0077",expire:"1d",loginPath:"/vdoing/login/",loginKey:"vdoing_manager",loginSession:!1,firstLogin:0,firstLoginKey:"vdoing_first_login",loginInfo:{"/project/skill/":[{username:"vdoing",password:"123vdoing456"}],vdoing_first_login:[{username:"vdoing",password:"g123vdoing456"}]}},indexImg:{navColor:2,switchNavColor:!1,bgTimeColor:!0,bgTimeColorArray:["transparent","transparent","transparent","transparent"],descFade:!0,desc:["采采卷耳，不盈顷筐。嗟我怀人，置彼周行。","参差荇菜，左右采之。窈窕淑女，琴瑟友之","采薇采薇，薇亦作止。曰归曰归，岁亦莫止"],descFontSize:"1.4rem",descFadeInTime:200,descFadeOutTime:100,descNextTime:800,bubble:!1,bubblePosition:0,bubbleNum:200},author:{name:"i采薇",link:"https://www.ic-sugar.com/blog"},blogger:{avatar:"https://cdn.jsdelivr.net/gh/icaiwei/icaiwei-cdn@1.0.0/images/avatar.png",name:"i采薇",slogan:"昔我往矣，杨柳依依，今我来思，雨雪霏霏。"},social:{icons:[{iconClass:"icon-github",title:"GitHub",link:"https://github.com/icaiwei"},{iconClass:"icon-gitee",title:"Gitee",link:"https://gitee.com/icaiwei"},{iconClass:"icon-rss",title:"网站首页",link:"https://www.ic-sugar.cn"},{iconClass:"icon-QQ",title:"QQ",link:"http://wpa.qq.com/msgrd?v=3&uin=476090432&site=qq&menu=yes"},{iconClass:"icon-youjian",title:"联系我",link:"https://www.ic-sugar.cn/?contact=true"}]},footer:{createYear:2023,copyrightInfo:'i采薇 | blog<br> <a href="http://beian.miit.gov.cn/" target="_blank">备案</a>'}},locales:{"/":{lang:"zh-CN",title:"i采薇小楼",description:"i采薇个人博客, VuePress搭建, 使用了 Vdoing 主题, 学习硬件，软件等相关知识, 记录生活和技术路程, 同时分享技巧。",path:"/"}}};var pl=t(96),ml=t(97),ul=t(12);var hl={computed:{$filterPosts(){return this.$site.pages.filter(n=>{const{frontmatter:{pageComponent:e,article:t,home:r}}=n;return!(e||!1===t||!0===r)})},$sortPosts(){return(n=this.$filterPosts).sort((n,e)=>{const t=n.frontmatter.sticky,r=e.frontmatter.sticky;return t&&r?t==r?Object(ul.a)(n,e):t-r:t&&!r?-1:!t&&r?1:Object(ul.a)(n,e)}),n;var n},$sortPostsByDate(){return(n=this.$filterPosts).sort((n,e)=>Object(ul.a)(n,e)),n;var n},$groupPosts(){return function(n){const e={},t={};for(let r=0,a=n.length;r<a;r++){const{frontmatter:{categories:a,tags:i}}=n[r];"array"===Object(ul.n)(a)&&a.forEach(t=>{t&&(e[t]||(e[t]=[]),e[t].push(n[r]))}),"array"===Object(ul.n)(i)&&i.forEach(e=>{e&&(t[e]||(t[e]=[]),t[e].push(n[r]))})}return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags(){return function(n){const e=[],t=[];for(let t in n.categories)e.push({key:t,length:n.categories[t].length});for(let e in n.tags)t.push({key:e,length:n.tags[e].length});return{categories:e,tags:t}}(this.$groupPosts)}}};Ht.component(pl.default),Ht.component(ml.default);function gl(n){return n.toString().padStart(2,"0")}t(248);Ht.component("Aplayer",()=>t.e(193).then(t.bind(null,2716))),Ht.component("Bubble",()=>Promise.all([t.e(0),t.e(136)]).then(t.bind(null,2717))),Ht.component("BlockToggle",()=>Promise.all([t.e(0),t.e(135)]).then(t.bind(null,2718))),Ht.component("Card",()=>Promise.all([t.e(0),t.e(137)]).then(t.bind(null,2719))),Ht.component("Fantasy",()=>Promise.all([t.e(0),t.e(138)]).then(t.bind(null,2720))),Ht.component("Login",()=>Promise.all([t.e(0),t.e(141)]).then(t.bind(null,2721))),Ht.component("GlobalTip",()=>Promise.all([t.e(0),t.e(139)]).then(t.bind(null,2722))),Ht.component("IndexBigImg",()=>Promise.all([t.e(0),t.e(140)]).then(t.bind(null,2723))),Ht.component("SidebarReverse",()=>t.e(194).then(t.bind(null,2724))),Ht.component("PageInfo",()=>t.e(162).then(t.bind(null,2725))),Ht.component("Twikoo",()=>Promise.all([t.e(0),t.e(142)]).then(t.bind(null,2726))),Ht.component("WebInfo",()=>Promise.all([t.e(0),t.e(117)]).then(t.bind(null,2713))),Ht.component("CodeBlock",()=>Promise.resolve().then(t.bind(null,96))),Ht.component("Badge",()=>Promise.all([t.e(0),t.e(143)]).then(t.bind(null,3018))),Ht.component("CodeGroup",()=>Promise.resolve().then(t.bind(null,97)));t(249);var fl={name:"ReadingProgress",data:()=>({readingTop:0,readingHeight:1,progressStyle:null,transform:void 0,running:!1}),watch:{$readingShow(){this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)}},mounted(){this.transform=this.getTransform(),this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)},beforeDestroy(){this.$readingShow&&window.removeEventListener("scroll",this.base)},methods:{base(){this.running||(this.running=!0,requestAnimationFrame(this.getReadingBase))},getReadingBase(){this.readingHeight=this.getReadingHeight()-this.getScreenHeight(),this.readingTop=this.getReadingTop(),this.progressStyle=this.getProgressStyle(),this.running=!1},getReadingHeight:()=>Math.max(document.body.scrollHeight,document.body.offsetHeight,0),getScreenHeight:()=>Math.max(window.innerHeight,document.documentElement.clientHeight,0),getReadingTop:()=>Math.max(window.pageYOffset,document.documentElement.scrollTop,0),getTransform(){const n=document.createElement("div");return["transform","-webkit-transform","-moz-transform","-o-transform","-ms-transform"].find(e=>e in n.style)||void 0},getProgressStyle(){const n=this.readingTop/this.readingHeight;switch(this.$readingShow){case"top":case"bottom":return this.transform?`${this.transform}: scaleX(${n})`:`width: ${100*n}%`;case"left":case"right":return this.transform?`${this.transform}: scaleY(${n})`:`height: ${100*n}%`;default:return null}}}},bl=(t(250),Object(sl.a)(fl,(function(){var n=this._self._c;return n("ClientOnly",[this.$readingShow?n("div",{staticClass:"reading-progress",class:this.$readingShow},[n("div",{staticClass:"progress",style:this.progressStyle})]):this._e()])}),[],!1,null,"3640397f",null).exports),vl={name:"DynamicTitle",data:()=>({originTitle:"",recoverTimeout:null,config:{showIcon:"/img/favicon.ico",showText:"ヾ(≧▽≦*)o欢迎回来！",hideIcon:"/img/favicon.ico",hideText:"ಥ_ಥ不要走呀！",recoverTime:2e3}}),mounted(){this.originTitle=document.title,""!==this.config.showIcon&&this.getIconElm().setAttribute("href",this.config.showIcon),document.addEventListener("visibilitychange",()=>{document.hidden?this.hidden():this.visible()})},methods:{hidden(){""!==this.config.hideIcon&&this.getIconElm().setAttribute("href",this.config.hideIcon),document.title=this.config.hideText,clearTimeout(this.recoverTimeout)},visible(){""!==this.config.showIcon&&this.getIconElm().setAttribute("href",this.config.showIcon),document.title=this.config.showText+this.originTitle,this.recoverTimeout=setTimeout(()=>{document.title=this.originTitle},this.config.recoverTime)},getIconElm(){let n=document.querySelector("link[rel=icon]");return null===n&&(n=document.createElement("link"),n.setAttribute("rel","icon"),document.head.appendChild(n)),n}},watch:{$route(n,e){n.path!==e.path&&(this.originTitle=document.title,clearTimeout(this.recoverTimeout))}}},yl=Object(sl.a)(vl,(function(){return(0,this._self._c)("div")}),[],!1,null,null,null).exports,xl={name:"Eqn"},wl=Object(sl.a)(xl,(function(){return(0,this._self._c)("div",{staticClass:"vuepress-eqn"},[this._t("default")],2)}),[],!1,null,null,null).exports,_l={name:"Eq"},El=Object(sl.a)(_l,(function(){return(0,this._self._c)("span",{staticClass:"vuepress-eq"},[this._t("default")],2)}),[],!1,null,null,null).exports,kl=t(95),Sl=t.n(kl),Tl=[({Vue:n,options:e,router:t,siteData:r,isServer:a})=>{function i(n,e){try{n.forEach(n=>{if(e.username==n.username&&e.password==n.password)throw new Error})}catch(n){return!1}return!0}function o(n,e,r){throw t.push({path:n,query:{toPath:e,verifyMode:r}}),new Error("请先登录！")}a||r.themeConfig.privatePage&&r.themeConfig.privatePage.openPrivate&&t.beforeEach((n,e,t)=>{try{let{username:e,password:t,loginPath:a,loginKey:s,loginSession:l,loginInfo:c,firstLogin:d,firstLoginKey:p}=r.themeConfig.privatePage;if(!s&&(s="vdoing_manager"),!p&&(p="vdoing_first_login"),l&&window.addEventListener("unload",(function(){localStorage.removeItem(s),localStorage.removeItem(p)})),a==n.path||!a)throw new Error("无需验证");let m=JSON.parse(localStorage.getItem(s));if(m&&m.username==e&&m.password==t){if(!(new Date-m.time>m.expire))throw new Error("管理员验证成功！");localStorage.removeItem(s)}let u=!0;if(1==parseInt(d)||2==parseInt(d)){2==parseInt(d)&&(u=!1);let e=JSON.parse(localStorage.getItem(p));!e&&o(a,n.path,"first"),e&&(c&&c.hasOwnProperty(p)?i(c[p],e)&&o(a,n.path,"first"):o(a,n.path,"first"))}if("/"==n.path)throw new Error("首页不需要验证！");u&&r.pages.forEach(e=>{if(e.path==n.path&&e.frontmatter.private&&1==e.frontmatter.private){l&&window.addEventListener("unload",(function(){localStorage.removeItem(e.frontmatter.permalink)}));let t=JSON.parse(localStorage.getItem(e.frontmatter.permalink));if(!t&&o(a,n.path,e.frontmatter.loginInfo||e.frontmatter.username||e.frontmatter.password||e.frontmatter.expire?"single":"all"),e.frontmatter.username&&e.frontmatter.password||e.frontmatter.loginInfo){!t&&o(a,n.path,"single"),new Date-t.time>t.expire&&(localStorage.removeItem(e.frontmatter.permalink),o(a,n.path,"single"));let r=!0;Array.isArray(e.frontmatter.loginInfo)&&(r=i(e.frontmatter.loginInfo,t)),r&&t.username!==e.frontmatter.username&&t.password!==e.frontmatter.password&&o(a,n.path,"single")}else{let e=!0;c&&c.hasOwnProperty(n.path)&&(e=i(c[n.path],t)),e&&o(a,n.path,"all")}}})}catch(n){}t()})},({Vue:n,options:e,router:t,siteData:r})=>{r.pages.map(n=>{const{frontmatter:{date:e,author:t}}=n;"string"==typeof e&&"Z"===e.charAt(e.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return`${n.getUTCFullYear()}-${gl(n.getUTCMonth()+1)}-${gl(n.getUTCDate())} ${gl(n.getUTCHours())}:${gl(n.getUTCMinutes())}:${gl(n.getUTCSeconds())}`}(e)),t?n.author=t:r.themeConfig.author&&(n.author=r.themeConfig.author)}),n.mixin(hl)},{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},()=>{"undefined"!=typeof window&&function(n,e,t){function r(n){var t=e.createElement("div");t.className="heart",a.push({el:t,x:n.clientX-5,y:n.clientY-5,scale:1,alpha:1,color:"rgb(172,38,33)"}),e.body.appendChild(t)}var a=[];n.requestAnimationFrame=n.requestAnimationFrame||n.webkitRequestAnimationFrame||n.mozRequestAnimationFrame||n.oRequestAnimationFrame||n.msRequestAnimationFrame||function(n){setTimeout(n,1e3/60)},function(n){var t=e.createElement("style");t.type="text/css";try{t.appendChild(e.createTextNode(n))}catch(e){t.styleSheet.cssText=n}e.getElementsByTagName("head")[0].appendChild(t)}(".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}"),function(){var e="function"==typeof n.onclick&&n.onclick;n.onclick=function(n){let t=!0;n.path&&n.path.forEach(n=>{1===n.nodeType&&"string"==typeof n.className&&n.className.indexOf("theme-vdoing-content")>-1&&(t=!1)}),t&&(e&&e(),r(n))}}(),function n(){for(var t=0;t<a.length;t++)a[t].alpha<=0?(e.body.removeChild(a[t].el),a.splice(t,1)):(a[t].y--,a[t].scale+=.004,a[t].alpha-=.013,a[t].el.style.cssText="left:"+a[t].x+"px;top:"+a[t].y+"px;opacity:"+a[t].alpha+";transform:scale("+a[t].scale+","+a[t].scale+") rotate(45deg);background:"+a[t].color+";z-index:99999");requestAnimationFrame(n)}()}(window,document)},({router:n})=>{"undefined"!=typeof window&&function(){var n=document.createElement("script"),e=window.location.protocol.split(":")[0];n.src="https"===e?"https://zz.bdstatic.com/linksubmit/push.js":"http://push.zhanzhang.baidu.com/push.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(n,t)}()},({router:n})=>{"undefined"!=typeof window&&(window._hmt=window._hmt||[],function(){var n=document.createElement("script");n.src="https://hm.baidu.com/hm.js?267c5680c2ffb468ca29c45ffe6801da";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(n,e)}(),n.afterEach((function(n){_hmt.push(["_trackPageview",n.fullPath])})))},({Vue:n})=>{n.component(bl.name,bl),n.mixin({computed:{$readingShow(){return this.$page.frontmatter.readingShow}}})},({Vue:n})=>{n.component("DynamicTitle",yl)},({Vue:n})=>{n.component("Eqn",wl),n.component("Eq",El)},({Vue:n})=>n.use(Sl.a)],Al=["PageInfo","BlockToggle","GlobalTip","ReadingProgress","DynamicTitle"];class Cl extends class{constructor(){this.store=new Ht({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){Ht.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(Cl.prototype,{getPageAsyncComponent:ss,getLayoutAsyncComponent:ls,getAsyncComponent:cs,getVueComponent:ds});var Pl={install(n){const e=new Cl;n.$vuepress=e,n.prototype.$vuepress=e}};function Il(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var Bl={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return ms("pageKey",e),Ht.component(e)||Ht.component(e,ss(e)),Ht.component(e)?n(e):n("")}},jl={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},Ol={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Dl=(t(251),t(252),Object(sl.a)(Ol,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),zl={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};Ht.config.productionTip=!1,Ht.use(Go),Ht.use(Pl),Ht.mixin(function(n,e,t=Ht){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const r=new(n(t.$vuepress.$get("siteData"))),a=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),i={};return Object.keys(a).reduce((n,e)=>(e.startsWith("$")&&(n[e]=a[e].get),n),i),{computed:i}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const r in n)"/"===r?t=n[r]:0===this.$page.path.indexOf(r)&&(e=n[r]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},dl)),Ht.component("Content",Bl),Ht.component("ContentSlotsDistributor",jl),Ht.component("OutboundLink",Dl),Ht.component("ClientOnly",zl),Ht.component("Layout",ls("Layout")),Ht.component("NotFound",ls("NotFound")),Ht.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.5",hash:"c603039"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:dl.routerBase||dl.base,t=new Go({base:e,mode:"history",fallback:!1,routes:cl,scrollBehavior:(n,e,t)=>t||(n.hash?!Ht.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,r)=>{if(Il(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";Il(n,t)?r(t):r()}else r();else{const t=e.path+"/",a=e.path+".html";Il(n,a)?r(a):Il(n,t)?r(t):r()}})}(t);const r={};try{await Promise.all(Tl.filter(n=>"function"==typeof n).map(e=>e({Vue:Ht,options:r,router:t,siteData:dl,isServer:n})))}catch(n){console.error(n)}return{app:new Ht(Object.assign(r,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Al.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);